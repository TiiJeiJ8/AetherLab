{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-config-panel\"\n};\nconst _hoisted_2 = {\n  class: \"chart-type-section\"\n};\nconst _hoisted_3 = {\n  class: \"chart-type-info\"\n};\nconst _hoisted_4 = {\n  class: \"chart-type-tag\"\n};\nconst _hoisted_5 = {\n  class: \"chart-type-icon\"\n};\nconst _hoisted_6 = {\n  class: \"chart-type-name\"\n};\nconst _hoisted_7 = {\n  class: \"chart-type-description\"\n};\nconst _hoisted_8 = {\n  class: \"mapping-section\"\n};\nconst _hoisted_9 = {\n  class: \"mapping-section-header\"\n};\nconst _hoisted_10 = {\n  class: \"basic-config-section\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"section-content\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"custom-config-section\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"section-content\"\n};\nconst _hoisted_14 = {\n  class: \"filter-section\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"section-content\"\n};\nconst _hoisted_16 = {\n  class: \"action-section\"\n};\nconst _hoisted_17 = [\"disabled\"];\nconst _hoisted_18 = {\n  key: 1,\n  class: \"error-message\"\n};\nconst _hoisted_19 = {\n  class: \"error-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 右侧边栏总标题 \"), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"panel-header\"\n  }, [_createElementVNode(\"h3\", null, \"Chart Configuration\")], -1 /* HOISTED */)), _createCommentVNode(\" 图表类型信息 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString($setup.currentChartConfig.icon), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($setup.currentChartConfig.name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, _toDisplayString($setup.getChartDescription($props.selectedChartType)), 1 /* TEXT */)])]), _createCommentVNode(\" 数据映射配置区域 \"), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_cache[0] || (_cache[0] = _createElementVNode(\"h4\", null, \"数据映射\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"mapping-status\", {\n      'status-valid': $setup.mappingValidation.isValid\n    }])\n  }, _toDisplayString($setup.mappingValidation.isValid ? '✓ 完成' : `${$setup.mappingValidation.missingFields.length} 项未配置`), 3 /* TEXT, CLASS */)]), _createVNode($setup[\"FieldMapping\"], {\n    \"chart-type\": $props.selectedChartType,\n    mappings: _ctx.chartConfig.fieldMappings,\n    \"onUpdate:mappings\": $setup.updateFieldMappings,\n    onMappingError: $setup.handleMappingError,\n    ref: \"fieldMappingRef\"\n  }, null, 8 /* PROPS */, [\"chart-type\", \"mappings\"])]), _createCommentVNode(\" 基础配置 \"), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", {\n    class: \"section-header\",\n    onClick: $setup.toggleBasicConfig\n  }, [_cache[1] || (_cache[1] = _createElementVNode(\"h4\", null, \"基础配置\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"toggle-icon\", {\n      'toggle-open': $setup.showBasicConfig\n    }])\n  }, \"▼\", 2 /* CLASS */)]), $setup.showBasicConfig ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.basicConfigs, (config, key) => {\n    return _openBlock(), _createBlock($setup[\"CustomConfigItem\"], {\n      key: key,\n      config: config,\n      \"field-name\": key,\n      modelValue: _ctx.chartConfig.basicOptions[key],\n      \"onUpdate:modelValue\": $event => _ctx.chartConfig.basicOptions[key] = $event\n    }, null, 8 /* PROPS */, [\"config\", \"field-name\", \"modelValue\", \"onUpdate:modelValue\"]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 自定义配置 \"), $setup.hasCustomOptions ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", {\n    class: \"section-header\",\n    onClick: $setup.toggleCustomConfig\n  }, [_cache[2] || (_cache[2] = _createElementVNode(\"h4\", null, \"图表专属配置\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"toggle-icon\", {\n      'toggle-open': $setup.showCustomConfig\n    }])\n  }, \"▼\", 2 /* CLASS */)]), $setup.showCustomConfig ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.currentChartConfig.customOptions, (config, key) => {\n    return _openBlock(), _createBlock($setup[\"CustomConfigItem\"], {\n      key: key,\n      config: config,\n      \"field-name\": key,\n      modelValue: _ctx.chartConfig.customOptions[key],\n      \"onUpdate:modelValue\": $event => _ctx.chartConfig.customOptions[key] = $event\n    }, null, 8 /* PROPS */, [\"config\", \"field-name\", \"modelValue\", \"onUpdate:modelValue\"]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 数据过滤 \"), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", {\n    class: \"section-header\",\n    onClick: $setup.toggleDataFilter\n  }, [_cache[3] || (_cache[3] = _createElementVNode(\"h4\", null, \"数据过滤\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"toggle-icon\", {\n      'toggle-open': $setup.showDataFilter\n    }])\n  }, \"▼\", 2 /* CLASS */)]), $setup.showDataFilter ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filterConfigs, (config, key) => {\n    return _openBlock(), _createBlock($setup[\"CustomConfigItem\"], {\n      key: key,\n      config: config,\n      \"field-name\": key,\n      modelValue: _ctx.chartConfig.filterOptions[key],\n      \"onUpdate:modelValue\": $event => _ctx.chartConfig.filterOptions[key] = $event\n    }, null, 8 /* PROPS */, [\"config\", \"field-name\", \"modelValue\", \"onUpdate:modelValue\"]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 操作按钮 \"), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n    class: \"apply-btn\",\n    disabled: !$setup.isConfigValid,\n    onClick: $setup.generateChart\n  }, \" 应用配置 \", 8 /* PROPS */, _hoisted_17), _createElementVNode(\"button\", {\n    class: \"reset-btn\",\n    onClick: $setup.resetConfig\n  }, \" 重置配置 \")]), _createCommentVNode(\" 错误提示 \"), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, _toDisplayString($setup.errorMessage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$setup","currentChartConfig","icon","_hoisted_6","name","_hoisted_7","getChartDescription","$props","selectedChartType","_hoisted_8","_hoisted_9","_normalizeClass","mappingValidation","isValid","missingFields","length","_createVNode","mappings","_ctx","chartConfig","fieldMappings","updateFieldMappings","onMappingError","handleMappingError","ref","_hoisted_10","onClick","toggleBasicConfig","showBasicConfig","_hoisted_11","_Fragment","_renderList","basicConfigs","config","_createBlock","modelValue","basicOptions","$event","hasCustomOptions","_hoisted_12","toggleCustomConfig","showCustomConfig","_hoisted_13","customOptions","_hoisted_14","toggleDataFilter","showDataFilter","_hoisted_15","filterConfigs","filterOptions","_hoisted_16","disabled","isConfigValid","generateChart","_hoisted_17","resetConfig","errorMessage","_hoisted_18","_hoisted_19"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\ChartConfigPanel.vue"],"sourcesContent":["<template>\n  <div class=\"chart-config-panel\">\n    <!-- 右侧边栏总标题 -->\n    <div class=\"panel-header\">\n      <h3>Chart Configuration</h3>\n    </div>\n\n    <!-- 图表类型信息 -->\n    <div class=\"chart-type-section\">\n      <div class=\"chart-type-info\">\n        <div class=\"chart-type-tag\">\n          <span class=\"chart-type-icon\">{{ currentChartConfig.icon }}</span>\n          <span class=\"chart-type-name\">{{ currentChartConfig.name }}</span>\n        </div>\n        <div class=\"chart-type-description\">\n          {{ getChartDescription(selectedChartType) }}\n        </div>\n      </div>\n    </div>\n\n    <!-- 数据映射配置区域 -->\n    <div class=\"mapping-section\">\n      <div class=\"mapping-section-header\">\n        <h4>数据映射</h4>\n        <div class=\"mapping-status\" :class=\"{ 'status-valid': mappingValidation.isValid }\">\n          {{ mappingValidation.isValid ? '✓ 完成' : `${mappingValidation.missingFields.length} 项未配置` }}\n        </div>\n      </div>\n\n      <FieldMapping\n        :chart-type=\"selectedChartType\"\n        :mappings=\"chartConfig.fieldMappings\"\n        @update:mappings=\"updateFieldMappings\"\n        @mapping-error=\"handleMappingError\"\n        ref=\"fieldMappingRef\"\n      />\n    </div>\n\n    <!-- 基础配置 -->\n    <div class=\"basic-config-section\">\n      <div class=\"section-header\" @click=\"toggleBasicConfig\">\n        <h4>基础配置</h4>\n        <div class=\"toggle-icon\" :class=\"{ 'toggle-open': showBasicConfig }\">▼</div>\n      </div>\n      <div v-if=\"showBasicConfig\" class=\"section-content\">\n        <CustomConfigItem\n          v-for=\"(config, key) in basicConfigs\"\n          :key=\"key\"\n          :config=\"config\"\n          :field-name=\"key\"\n          v-model=\"chartConfig.basicOptions[key]\"\n        />\n      </div>\n    </div>\n\n    <!-- 自定义配置 -->\n    <div class=\"custom-config-section\" v-if=\"hasCustomOptions\">\n      <div class=\"section-header\" @click=\"toggleCustomConfig\">\n        <h4>图表专属配置</h4>\n        <div class=\"toggle-icon\" :class=\"{ 'toggle-open': showCustomConfig }\">▼</div>\n      </div>\n      <div v-if=\"showCustomConfig\" class=\"section-content\">\n        <CustomConfigItem\n          v-for=\"(config, key) in currentChartConfig.customOptions\"\n          :key=\"key\"\n          :config=\"config\"\n          :field-name=\"key\"\n          v-model=\"chartConfig.customOptions[key]\"\n        />\n      </div>\n    </div>\n\n    <!-- 数据过滤 -->\n    <div class=\"filter-section\">\n      <div class=\"section-header\" @click=\"toggleDataFilter\">\n        <h4>数据过滤</h4>\n        <div class=\"toggle-icon\" :class=\"{ 'toggle-open': showDataFilter }\">▼</div>\n      </div>\n      <div v-if=\"showDataFilter\" class=\"section-content\">\n        <CustomConfigItem\n          v-for=\"(config, key) in filterConfigs\"\n          :key=\"key\"\n          :config=\"config\"\n          :field-name=\"key\"\n          v-model=\"chartConfig.filterOptions[key]\"\n        />\n      </div>\n    </div>\n\n    <!-- 操作按钮 -->\n    <div class=\"action-section\">\n      <button\n        class=\"apply-btn\"\n        :disabled=\"!isConfigValid\"\n        @click=\"generateChart\"\n      >\n        应用配置\n      </button>\n      <button class=\"reset-btn\" @click=\"resetConfig\">\n        重置配置\n      </button>\n    </div>\n\n    <!-- 错误提示 -->\n    <div v-if=\"errorMessage\" class=\"error-message\">\n      <div class=\"error-text\">{{ errorMessage }}</div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch, onMounted } from 'vue'\nimport { getChartConfig, CHART_TYPES } from '../configs/chartConfigs.js'\nimport { getChartMetadata } from '../configs/chartTypes.js'\nimport { createChartConfig, updateChartConfiguration, validateChartConfig, autoMapFieldsForChart } from '../configs/configManager.js'\nimport FieldMapping from './FieldMapping.vue'\nimport CustomConfigItem from './CustomConfigItem.vue'\n\n// Props\nconst props = defineProps({\n  selectedChartType: {\n    type: String,\n    default: CHART_TYPES.BAR\n  },\n  currentFile: {\n    type: Object,\n    default: null\n  },\n  availableColumns: {\n    type: Array,\n    default: () => []\n  }\n})\n\n// Emits\nconst emit = defineEmits(['config-change', 'generate-chart'])\n\n// 响应式数据\nconst configId = ref(null)\nconst showBasicConfig = ref(true)\nconst showCustomConfig = ref(false)\nconst showDataFilter = ref(false)\nconst errorMessage = ref('')\nconst isLoading = ref(false)\n\n// 组件引用\nconst fieldMappingRef = ref(null)\n\n// 当前配置\nconst currentConfig = ref({\n  fieldMappings: {},\n  options: {}\n})\n\n// 获取当前图表配置实例\nconst currentChartConfig = computed(() => {\n  return getChartConfig(props.selectedChartType)\n})\n\n// 获取图表元数据\nconst chartMetadata = computed(() => {\n  return getChartMetadata(props.selectedChartType)\n})\n\n// 检查是否有自定义配置选项\nconst hasCustomOptions = computed(() => {\n  const configOptions = currentChartConfig.value.getConfigByCategory()\n  return Object.keys(configOptions).some(category => \n    category !== 'basic' && category !== 'data' && Object.keys(configOptions[category]).length > 0\n  )\n})\n\n// 获取基础配置选项\nconst basicConfigOptions = computed(() => {\n  const configByCategory = currentChartConfig.value.getConfigByCategory()\n  return {\n    ...configByCategory.basic,\n    ...configByCategory.style,\n    ...configByCategory.animation,\n    ...configByCategory.legend\n  }\n})\n\n// 获取自定义配置选项\nconst customConfigOptions = computed(() => {\n  const configByCategory = currentChartConfig.value.getConfigByCategory()\n  const customOptions = {}\n  \n  Object.entries(configByCategory).forEach(([category, options]) => {\n    if (!['basic', 'style', 'animation', 'legend', 'data'].includes(category)) {\n      Object.assign(customOptions, options)\n    }\n  })\n  \n  return customOptions\n})\n\n// 获取数据过滤配置选项\nconst dataFilterOptions = computed(() => {\n  const configByCategory = currentChartConfig.value.getConfigByCategory()\n  return configByCategory.data || {}\n})\n\n// 配置验证状态\nconst configValidation = computed(() => {\n  if (!configId.value) return { isValid: false, errors: [] }\n  \n  try {\n    return validateChartConfig(configId.value)\n  } catch (error) {\n    return { isValid: false, errors: [error.message] }\n  }\n})\n\n// 映射验证状态\nconst mappingValidation = computed(() => {\n  return fieldMappingRef.value?.validation || { isValid: false, missingFields: [] }\n})\n\n// 总体配置有效性\nconst isConfigValid = computed(() => {\n  return mappingValidation.value.isValid && configValidation.value.isValid\n})\n\n// 获取图表描述\nfunction getChartDescription(chartType) {\n  const metadata = getChartMetadata(chartType)\n  return metadata.description || '数据可视化图表'\n}\n\n// 切换配置区域显示状态\nfunction toggleBasicConfig() {\n  showBasicConfig.value = !showBasicConfig.value\n}\n\nfunction toggleCustomConfig() {\n  showCustomConfig.value = !showCustomConfig.value\n}\n\nfunction toggleDataFilter() {\n  showDataFilter.value = !showDataFilter.value\n}\n\n// 更新字段映射\nfunction updateFieldMappings(mappings) {\n  currentConfig.value.fieldMappings = mappings\n  \n  if (configId.value) {\n    updateChartConfiguration(configId.value, {\n      fieldMappings: mappings\n    })\n  }\n  \n  emitConfigChange()\n}\n\n// 更新配置选项\nfunction updateConfigOption(category, key, value) {\n  if (!currentConfig.value.options[category]) {\n    currentConfig.value.options[category] = {}\n  }\n  \n  currentConfig.value.options[category][key] = value\n  \n  if (configId.value) {\n    updateChartConfiguration(configId.value, {\n      options: currentConfig.value.options\n    })\n  }\n  \n  emitConfigChange()\n}\n\n// 处理映射错误\nfunction handleMappingError(error) {\n  errorMessage.value = error\n  if (error) {\n    setTimeout(() => {\n      errorMessage.value = ''\n    }, 5000)\n  }\n}\n\n// 自动映射字段\nasync function autoMapFields() {\n  if (!configId.value || !props.availableColumns.length) return\n  \n  isLoading.value = true\n  \n  try {\n    const autoMappings = await autoMapFieldsForChart(configId.value, props.availableColumns)\n    currentConfig.value.fieldMappings = autoMappings\n    \n    // 通知子组件更新\n    if (fieldMappingRef.value) {\n      fieldMappingRef.value.updateMappings(autoMappings)\n    }\n    \n    emitConfigChange()\n  } catch (error) {\n    console.error('Auto mapping failed:', error)\n    errorMessage.value = '自动映射失败，请手动配置字段映射'\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// 生成图表\nfunction generateChart() {\n  if (!isConfigValid.value) {\n    errorMessage.value = '请完成必要的配置'\n    return\n  }\n\n  const fullConfig = currentChartConfig.value.buildFullConfig(\n    currentConfig.value.fieldMappings,\n    currentConfig.value.options\n  )\n\n  emit('generate-chart', fullConfig)\n}\n\n// 重置配置\nfunction resetConfig() {\n  if (configId.value) {\n    const defaultConfig = currentChartConfig.value.getDefaultConfig()\n    \n    updateChartConfiguration(configId.value, {\n      fieldMappings: {},\n      options: defaultConfig\n    })\n    \n    currentConfig.value = {\n      fieldMappings: {},\n      options: defaultConfig\n    }\n    \n    // 通知子组件重置\n    if (fieldMappingRef.value) {\n      fieldMappingRef.value.reset()\n    }\n  }\n\n  errorMessage.value = ''\n  emitConfigChange()\n}\n\n// 导出配置\nfunction exportConfig() {\n  if (!configId.value) return\n  \n  try {\n    const config = globalConfigManager.exportConfig(configId.value)\n    \n    // 创建下载链接\n    const blob = new Blob([JSON.stringify(config, null, 2)], { type: 'application/json' })\n    const url = URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = `chart_config_${props.selectedChartType}_${new Date().toISOString().split('T')[0]}.json`\n    a.click()\n    URL.revokeObjectURL(url)\n  } catch (error) {\n    console.error('Export failed:', error)\n    errorMessage.value = '导出配置失败'\n  }\n}\n\n// 导入配置\nfunction importConfig(event) {\n  const file = event.target.files[0]\n  if (!file) return\n  \n  const reader = new FileReader()\n  reader.onload = (e) => {\n    try {\n      const configData = JSON.parse(e.target.result)\n      \n      if (configData.chartType !== props.selectedChartType) {\n        errorMessage.value = '配置文件的图表类型与当前选择的类型不匹配'\n        return\n      }\n      \n      const importedConfig = globalConfigManager.importConfig(configData)\n      configId.value = importedConfig.id\n      currentConfig.value = {\n        fieldMappings: importedConfig.fieldMappings,\n        options: importedConfig.options\n      }\n      \n      // 通知子组件更新\n      if (fieldMappingRef.value) {\n        fieldMappingRef.value.updateMappings(importedConfig.fieldMappings)\n      }\n      \n      emitConfigChange()\n    } catch (error) {\n      console.error('Import failed:', error)\n      errorMessage.value = '导入配置失败，请检查文件格式'\n    }\n  }\n  reader.readAsText(file)\n}\n\n// 发出配置变化事件\nfunction emitConfigChange() {\n  emit('config-change', {\n    chartType: props.selectedChartType,\n    configId: configId.value,\n    ...currentConfig.value\n  })\n}\n\n// 初始化配置\nfunction initializeConfig() {\n  try {\n    const config = createChartConfig(props.selectedChartType)\n    configId.value = config.id\n    currentConfig.value = {\n      fieldMappings: config.fieldMappings,\n      options: config.options\n    }\n    \n    // 如果有可用列，尝试自动映射\n    if (props.availableColumns.length > 0) {\n      autoMapFields()\n    }\n    \n    emitConfigChange()\n  } catch (error) {\n    console.error('Failed to initialize config:', error)\n    errorMessage.value = '配置初始化失败'\n  }\n}\n\n// 监听图表类型变化\nwatch(() => props.selectedChartType, (newType) => {\n  // 重新初始化配置\n  initializeConfig()\n  \n  // 自动展开自定义配置（如果有的话）\n  if (hasCustomOptions.value) {\n    showCustomConfig.value = true\n  }\n})\n\n// 监听可用列变化\nwatch(() => props.availableColumns, (newColumns) => {\n  if (newColumns.length > 0 && configId.value) {\n    autoMapFields()\n  }\n}, { deep: true })\n\n// 组件挂载时初始化\nonMounted(() => {\n  initializeConfig()\n})\n</script>\n\n<style scoped>\n/* 白天主题CSS变量 */\n:root {\n  --bg-color: #ffffff;\n  --bg-secondary: #f8f9fa;\n  --bg-tertiary: #e9ecef;\n  --text-color: #333333;\n  --text-secondary: #666666;\n  --border-color: #e5e5e5;\n  --primary-color: #5470c6;\n  --accent-color: #91cc75;\n  --error-color: #dc3545;\n  --success-color: #28a745;\n  --warning-color: #ffc107;\n  --secondary-color: #6c757d;\n  --primary-hover: #4c63b6;\n  --secondary-hover: #5a6268;\n  --disabled-color: #a8a8a8;\n  --shadow-color: rgba(0, 0, 0, 0.1);\n  --hover-bg: rgba(0, 0, 0, 0.02);\n}\n\n/* 暗黑主题CSS变量 */\n:root.dark,\n[data-theme=\"dark\"] {\n  --bg-color: #1e1e1e;\n  --bg-secondary: #2d2d2d;\n  --bg-tertiary: #3d3d3d;\n  --text-color: #e0e0e0;\n  --text-secondary: #b0b0b0;\n  --border-color: #404040;\n  --primary-color: #6b9eff;\n  --accent-color: #a8d068;\n  --error-color: #ff6b6b;\n  --success-color: #51cf66;\n  --warning-color: #ffd93d;\n  --secondary-color: #868e96;\n  --primary-hover: #5a8cff;\n  --secondary-hover: #767d84;\n  --disabled-color: #666666;\n  --shadow-color: rgba(0, 0, 0, 0.3);\n  --hover-bg: rgba(255, 255, 255, 0.05);\n}\n\n.chart-config-panel {\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  background: var(--bg-color, #ffffff);\n  overflow-y: auto;\n  transition: all 0.3s ease;\n  animation: slideIn 0.5s ease;\n  /* 隐藏滚动条 */\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE and Edge */\n}\n\n.chart-config-panel::-webkit-scrollbar {\n  display: none; /* Chrome, Safari and Opera */\n}\n\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateX(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n/* 面板总标题 */\n.panel-header {\n  margin-bottom: 25px;\n  padding: 20px 0 15px 0;\n  border-bottom: 2px solid var(--border-color, #e5e5e5);\n  transition: all 0.3s ease;\n  position: relative;\n  animation: fadeInDown 0.5s ease;\n}\n\n@keyframes fadeInDown {\n  from {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.panel-header::before {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  left: 0;\n  width: 0;\n  height: 2px;\n  background: linear-gradient(90deg, var(--primary-color), var(--accent-color));\n  transition: width 0.5s ease;\n}\n\n.panel-header:hover::before {\n  width: 100%;\n}\n\n.panel-header h3 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: var(--text-color, #333333);\n  transition: color 0.3s ease;\n  position: relative;\n}\n\n/* 图表类型信息区域 */\n.chart-type-section {\n  margin-bottom: 25px;\n  animation: fadeInUp 0.5s ease;\n  animation-delay: 0.1s;\n  animation-fill-mode: both;\n}\n\n.chart-type-info {\n  padding: 16px;\n  background: var(--bg-secondary, #f8f9fa);\n  border-radius: 8px;\n  border: 1px solid var(--border-color, #e5e5e5);\n  transition: all 0.3s ease;\n}\n\n.chart-type-info:hover {\n  background: var(--bg-tertiary, #e9ecef);\n  transform: translateY(-1px);\n  box-shadow: 0 2px 8px var(--shadow-color, rgba(0, 0, 0, 0.1));\n}\n\n.chart-type-tag {\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  padding: 6px 12px;\n  background: var(--primary-color, #5470c6);\n  color: white;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  box-shadow: 0 2px 8px var(--shadow-color, rgba(84, 112, 198, 0.3));\n  margin-bottom: 8px;\n  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);\n}\n\n.chart-type-icon {\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.chart-type-name {\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.chart-type-description {\n  font-size: 13px;\n  color: var(--text-secondary, #666666);\n  line-height: 1.4;\n}\n\n/* 映射状态指示器 */\n.mapping-section-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  animation: slideInLeft 0.5s ease;\n  animation-delay: 0.3s;\n  animation-fill-mode: both;\n}\n\n.mapping-status {\n  display: inline-flex;\n  align-items: center;\n  padding: 4px 10px;\n  background: var(--error-color, #dc3545);\n  color: white;\n  border-radius: 12px;\n  font-size: 11px;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n.mapping-status.status-valid {\n  background: var(--success-color, #28a745);\n}\n\n/* 配置区域样式 */\n.basic-config-section,\n.custom-config-section {\n  margin-bottom: 25px;\n  animation: fadeInUp 0.5s ease;\n  animation-fill-mode: both;\n}\n\n.basic-config-section { animation-delay: 0.3s; }\n.custom-config-section { animation-delay: 0.4s; }\n\n/* 数据映射配置区域 */\n.mapping-section {\n  margin-bottom: 30px;\n  animation: fadeInUp 0.5s ease;\n  animation-delay: 0.2s;\n  animation-fill-mode: both;\n}\n\n.mapping-section-header h4,\n.section-header h4 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: var(--text-color, #333333);\n}\n\n/* 过滤和配置区域 */\n.filter-section { \n  margin-bottom: 25px;\n  animation: fadeInUp 0.5s ease;\n  animation-fill-mode: both;\n  animation-delay: 0.5s; \n}\n\n/* 错误消息样式 */\n.error-text {\n  padding: 12px 16px;\n  background: var(--error-color, #dc3545);\n  color: white;\n  border-radius: 6px;\n  font-size: 13px;\n  font-weight: 500;\n  margin-top: 15px;\n  animation: slideInError 0.3s ease;\n}\n\n@keyframes slideInError {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* 操作按钮 */\n.action-section {\n  display: flex;\n  gap: 12px;\n  margin-top: 30px;\n  animation: fadeInUp 0.6s ease;\n  animation-fill-mode: both;\n  animation-delay: 0.6s;\n}\n\n.apply-btn {\n  flex: 1;\n  padding: 12px 18px;\n  background: linear-gradient(135deg, var(--primary-color, #5470c6), var(--accent-color, #91cc75));\n  color: white;\n  border: none;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n  box-shadow: 0 4px 15px rgba(84, 112, 198, 0.3);\n}\n\n.apply-btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\n  transition: left 0.5s ease;\n}\n\n.apply-btn:hover:not(:disabled)::before {\n  left: 100%;\n}\n\n.apply-btn:hover:not(:disabled) {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 20px rgba(84, 112, 198, 0.4);\n}\n\n.apply-btn:active:not(:disabled) {\n  transform: translateY(0);\n  box-shadow: 0 3px 10px rgba(84, 112, 198, 0.3);\n}\n\n.apply-btn:disabled {\n  background: var(--disabled-color, #a8a8a8);\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n  opacity: 0.6;\n}\n\n.reset-btn {\n  padding: 12px 18px;\n  background: transparent;\n  color: var(--text-secondary, #666666);\n  border: 2px solid var(--border-color, #e5e5e5);\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n.reset-btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 0;\n  height: 100%;\n  background: var(--secondary-color, #6c757d);\n  transition: width 0.3s ease;\n  z-index: -1;\n}\n\n.reset-btn:hover::before {\n  width: 100%;\n}\n\n.reset-btn:hover {\n  color: white;\n  border-color: var(--secondary-color, #6c757d);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 15px rgba(108, 117, 125, 0.3);\n}\n\n.reset-btn:active {\n  transform: translateY(0);\n  box-shadow: 0 2px 8px rgba(108, 117, 125, 0.2);\n}\n\n.required-star {\n    color: #ff5252;\n    font-weight: bold;\n    margin-left: 4px;\n}\n\n\n.required-star {\n    color: #ff5252;\n    font-weight: bold;\n    margin-left: 4px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}