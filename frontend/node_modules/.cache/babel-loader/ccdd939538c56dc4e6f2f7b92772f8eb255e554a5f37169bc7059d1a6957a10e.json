{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"language-switcher\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.currentLocale = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.saveLanguagePreference && $options.saveLanguagePreference(...args)),\n    class: \"form-select form-select-sm\"\n  }, _cache[2] || (_cache[2] = [_createElementVNode(\"option\", {\n    value: \"en\"\n  }, \"English\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"zh\"\n  }, \"中文\", -1 /* HOISTED */)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.currentLocale]])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","$data","currentLocale","onChange","args","$options","saveLanguagePreference","value"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\newArchitecture\\frontend_vue_design\\src\\components\\LanguageSwitcher.vue"],"sourcesContent":["<template>\n  <div class=\"language-switcher\">\n    <select\n      v-model=\"currentLocale\"\n      @change=\"saveLanguagePreference\"\n      class=\"form-select form-select-sm\"\n    >\n      <option value=\"en\">English</option>\n      <option value=\"zh\">中文</option>\n    </select>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'LanguageSwitcher',\n  data () {\n    return {\n      currentLocale: 'en'\n    }\n  },\n  methods: {\n    saveLanguagePreference () {\n      this.$i18n.global.locale = this.currentLocale\n      localStorage.setItem('userLanguage', this.currentLocale)\n    }\n  },\n  mounted () {\n    this.currentLocale = this.$i18n.global.locale\n    const savedLanguage = localStorage.getItem('userLanguage')\n    if (savedLanguage) {\n      this.currentLocale = savedLanguage\n      this.$i18n.global.locale = savedLanguage\n    }\n  }\n}\n</script>\n\n<style scoped>\n.language-switcher {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  z-index: 999;\n}\n\n.form-select {\n  width: 100px;\n  cursor: pointer;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAmB;;uBAA9BC,mBAAA,CASM,OATNC,UASM,G,gBARJC,mBAAA,CAOS;IATb,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGeC,KAAA,CAAAC,aAAa,GAAAF,MAAA;IACrBG,QAAM,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,sBAAA,IAAAD,QAAA,CAAAC,sBAAA,IAAAF,IAAA,CAAsB;IAC/BT,KAAK,EAAC;gCAENG,mBAAA,CAAmC;IAA3BS,KAAK,EAAC;EAAI,GAAC,SAAO,qBAC1BT,mBAAA,CAA8B;IAAtBS,KAAK,EAAC;EAAI,GAAC,IAAE,oB,2DALZN,KAAA,CAAAC,aAAa,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}