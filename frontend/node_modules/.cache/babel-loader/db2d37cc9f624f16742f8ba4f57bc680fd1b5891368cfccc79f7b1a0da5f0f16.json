{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/* eslint-disable */\n\n// 图表类型注册表\nconst chartOptionGenerators = {};\n\n// 通用折线/柱状/散点等多序列图表生成器\nfunction defaultMultiSeriesOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  const {\n    yAxis,\n    title,\n    animation\n  } = config;\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  const seriesArr = yArr.map((y, idx) => ({\n    name: y.field,\n    type: selectedChartType.value.toLowerCase(),\n    data: yDataArr[idx],\n    animationDuration: animation ? 1500 : 0\n  }));\n  return {\n    title: {\n      text: title || `${yArr.map(y => y.field).join(',')} vs ${config.xAxis.field}`,\n      left: 'center',\n      textStyle: {\n        fontSize: 16,\n        fontWeight: 'bold'\n      }\n    },\n    tooltip: {\n      trigger: 'axis'\n    },\n    legend: {\n      data: yArr.map(y => y.field),\n      top: 'bottom'\n    },\n    toolbox: {\n      show: true,\n      feature: {\n        dataView: {\n          show: true,\n          readOnly: false\n        },\n        magicType: {\n          show: true,\n          type: ['line', 'bar']\n        },\n        restore: {\n          show: true\n        },\n        saveAsImage: {\n          show: true\n        }\n      }\n    },\n    xAxis: {\n      type: 'category',\n      data: xData,\n      axisLabel: {\n        interval: 0,\n        rotate: xData.length > 10 ? 45 : 0\n      }\n    },\n    yAxis: {\n      type: 'value',\n      name: yArr.map(y => y.field).join(',')\n    },\n    series: seriesArr,\n    animation: animation,\n    animationDuration: animation ? 1500 : 0,\n    ...customOption\n  };\n}\n\n// 饼图生成器\nfunction pieOptionGenerator(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  const {\n    title,\n    animation\n  } = config;\n  const pieSeries = Array.isArray(seriesData) && seriesData.length > 0 ? seriesData : xData.map((name, i) => ({\n    name,\n    value: yDataArr[0][i]\n  }));\n  return {\n    title: {\n      text: title || '',\n      left: 'center',\n      textStyle: {\n        fontSize: 16,\n        fontWeight: 'bold'\n      }\n    },\n    tooltip: {\n      trigger: 'item'\n    },\n    legend: {\n      top: 'bottom'\n    },\n    series: [{\n      name: title || '',\n      type: 'pie',\n      radius: '60%',\n      data: pieSeries,\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      },\n      animation: animation,\n      animationDuration: animation ? 1500 : 0\n    }],\n    ...customOption\n  };\n}\n\n// 注册默认类型\n['line', 'bar', 'scatter', 'kline', 'radar', 'boxplot', 'heatmap', 'graph', 'tree', 'treemap', 'sunburst', 'parallel', 'sankey', 'funnel', 'gauge', 'pictorialbar', 'themeriver', 'calendar'].forEach(type => {\n  chartOptionGenerators[type] = defaultMultiSeriesOption;\n});\nchartOptionGenerators['pie'] = pieOptionGenerator;\n\n// 主入口：根据类型分发\nexport function generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  const type = selectedChartType.value.toLowerCase();\n  const generator = chartOptionGenerators[type] || defaultMultiSeriesOption;\n  const option = generator(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption);\n  // 调试输出\n  console.log('[generateEChartOption]', type, option);\n  return option;\n}\n\n// 注册新类型生成器接口\nexport function registerChartOptionGenerator(type, generatorFn) {\n  chartOptionGenerators[type.toLowerCase()] = generatorFn;\n}","map":{"version":3,"names":["chartOptionGenerators","defaultMultiSeriesOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","yAxis","title","animation","yArr","Array","isArray","seriesArr","map","y","idx","name","field","type","value","toLowerCase","data","animationDuration","text","join","xAxis","left","textStyle","fontSize","fontWeight","tooltip","trigger","legend","top","toolbox","show","feature","dataView","readOnly","magicType","restore","saveAsImage","axisLabel","interval","rotate","length","series","pieOptionGenerator","pieSeries","i","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","forEach","generateEChartOption","generator","option","console","log","registerChartOptionGenerator","generatorFn"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/utils/echartOptionUtils.js"],"sourcesContent":["/* eslint-disable */\n\n\n// 图表类型注册表\nconst chartOptionGenerators = {};\n\n// 通用折线/柱状/散点等多序列图表生成器\nfunction defaultMultiSeriesOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    const { yAxis, title, animation } = config;\n    const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n    const seriesArr = yArr.map((y, idx) => ({\n        name: y.field,\n        type: selectedChartType.value.toLowerCase(),\n        data: yDataArr[idx],\n        animationDuration: animation ? 1500 : 0\n    }));\n    return {\n        title: {\n            text: title || `${yArr.map(y => y.field).join(',')} vs ${config.xAxis.field}`,\n            left: 'center',\n            textStyle: { fontSize: 16, fontWeight: 'bold' }\n        },\n        tooltip: { trigger: 'axis' },\n        legend: { data: yArr.map(y => y.field), top: 'bottom' },\n        toolbox: {\n            show: true,\n            feature: {\n                dataView: { show: true, readOnly: false },\n                magicType: { show: true, type: ['line', 'bar'] },\n                restore: { show: true },\n                saveAsImage: { show: true }\n            }\n        },\n        xAxis: {\n            type: 'category',\n            data: xData,\n            axisLabel: { interval: 0, rotate: xData.length > 10 ? 45 : 0 }\n        },\n        yAxis: { type: 'value', name: yArr.map(y => y.field).join(',') },\n        series: seriesArr,\n        animation: animation,\n        animationDuration: animation ? 1500 : 0,\n        ...customOption\n    };\n}\n\n// 饼图生成器\nfunction pieOptionGenerator(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    const { title, animation } = config;\n    const pieSeries = Array.isArray(seriesData) && seriesData.length > 0 ? seriesData : (xData.map((name, i) => ({ name, value: yDataArr[0][i] })));\n    return {\n        title: {\n            text: title || '',\n            left: 'center',\n            textStyle: { fontSize: 16, fontWeight: 'bold' }\n        },\n        tooltip: { trigger: 'item' },\n        legend: { top: 'bottom' },\n        series: [\n            {\n                name: title || '',\n                type: 'pie',\n                radius: '60%',\n                data: pieSeries,\n                emphasis: {\n                    itemStyle: {\n                        shadowBlur: 10,\n                        shadowOffsetX: 0,\n                        shadowColor: 'rgba(0, 0, 0, 0.5)'\n                    }\n                },\n                animation: animation,\n                animationDuration: animation ? 1500 : 0\n            }\n        ],\n        ...customOption\n    };\n}\n\n// 注册默认类型\n['line', 'bar', 'scatter', 'kline', 'radar', 'boxplot', 'heatmap', 'graph', 'tree', 'treemap', 'sunburst', 'parallel', 'sankey', 'funnel', 'gauge', 'pictorialbar', 'themeriver', 'calendar'].forEach(type => {\n    chartOptionGenerators[type] = defaultMultiSeriesOption;\n});\nchartOptionGenerators['pie'] = pieOptionGenerator;\n\n// 主入口：根据类型分发\nexport function generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    const type = selectedChartType.value.toLowerCase();\n    const generator = chartOptionGenerators[type] || defaultMultiSeriesOption;\n    const option = generator(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption);\n    // 调试输出\n    console.log('[generateEChartOption]', type, option);\n    return option;\n}\n\n// 注册新类型生成器接口\nexport function registerChartOptionGenerator(type, generatorFn) {\n    chartOptionGenerators[type.toLowerCase()] = generatorFn;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}