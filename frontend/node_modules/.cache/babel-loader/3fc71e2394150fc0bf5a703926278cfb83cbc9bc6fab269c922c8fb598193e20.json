{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, renderSlot as _renderSlot, vShow as _vShow, withDirectives as _withDirectives, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  style: {\n    \"font-size\": \"auto\"\n  },\n  class: \"SidebarToggleBtn\"\n};\nconst _hoisted_2 = {\n  key: 1,\n  style: {\n    \"font-size\": \"auto\"\n  },\n  class: \"SidebarToggleBtn\"\n};\nconst _hoisted_3 = {\n  class: \"sidebar-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"aside\", {\n    class: _normalizeClass(['sidebar', $setup.positionClass, {\n      collapsed: $setup.isCollapsed,\n      expanded: $setup.isExpanded\n    }]),\n    onMouseenter: $setup.handleMouseEnter,\n    onMouseleave: $setup.handleMouseLeave\n  }, [_createCommentVNode(\" 点击收缩/展开按钮 \"), _createElementVNode(\"button\", {\n    class: \"toggle-btn\",\n    onClick: $setup.toggleCollapse,\n    \"aria-label\": \"Toggle sidebar\"\n  }, [$setup.isCollapsed ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, \"III\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"☰\"))]), _createCommentVNode(\" 插槽区域放侧边栏内容 \"), _withDirectives(_createElementVNode(\"div\", _hoisted_3, [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true)], 512 /* NEED_PATCH */), [[_vShow, $setup.isExpanded || !$setup.isCollapsed]])], 34 /* CLASS, NEED_HYDRATION */);\n}","map":{"version":3,"names":["key","style","class","_createElementBlock","_normalizeClass","$setup","positionClass","isCollapsed","expanded","isExpanded","onMouseenter","handleMouseEnter","onMouseleave","handleMouseLeave","_createCommentVNode","_createElementVNode","onClick","toggleCollapse","_hoisted_1","_hoisted_2","_hoisted_3","_renderSlot","_ctx","$slots","undefined"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\newArchitecture\\frontend_vue_design\\src\\components\\SideBar.vue"],"sourcesContent":["<template>\n    <aside\n        :class=\"[\n        'sidebar',\n        positionClass,\n        { collapsed: isCollapsed, expanded: isExpanded }\n        ]\"\n        @mouseenter=\"handleMouseEnter\"\n        @mouseleave=\"handleMouseLeave\"\n    >\n        <!-- 点击收缩/展开按钮 -->\n        <button class=\"toggle-btn\" @click=\"toggleCollapse\" aria-label=\"Toggle sidebar\">\n            <span v-if=\"isCollapsed\" style=\"font-size: auto;\" class=\"SidebarToggleBtn\">III</span>\n            <span v-else style=\"font-size: auto;\" class=\"SidebarToggleBtn\">☰</span>\n        </button>\n\n        <!-- 插槽区域放侧边栏内容 -->\n        <div class=\"sidebar-content\" v-show=\"isExpanded || !isCollapsed\">\n            <slot />\n        </div>\n    </aside>\n</template>\n\n<script setup>\n/* eslint-disable */\n    import { ref, watch, computed } from 'vue'\n\n    const props = defineProps({\n    position: {\n        type: String,\n        default: 'left', // 'left' 或 'right'\n        validator: v => ['left', 'right'].includes(v),\n    },\n    collapsedWidth: {\n        type: Number,\n        default: 40, // 折叠状态宽度，单位 px\n    },\n    expandedWidth: {\n        type: Number,\n        default: 250, // 展开状态宽度，单位 px\n    },\n    autoCollapseOnMobile: {\n        type: Boolean,\n        default: true, // 是否自动在小屏幕折叠\n    },\n    })\n\n    const isCollapsed = ref(true) // 默认折叠\n    const isHovered = ref(false)\n\n    // 判断是否是移动端小屏幕，监听窗口尺寸\n    const isMobile = ref(window.innerWidth < 768)\n    function onResize() {\n        isMobile.value = window.innerWidth < 768\n        if (props.autoCollapseOnMobile && isMobile.value) {\n            isCollapsed.value = true\n        }\n    }\n    window.addEventListener('resize', onResize)\n\n    // 鼠标悬浮时展开\n    function handleMouseEnter() {\n        isHovered.value = true\n    }\n\n    function handleMouseLeave() {\n        isHovered.value = false\n    }\n\n    const isExpanded = computed(() => !isCollapsed.value || isHovered.value)\n\n    function toggleCollapse() {\n        isCollapsed.value = !isCollapsed.value\n    }\n\n    // 位置类名\n    const positionClass = computed(() => {\n        return props.position === 'left' ? 'sidebar-left' : 'sidebar-right'\n    })\n\n    // 组件卸载时移除事件监听\n    import { onUnmounted } from 'vue'\n    onUnmounted(() => {\n        window.removeEventListener('resize', onResize)\n    })\n</script>\n\n<style scoped>\n    .sidebar {\n        position: fixed;\n        top: 100px;\n        bottom: 30px;\n        background-color: var(--bg-color);\n        box-shadow: 0 0 12px rgb(0 0 0 / 0.12);\n        overflow-x: hidden;\n        overflow-y: auto;\n        transition: width 0.3s ease;\n        display: flex;\n        flex-direction: column;\n        z-index: 9998;\n        user-select: none;\n        border-radius: 0 8px 8px 0;\n    }\n\n    /* 左侧右侧位置 */\n    .sidebar-left {\n        left: 0;\n        border-radius: 0 8px 8px 0;\n    }\n\n    .sidebar-right {\n        right: 0;\n        border-radius: 8px 0 0 8px;\n    }\n\n    /* 折叠宽度 */\n    .sidebar.collapsed {\n        width: var(--collapsed-width);\n    }\n\n    /* 展开宽度 */\n    .sidebar.expanded {\n        width: var(--expanded-width);\n    }\n\n    /* CSS变量传入宽度 */\n    :root {\n        --collapsed-width: 40px;\n        --expanded-width: 250px;\n    }\n\n    /* 切换宽度变量，动态替换 */\n    .sidebar {\n        width: var(--collapsed-width);\n    }\n\n    .sidebar.expanded {\n        width: var(--expanded-width);\n    }\n\n    /* 切换按钮 */\n    .toggle-btn {\n        background: transparent;\n        border: none;\n        cursor: pointer;\n        font-size: 1.3rem;\n        padding: 8px;\n        user-select: none;\n        color: var(--text-color);\n        align-self: flex-end;\n        margin: 6px;\n        border-radius: 4px;\n        transition: background-color 0.2s ease;\n    }\n\n    .toggle-btn:hover {\n        background-color: rgba(136, 133, 133, 0.1);\n    }\n\n    /* 侧边栏内容区域 */\n    .sidebar-content {\n        flex: 1;\n        overflow-y: auto;\n        padding: 12px 16px;\n        color: var(--text-color);\n    }\n\n    /* 小屏响应式，自动折叠 */\n    @media (max-width: 767px) {\n        .sidebar {\n            top: 80px; /* 顶部导航高度更小时调整 */\n            width: var(--collapsed-width) !important;\n        }\n        .SidebarToggleBtn {\n            display: block;\n            font-size: 40%;\n            text-align: center;\n        }\n    }\n</style>"],"mappings":";;EAAAA,GAAA;EAYqCC,KAAwB,EAAxB;IAAA;EAAA,CAAwB;EAACC,KAAK,EAAC;;;EAZpEF,GAAA;EAayBC,KAAwB,EAAxB;IAAA;EAAA,CAAwB;EAACC,KAAK,EAAC;;;EAI3CA,KAAK,EAAC;AAAiB;;uBAhBhCC,mBAAA,CAmBQ;IAlBHD,KAAK,EAFdE,eAAA,E,WAE6CC,MAAA,CAAAC,aAAa,E;iBAAuBD,MAAA,CAAAE,WAAW;MAAAC,QAAA,EAAYH,MAAA,CAAAI;IAAU,E;IAKzGC,YAAU,EAAEL,MAAA,CAAAM,gBAAgB;IAC5BC,YAAU,EAAEP,MAAA,CAAAQ;MAEbC,mBAAA,eAAkB,EAClBC,mBAAA,CAGS;IAHDb,KAAK,EAAC,YAAY;IAAEc,OAAK,EAAEX,MAAA,CAAAY,cAAc;IAAE,YAAU,EAAC;MAC9CZ,MAAA,CAAAE,WAAW,I,cAAvBJ,mBAAA,CAAqF,QAArFe,UAAqF,EAAV,KAAG,M,cAC9Ef,mBAAA,CAAuE,QAAvEgB,UAAuE,EAAR,GAAC,G,GAGpEL,mBAAA,gBAAmB,E,gBACnBC,mBAAA,CAEM,OAFNK,UAEM,GADFC,WAAA,CAAQC,IAAA,CAAAC,MAAA,iBAAAC,SAAA,Q,mCADyBnB,MAAA,CAAAI,UAAU,KAAKJ,MAAA,CAAAE,WAAW,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}