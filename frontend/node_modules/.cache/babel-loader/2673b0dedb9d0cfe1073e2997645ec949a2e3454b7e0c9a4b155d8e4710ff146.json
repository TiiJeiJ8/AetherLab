{"ast":null,"code":"import { computed } from 'vue';\nexport default {\n  __name: 'ProgressBar',\n  props: {\n    progress: {\n      type: Number,\n      default: 0,\n      validator: value => value >= 0 && value <= 100\n    },\n    status: {\n      type: String,\n      default: 'uploading' // uploading, syncing, success, error\n    },\n    statusText: {\n      type: String,\n      default: ''\n    },\n    showProgress: {\n      type: Boolean,\n      default: true\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n    const progressClass = computed(() => {\n      return {\n        'progress-uploading': props.status === 'uploading',\n        'progress-syncing': props.status === 'syncing',\n        'progress-success': props.status === 'success',\n        'progress-error': props.status === 'error'\n      };\n    });\n    const __returned__ = {\n      props,\n      progressClass,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","progressClass","status"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/ProgressBar.vue"],"sourcesContent":["<template>\n    <div class=\"progress-container\" v-if=\"showProgress\">\n        <div class=\"progress-bar\">\n            <div \n                class=\"progress-fill\"\n                :style=\"{ width: progress + '%' }\"\n                :class=\"progressClass\">\n            </div>\n        </div>\n        <div class=\"progress-text\">\n            <span class=\"progress-percentage\">{{ Math.round(progress) }}%</span>\n            <span class=\"progress-status\" v-if=\"statusText\">{{ statusText }}</span>\n        </div>\n    </div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { computed } from 'vue'\n\nconst props = defineProps({\n    progress: {\n        type: Number,\n        default: 0,\n        validator: (value) => value >= 0 && value <= 100\n    },\n    status: {\n        type: String,\n        default: 'uploading' // uploading, syncing, success, error\n    },\n    statusText: {\n        type: String,\n        default: ''\n    },\n    showProgress: {\n        type: Boolean,\n        default: true\n    }\n})\n\nconst progressClass = computed(() => {\n    return {\n        'progress-uploading': props.status === 'uploading',\n        'progress-syncing': props.status === 'syncing',\n        'progress-success': props.status === 'success',\n        'progress-error': props.status === 'error'\n    }\n})\n</script>\n\n<style scoped>\n.progress-container {\n    width: 100%;\n    margin: 8px 0;\n}\n\n.progress-bar {\n    width: 100%;\n    height: 6px;\n    background: #e5e7eb;\n    border-radius: 3px;\n    overflow: hidden;\n    position: relative;\n}\n\n.progress-fill {\n    height: 100%;\n    border-radius: 3px;\n    transition: width 0.3s ease, background-color 0.3s ease;\n    position: relative;\n}\n\n.progress-fill::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n        90deg,\n        transparent,\n        rgba(255, 255, 255, 0.3),\n        transparent\n    );\n    animation: shimmer 1.5s infinite;\n}\n\n.progress-uploading {\n    background: linear-gradient(90deg, #3b82f6, #1e40af);\n}\n\n.progress-syncing {\n    background: linear-gradient(90deg, #10b981, #059669);\n}\n\n.progress-success {\n    background: linear-gradient(90deg, #22c55e, #16a34a);\n}\n\n.progress-error {\n    background: linear-gradient(90deg, #ef4444, #dc2626);\n}\n\n.progress-text {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 4px;\n    font-size: 12px;\n}\n\n.progress-percentage {\n    font-weight: 600;\n    color: #374151;\n}\n\n.progress-status {\n    color: #6b7280;\n    font-size: 11px;\n}\n\n@keyframes shimmer {\n    0% {\n        transform: translateX(-100%);\n    }\n    100% {\n        transform: translateX(100%);\n    }\n}\n\n/* 响应式适配 */\n@media (max-width: 768px) {\n    .progress-bar {\n        height: 8px;\n    }\n    \n    .progress-text {\n        font-size: 11px;\n    }\n    \n    .progress-status {\n        font-size: 10px;\n    }\n}\n</style>\n"],"mappings":"AAkBA,SAASA,QAAQ,QAAQ,KAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;IAD7B;IAGA,MAAMC,KAAK,GAAGC,OAAA;IAoBd,MAAMC,aAAa,GAAGH,QAAQ,CAAC,MAAM;MACjC,OAAO;QACH,oBAAoB,EAAEC,KAAK,CAACG,MAAM,KAAK,WAAW;QAClD,kBAAkB,EAAEH,KAAK,CAACG,MAAM,KAAK,SAAS;QAC9C,kBAAkB,EAAEH,KAAK,CAACG,MAAM,KAAK,SAAS;QAC9C,gBAAgB,EAAEH,KAAK,CAACG,MAAM,KAAK;MACvC;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}