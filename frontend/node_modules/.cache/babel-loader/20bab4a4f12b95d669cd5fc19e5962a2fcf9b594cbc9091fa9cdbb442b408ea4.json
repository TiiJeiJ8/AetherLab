{"ast":null,"code":"import { chartTypes, chartIcons } from '../assets/JS/chartIcons.js';\nimport { watch, ref } from 'vue';\nexport default {\n  __name: 'ChartIcon',\n  props: {\n    types: {\n      type: Array,\n      default: () => chartTypes\n    },\n    modelValue: {\n      type: String,\n      default: ''\n    }\n  },\n  emits: ['select', 'update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n    const emit = __emit;\n    const selectedType = ref(props.modelValue);\n    function renderButton(type) {\n      const icon = chartIcons[type] || '';\n      return `${icon}<span class=\"label\">${type}</span>`;\n    }\n    function handleClick(type) {\n      selectedType.value = type;\n      emit('select', type);\n      emit('update:modelValue', type);\n    }\n    watch(() => props.modelValue, newValue => {\n      selectedType.value = newValue;\n    });\n    const __returned__ = {\n      props,\n      emit,\n      selectedType,\n      renderButton,\n      handleClick,\n      get chartTypes() {\n        return chartTypes;\n      },\n      get chartIcons() {\n        return chartIcons;\n      },\n      watch,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["chartTypes","chartIcons","watch","ref","props","__props","emit","__emit","selectedType","modelValue","renderButton","type","icon","handleClick","value","newValue"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/ChartIcon.vue"],"sourcesContent":["<template>\n    <div class=\"chart-type-panel\">\n        <button\n        v-for=\"type in types\"\n        :key=\"type\"\n        class=\"sideBar-btn\"\n        :class=\"{ 'selected': selectedType === type }\"\n        v-html=\"renderButton(type)\"\n        @click=\"handleClick(type)\"\n        ></button>\n    </div>\n</template>\n<script setup>\n/* eslint-disable */\nimport { chartTypes, chartIcons } from '../assets/JS/chartIcons.js'\nimport { watch, ref } from 'vue'\n\nconst props = defineProps({\n    types: {\n        type: Array,\n        default: () => chartTypes\n    },\n\n    modelValue: {\n        type: String,\n        default: ''\n    }\n})\n\nconst emit = defineEmits(['select', 'update:modelValue'])\n\nconst selectedType = ref(props.modelValue)\n\nfunction renderButton(type) {\n    const icon = chartIcons[type] || ''\n    return `${icon}<span class=\"label\">${type}</span>`\n}\n\nfunction handleClick(type) {\n    selectedType.value = type\n    emit('select', type)\n    emit('update:modelValue', type)\n}\n\nwatch(() => props.modelValue, (newValue) => {\n    selectedType.value = newValue\n})\n</script>\n\n<style scoped>\n.chart-type-panel {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n\n.chart-btn-wrapper {\n    position: relative;\n}\n\n.sideBar-btn {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    background: transparent;\n    border: none;\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    color: var(--text-color);\n    padding: 6px 14px;\n    border-radius: 8px;\n    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s;\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n}\n\n.sideBar-btn::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition: left 0.6s;\n}\n\n.sideBar-btn:hover {\n    background-color: rgba(136, 133, 133, 0.1);\n    transform: translateY(-2px) scale(1.02);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 选中状态的样式 */\n.sideBar-btn.selected {\n    background: linear-gradient(135deg, #3b82f6, #6366f1);\n    color: white;\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.sideBar-btn.selected::before {\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\n}\n\n.sideBar-btn.selected:hover {\n    background: linear-gradient(135deg, #2563eb, #5b21b6);\n    transform: translateY(-3px) scale(1.05);\n    box-shadow: 0 6px 16px rgba(59, 130, 246, 0.4);\n}\n\n.sideBar-btn.selected:hover::before {\n    left: 100%;\n}\n\n/* 点击动画 */\n.sideBar-btn:active {\n    transform: translateY(0) scale(0.98);\n    transition: all 0.1s ease;\n}\n\n.sideBar-btn.selected:active {\n    transform: translateY(-1px) scale(0.98);\n}\n\n.sideBar-btn svg {\n    fill: currentColor;\n    transition: all 0.3s ease;\n}\n\n.sideBar-btn.selected svg {\n    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));\n}\n\n.label {\n    white-space: nowrap;\n    transition: all 0.3s ease;\n}\n\n.sideBar-btn.selected .label {\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n/* 选中状态的动画效果 */\n@keyframes selectedShine {\n    0% {\n        background-position: -100% 0;\n    }\n    100% {\n        background-position: 100% 0;\n    }\n}\n\n.sideBar-btn.selected:hover .chart-icon-svg {\n    transform: scale(1.1);\n    filter: drop-shadow(0 2px 6px rgba(0, 0, 0, 0.3));\n}\n\n.sideBar-btn.selected:hover .label {\n    transform: translateX(2px);\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n}\n\n/* Tooltip Styles */\n.tooltip {\n    position: absolute;\n    left: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    margin-left: 16px;\n    z-index: 1000;\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;\n    pointer-events: none;\n    min-width: 300px;\n    max-width: 350px;\n}\n\n.tooltip-visible {\n    opacity: 1;\n    visibility: visible;\n    transform: translateY(-50%) translateX(8px);\n}\n\n.tooltip-content {\n    background: var(--tooltip-bg, #ffffff);\n    border: 1px solid var(--tooltip-border, #e5e7eb);\n    border-radius: 12px;\n    padding: 16px;\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n    backdrop-filter: blur(10px);\n    position: relative;\n}\n\n/* Dark mode tooltip styles */\n@media (prefers-color-scheme: dark) {\n    .tooltip-content {\n        background: var(--tooltip-bg, #1f2937);\n        border-color: var(--tooltip-border, #374151);\n        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.4);\n    }\n}\n\n/* Tooltip arrow */\n.tooltip-content::before {\n    content: '';\n    position: absolute;\n    left: -8px;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 0;\n    height: 0;\n    border-top: 8px solid transparent;\n    border-bottom: 8px solid transparent;\n    border-right: 8px solid var(--tooltip-bg, #ffffff);\n}\n\n@media (prefers-color-scheme: dark) {\n    .tooltip-content::before {\n        border-right-color: var(--tooltip-bg, #1f2937);\n    }\n}\n\n.tooltip-title {\n    margin: 0 0 12px 0;\n    font-size: 1.1rem;\n    font-weight: 700;\n    color: var(--text-color, #111827);\n    border-bottom: 2px solid #3b82f6;\n    padding-bottom: 8px;\n}\n\n.tooltip-section {\n    margin-bottom: 16px;\n}\n\n.tooltip-section:last-child {\n    margin-bottom: 0;\n}\n\n.tooltip-section h5 {\n    margin: 0 0 8px 0;\n    font-size: 0.9rem;\n    font-weight: 600;\n    color: var(--text-secondary, #6b7280);\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n}\n\n.tooltip-tags {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 6px;\n}\n\n.tooltip-tag {\n    padding: 4px 8px;\n    border-radius: 6px;\n    font-size: 0.8rem;\n    font-weight: 500;\n    line-height: 1.2;\n    transition: all 0.2s ease;\n}\n\n.requirement-tag {\n    background: rgba(59, 130, 246, 0.1);\n    color: #3b82f6;\n    border: 1px solid rgba(59, 130, 246, 0.2);\n}\n\n.usecase-tag {\n    background: rgba(16, 185, 129, 0.1);\n    color: #10b981;\n    border: 1px solid rgba(16, 185, 129, 0.2);\n}\n\n/* Dark mode tag styles */\n@media (prefers-color-scheme: dark) {\n    .requirement-tag {\n        background: rgba(59, 130, 246, 0.2);\n        color: #60a5fa;\n    }\n    \n    .usecase-tag {\n        background: rgba(16, 185, 129, 0.2);\n        color: #34d399;\n    }\n}\n\n.tooltip-tag:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n/* Responsive tooltip positioning */\n@media (max-width: 768px) {\n    .tooltip {\n        position: fixed;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        margin-left: 0;\n        max-width: 90vw;\n    }\n    \n    .tooltip-visible {\n        transform: translate(-50%, -50%) scale(1);\n    }\n    \n    .tooltip-content::before {\n        display: none;\n    }\n}\n</style>\n\n<style>\n.chart-icon-svg {\n    width: 1.6em;\n    height: 1.6em;\n    min-width: 24px;\n    min-height: 24px;\n    max-width: 32px;\n    max-height: 32px;\n    color: var(--text-color);\n    fill: currentColor;\n    vertical-align: middle;\n    display: inline-block;\n    transition: all 0.3s ease;\n}\n\n.sideBar-btn.selected .chart-icon-svg {\n    color: white;\n}\n</style>\n"],"mappings":"AAcA,SAASA,UAAU,EAAEC,UAAU,QAAQ,4BAA2B;AAClE,SAASC,KAAK,EAAEC,GAAG,QAAQ,KAAI;;;;;;;;;;;;;;;;;;;;IAF/B;IAIA,MAAMC,KAAK,GAAGC,OAAA;IAYd,MAAMC,IAAI,GAAGC,MAAA;IAEb,MAAMC,YAAY,GAAGL,GAAG,CAACC,KAAK,CAACK,UAAU;IAEzC,SAASC,YAAYA,CAACC,IAAI,EAAE;MACxB,MAAMC,IAAI,GAAGX,UAAU,CAACU,IAAI,CAAC,IAAI,EAAC;MAClC,OAAO,GAAGC,IAAI,uBAAuBD,IAAI,SAAQ;IACrD;IAEA,SAASE,WAAWA,CAACF,IAAI,EAAE;MACvBH,YAAY,CAACM,KAAK,GAAGH,IAAG;MACxBL,IAAI,CAAC,QAAQ,EAAEK,IAAI;MACnBL,IAAI,CAAC,mBAAmB,EAAEK,IAAI;IAClC;IAEAT,KAAK,CAAC,MAAME,KAAK,CAACK,UAAU,EAAGM,QAAQ,IAAK;MACxCP,YAAY,CAACM,KAAK,GAAGC,QAAO;IAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}