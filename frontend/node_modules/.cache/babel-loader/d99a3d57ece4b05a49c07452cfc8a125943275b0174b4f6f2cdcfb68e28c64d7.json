{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { unref as _unref, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-preview-panel\"\n};\nconst _hoisted_2 = {\n  class: \"preview-header\"\n};\nconst _hoisted_3 = {\n  class: \"preview-title\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = {\n  class: \"preview-actions\"\n};\nconst _hoisted_6 = [\"disabled\"];\nconst _hoisted_7 = [\"innerHTML\"];\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = [\"innerHTML\"];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"generating-state\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"no-chart-state\"\n};\nconst _hoisted_12 = {\n  class: \"empty-state\"\n};\nconst _hoisted_13 = [\"innerHTML\"];\nconst _hoisted_14 = {\n  key: 2,\n  class: \"chart-container\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"chart-title\"\n};\nimport { ref, computed, watch, onMounted, onUnmounted, nextTick } from 'vue';\nimport { getThemeIcon } from '@/assets/JS/icons.js';\nimport * as echarts from 'echarts';\n\n// Props\n\nexport default {\n  __name: 'ChartPreviewPanel',\n  props: {\n    chartData: {\n      type: Object,\n      default: null\n    },\n    fileData: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['chart-refreshed', 'chart-downloaded'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    /* eslint-disable */\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // Refs\n    const previewContainer = ref(null);\n    const chartDisplay = ref(null);\n\n    // 状态\n    const isGenerating = ref(false);\n    const chartInstance = ref(null);\n    const chartHeight = ref(400);\n\n    // 计算属性\n    const hasChart = computed(() => {\n      return props.chartData && props.chartData.type && props.chartData.config;\n    });\n\n    // 刷新图表\n    function refreshChart() {\n      if (!hasChart.value) return;\n      isGenerating.value = true;\n\n      // 模拟生成延迟\n      setTimeout(() => {\n        generateChart();\n        isGenerating.value = false;\n        emit('chart-refreshed');\n      }, 1000);\n    }\n\n    // 生成图表\n    function generateChart() {\n      if (!chartDisplay.value || !hasChart.value) return;\n\n      // 销毁现有图表实例\n      if (chartInstance.value) {\n        chartInstance.value.dispose();\n      }\n\n      // 创建新的图表实例\n      chartInstance.value = echarts.init(chartDisplay.value);\n\n      // 生成图表配置\n      const option = generateChartOption();\n\n      // 渲染图表\n      chartInstance.value.setOption(option, true);\n\n      // 监听窗口大小变化\n      window.addEventListener('resize', handleResize);\n    }\n\n    // 生成图表配置\n    function generateChartOption() {\n      const {\n        type,\n        config\n      } = props.chartData;\n\n      // 基础配置\n      const baseOption = {\n        title: {\n          text: config.title || '',\n          left: 'center',\n          textStyle: {\n            color: getTextColor()\n          }\n        },\n        tooltip: {\n          trigger: getTooltipTrigger(type),\n          backgroundColor: getTooltipBackground(),\n          borderColor: getTooltipBorder(),\n          textStyle: {\n            color: getTextColor()\n          }\n        },\n        legend: {\n          type: 'scroll',\n          orient: 'horizontal',\n          left: 'center',\n          bottom: 10,\n          textStyle: {\n            color: getTextColor()\n          }\n        },\n        grid: {\n          left: '10%',\n          right: '10%',\n          bottom: '15%',\n          containLabel: true\n        },\n        color: getColorPalette(config.colorTheme || 'default')\n      };\n\n      // 根据图表类型生成特定配置\n      switch (type) {\n        case 'bar':\n          return generateBarChart(baseOption);\n        case 'line':\n          return generateLineChart(baseOption);\n        case 'pie':\n          return generatePieChart(baseOption);\n        case 'scatter':\n          return generateScatterChart(baseOption);\n        case 'area':\n          return generateAreaChart(baseOption);\n        default:\n          return generateBarChart(baseOption);\n      }\n    }\n\n    // 生成柱状图配置\n    function generateBarChart(baseOption) {\n      const mappings = props.chartData.config.mappings;\n      const sampleData = generateSampleData(mappings);\n      return {\n        ...baseOption,\n        xAxis: {\n          type: 'category',\n          data: sampleData.categories,\n          axisLabel: {\n            color: getTextColor()\n          },\n          axisLine: {\n            lineStyle: {\n              color: getAxisColor()\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            color: getTextColor()\n          },\n          axisLine: {\n            lineStyle: {\n              color: getAxisColor()\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: getGridColor()\n            }\n          }\n        },\n        series: [{\n          name: mappings.yAxis?.name || 'Value',\n          type: 'bar',\n          data: sampleData.values,\n          itemStyle: {\n            borderRadius: [4, 4, 0, 0]\n          }\n        }]\n      };\n    }\n\n    // 生成线形图配置\n    function generateLineChart(baseOption) {\n      const mappings = props.chartData.config.mappings;\n      const lineConfig = props.chartData.config.lineConfig || {};\n      const sampleData = generateSampleData(mappings);\n      return {\n        ...baseOption,\n        xAxis: {\n          type: 'category',\n          data: sampleData.categories,\n          axisLabel: {\n            color: getTextColor()\n          },\n          axisLine: {\n            lineStyle: {\n              color: getAxisColor()\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            color: getTextColor()\n          },\n          axisLine: {\n            lineStyle: {\n              color: getAxisColor()\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: getGridColor()\n            }\n          }\n        },\n        series: [{\n          name: mappings.yAxis?.name || 'Value',\n          type: 'line',\n          data: sampleData.values,\n          smooth: lineConfig.smooth || false,\n          lineStyle: {\n            type: lineConfig.type || 'solid',\n            width: 2\n          },\n          symbol: lineConfig.showPoints ? 'circle' : 'none',\n          symbolSize: 6\n        }]\n      };\n    }\n\n    // 生成饼图配置\n    function generatePieChart(baseOption) {\n      const mappings = props.chartData.config.mappings;\n      const pieConfig = props.chartData.config.pieConfig || {};\n      const sampleData = generateSamplePieData(mappings);\n      return {\n        ...baseOption,\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b}: {c} ({d}%)',\n          backgroundColor: getTooltipBackground(),\n          borderColor: getTooltipBorder(),\n          textStyle: {\n            color: getTextColor()\n          }\n        },\n        series: [{\n          name: mappings.labels?.name || 'Category',\n          type: 'pie',\n          radius: pieConfig.type === 'doughnut' ? [`${pieConfig.innerRadius || 50}%`, '70%'] : '70%',\n          data: sampleData,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          },\n          label: {\n            position: pieConfig.labelPosition || 'outside',\n            color: getTextColor(),\n            formatter: pieConfig.showValues && pieConfig.showPercentages ? '{b}: {c} ({d}%)' : pieConfig.showValues ? '{b}: {c}' : pieConfig.showPercentages ? '{b}: {d}%' : '{b}'\n          }\n        }]\n      };\n    }\n\n    // 生成散点图配置\n    function generateScatterChart(baseOption) {\n      const mappings = props.chartData.config.mappings;\n      const scatterConfig = props.chartData.config.scatterConfig || {};\n      const sampleData = generateSampleScatterData(mappings);\n      return {\n        ...baseOption,\n        xAxis: {\n          type: 'value',\n          axisLabel: {\n            color: getTextColor()\n          },\n          axisLine: {\n            lineStyle: {\n              color: getAxisColor()\n            }\n          },\n          splitLine: {\n            show: scatterConfig.showGrid,\n            lineStyle: {\n              color: getGridColor()\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            color: getTextColor()\n          },\n          axisLine: {\n            lineStyle: {\n              color: getAxisColor()\n            }\n          },\n          splitLine: {\n            show: scatterConfig.showGrid,\n            lineStyle: {\n              color: getGridColor()\n            }\n          }\n        },\n        series: [{\n          name: 'Data Points',\n          type: 'scatter',\n          data: sampleData,\n          symbolSize: scatterConfig.pointSize || 6,\n          symbol: scatterConfig.pointShape || 'circle',\n          itemStyle: {\n            opacity: scatterConfig.opacity || 0.8\n          }\n        }]\n      };\n    }\n\n    // 生成区域图配置\n    function generateAreaChart(baseOption) {\n      const lineChart = generateLineChart(baseOption);\n      lineChart.series[0].areaStyle = {\n        opacity: 0.3\n      };\n      return lineChart;\n    }\n\n    // 生成样本数据\n    function generateSampleData(mappings) {\n      const categories = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n      const values = [120, 200, 150, 80, 70, 110];\n      return {\n        categories,\n        values\n      };\n    }\n\n    // 生成饼图样本数据\n    function generateSamplePieData(mappings) {\n      return [{\n        value: 335,\n        name: 'Category A'\n      }, {\n        value: 310,\n        name: 'Category B'\n      }, {\n        value: 234,\n        name: 'Category C'\n      }, {\n        value: 135,\n        name: 'Category D'\n      }, {\n        value: 1548,\n        name: 'Category E'\n      }];\n    }\n\n    // 生成散点图样本数据\n    function generateSampleScatterData(mappings) {\n      const data = [];\n      for (let i = 0; i < 50; i++) {\n        data.push([Math.random() * 100, Math.random() * 100]);\n      }\n      return data;\n    }\n\n    // 获取提示框触发方式\n    function getTooltipTrigger(type) {\n      return type === 'pie' ? 'item' : 'axis';\n    }\n\n    // 获取颜色主题\n    function getColorPalette(theme) {\n      const palettes = {\n        'default': ['#5470c6', '#91cc75', '#fac858', '#ee6666', '#73c0de', '#3ba272', '#fc8452', '#9a60b4', '#ea7ccc'],\n        'blue': ['#1e40af', '#3b82f6', '#60a5fa', '#93c5fd', '#dbeafe'],\n        'green': ['#065f46', '#059669', '#10b981', '#34d399', '#a7f3d0'],\n        'purple': ['#581c87', '#7c3aed', '#8b5cf6', '#a78bfa', '#c4b5fd'],\n        'orange': ['#9a3412', '#ea580c', '#f97316', '#fb923c', '#fed7aa']\n      };\n      return palettes[theme] || palettes.default;\n    }\n\n    // 获取当前主题\n    function getCurrentTheme() {\n      return document.documentElement.getAttribute('data-theme') === 'dark' ? 'dark' : 'light';\n    }\n\n    // 获取文本颜色\n    function getTextColor() {\n      return getCurrentTheme() === 'dark' ? '#e5e7eb' : '#374151';\n    }\n\n    // 获取轴线颜色\n    function getAxisColor() {\n      return getCurrentTheme() === 'dark' ? '#4b5563' : '#d1d5db';\n    }\n\n    // 获取网格颜色\n    function getGridColor() {\n      return getCurrentTheme() === 'dark' ? '#374151' : '#f3f4f6';\n    }\n\n    // 获取提示框背景\n    function getTooltipBackground() {\n      return getCurrentTheme() === 'dark' ? '#1f2937' : '#ffffff';\n    }\n\n    // 获取提示框边框\n    function getTooltipBorder() {\n      return getCurrentTheme() === 'dark' ? '#4b5563' : '#e5e7eb';\n    }\n\n    // 下载图表\n    function downloadChart() {\n      if (!chartInstance.value) return;\n      const url = chartInstance.value.getDataURL({\n        pixelRatio: 2,\n        backgroundColor: getCurrentTheme() === 'dark' ? '#1f2937' : '#ffffff'\n      });\n      const link = document.createElement('a');\n      link.download = `chart-${Date.now()}.png`;\n      link.href = url;\n      link.click();\n      emit('chart-downloaded', url);\n    }\n\n    // 处理窗口大小变化\n    function handleResize() {\n      if (chartInstance.value) {\n        chartInstance.value.resize();\n      }\n    }\n\n    // 监听图表数据变化\n    watch(() => props.chartData, newData => {\n      if (newData && chartDisplay.value) {\n        nextTick(() => {\n          generateChart();\n        });\n      }\n    }, {\n      deep: true\n    });\n\n    // 组件挂载\n    onMounted(() => {\n      // 计算图表高度\n      const updateHeight = () => {\n        if (previewContainer.value) {\n          const containerHeight = previewContainer.value.clientHeight;\n          chartHeight.value = Math.max(300, containerHeight - 100);\n        }\n      };\n      updateHeight();\n      window.addEventListener('resize', updateHeight);\n\n      // 如果有初始数据，生成图表\n      if (hasChart.value) {\n        nextTick(() => {\n          generateChart();\n        });\n      }\n    });\n\n    // 组件卸载\n    onUnmounted(() => {\n      if (chartInstance.value) {\n        chartInstance.value.dispose();\n      }\n      window.removeEventListener('resize', handleResize);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", {\n        class: \"preview-icon\",\n        innerHTML: _unref(getThemeIcon)('chart')\n      }, null, 8, _hoisted_4), _cache[0] || (_cache[0] = _createElementVNode(\"span\", null, \"Chart Preview\", -1))]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n        class: \"action-btn\",\n        onClick: refreshChart,\n        disabled: isGenerating.value,\n        title: \"Refresh Chart\"\n      }, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('refresh')\n      }, null, 8, _hoisted_7)], 8, _hoisted_6), _createElementVNode(\"button\", {\n        class: \"action-btn\",\n        onClick: downloadChart,\n        disabled: !hasChart.value,\n        title: \"Download Chart\"\n      }, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('download')\n      }, null, 8, _hoisted_9)], 8, _hoisted_8)])]), _createElementVNode(\"div\", {\n        class: \"preview-content\",\n        ref_key: \"previewContainer\",\n        ref: previewContainer\n      }, [isGenerating.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _cache[1] || (_cache[1] = [_createElementVNode(\"div\", {\n        class: \"spinner\"\n      }, null, -1), _createElementVNode(\"p\", null, \"Generating chart...\", -1)]))) : !hasChart.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"span\", {\n        class: \"empty-icon\",\n        innerHTML: _unref(getThemeIcon)('chart')\n      }, null, 8, _hoisted_13), _cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"No Chart Generated\", -1)), _cache[3] || (_cache[3] = _createElementVNode(\"p\", null, \"Configure your data mapping and click \\\"Generate Chart\\\" to preview your visualization.\", -1))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [__props.chartData.config.title ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _toDisplayString(__props.chartData.config.title), 1)) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", {\n        class: \"chart-display\",\n        ref_key: \"chartDisplay\",\n        ref: chartDisplay,\n        style: _normalizeStyle({\n          height: chartHeight.value + 'px'\n        })\n      }, null, 4)]))], 512)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","onUnmounted","nextTick","getThemeIcon","echarts","props","__props","emit","__emit","previewContainer","chartDisplay","isGenerating","chartInstance","chartHeight","hasChart","chartData","type","config","refreshChart","value","setTimeout","generateChart","dispose","init","option","generateChartOption","setOption","window","addEventListener","handleResize","baseOption","title","text","left","textStyle","color","getTextColor","tooltip","trigger","getTooltipTrigger","backgroundColor","getTooltipBackground","borderColor","getTooltipBorder","legend","orient","bottom","grid","right","containLabel","getColorPalette","colorTheme","generateBarChart","generateLineChart","generatePieChart","generateScatterChart","generateAreaChart","mappings","sampleData","generateSampleData","xAxis","data","categories","axisLabel","axisLine","lineStyle","getAxisColor","yAxis","splitLine","getGridColor","series","name","values","itemStyle","borderRadius","lineConfig","smooth","width","symbol","showPoints","symbolSize","pieConfig","generateSamplePieData","formatter","labels","radius","innerRadius","emphasis","shadowBlur","shadowOffsetX","shadowColor","label","position","labelPosition","showValues","showPercentages","scatterConfig","generateSampleScatterData","show","showGrid","pointSize","pointShape","opacity","lineChart","areaStyle","i","push","Math","random","theme","palettes","default","getCurrentTheme","document","documentElement","getAttribute","downloadChart","url","getDataURL","pixelRatio","link","createElement","download","Date","now","href","click","resize","newData","deep","updateHeight","containerHeight","clientHeight","max","removeEventListener"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/ChartPreviewPanel.vue"],"sourcesContent":["<template>\n  <div class=\"chart-preview-panel\">\n    <!-- 预览头部 -->\n    <div class=\"preview-header\">\n      <div class=\"preview-title\">\n        <span class=\"preview-icon\" v-html=\"getThemeIcon('chart')\"></span>\n        <span>Chart Preview</span>\n      </div>\n      <div class=\"preview-actions\">\n        <button \n          class=\"action-btn\" \n          @click=\"refreshChart\"\n          :disabled=\"isGenerating\"\n          title=\"Refresh Chart\"\n        >\n          <span v-html=\"getThemeIcon('refresh')\"></span>\n        </button>\n        <button \n          class=\"action-btn\" \n          @click=\"downloadChart\"\n          :disabled=\"!hasChart\"\n          title=\"Download Chart\"\n        >\n          <span v-html=\"getThemeIcon('download')\"></span>\n        </button>\n      </div>\n    </div>\n\n    <!-- 预览内容 -->\n    <div class=\"preview-content\" ref=\"previewContainer\">\n      <!-- 生成中状态 -->\n      <div v-if=\"isGenerating\" class=\"generating-state\">\n        <div class=\"spinner\"></div>\n        <p>Generating chart...</p>\n      </div>\n\n      <!-- 没有数据时的状态 -->\n      <div v-else-if=\"!hasChart\" class=\"no-chart-state\">\n        <div class=\"empty-state\">\n          <span class=\"empty-icon\" v-html=\"getThemeIcon('chart')\"></span>\n          <h3>No Chart Generated</h3>\n          <p>Configure your data mapping and click \"Generate Chart\" to preview your visualization.</p>\n        </div>\n      </div>\n\n      <!-- 图表显示区域 -->\n      <div v-else class=\"chart-container\">\n        <div class=\"chart-title\" v-if=\"chartData.config.title\">\n          {{ chartData.config.title }}\n        </div>\n        <div \n          class=\"chart-display\" \n          ref=\"chartDisplay\"\n          :style=\"{ height: chartHeight + 'px' }\"\n        ></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch, onMounted, onUnmounted, nextTick } from 'vue'\nimport { getThemeIcon } from '@/assets/JS/icons.js'\nimport * as echarts from 'echarts'\n\n// Props\nconst props = defineProps({\n  chartData: {\n    type: Object,\n    default: null\n  },\n  fileData: {\n    type: Object,\n    default: null\n  }\n})\n\n// Emits\nconst emit = defineEmits(['chart-refreshed', 'chart-downloaded'])\n\n// Refs\nconst previewContainer = ref(null)\nconst chartDisplay = ref(null)\n\n// 状态\nconst isGenerating = ref(false)\nconst chartInstance = ref(null)\nconst chartHeight = ref(400)\n\n// 计算属性\nconst hasChart = computed(() => {\n  return props.chartData && props.chartData.type && props.chartData.config\n})\n\n// 刷新图表\nfunction refreshChart() {\n  if (!hasChart.value) return\n  \n  isGenerating.value = true\n  \n  // 模拟生成延迟\n  setTimeout(() => {\n    generateChart()\n    isGenerating.value = false\n    emit('chart-refreshed')\n  }, 1000)\n}\n\n// 生成图表\nfunction generateChart() {\n  if (!chartDisplay.value || !hasChart.value) return\n  \n  // 销毁现有图表实例\n  if (chartInstance.value) {\n    chartInstance.value.dispose()\n  }\n  \n  // 创建新的图表实例\n  chartInstance.value = echarts.init(chartDisplay.value)\n  \n  // 生成图表配置\n  const option = generateChartOption()\n  \n  // 渲染图表\n  chartInstance.value.setOption(option, true)\n  \n  // 监听窗口大小变化\n  window.addEventListener('resize', handleResize)\n}\n\n// 生成图表配置\nfunction generateChartOption() {\n  const { type, config } = props.chartData\n  \n  // 基础配置\n  const baseOption = {\n    title: {\n      text: config.title || '',\n      left: 'center',\n      textStyle: {\n        color: getTextColor()\n      }\n    },\n    tooltip: {\n      trigger: getTooltipTrigger(type),\n      backgroundColor: getTooltipBackground(),\n      borderColor: getTooltipBorder(),\n      textStyle: {\n        color: getTextColor()\n      }\n    },\n    legend: {\n      type: 'scroll',\n      orient: 'horizontal',\n      left: 'center',\n      bottom: 10,\n      textStyle: {\n        color: getTextColor()\n      }\n    },\n    grid: {\n      left: '10%',\n      right: '10%',\n      bottom: '15%',\n      containLabel: true\n    },\n    color: getColorPalette(config.colorTheme || 'default')\n  }\n  \n  // 根据图表类型生成特定配置\n  switch (type) {\n    case 'bar':\n      return generateBarChart(baseOption)\n    case 'line':\n      return generateLineChart(baseOption)\n    case 'pie':\n      return generatePieChart(baseOption)\n    case 'scatter':\n      return generateScatterChart(baseOption)\n    case 'area':\n      return generateAreaChart(baseOption)\n    default:\n      return generateBarChart(baseOption)\n  }\n}\n\n// 生成柱状图配置\nfunction generateBarChart(baseOption) {\n  const mappings = props.chartData.config.mappings\n  const sampleData = generateSampleData(mappings)\n  \n  return {\n    ...baseOption,\n    xAxis: {\n      type: 'category',\n      data: sampleData.categories,\n      axisLabel: {\n        color: getTextColor()\n      },\n      axisLine: {\n        lineStyle: {\n          color: getAxisColor()\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      axisLabel: {\n        color: getTextColor()\n      },\n      axisLine: {\n        lineStyle: {\n          color: getAxisColor()\n        }\n      },\n      splitLine: {\n        lineStyle: {\n          color: getGridColor()\n        }\n      }\n    },\n    series: [{\n      name: mappings.yAxis?.name || 'Value',\n      type: 'bar',\n      data: sampleData.values,\n      itemStyle: {\n        borderRadius: [4, 4, 0, 0]\n      }\n    }]\n  }\n}\n\n// 生成线形图配置\nfunction generateLineChart(baseOption) {\n  const mappings = props.chartData.config.mappings\n  const lineConfig = props.chartData.config.lineConfig || {}\n  const sampleData = generateSampleData(mappings)\n  \n  return {\n    ...baseOption,\n    xAxis: {\n      type: 'category',\n      data: sampleData.categories,\n      axisLabel: {\n        color: getTextColor()\n      },\n      axisLine: {\n        lineStyle: {\n          color: getAxisColor()\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      axisLabel: {\n        color: getTextColor()\n      },\n      axisLine: {\n        lineStyle: {\n          color: getAxisColor()\n        }\n      },\n      splitLine: {\n        lineStyle: {\n          color: getGridColor()\n        }\n      }\n    },\n    series: [{\n      name: mappings.yAxis?.name || 'Value',\n      type: 'line',\n      data: sampleData.values,\n      smooth: lineConfig.smooth || false,\n      lineStyle: {\n        type: lineConfig.type || 'solid',\n        width: 2\n      },\n      symbol: lineConfig.showPoints ? 'circle' : 'none',\n      symbolSize: 6\n    }]\n  }\n}\n\n// 生成饼图配置\nfunction generatePieChart(baseOption) {\n  const mappings = props.chartData.config.mappings\n  const pieConfig = props.chartData.config.pieConfig || {}\n  const sampleData = generateSamplePieData(mappings)\n  \n  return {\n    ...baseOption,\n    tooltip: {\n      trigger: 'item',\n      formatter: '{b}: {c} ({d}%)',\n      backgroundColor: getTooltipBackground(),\n      borderColor: getTooltipBorder(),\n      textStyle: {\n        color: getTextColor()\n      }\n    },\n    series: [{\n      name: mappings.labels?.name || 'Category',\n      type: 'pie',\n      radius: pieConfig.type === 'doughnut' ? \n        [`${pieConfig.innerRadius || 50}%`, '70%'] : '70%',\n      data: sampleData,\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      },\n      label: {\n        position: pieConfig.labelPosition || 'outside',\n        color: getTextColor(),\n        formatter: pieConfig.showValues && pieConfig.showPercentages ? \n          '{b}: {c} ({d}%)' : \n          pieConfig.showValues ? '{b}: {c}' : \n          pieConfig.showPercentages ? '{b}: {d}%' : '{b}'\n      }\n    }]\n  }\n}\n\n// 生成散点图配置\nfunction generateScatterChart(baseOption) {\n  const mappings = props.chartData.config.mappings\n  const scatterConfig = props.chartData.config.scatterConfig || {}\n  const sampleData = generateSampleScatterData(mappings)\n  \n  return {\n    ...baseOption,\n    xAxis: {\n      type: 'value',\n      axisLabel: {\n        color: getTextColor()\n      },\n      axisLine: {\n        lineStyle: {\n          color: getAxisColor()\n        }\n      },\n      splitLine: {\n        show: scatterConfig.showGrid,\n        lineStyle: {\n          color: getGridColor()\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      axisLabel: {\n        color: getTextColor()\n      },\n      axisLine: {\n        lineStyle: {\n          color: getAxisColor()\n        }\n      },\n      splitLine: {\n        show: scatterConfig.showGrid,\n        lineStyle: {\n          color: getGridColor()\n        }\n      }\n    },\n    series: [{\n      name: 'Data Points',\n      type: 'scatter',\n      data: sampleData,\n      symbolSize: scatterConfig.pointSize || 6,\n      symbol: scatterConfig.pointShape || 'circle',\n      itemStyle: {\n        opacity: scatterConfig.opacity || 0.8\n      }\n    }]\n  }\n}\n\n// 生成区域图配置\nfunction generateAreaChart(baseOption) {\n  const lineChart = generateLineChart(baseOption)\n  lineChart.series[0].areaStyle = {\n    opacity: 0.3\n  }\n  return lineChart\n}\n\n// 生成样本数据\nfunction generateSampleData(mappings) {\n  const categories = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun']\n  const values = [120, 200, 150, 80, 70, 110]\n  \n  return { categories, values }\n}\n\n// 生成饼图样本数据\nfunction generateSamplePieData(mappings) {\n  return [\n    { value: 335, name: 'Category A' },\n    { value: 310, name: 'Category B' },\n    { value: 234, name: 'Category C' },\n    { value: 135, name: 'Category D' },\n    { value: 1548, name: 'Category E' }\n  ]\n}\n\n// 生成散点图样本数据\nfunction generateSampleScatterData(mappings) {\n  const data = []\n  for (let i = 0; i < 50; i++) {\n    data.push([\n      Math.random() * 100,\n      Math.random() * 100\n    ])\n  }\n  return data\n}\n\n// 获取提示框触发方式\nfunction getTooltipTrigger(type) {\n  return type === 'pie' ? 'item' : 'axis'\n}\n\n// 获取颜色主题\nfunction getColorPalette(theme) {\n  const palettes = {\n    'default': ['#5470c6', '#91cc75', '#fac858', '#ee6666', '#73c0de', '#3ba272', '#fc8452', '#9a60b4', '#ea7ccc'],\n    'blue': ['#1e40af', '#3b82f6', '#60a5fa', '#93c5fd', '#dbeafe'],\n    'green': ['#065f46', '#059669', '#10b981', '#34d399', '#a7f3d0'],\n    'purple': ['#581c87', '#7c3aed', '#8b5cf6', '#a78bfa', '#c4b5fd'],\n    'orange': ['#9a3412', '#ea580c', '#f97316', '#fb923c', '#fed7aa']\n  }\n  return palettes[theme] || palettes.default\n}\n\n// 获取当前主题\nfunction getCurrentTheme() {\n  return document.documentElement.getAttribute('data-theme') === 'dark' ? 'dark' : 'light'\n}\n\n// 获取文本颜色\nfunction getTextColor() {\n  return getCurrentTheme() === 'dark' ? '#e5e7eb' : '#374151'\n}\n\n// 获取轴线颜色\nfunction getAxisColor() {\n  return getCurrentTheme() === 'dark' ? '#4b5563' : '#d1d5db'\n}\n\n// 获取网格颜色\nfunction getGridColor() {\n  return getCurrentTheme() === 'dark' ? '#374151' : '#f3f4f6'\n}\n\n// 获取提示框背景\nfunction getTooltipBackground() {\n  return getCurrentTheme() === 'dark' ? '#1f2937' : '#ffffff'\n}\n\n// 获取提示框边框\nfunction getTooltipBorder() {\n  return getCurrentTheme() === 'dark' ? '#4b5563' : '#e5e7eb'\n}\n\n// 下载图表\nfunction downloadChart() {\n  if (!chartInstance.value) return\n  \n  const url = chartInstance.value.getDataURL({\n    pixelRatio: 2,\n    backgroundColor: getCurrentTheme() === 'dark' ? '#1f2937' : '#ffffff'\n  })\n  \n  const link = document.createElement('a')\n  link.download = `chart-${Date.now()}.png`\n  link.href = url\n  link.click()\n  \n  emit('chart-downloaded', url)\n}\n\n// 处理窗口大小变化\nfunction handleResize() {\n  if (chartInstance.value) {\n    chartInstance.value.resize()\n  }\n}\n\n// 监听图表数据变化\nwatch(() => props.chartData, (newData) => {\n  if (newData && chartDisplay.value) {\n    nextTick(() => {\n      generateChart()\n    })\n  }\n}, { deep: true })\n\n// 组件挂载\nonMounted(() => {\n  // 计算图表高度\n  const updateHeight = () => {\n    if (previewContainer.value) {\n      const containerHeight = previewContainer.value.clientHeight\n      chartHeight.value = Math.max(300, containerHeight - 100)\n    }\n  }\n  \n  updateHeight()\n  window.addEventListener('resize', updateHeight)\n  \n  // 如果有初始数据，生成图表\n  if (hasChart.value) {\n    nextTick(() => {\n      generateChart()\n    })\n  }\n})\n\n// 组件卸载\nonUnmounted(() => {\n  if (chartInstance.value) {\n    chartInstance.value.dispose()\n  }\n  window.removeEventListener('resize', handleResize)\n})\n</script>\n\n<style scoped>\n.chart-preview-panel {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background: var(--bg-color);\n  color: var(--text-color);\n}\n\n/* 预览头部 */\n.preview-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n  background: linear-gradient(135deg, rgba(34, 197, 94, 0.05) 0%, rgba(59, 130, 246, 0.05) 100%);\n}\n\n[data-theme=\"dark\"] .preview-header {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n  background: linear-gradient(135deg, rgba(34, 197, 94, 0.1) 0%, rgba(59, 130, 246, 0.1) 100%);\n}\n\n.preview-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.preview-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  height: 20px;\n}\n\n.preview-icon svg {\n  width: 18px;\n  height: 18px;\n}\n\n.preview-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.action-btn {\n  padding: 8px;\n  background: rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.action-btn:hover:not(:disabled) {\n  background: rgba(0, 0, 0, 0.1);\n}\n\n.action-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.action-btn svg {\n  width: 16px;\n  height: 16px;\n}\n\n[data-theme=\"dark\"] .action-btn {\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n[data-theme=\"dark\"] .action-btn:hover:not(:disabled) {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n/* 预览内容 */\n.preview-content {\n  flex: 1;\n  overflow: hidden;\n  position: relative;\n}\n\n/* 生成中状态 */\n.generating-state {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n}\n\n.spinner {\n  width: 32px;\n  height: 32px;\n  border: 3px solid rgba(0, 0, 0, 0.1);\n  border-top: 3px solid #3b82f6;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n[data-theme=\"dark\"] .spinner {\n  border: 3px solid rgba(255, 255, 255, 0.1);\n  border-top: 3px solid #60a5fa;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.generating-state p {\n  margin: 0;\n  font-size: 14px;\n  color: var(--text-secondary);\n}\n\n/* 空状态 */\n.no-chart-state {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 32px;\n}\n\n.empty-state {\n  text-align: center;\n  max-width: 320px;\n}\n\n.empty-icon {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 64px;\n  height: 64px;\n  margin-bottom: 16px;\n  opacity: 0.5;\n}\n\n.empty-icon svg {\n  width: 48px;\n  height: 48px;\n}\n\n.empty-state h3 {\n  margin: 0 0 8px 0;\n  font-size: 18px;\n  color: var(--text-color);\n}\n\n.empty-state p {\n  margin: 0;\n  font-size: 14px;\n  color: var(--text-secondary);\n  line-height: 1.5;\n}\n\n/* 图表容器 */\n.chart-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n}\n\n.chart-title {\n  font-size: 18px;\n  font-weight: 600;\n  text-align: center;\n  margin-bottom: 16px;\n  color: var(--text-color);\n}\n\n.chart-display {\n  flex: 1;\n  min-height: 300px;\n  border-radius: 8px;\n  overflow: hidden;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,KAAI;AAC3E,SAASC,YAAY,QAAQ,sBAAqB;AAClD,OAAO,KAAKC,OAAO,MAAM,SAAQ;;AAEjC;;;;;;;;;;;;;;;;;;IALA;IAMA,MAAMC,KAAK,GAAGC,OAAA;;IAWd;IACA,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,gBAAgB,GAAGZ,GAAG,CAAC,IAAI;IACjC,MAAMa,YAAY,GAAGb,GAAG,CAAC,IAAI;;IAE7B;IACA,MAAMc,YAAY,GAAGd,GAAG,CAAC,KAAK;IAC9B,MAAMe,aAAa,GAAGf,GAAG,CAAC,IAAI;IAC9B,MAAMgB,WAAW,GAAGhB,GAAG,CAAC,GAAG;;IAE3B;IACA,MAAMiB,QAAQ,GAAGhB,QAAQ,CAAC,MAAM;MAC9B,OAAOO,KAAK,CAACU,SAAS,IAAIV,KAAK,CAACU,SAAS,CAACC,IAAI,IAAIX,KAAK,CAACU,SAAS,CAACE,MAAK;IACzE,CAAC;;IAED;IACA,SAASC,YAAYA,CAAA,EAAG;MACtB,IAAI,CAACJ,QAAQ,CAACK,KAAK,EAAE;MAErBR,YAAY,CAACQ,KAAK,GAAG,IAAG;;MAExB;MACAC,UAAU,CAAC,MAAM;QACfC,aAAa,CAAC;QACdV,YAAY,CAACQ,KAAK,GAAG,KAAI;QACzBZ,IAAI,CAAC,iBAAiB;MACxB,CAAC,EAAE,IAAI;IACT;;IAEA;IACA,SAASc,aAAaA,CAAA,EAAG;MACvB,IAAI,CAACX,YAAY,CAACS,KAAK,IAAI,CAACL,QAAQ,CAACK,KAAK,EAAE;;MAE5C;MACA,IAAIP,aAAa,CAACO,KAAK,EAAE;QACvBP,aAAa,CAACO,KAAK,CAACG,OAAO,CAAC;MAC9B;;MAEA;MACAV,aAAa,CAACO,KAAK,GAAGf,OAAO,CAACmB,IAAI,CAACb,YAAY,CAACS,KAAK;;MAErD;MACA,MAAMK,MAAM,GAAGC,mBAAmB,CAAC;;MAEnC;MACAb,aAAa,CAACO,KAAK,CAACO,SAAS,CAACF,MAAM,EAAE,IAAI;;MAE1C;MACAG,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEC,YAAY;IAChD;;IAEA;IACA,SAASJ,mBAAmBA,CAAA,EAAG;MAC7B,MAAM;QAAET,IAAI;QAAEC;MAAO,CAAC,GAAGZ,KAAK,CAACU,SAAQ;;MAEvC;MACA,MAAMe,UAAU,GAAG;QACjBC,KAAK,EAAE;UACLC,IAAI,EAAEf,MAAM,CAACc,KAAK,IAAI,EAAE;UACxBE,IAAI,EAAE,QAAQ;UACdC,SAAS,EAAE;YACTC,KAAK,EAAEC,YAAY,CAAC;UACtB;QACF,CAAC;QACDC,OAAO,EAAE;UACPC,OAAO,EAAEC,iBAAiB,CAACvB,IAAI,CAAC;UAChCwB,eAAe,EAAEC,oBAAoB,CAAC,CAAC;UACvCC,WAAW,EAAEC,gBAAgB,CAAC,CAAC;UAC/BT,SAAS,EAAE;YACTC,KAAK,EAAEC,YAAY,CAAC;UACtB;QACF,CAAC;QACDQ,MAAM,EAAE;UACN5B,IAAI,EAAE,QAAQ;UACd6B,MAAM,EAAE,YAAY;UACpBZ,IAAI,EAAE,QAAQ;UACda,MAAM,EAAE,EAAE;UACVZ,SAAS,EAAE;YACTC,KAAK,EAAEC,YAAY,CAAC;UACtB;QACF,CAAC;QACDW,IAAI,EAAE;UACJd,IAAI,EAAE,KAAK;UACXe,KAAK,EAAE,KAAK;UACZF,MAAM,EAAE,KAAK;UACbG,YAAY,EAAE;QAChB,CAAC;QACDd,KAAK,EAAEe,eAAe,CAACjC,MAAM,CAACkC,UAAU,IAAI,SAAS;MACvD;;MAEA;MACA,QAAQnC,IAAI;QACV,KAAK,KAAK;UACR,OAAOoC,gBAAgB,CAACtB,UAAU;QACpC,KAAK,MAAM;UACT,OAAOuB,iBAAiB,CAACvB,UAAU;QACrC,KAAK,KAAK;UACR,OAAOwB,gBAAgB,CAACxB,UAAU;QACpC,KAAK,SAAS;UACZ,OAAOyB,oBAAoB,CAACzB,UAAU;QACxC,KAAK,MAAM;UACT,OAAO0B,iBAAiB,CAAC1B,UAAU;QACrC;UACE,OAAOsB,gBAAgB,CAACtB,UAAU;MACtC;IACF;;IAEA;IACA,SAASsB,gBAAgBA,CAACtB,UAAU,EAAE;MACpC,MAAM2B,QAAQ,GAAGpD,KAAK,CAACU,SAAS,CAACE,MAAM,CAACwC,QAAO;MAC/C,MAAMC,UAAU,GAAGC,kBAAkB,CAACF,QAAQ;MAE9C,OAAO;QACL,GAAG3B,UAAU;QACb8B,KAAK,EAAE;UACL5C,IAAI,EAAE,UAAU;UAChB6C,IAAI,EAAEH,UAAU,CAACI,UAAU;UAC3BC,SAAS,EAAE;YACT5B,KAAK,EAAEC,YAAY,CAAC;UACtB,CAAC;UACD4B,QAAQ,EAAE;YACRC,SAAS,EAAE;cACT9B,KAAK,EAAE+B,YAAY,CAAC;YACtB;UACF;QACF,CAAC;QACDC,KAAK,EAAE;UACLnD,IAAI,EAAE,OAAO;UACb+C,SAAS,EAAE;YACT5B,KAAK,EAAEC,YAAY,CAAC;UACtB,CAAC;UACD4B,QAAQ,EAAE;YACRC,SAAS,EAAE;cACT9B,KAAK,EAAE+B,YAAY,CAAC;YACtB;UACF,CAAC;UACDE,SAAS,EAAE;YACTH,SAAS,EAAE;cACT9B,KAAK,EAAEkC,YAAY,CAAC;YACtB;UACF;QACF,CAAC;QACDC,MAAM,EAAE,CAAC;UACPC,IAAI,EAAEd,QAAQ,CAACU,KAAK,EAAEI,IAAI,IAAI,OAAO;UACrCvD,IAAI,EAAE,KAAK;UACX6C,IAAI,EAAEH,UAAU,CAACc,MAAM;UACvBC,SAAS,EAAE;YACTC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UAC3B;QACF,CAAC;MACH;IACF;;IAEA;IACA,SAASrB,iBAAiBA,CAACvB,UAAU,EAAE;MACrC,MAAM2B,QAAQ,GAAGpD,KAAK,CAACU,SAAS,CAACE,MAAM,CAACwC,QAAO;MAC/C,MAAMkB,UAAU,GAAGtE,KAAK,CAACU,SAAS,CAACE,MAAM,CAAC0D,UAAU,IAAI,CAAC;MACzD,MAAMjB,UAAU,GAAGC,kBAAkB,CAACF,QAAQ;MAE9C,OAAO;QACL,GAAG3B,UAAU;QACb8B,KAAK,EAAE;UACL5C,IAAI,EAAE,UAAU;UAChB6C,IAAI,EAAEH,UAAU,CAACI,UAAU;UAC3BC,SAAS,EAAE;YACT5B,KAAK,EAAEC,YAAY,CAAC;UACtB,CAAC;UACD4B,QAAQ,EAAE;YACRC,SAAS,EAAE;cACT9B,KAAK,EAAE+B,YAAY,CAAC;YACtB;UACF;QACF,CAAC;QACDC,KAAK,EAAE;UACLnD,IAAI,EAAE,OAAO;UACb+C,SAAS,EAAE;YACT5B,KAAK,EAAEC,YAAY,CAAC;UACtB,CAAC;UACD4B,QAAQ,EAAE;YACRC,SAAS,EAAE;cACT9B,KAAK,EAAE+B,YAAY,CAAC;YACtB;UACF,CAAC;UACDE,SAAS,EAAE;YACTH,SAAS,EAAE;cACT9B,KAAK,EAAEkC,YAAY,CAAC;YACtB;UACF;QACF,CAAC;QACDC,MAAM,EAAE,CAAC;UACPC,IAAI,EAAEd,QAAQ,CAACU,KAAK,EAAEI,IAAI,IAAI,OAAO;UACrCvD,IAAI,EAAE,MAAM;UACZ6C,IAAI,EAAEH,UAAU,CAACc,MAAM;UACvBI,MAAM,EAAED,UAAU,CAACC,MAAM,IAAI,KAAK;UAClCX,SAAS,EAAE;YACTjD,IAAI,EAAE2D,UAAU,CAAC3D,IAAI,IAAI,OAAO;YAChC6D,KAAK,EAAE;UACT,CAAC;UACDC,MAAM,EAAEH,UAAU,CAACI,UAAU,GAAG,QAAQ,GAAG,MAAM;UACjDC,UAAU,EAAE;QACd,CAAC;MACH;IACF;;IAEA;IACA,SAAS1B,gBAAgBA,CAACxB,UAAU,EAAE;MACpC,MAAM2B,QAAQ,GAAGpD,KAAK,CAACU,SAAS,CAACE,MAAM,CAACwC,QAAO;MAC/C,MAAMwB,SAAS,GAAG5E,KAAK,CAACU,SAAS,CAACE,MAAM,CAACgE,SAAS,IAAI,CAAC;MACvD,MAAMvB,UAAU,GAAGwB,qBAAqB,CAACzB,QAAQ;MAEjD,OAAO;QACL,GAAG3B,UAAU;QACbO,OAAO,EAAE;UACPC,OAAO,EAAE,MAAM;UACf6C,SAAS,EAAE,iBAAiB;UAC5B3C,eAAe,EAAEC,oBAAoB,CAAC,CAAC;UACvCC,WAAW,EAAEC,gBAAgB,CAAC,CAAC;UAC/BT,SAAS,EAAE;YACTC,KAAK,EAAEC,YAAY,CAAC;UACtB;QACF,CAAC;QACDkC,MAAM,EAAE,CAAC;UACPC,IAAI,EAAEd,QAAQ,CAAC2B,MAAM,EAAEb,IAAI,IAAI,UAAU;UACzCvD,IAAI,EAAE,KAAK;UACXqE,MAAM,EAAEJ,SAAS,CAACjE,IAAI,KAAK,UAAU,GACnC,CAAC,GAAGiE,SAAS,CAACK,WAAW,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,KAAK;UACpDzB,IAAI,EAAEH,UAAU;UAChB6B,QAAQ,EAAE;YACRd,SAAS,EAAE;cACTe,UAAU,EAAE,EAAE;cACdC,aAAa,EAAE,CAAC;cAChBC,WAAW,EAAE;YACf;UACF,CAAC;UACDC,KAAK,EAAE;YACLC,QAAQ,EAAEX,SAAS,CAACY,aAAa,IAAI,SAAS;YAC9C1D,KAAK,EAAEC,YAAY,CAAC,CAAC;YACrB+C,SAAS,EAAEF,SAAS,CAACa,UAAU,IAAIb,SAAS,CAACc,eAAe,GAC1D,iBAAiB,GACjBd,SAAS,CAACa,UAAU,GAAG,UAAU,GACjCb,SAAS,CAACc,eAAe,GAAG,WAAW,GAAG;UAC9C;QACF,CAAC;MACH;IACF;;IAEA;IACA,SAASxC,oBAAoBA,CAACzB,UAAU,EAAE;MACxC,MAAM2B,QAAQ,GAAGpD,KAAK,CAACU,SAAS,CAACE,MAAM,CAACwC,QAAO;MAC/C,MAAMuC,aAAa,GAAG3F,KAAK,CAACU,SAAS,CAACE,MAAM,CAAC+E,aAAa,IAAI,CAAC;MAC/D,MAAMtC,UAAU,GAAGuC,yBAAyB,CAACxC,QAAQ;MAErD,OAAO;QACL,GAAG3B,UAAU;QACb8B,KAAK,EAAE;UACL5C,IAAI,EAAE,OAAO;UACb+C,SAAS,EAAE;YACT5B,KAAK,EAAEC,YAAY,CAAC;UACtB,CAAC;UACD4B,QAAQ,EAAE;YACRC,SAAS,EAAE;cACT9B,KAAK,EAAE+B,YAAY,CAAC;YACtB;UACF,CAAC;UACDE,SAAS,EAAE;YACT8B,IAAI,EAAEF,aAAa,CAACG,QAAQ;YAC5BlC,SAAS,EAAE;cACT9B,KAAK,EAAEkC,YAAY,CAAC;YACtB;UACF;QACF,CAAC;QACDF,KAAK,EAAE;UACLnD,IAAI,EAAE,OAAO;UACb+C,SAAS,EAAE;YACT5B,KAAK,EAAEC,YAAY,CAAC;UACtB,CAAC;UACD4B,QAAQ,EAAE;YACRC,SAAS,EAAE;cACT9B,KAAK,EAAE+B,YAAY,CAAC;YACtB;UACF,CAAC;UACDE,SAAS,EAAE;YACT8B,IAAI,EAAEF,aAAa,CAACG,QAAQ;YAC5BlC,SAAS,EAAE;cACT9B,KAAK,EAAEkC,YAAY,CAAC;YACtB;UACF;QACF,CAAC;QACDC,MAAM,EAAE,CAAC;UACPC,IAAI,EAAE,aAAa;UACnBvD,IAAI,EAAE,SAAS;UACf6C,IAAI,EAAEH,UAAU;UAChBsB,UAAU,EAAEgB,aAAa,CAACI,SAAS,IAAI,CAAC;UACxCtB,MAAM,EAAEkB,aAAa,CAACK,UAAU,IAAI,QAAQ;UAC5C5B,SAAS,EAAE;YACT6B,OAAO,EAAEN,aAAa,CAACM,OAAO,IAAI;UACpC;QACF,CAAC;MACH;IACF;;IAEA;IACA,SAAS9C,iBAAiBA,CAAC1B,UAAU,EAAE;MACrC,MAAMyE,SAAS,GAAGlD,iBAAiB,CAACvB,UAAU;MAC9CyE,SAAS,CAACjC,MAAM,CAAC,CAAC,CAAC,CAACkC,SAAS,GAAG;QAC9BF,OAAO,EAAE;MACX;MACA,OAAOC,SAAQ;IACjB;;IAEA;IACA,SAAS5C,kBAAkBA,CAACF,QAAQ,EAAE;MACpC,MAAMK,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;MAC5D,MAAMU,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;MAE1C,OAAO;QAAEV,UAAU;QAAEU;MAAO;IAC9B;;IAEA;IACA,SAASU,qBAAqBA,CAACzB,QAAQ,EAAE;MACvC,OAAO,CACL;QAAEtC,KAAK,EAAE,GAAG;QAAEoD,IAAI,EAAE;MAAa,CAAC,EAClC;QAAEpD,KAAK,EAAE,GAAG;QAAEoD,IAAI,EAAE;MAAa,CAAC,EAClC;QAAEpD,KAAK,EAAE,GAAG;QAAEoD,IAAI,EAAE;MAAa,CAAC,EAClC;QAAEpD,KAAK,EAAE,GAAG;QAAEoD,IAAI,EAAE;MAAa,CAAC,EAClC;QAAEpD,KAAK,EAAE,IAAI;QAAEoD,IAAI,EAAE;MAAa,EACpC;IACF;;IAEA;IACA,SAAS0B,yBAAyBA,CAACxC,QAAQ,EAAE;MAC3C,MAAMI,IAAI,GAAG,EAAC;MACd,KAAK,IAAI4C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3B5C,IAAI,CAAC6C,IAAI,CAAC,CACRC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EACnBD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAE,CACnB;MACH;MACA,OAAO/C,IAAG;IACZ;;IAEA;IACA,SAAStB,iBAAiBA,CAACvB,IAAI,EAAE;MAC/B,OAAOA,IAAI,KAAK,KAAK,GAAG,MAAM,GAAG,MAAK;IACxC;;IAEA;IACA,SAASkC,eAAeA,CAAC2D,KAAK,EAAE;MAC9B,MAAMC,QAAQ,GAAG;QACf,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;QAC9G,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;QAC/D,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;QAChE,QAAQ,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;QACjE,QAAQ,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;MAClE;MACA,OAAOA,QAAQ,CAACD,KAAK,CAAC,IAAIC,QAAQ,CAACC,OAAM;IAC3C;;IAEA;IACA,SAASC,eAAeA,CAAA,EAAG;MACzB,OAAOC,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,CAAC,KAAK,MAAM,GAAG,MAAM,GAAG,OAAM;IACzF;;IAEA;IACA,SAAS/E,YAAYA,CAAA,EAAG;MACtB,OAAO4E,eAAe,CAAC,CAAC,KAAK,MAAM,GAAG,SAAS,GAAG,SAAQ;IAC5D;;IAEA;IACA,SAAS9C,YAAYA,CAAA,EAAG;MACtB,OAAO8C,eAAe,CAAC,CAAC,KAAK,MAAM,GAAG,SAAS,GAAG,SAAQ;IAC5D;;IAEA;IACA,SAAS3C,YAAYA,CAAA,EAAG;MACtB,OAAO2C,eAAe,CAAC,CAAC,KAAK,MAAM,GAAG,SAAS,GAAG,SAAQ;IAC5D;;IAEA;IACA,SAASvE,oBAAoBA,CAAA,EAAG;MAC9B,OAAOuE,eAAe,CAAC,CAAC,KAAK,MAAM,GAAG,SAAS,GAAG,SAAQ;IAC5D;;IAEA;IACA,SAASrE,gBAAgBA,CAAA,EAAG;MAC1B,OAAOqE,eAAe,CAAC,CAAC,KAAK,MAAM,GAAG,SAAS,GAAG,SAAQ;IAC5D;;IAEA;IACA,SAASI,aAAaA,CAAA,EAAG;MACvB,IAAI,CAACxG,aAAa,CAACO,KAAK,EAAE;MAE1B,MAAMkG,GAAG,GAAGzG,aAAa,CAACO,KAAK,CAACmG,UAAU,CAAC;QACzCC,UAAU,EAAE,CAAC;QACb/E,eAAe,EAAEwE,eAAe,CAAC,CAAC,KAAK,MAAM,GAAG,SAAS,GAAG;MAC9D,CAAC;MAED,MAAMQ,IAAI,GAAGP,QAAQ,CAACQ,aAAa,CAAC,GAAG;MACvCD,IAAI,CAACE,QAAQ,GAAG,SAASC,IAAI,CAACC,GAAG,CAAC,CAAC,MAAK;MACxCJ,IAAI,CAACK,IAAI,GAAGR,GAAE;MACdG,IAAI,CAACM,KAAK,CAAC;MAEXvH,IAAI,CAAC,kBAAkB,EAAE8G,GAAG;IAC9B;;IAEA;IACA,SAASxF,YAAYA,CAAA,EAAG;MACtB,IAAIjB,aAAa,CAACO,KAAK,EAAE;QACvBP,aAAa,CAACO,KAAK,CAAC4G,MAAM,CAAC;MAC7B;IACF;;IAEA;IACAhI,KAAK,CAAC,MAAMM,KAAK,CAACU,SAAS,EAAGiH,OAAO,IAAK;MACxC,IAAIA,OAAO,IAAItH,YAAY,CAACS,KAAK,EAAE;QACjCjB,QAAQ,CAAC,MAAM;UACbmB,aAAa,CAAC;QAChB,CAAC;MACH;IACF,CAAC,EAAE;MAAE4G,IAAI,EAAE;IAAK,CAAC;;IAEjB;IACAjI,SAAS,CAAC,MAAM;MACd;MACA,MAAMkI,YAAY,GAAGA,CAAA,KAAM;QACzB,IAAIzH,gBAAgB,CAACU,KAAK,EAAE;UAC1B,MAAMgH,eAAe,GAAG1H,gBAAgB,CAACU,KAAK,CAACiH,YAAW;UAC1DvH,WAAW,CAACM,KAAK,GAAGwF,IAAI,CAAC0B,GAAG,CAAC,GAAG,EAAEF,eAAe,GAAG,GAAG;QACzD;MACF;MAEAD,YAAY,CAAC;MACbvG,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEsG,YAAY;;MAE9C;MACA,IAAIpH,QAAQ,CAACK,KAAK,EAAE;QAClBjB,QAAQ,CAAC,MAAM;UACbmB,aAAa,CAAC;QAChB,CAAC;MACH;IACF,CAAC;;IAED;IACApB,WAAW,CAAC,MAAM;MAChB,IAAIW,aAAa,CAACO,KAAK,EAAE;QACvBP,aAAa,CAACO,KAAK,CAACG,OAAO,CAAC;MAC9B;MACAK,MAAM,CAAC2G,mBAAmB,CAAC,QAAQ,EAAEzG,YAAY;IACnD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}