{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Teleport as _Teleport, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"block-toggle-group\",\n  style: {\n    \"position\": \"relative\"\n  }\n};\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"block-toggle\", {\n      'checked': $props.modelValue\n    }])\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"block-toggle-slider\", {\n      'right': !$props.modelValue\n    }])\n  }, null, 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"block-toggle-option left\", {\n      active: $props.modelValue\n    }]),\n    onMouseover: _cache[0] || (_cache[0] = $event => $setup.showToggleTooltip($event, 'Auto')),\n    onMouseout: $setup.hideToggleTooltip,\n    onFocus: _cache[1] || (_cache[1] = $event => $setup.showToggleTooltip($event, 'Auto')),\n    onBlur: $setup.hideToggleTooltip,\n    onClick: _cache[2] || (_cache[2] = () => $setup.emit('update:modelValue', true)),\n    tabindex: \"0\"\n  }, [_createElementVNode(\"span\", {\n    innerHTML: $setup.getThemeIcon('StarwarRobot')\n  }, null, 8 /* PROPS */, _hoisted_2)], 34 /* CLASS, NEED_HYDRATION */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"block-toggle-option right\", {\n      active: !$props.modelValue\n    }]),\n    onMouseover: _cache[3] || (_cache[3] = $event => $setup.showToggleTooltip($event, 'Manual')),\n    onMouseout: $setup.hideToggleTooltip,\n    onFocus: _cache[4] || (_cache[4] = $event => $setup.showToggleTooltip($event, 'Manual')),\n    onBlur: $setup.hideToggleTooltip,\n    onClick: _cache[5] || (_cache[5] = () => $setup.emit('update:modelValue', false)),\n    tabindex: \"0\"\n  }, [_createElementVNode(\"span\", {\n    innerHTML: $setup.getThemeIcon('eye')\n  }, null, 8 /* PROPS */, _hoisted_3)], 34 /* CLASS, NEED_HYDRATION */)], 2 /* CLASS */), (_openBlock(), _createBlock(_Teleport, {\n    to: \"body\"\n  }, [$setup.toggleTooltip.visible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"toggle-tooltip\",\n    style: _normalizeStyle($setup.toggleTooltip.style)\n  }, _toDisplayString($setup.toggleTooltip.text), 5 /* TEXT, STYLE */)) : _createCommentVNode(\"v-if\", true)]))]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","$props","modelValue","active","onMouseover","_cache","$event","$setup","showToggleTooltip","onMouseout","hideToggleTooltip","onFocus","onBlur","onClick","emit","tabindex","innerHTML","getThemeIcon","_hoisted_2","_hoisted_3","_createBlock","_Teleport","to","toggleTooltip","visible","key","_normalizeStyle","text","_createCommentVNode"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\Common\\AutoRenderToggle.vue"],"sourcesContent":["<template>\n<div class=\"block-toggle-group\" style=\"position: relative;\">\n    <div class=\"block-toggle\" :class=\"{ 'checked': modelValue }\">\n        <div class=\"block-toggle-slider\" :class=\"{ 'right': !modelValue }\"></div>\n        <div class=\"block-toggle-option left\" :class=\"{ active: modelValue }\"\n            @mouseover=\"showToggleTooltip($event, 'Auto')\" @mouseout=\"hideToggleTooltip\"\n            @focus=\"showToggleTooltip($event, 'Auto')\" @blur=\"hideToggleTooltip\"\n            @click=\"() => emit('update:modelValue', true)\"\n            tabindex=\"0\"\n        >\n            <span v-html=\"getThemeIcon('StarwarRobot')\"></span>\n        </div>\n        <div class=\"block-toggle-option right\" :class=\"{ active: !modelValue }\"\n            @mouseover=\"showToggleTooltip($event, 'Manual')\" @mouseout=\"hideToggleTooltip\"\n            @focus=\"showToggleTooltip($event, 'Manual')\" @blur=\"hideToggleTooltip\"\n            @click=\"() => emit('update:modelValue', false)\"\n            tabindex=\"0\"\n        >\n            <span v-html=\"getThemeIcon('eye')\"></span>\n        </div>\n    </div>\n    <teleport to=\"body\">\n        <div v-if=\"toggleTooltip.visible\" class=\"toggle-tooltip\" :style=\"toggleTooltip.style\">\n            {{ toggleTooltip.text }}\n        </div>\n    </teleport>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, nextTick, defineProps, defineEmits } from 'vue'\nimport { getThemeIcon } from '@/assets/JS/SVG/icons.js'\n\nconst props = defineProps({\n    modelValue: Boolean\n})\nconst emit = defineEmits(['update:modelValue'])\n\n\n\nconst toggleTooltip = ref({ visible: false, text: '', style: {} })\nlet tooltipPositioned = false\nfunction showToggleTooltip (event, type) {\n    toggleTooltip.value.text = type === 'Auto' ? 'Real-time Render' : 'Manual Render'\n    if (!tooltipPositioned) {\n        toggleTooltip.value.visible = true\n        nextTick(() => {\n            let el = event.currentTarget || event.target\n            if (el && el.classList && !el.classList.contains('block-toggle-option')) {\n                el = el.closest('.block-toggle-option')\n            }\n            if (el) {\n                const rect = el.getBoundingClientRect()\n                toggleTooltip.value.style = {\n                    left: `${rect.left + rect.width / 2 - 50 + window.scrollX}px`,\n                    top: `${rect.bottom + 6 + window.scrollY}px`,\n                    position: 'absolute',\n                    zIndex: 2000,\n                    minWidth: '100px',\n                    textAlign: 'center'\n                }\n                tooltipPositioned = true\n            }\n        })\n    } else {\n        toggleTooltip.value.visible = true\n    }\n}\n// 只保留一份 hideToggleTooltip，防止重复声明\nfunction hideToggleTooltip () {\n    toggleTooltip.value.visible = false\n    tooltipPositioned = false\n}\n</script>\n\n<style scoped>\n\n.block-toggle-group {\n    display: flex;\n    align-items: center;\n    margin-right: 18px;\n    position: relative;\n}\n.block-toggle {\n    position: relative;\n    width: 74px;\n    height: 26px;\n    background: #f5f5f5;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    box-shadow: 0 1px 4px rgba(0,0,0,0.04);\n    transition: background 0.2s;\n    user-select: none;\n    border: 1px solid #e0e0e0;\n}\n.block-toggle-option {\n    flex: 1;\n    text-align: center;\n    z-index: 2;\n    font-size: 0.93em;\n    font-weight: 500;\n    color: #888;\n    transition: color 0.2s, font-weight 0.2s;\n    padding: 0 1px;\n    line-height: 26px;\n    border-radius: 6px;\n    position: relative;\n    letter-spacing: 0.01em;\n}\n.block-toggle-option.active {\n    color: #222;\n    font-weight: 700;\n    background: #e0e0e0;\n}\n.block-toggle-slider {\n    position: absolute;\n    top: 1.5px;\n    left: 2px;\n    width: 32px;\n    height: 21px;\n    background: #e0e0e0;\n    border-radius: 5px;\n    box-shadow: 0 1px 4px rgba(0,0,0,0.06);\n    transition: left 0.18s cubic-bezier(.4,2,.6,1), background 0.2s;\n    z-index: 1;\n}\n.block-toggle-slider.right {\n    left: 40px;\n    background: #e0e0e0;\n}\n.toggle-tooltip {\n    position: fixed;\n    background: #222;\n    color: #fff;\n    border-radius: 5px;\n    padding: 3px 6px;\n    font-size: 0.55vh;\n    pointer-events: none;\n    box-shadow: 0 2px 8px rgba(0,0,0,0.13);\n    white-space: nowrap;\n    opacity: 0.97;\n    transition: opacity 0.18s;\n}\n\n/* 深色模式适配 */\n[data-theme=\"dark\"] .block-toggle {\n    background: #23272e;\n    border-color: #444c5a;\n    box-shadow: 0 1px 4px rgba(0,0,0,0.18);\n}\n[data-theme=\"dark\"] .block-toggle-option {\n    color: #aaa;\n}\n[data-theme=\"dark\"] .block-toggle-option.active {\n    color: #fff;\n    background: #3a4251;\n}\n[data-theme=\"dark\"] .block-toggle-slider,\n[data-theme=\"dark\"] .block-toggle-slider.right {\n    background: #3a4251;\n}\n[data-theme=\"dark\"] .toggle-tooltip {\n    background: #222b3a;\n    color: #e0e6f0;\n    box-shadow: 0 2px 8px rgba(0,0,0,0.33);\n    font-size: 12px;\n}\n</style>\n"],"mappings":";;EACKA,KAAK,EAAC,oBAAoB;EAACC,KAA2B,EAA3B;IAAA;EAAA;;mBADhC;mBAAA;;uBACAC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBFC,mBAAA,CAkBM;IAlBDJ,KAAK,EAFdK,eAAA,EAEe,cAAc;MAAA,WAAsBC,MAAA,CAAAC;IAAU;MACrDH,mBAAA,CAAyE;IAApEJ,KAAK,EAHlBK,eAAA,EAGmB,qBAAqB;MAAA,UAAqBC,MAAA,CAAAC;IAAU;2BAC/DH,mBAAA,CAOM;IAPDJ,KAAK,EAJlBK,eAAA,EAImB,0BAA0B;MAAAG,MAAA,EAAmBF,MAAA,CAAAC;IAAU;IAC7DE,WAAS,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,iBAAiB,CAACF,MAAM;IAAYG,UAAQ,EAAEF,MAAA,CAAAG,iBAAiB;IAC1EC,OAAK,EAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,iBAAiB,CAACF,MAAM;IAAYM,MAAI,EAAEL,MAAA,CAAAG,iBAAiB;IAClEG,OAAK,EAAAR,MAAA,QAAAA,MAAA,YAAQE,MAAA,CAAAO,IAAI;IAClBC,QAAQ,EAAC;MAEThB,mBAAA,CAAmD;IAA7CiB,SAAqC,EAA7BT,MAAA,CAAAU,YAAY;0BAVtCC,UAAA,E,mCAYQnB,mBAAA,CAOM;IAPDJ,KAAK,EAZlBK,eAAA,EAYmB,2BAA2B;MAAAG,MAAA,GAAoBF,MAAA,CAAAC;IAAU;IAC/DE,WAAS,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,iBAAiB,CAACF,MAAM;IAAcG,UAAQ,EAAEF,MAAA,CAAAG,iBAAiB;IAC5EC,OAAK,EAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,iBAAiB,CAACF,MAAM;IAAcM,MAAI,EAAEL,MAAA,CAAAG,iBAAiB;IACpEG,OAAK,EAAAR,MAAA,QAAAA,MAAA,YAAQE,MAAA,CAAAO,IAAI;IAClBC,QAAQ,EAAC;MAEThB,mBAAA,CAA0C;IAApCiB,SAA4B,EAApBT,MAAA,CAAAU,YAAY;0BAlBtCE,UAAA,E,mEAqBIC,YAAA,CAIWC,SAAA;IAJDC,EAAE,EAAC;EAAM,IACJf,MAAA,CAAAgB,aAAa,CAACC,OAAO,I,cAAhC3B,mBAAA,CAEM;IAxBd4B,GAAA;IAsB0C9B,KAAK,EAAC,gBAAgB;IAAEC,KAAK,EAtBvE8B,eAAA,CAsByEnB,MAAA,CAAAgB,aAAa,CAAC3B,KAAK;sBAC7EW,MAAA,CAAAgB,aAAa,CAACI,IAAI,2BAvBjCC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}