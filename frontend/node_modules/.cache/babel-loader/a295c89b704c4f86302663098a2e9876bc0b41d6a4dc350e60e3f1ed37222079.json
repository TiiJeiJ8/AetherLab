{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-display\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"empty-state\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  ref: \"chartRef\",\n  class: \"chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$setup.hasSeries ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[0] || (_cache[0] = [_createStaticVNode(\"<div class=\\\"empty-icon\\\" data-v-25b55534>📊</div><h3 data-v-25b55534>Fast Start</h3><p data-v-25b55534>开始创建你的第一个图表</p><div class=\\\"quick-start-steps\\\" data-v-25b55534><div class=\\\"step\\\" data-v-25b55534><span class=\\\"step-number\\\" data-v-25b55534>1</span><span class=\\\"step-text\\\" data-v-25b55534>上传数据文件</span></div><div class=\\\"step\\\" data-v-25b55534><span class=\\\"step-number\\\" data-v-25b55534>2</span><span class=\\\"step-text\\\" data-v-25b55534>选择图表类型</span></div><div class=\\\"step\\\" data-v-25b55534><span class=\\\"step-number\\\" data-v-25b55534>3</span><span class=\\\"step-text\\\" data-v-25b55534>拖拽列到配置面板</span></div></div>\", 4)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */))]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","$setup","hasSeries","_hoisted_2","_cache","_createStaticVNode","_hoisted_3"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\newArchitecture\\frontend_vue_design\\src\\components\\ChartDisplay.vue"],"sourcesContent":["<template>\n<div class=\"chart-display\">\n    <div v-if=\"!hasSeries\" class=\"empty-state\">\n        <div class=\"empty-icon\">📊</div>\n        <h3>Fast Start</h3>\n        <p>开始创建你的第一个图表</p>\n        <div class=\"quick-start-steps\">\n            <div class=\"step\">\n                <span class=\"step-number\">1</span>\n                <span class=\"step-text\">上传数据文件</span>\n            </div>\n            <div class=\"step\">\n                <span class=\"step-number\">2</span>\n                <span class=\"step-text\">选择图表类型</span>\n            </div>\n            <div class=\"step\">\n                <span class=\"step-number\">3</span>\n                <span class=\"step-text\">拖拽列到配置面板</span>\n            </div>\n        </div>\n    </div>\n    <div v-else ref=\"chartRef\" class=\"chart-container\"></div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, watch, onMounted, onBeforeUnmount, computed } from 'vue'\nimport * as echarts from 'echarts'\n\nconst props = defineProps({\n    option: { type: Object, required: true }\n})\n\nconst chartRef = ref(null)\nlet chartInstance = null\n\nconst hasSeries = computed(() => {\n    return props.option && Array.isArray(props.option.series) && props.option.series.length > 0\n})\n\nfunction renderChart() {\n    if (!hasSeries.value) return\n    if (!chartInstance && chartRef.value) {\n        chartInstance = echarts.init(chartRef.value)\n    }\n    if (chartInstance && props.option) {\n        chartInstance.setOption(props.option, true)\n    }\n}\n\nwatch(() => props.option, renderChart, { deep: true })\nonMounted(renderChart)\nonBeforeUnmount(() => {\n    if (chartInstance) chartInstance.dispose()\n})\n</script>\n\n<style scoped>\n.chart-display {\n    width: 100%;\n    height: 100%;\n    min-height: clamp(300px, 60vh, 600px); /* 响应式高度 */\n    background: var(--bg-color, #fff);\n    border-radius: clamp(8px, 2vw, 12px);\n    box-shadow: 0 0 1px var(--text-color);\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: clamp(10px, 2vw, 20px);\n}\n\n.chart-container {\n    width: 100% !important; /* 覆盖 inline style */\n    height: 100% !important;\n    min-height: inherit;\n}\n\n.empty-state {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    text-align: center;\n    padding: 40px;\n    color: var(--text-color-secondary);\n}\n\n.empty-icon {\n    font-size: 4rem;\n    margin-bottom: 16px;\n    opacity: 0.6;\n}\n\n.empty-state h3 {\n    margin: 0 0 8px 0;\n    font-size: 1.5rem;\n    color: var(--text-color);\n    font-weight: 600;\n}\n\n.empty-state p {\n    margin: 0 0 24px 0;\n    font-size: 1rem;\n    color: var(--text-color-secondary);\n}\n\n.quick-start-steps {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    align-items: flex-start;\n}\n\n.step {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    padding: 8px 16px;\n    background: var(--bg-color-secondary);\n    border-radius: 8px;\n    transition: all 0.3s ease;\n}\n\n.step:hover {\n    background: var(--primary-color);\n    color: white;\n    transform: translateX(4px);\n}\n\n.step-number {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 24px;\n    height: 24px;\n    background: var(--primary-color);\n    color: white;\n    border-radius: 50%;\n    font-size: 12px;\n    font-weight: 600;\n    flex-shrink: 0;\n}\n\n.step:hover .step-number {\n    background: white;\n    color: var(--primary-color);\n}\n\n.step-text {\n    font-size: 14px;\n    font-weight: 500;\n}\n\n/* 小屏幕适配 */\n@media (max-width: 767px) {\n    .chart-display {\n        height: 100%;      /* 填充父容器 */\n        padding: 8px;\n        border-radius: 8px;\n    }\n\n    .empty-tip {\n        font-size: 0.9em;\n        padding: 10px;\n    }\n}\n</style>\n"],"mappings":";;EACKA,KAAK,EAAC;AAAe;;EAD1BC,GAAA;EAE2BD,KAAK,EAAC;;;EAFjCC,GAAA;EAqBgBC,GAAG,EAAC,UAAU;EAACF,KAAK,EAAC;;;uBApBrCG,mBAAA,CAqBM,OArBNC,UAqBM,G,CApBUC,MAAA,CAAAC,SAAS,I,cAArBH,mBAAA,CAkBM,OAlBNI,UAkBM,EAAAC,MAAA,QAAAA,MAAA,OApBVC,kBAAA,unB,qBAqBIN,mBAAA,CAAyD,OAAzDO,UAAyD,+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}