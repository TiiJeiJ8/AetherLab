{"ast":null,"code":"import { ref, watch } from 'vue';\nimport ChartFilterConfig from './ChartFilterConfig.vue';\nexport default {\n  __name: 'ChartFilterConfig',\n  props: {\n    filterConfig: Array,\n    modelValue: Object\n  },\n  emits: ['update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* no-undef */\n    /* eslint-disable */\n    const props = __props;\n    const emit = __emit;\n\n    // 初始化 localConfig，支持 filter 结构\n    const localConfig = ref({\n      ...props.modelValue\n    });\n    const isCollapsed = ref(false);\n    watch(() => props.modelValue, val => {\n      localConfig.value = {\n        ...val\n      };\n    });\n    function updateField(key, value) {\n      localConfig.value[key] = value;\n      emit('update:modelValue', {\n        ...localConfig.value\n      });\n    }\n\n    // 监听 localConfig 变化，自动同步到父组件\n    watch(localConfig, val => {\n      emit('update:modelValue', {\n        ...val\n      });\n    }, {\n      deep: true\n    });\n    function toggleCollapse() {\n      isCollapsed.value = !isCollapsed.value;\n    }\n    const __returned__ = {\n      props,\n      emit,\n      localConfig,\n      isCollapsed,\n      updateField,\n      toggleCollapse,\n      ref,\n      watch,\n      ChartFilterConfig\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","ChartFilterConfig","props","__props","emit","__emit","localConfig","modelValue","isCollapsed","val","value","updateField","key","deep","toggleCollapse"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/Chart/ChartFilterConfig.vue"],"sourcesContent":["<template>\n<div class=\"filter-section\">\n    <div class=\"section-header filter-header\" @click=\"toggleCollapse\">\n        <h4>Data Filtering</h4>\n        <span class=\"collapse-icon\" :class=\"{ collapsed: isCollapsed }\">&#9660;</span>\n    </div>\n    <transition name=\"collapse\">\n        <div v-show=\"!isCollapsed\" class=\"filter-content\">\n            <div v-for=\"item in filterConfig\" :key=\"item.key\" class=\"filter-item\">\n                <label>{{ item.label }}</label>\n                <!-- ECharts 5 filter 语法全面支持：\n                     支持 type: 'filter', 'not', 'and', 'or', 'expression'，可嵌套多层 -->\n                <template v-if=\"item.type === 'filter'\">\n                  <div class=\"filter-echarts-row\">\n                    <span>字段：</span>\n                    <select v-model=\"localConfig[item.key].dimension\">\n                      <option v-for=\"opt in item.dimensions || []\" :key=\"opt\" :value=\"opt\">{{ opt }}</option>\n                    </select>\n                    <span>条件：</span>\n                    <select v-model=\"localConfig[item.key].operator\">\n                      <option value=\"==\">=</option>\n                      <option value=\">\">&gt;</option>\n                      <option value=\"<\">&lt;</option>\n                      <option value=\">=\">&ge;</option>\n                      <option value=\"<=\">&le;</option>\n                      <option value=\"!=\">≠</option>\n                      <option value=\"in\">in</option>\n                      <option value=\"not in\">not in</option>\n                      <option value=\"contains\">contains</option>\n                      <option value=\"!contains\">!contains</option>\n                    </select>\n                    <span>值：</span>\n                    <input v-model=\"localConfig[item.key].value\" style=\"width: 60px;\" :placeholder=\"localConfig[item.key].operator==='in'||localConfig[item.key].operator==='not in' ? '逗号分隔' : ''\" />\n                  </div>\n                </template>\n                <template v-else-if=\"item.type === 'expression'\">\n                  <div class=\"filter-echarts-row\">\n                    <span>表达式：</span>\n                    <input v-model=\"localConfig[item.key].expr\" style=\"width: 180px;\" placeholder=\"如: [dim] > 10 && [dim2] < 5\" />\n                  </div>\n                </template>\n                <template v-else-if=\"item.type === 'not'\">\n                  <div class=\"filter-echarts-row\">\n                    <span>非条件：</span>\n                    <ChartFilterConfig\n                      :filterConfig=\"item.children\"\n                      v-model=\"localConfig[item.key].children\"\n                    />\n                  </div>\n                </template>\n                <template v-else-if=\"item.type === 'and' || item.type === 'or'\">\n                  <div class=\"filter-echarts-row\">\n                    <span>{{ item.type === 'and' ? '且' : '或' }}条件组：</span>\n                    <div style=\"margin-left: 16px;\">\n                      <ChartFilterConfig\n                        v-for=\"(child, idx) in item.children\"\n                        :key=\"idx\"\n                        :filterConfig=\"[child]\"\n                        v-model=\"localConfig[item.key].children[idx]\"\n                      />\n                    </div>\n                  </div>\n                </template>\n                <!-- 兼容旧select类型 -->\n                <select v-else-if=\"item.type === 'select'\"\n                :value=\"localConfig[item.key]\"\n                @change=\"updateField(item.key, $event.target.value)\">\n                <option v-for=\"opt in item.options\" :key=\"opt\" :value=\"opt\">{{ opt }}</option>\n                </select>\n            </div>\n        </div>\n    </transition>\n</div>\n</template>\n\n<script setup>\n/* no-undef */\n/* eslint-disable */\nimport { ref, watch } from 'vue'\nimport ChartFilterConfig from './ChartFilterConfig.vue'\nconst props = defineProps({\n    filterConfig: Array,\n    modelValue: Object\n})\nconst emit = defineEmits(['update:modelValue'])\n\n// 初始化 localConfig，支持 filter 结构\nconst localConfig = ref({ ...props.modelValue })\nconst isCollapsed = ref(false)\n\nwatch(() => props.modelValue, (val) => {\n    localConfig.value = { ...val }\n})\n\nfunction updateField(key, value) {\n    localConfig.value[key] = value\n    emit('update:modelValue', { ...localConfig.value })\n}\n\n// 监听 localConfig 变化，自动同步到父组件\nwatch(localConfig, (val) => {\n    emit('update:modelValue', { ...val })\n}, { deep: true })\n\nfunction toggleCollapse() {\n    isCollapsed.value = !isCollapsed.value\n}\n</script>\n\n<style scoped>\n.filter-section {\n    margin-bottom: 16px;\n    border-radius: 8px;\n    background: var(--bg-secondary);\n    box-shadow: 0 1px 2px rgba(0,0,0,0.03);\n}\n.filter-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    cursor: pointer;\n    padding: 8px 12px;\n    user-select: none;\n}\n.collapse-icon {\n    font-size: 16px;\n    margin-left: 8px;\n    transition: transform 0.2s;\n}\n.collapse-icon.collapsed {\n    transform: rotate(-90deg);\n}\n.filter-content {\n    padding: 8px 16px 12px 16px;\n}\n.filter-item {\n    margin-bottom: 12px;\n}\n.collapse-enter-active, .collapse-leave-active {\n    transition: max-height 0.25s cubic-bezier(.4,0,.2,1), opacity 0.2s;\n}\n.collapse-enter-from, .collapse-leave-to {\n    max-height: 0;\n    opacity: 0;\n    overflow: hidden;\n}\n.collapse-enter-to, .collapse-leave-from {\n    max-height: 300px;\n    opacity: 1;\n}\n</style>\n"],"mappings":"AA8EA,SAASA,GAAG,EAAEC,KAAK,QAAQ,KAAI;AAC/B,OAAOC,iBAAiB,MAAM,yBAAwB;;;;;;;;;;;;;;IAHtD;IACA;IAGA,MAAMC,KAAK,GAAGC,OAAA;IAId,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,WAAW,GAAGP,GAAG,CAAC;MAAE,GAAGG,KAAK,CAACK;IAAW,CAAC;IAC/C,MAAMC,WAAW,GAAGT,GAAG,CAAC,KAAK;IAE7BC,KAAK,CAAC,MAAME,KAAK,CAACK,UAAU,EAAGE,GAAG,IAAK;MACnCH,WAAW,CAACI,KAAK,GAAG;QAAE,GAAGD;MAAI;IACjC,CAAC;IAED,SAASE,WAAWA,CAACC,GAAG,EAAEF,KAAK,EAAE;MAC7BJ,WAAW,CAACI,KAAK,CAACE,GAAG,CAAC,GAAGF,KAAI;MAC7BN,IAAI,CAAC,mBAAmB,EAAE;QAAE,GAAGE,WAAW,CAACI;MAAM,CAAC;IACtD;;IAEA;IACAV,KAAK,CAACM,WAAW,EAAGG,GAAG,IAAK;MACxBL,IAAI,CAAC,mBAAmB,EAAE;QAAE,GAAGK;MAAI,CAAC;IACxC,CAAC,EAAE;MAAEI,IAAI,EAAE;IAAK,CAAC;IAEjB,SAASC,cAAcA,CAAA,EAAG;MACtBN,WAAW,CAACE,KAAK,GAAG,CAACF,WAAW,CAACE,KAAI;IACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}