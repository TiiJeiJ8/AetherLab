{"ast":null,"code":"import { computed } from 'vue';\nexport default {\n  __name: 'ConfigItem',\n  props: {\n    type: {\n      type: String,\n      required: true,\n      validator: value => ['text', 'number', 'range', 'select', 'multiselect', 'checkbox', 'color', 'toggle'].includes(value)\n    },\n    label: {\n      type: String,\n      required: true\n    },\n    modelValue: {\n      type: [String, Number, Boolean, Array],\n      default: null\n    },\n    options: {\n      type: Array,\n      default: () => []\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n    step: {\n      type: Number,\n      default: 1\n    },\n    unit: {\n      type: String,\n      default: ''\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    help: {\n      type: String,\n      default: ''\n    },\n    fieldName: {\n      type: String,\n      default: ''\n    }\n  },\n  emits: ['update:modelValue', 'change'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 生成唯一的字段ID\n    const fieldId = computed(() => {\n      return `config-${props.fieldName || Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    });\n    function handleInput(event) {\n      let value = event.target.value;\n\n      // 处理不同类型的值转换\n      switch (props.type) {\n        case 'number':\n        case 'range':\n          value = Number(value);\n          break;\n        case 'checkbox':\n        case 'toggle':\n          value = event.target.checked;\n          break;\n        case 'multiselect':\n          value = Array.from(event.target.selectedOptions, option => option.value);\n          break;\n      }\n      emit('update:modelValue', value);\n      emit('change', value);\n    }\n    const __returned__ = {\n      props,\n      emit,\n      fieldId,\n      handleInput,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","props","__props","emit","__emit","fieldId","fieldName","Date","now","Math","random","toString","substr","handleInput","event","value","target","type","Number","checked","Array","from","selectedOptions","option"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/ConfigItem.vue"],"sourcesContent":["<template>\n  <div \n    class=\"config-item\" \n    :class=\"{ 'config-item-disabled': disabled }\"\n  >\n    <label :for=\"fieldId\" class=\"config-label\">\n      {{ label }}\n      <span v-if=\"required\" class=\"required-star\">*</span>\n    </label>\n\n    <!-- 文本输入 -->\n    <input \n      v-if=\"type === 'text'\" \n      :id=\"fieldId\"\n      type=\"text\" \n      :value=\"modelValue\" \n      @input=\"handleInput\"\n      :placeholder=\"placeholder\"\n      :disabled=\"disabled\"\n      class=\"config-input\"\n    >\n\n    <!-- 数字输入 -->\n    <input \n      v-else-if=\"type === 'number'\" \n      :id=\"fieldId\"\n      type=\"number\" \n      :value=\"modelValue\" \n      @input=\"handleInput\"\n      :min=\"min\"\n      :max=\"max\"\n      :step=\"step\"\n      :disabled=\"disabled\"\n      class=\"config-input\"\n    >\n\n    <!-- 范围滑块 -->\n    <div v-else-if=\"type === 'range'\" class=\"range-input-container\">\n      <input \n        :id=\"fieldId\"\n        type=\"range\" \n        :value=\"modelValue\" \n        @input=\"handleInput\"\n        :min=\"min\"\n        :max=\"max\"\n        :step=\"step\"\n        :disabled=\"disabled\"\n        class=\"config-range\"\n      >\n      <span class=\"range-value\">{{ modelValue }}{{ unit || '' }}</span>\n    </div>\n\n    <!-- 下拉选择 -->\n    <select \n      v-else-if=\"type === 'select'\" \n      :id=\"fieldId\"\n      :value=\"modelValue\"\n      @change=\"handleInput\"\n      :disabled=\"disabled\"\n      class=\"config-select\"\n    >\n      <option \n        v-for=\"option in options\" \n        :key=\"option.value\" \n        :value=\"option.value\"\n      >\n        {{ option.label }}\n      </option>\n    </select>\n\n    <!-- 多选下拉 -->\n    <select \n      v-else-if=\"type === 'multiselect'\" \n      :id=\"fieldId\"\n      :value=\"modelValue\"\n      @change=\"handleInput\"\n      :disabled=\"disabled\"\n      multiple\n      class=\"config-select config-multiselect\"\n    >\n      <option \n        v-for=\"option in options\" \n        :key=\"option.value\" \n        :value=\"option.value\"\n      >\n        {{ option.label }}\n      </option>\n    </select>\n\n    <!-- 复选框 -->\n    <input \n      v-else-if=\"type === 'checkbox'\" \n      :id=\"fieldId\"\n      type=\"checkbox\" \n      :checked=\"modelValue\"\n      @change=\"handleInput\"\n      :disabled=\"disabled\"\n      class=\"config-checkbox\"\n    >\n\n    <!-- 颜色选择器 -->\n    <div v-else-if=\"type === 'color'\" class=\"color-input-container\">\n      <input \n        :id=\"fieldId\"\n        type=\"color\" \n        :value=\"modelValue\"\n        @input=\"handleInput\"\n        :disabled=\"disabled\"\n        class=\"config-color\"\n      >\n      <input \n        type=\"text\" \n        :value=\"modelValue\"\n        @input=\"handleInput\"\n        :placeholder=\"placeholder || '#000000'\"\n        :disabled=\"disabled\"\n        class=\"config-color-text\"\n      >\n    </div>\n\n    <!-- 切换开关 -->\n    <div v-else-if=\"type === 'toggle'\" class=\"toggle-container\">\n      <label class=\"toggle-switch\" :for=\"fieldId\">\n        <input \n          :id=\"fieldId\"\n          type=\"checkbox\" \n          :checked=\"modelValue\"\n          @change=\"handleInput\"\n          :disabled=\"disabled\"\n        >\n        <span class=\"toggle-slider\"></span>\n      </label>\n    </div>\n\n    <!-- 帮助文本 -->\n    <div v-if=\"help\" class=\"config-help\">\n      <span class=\"help-icon\">?</span>\n      <div class=\"help-tooltip\">{{ help }}</div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  type: {\n    type: String,\n    required: true,\n    validator: (value) => [\n      'text', 'number', 'range', 'select', 'multiselect', \n      'checkbox', 'color', 'toggle'\n    ].includes(value)\n  },\n  label: {\n    type: String,\n    required: true\n  },\n  modelValue: {\n    type: [String, Number, Boolean, Array],\n    default: null\n  },\n  options: {\n    type: Array,\n    default: () => []\n  },\n  placeholder: {\n    type: String,\n    default: ''\n  },\n  min: {\n    type: Number,\n    default: 0\n  },\n  max: {\n    type: Number,\n    default: 100\n  },\n  step: {\n    type: Number,\n    default: 1\n  },\n  unit: {\n    type: String,\n    default: ''\n  },\n  required: {\n    type: Boolean,\n    default: false\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  help: {\n    type: String,\n    default: ''\n  },\n  fieldName: {\n    type: String,\n    default: ''\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'change'])\n\n// 生成唯一的字段ID\nconst fieldId = computed(() => {\n  return `config-${props.fieldName || Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n})\n\nfunction handleInput(event) {\n  let value = event.target.value\n\n  // 处理不同类型的值转换\n  switch (props.type) {\n    case 'number':\n    case 'range':\n      value = Number(value)\n      break\n    case 'checkbox':\n    case 'toggle':\n      value = event.target.checked\n      break\n    case 'multiselect':\n      value = Array.from(event.target.selectedOptions, option => option.value)\n      break\n  }\n\n  emit('update:modelValue', value)\n  emit('change', value)\n}\n</script>\n\n<style scoped>\n.config-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n  padding: 8px;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n  position: relative;\n}\n\n.config-item:hover {\n  background: var(--hover-bg, rgba(0, 0, 0, 0.02));\n  transform: translateX(5px);\n}\n\n.config-item-disabled {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n.config-label {\n  font-size: 13px;\n  font-weight: 500;\n  color: var(--text-color, #333333);\n  flex: 1;\n  transition: color 0.3s ease;\n  cursor: pointer;\n}\n\n.required-star {\n  color: #ff5252;\n  font-weight: bold;\n  margin-left: 4px;\n}\n\n/* 通用输入样式 */\n.config-input,\n.config-select {\n  flex: 1;\n  max-width: 160px;\n  padding: 6px 8px;\n  border: 1px solid var(--border-color, #e5e5e5);\n  border-radius: 4px;\n  background: var(--bg-color, #ffffff);\n  color: var(--text-color, #333333);\n  font-size: 12px;\n  transition: all 0.3s ease;\n}\n\n.config-input:focus,\n.config-select:focus {\n  border-color: var(--primary-color, #5470c6);\n  box-shadow: 0 0 0 2px rgba(84, 112, 198, 0.2);\n  outline: none;\n  transform: scale(1.02);\n}\n\n/* 范围滑块样式 */\n.range-input-container {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex: 1;\n  max-width: 160px;\n}\n\n.config-range {\n  flex: 1;\n  height: 6px;\n  border-radius: 3px;\n  background: var(--border-color, #e5e5e5);\n  outline: none;\n  transition: all 0.3s ease;\n}\n\n.config-range::-webkit-slider-thumb {\n  appearance: none;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background: var(--primary-color, #5470c6);\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.config-range::-webkit-slider-thumb:hover {\n  background: var(--primary-hover, #4c63b6);\n  transform: scale(1.1);\n}\n\n.range-value {\n  font-size: 11px;\n  color: var(--text-secondary, #666666);\n  font-weight: 500;\n  min-width: 40px;\n  text-align: right;\n}\n\n/* 多选下拉样式 */\n.config-multiselect {\n  max-height: 100px;\n  overflow-y: auto;\n}\n\n/* 复选框样式 */\n.config-checkbox {\n  position: relative;\n  width: 40px;\n  height: 20px;\n  appearance: none;\n  background: var(--border-color, #e5e5e5);\n  border-radius: 20px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  outline: none;\n}\n\n.config-checkbox:before {\n  content: '';\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  width: 16px;\n  height: 16px;\n  background: white;\n  border-radius: 50%;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.config-checkbox:checked {\n  background: var(--primary-color, #5470c6);\n}\n\n.config-checkbox:checked:before {\n  transform: translateX(20px);\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n}\n\n.config-checkbox:hover {\n  transform: scale(1.05);\n  box-shadow: 0 0 0 3px rgba(84, 112, 198, 0.1);\n}\n\n/* 颜色选择器样式 */\n.color-input-container {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex: 1;\n  max-width: 160px;\n}\n\n.config-color {\n  width: 40px;\n  height: 30px;\n  border: 1px solid var(--border-color, #e5e5e5);\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.config-color:hover {\n  transform: scale(1.05);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.config-color-text {\n  flex: 1;\n  padding: 6px 8px;\n  border: 1px solid var(--border-color, #e5e5e5);\n  border-radius: 4px;\n  background: var(--bg-color, #ffffff);\n  color: var(--text-color, #333333);\n  font-size: 12px;\n  font-family: monospace;\n  transition: all 0.3s ease;\n}\n\n/* 切换开关样式 */\n.toggle-container {\n  flex: 1;\n  max-width: 160px;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.toggle-switch {\n  position: relative;\n  display: inline-block;\n  width: 50px;\n  height: 24px;\n  cursor: pointer;\n}\n\n.toggle-switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.toggle-slider {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: var(--border-color, #e5e5e5);\n  transition: all 0.3s ease;\n  border-radius: 24px;\n}\n\n.toggle-slider:before {\n  position: absolute;\n  content: \"\";\n  height: 18px;\n  width: 18px;\n  left: 3px;\n  bottom: 3px;\n  background-color: white;\n  transition: all 0.3s ease;\n  border-radius: 50%;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.toggle-switch input:checked + .toggle-slider {\n  background-color: var(--primary-color, #5470c6);\n}\n\n.toggle-switch input:checked + .toggle-slider:before {\n  transform: translateX(26px);\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n}\n\n.toggle-switch:hover .toggle-slider {\n  box-shadow: 0 0 0 3px rgba(84, 112, 198, 0.1);\n}\n\n/* 帮助提示样式 */\n.config-help {\n  position: relative;\n  margin-left: 8px;\n}\n\n.help-icon {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 16px;\n  height: 16px;\n  background: var(--text-secondary, #666666);\n  color: white;\n  border-radius: 50%;\n  font-size: 10px;\n  font-weight: bold;\n  cursor: help;\n  transition: all 0.3s ease;\n}\n\n.help-icon:hover {\n  background: var(--primary-color, #5470c6);\n  transform: scale(1.1);\n}\n\n.help-tooltip {\n  position: absolute;\n  bottom: 100%;\n  right: 0;\n  margin-bottom: 8px;\n  padding: 8px 12px;\n  background: rgba(0, 0, 0, 0.9);\n  color: white;\n  border-radius: 6px;\n  font-size: 11px;\n  white-space: nowrap;\n  opacity: 0;\n  visibility: hidden;\n  transform: translateY(10px);\n  transition: all 0.3s ease;\n  z-index: 1000;\n}\n\n.help-tooltip::after {\n  content: '';\n  position: absolute;\n  top: 100%;\n  right: 12px;\n  border: 5px solid transparent;\n  border-top-color: rgba(0, 0, 0, 0.9);\n}\n\n.config-help:hover .help-tooltip {\n  opacity: 1;\n  visibility: visible;\n  transform: translateY(0);\n}\n\n/* 暗色主题适配 */\n[data-theme=\"dark\"] .config-input,\n[data-theme=\"dark\"] .config-select,\n:root.dark .config-input,\n:root.dark .config-select {\n  background: var(--bg-secondary, #2d2d2d);\n  border-color: var(--border-color, #555555);\n  color: var(--text-color, #e0e0e0);\n}\n\n[data-theme=\"dark\"] .config-input:focus,\n[data-theme=\"dark\"] .config-select:focus,\n:root.dark .config-input:focus,\n:root.dark .config-select:focus {\n  border-color: var(--primary-color, #6b9eff);\n  box-shadow: 0 0 0 2px rgba(107, 158, 255, 0.3);\n}\n\n[data-theme=\"dark\"] .config-checkbox,\n:root.dark .config-checkbox {\n  background: var(--border-color, #555555);\n}\n\n[data-theme=\"dark\"] .config-checkbox:checked,\n:root.dark .config-checkbox:checked {\n  background: var(--primary-color, #6b9eff);\n}\n\n[data-theme=\"dark\"] .config-checkbox:before,\n:root.dark .config-checkbox:before {\n  background: var(--bg-color, #1e1e1e);\n}\n\n[data-theme=\"dark\"] .toggle-slider,\n:root.dark .toggle-slider {\n  background-color: var(--border-color, #555555);\n}\n\n[data-theme=\"dark\"] .toggle-slider:before,\n:root.dark .toggle-slider:before {\n  background-color: var(--bg-color, #1e1e1e);\n}\n\n[data-theme=\"dark\"] .toggle-switch input:checked + .toggle-slider,\n:root.dark .toggle-switch input:checked + .toggle-slider {\n  background-color: var(--primary-color, #6b9eff);\n}\n</style>\n"],"mappings":"AA+IA,SAASA,QAAQ,QAAQ,KAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAE7B,MAAMC,KAAK,GAAGC,OAAA;IA2Dd,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,OAAO,GAAGL,QAAQ,CAAC,MAAM;MAC7B,OAAO,UAAUC,KAAK,CAACK,SAAS,IAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;IAC5F,CAAC;IAED,SAASC,WAAWA,CAACC,KAAK,EAAE;MAC1B,IAAIC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAI;;MAE7B;MACA,QAAQd,KAAK,CAACgB,IAAI;QAChB,KAAK,QAAQ;QACb,KAAK,OAAO;UACVF,KAAK,GAAGG,MAAM,CAACH,KAAK;UACpB;QACF,KAAK,UAAU;QACf,KAAK,QAAQ;UACXA,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACG,OAAM;UAC3B;QACF,KAAK,aAAa;UAChBJ,KAAK,GAAGK,KAAK,CAACC,IAAI,CAACP,KAAK,CAACE,MAAM,CAACM,eAAe,EAAEC,MAAM,IAAIA,MAAM,CAACR,KAAK;UACvE;MACJ;MAEAZ,IAAI,CAAC,mBAAmB,EAAEY,KAAK;MAC/BZ,IAAI,CAAC,QAAQ,EAAEY,KAAK;IACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}