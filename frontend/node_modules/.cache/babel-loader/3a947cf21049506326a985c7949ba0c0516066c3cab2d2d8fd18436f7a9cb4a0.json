{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n// dataMergeUtils.js\n// 多文件数据合并与主键处理工具函数\n\n/* eslint-disable */\n\n/**\n * 判断是否有主键（即所有y轴字段的文件都包含x轴字段）\n * @param {Object} xAxis - x轴配置\n * @param {Array|Object} yAxis - y轴配置\n * @param {Object} fileDataMap - 文件名到对象数组的映射\n * @returns {boolean}\n */\nexport function hasPrimaryKey(xAxis, yAxis, fileDataMap) {\n  if (!xAxis || !xAxis.field) return false;\n  const xField = xAxis.field;\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  return yArr.every(y => {\n    const yFileData = fileDataMap[y.file];\n    return yFileData && yFileData.length > 0 && yFileData[0].hasOwnProperty(xField);\n  });\n}\n\n/**\n * 合并多文件数据，返回 { xData, yDataArr, mergeType }\n * @param {Object} config - chartConfig\n * @param {Object} fileDataMap - 文件名到对象数组的映射\n * @returns {Object}\n */\nexport function mergeChartData(config, fileDataMap) {\n  const {\n    xAxis,\n    yAxis\n  } = config;\n  // 去除第一行（标题行）\n  const mainData = (fileDataMap[xAxis.file] || []).slice(1);\n  const xData = mainData.map(row => row[xAxis.field]);\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  const usePrimaryKey = hasPrimaryKey(xAxis, yAxis, fileDataMap);\n  let yDataArr = [];\n  if (usePrimaryKey) {\n    // 主键合并（左连接）\n    yDataArr = yArr.map(y => {\n      const yFileData = (fileDataMap[y.file] || []).slice(1);\n      return mainData.map(row => {\n        const match = yFileData.find(r => r[xAxis.field] === row[xAxis.field]);\n        return match ? parseFloat(match[y.field]) || 0 : null;\n      });\n    });\n  } else {\n    // 行号对齐\n    yDataArr = yArr.map(y => {\n      const yFileData = (fileDataMap[y.file] || []).slice(1);\n      let arr = yFileData.map(row => parseFloat(row[y.field]) || 0);\n      if (arr.length > xData.length) arr = arr.slice(0, xData.length);\n      while (arr.length < xData.length) arr.push(null);\n      return arr;\n    });\n  }\n  return {\n    xData,\n    yDataArr,\n    mergeType: usePrimaryKey ? 'primaryKey' : 'rowIndex'\n  };\n}","map":{"version":3,"names":["hasPrimaryKey","xAxis","yAxis","fileDataMap","field","xField","yArr","Array","isArray","every","y","yFileData","file","length","hasOwnProperty","mergeChartData","config","mainData","slice","xData","map","row","usePrimaryKey","yDataArr","match","find","r","parseFloat","arr","push","mergeType"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/utils/dataMergeUtils.js"],"sourcesContent":["// dataMergeUtils.js\n// 多文件数据合并与主键处理工具函数\n\n/* eslint-disable */\n\n/**\n * 判断是否有主键（即所有y轴字段的文件都包含x轴字段）\n * @param {Object} xAxis - x轴配置\n * @param {Array|Object} yAxis - y轴配置\n * @param {Object} fileDataMap - 文件名到对象数组的映射\n * @returns {boolean}\n */\nexport function hasPrimaryKey(xAxis, yAxis, fileDataMap) {\n    if (!xAxis || !xAxis.field) return false;\n    const xField = xAxis.field;\n    const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n    return yArr.every(y => {\n        const yFileData = fileDataMap[y.file];\n        return yFileData && yFileData.length > 0 && yFileData[0].hasOwnProperty(xField);\n    });\n}\n\n/**\n * 合并多文件数据，返回 { xData, yDataArr, mergeType }\n * @param {Object} config - chartConfig\n * @param {Object} fileDataMap - 文件名到对象数组的映射\n * @returns {Object}\n */\nexport function mergeChartData(config, fileDataMap) {\n  const { xAxis, yAxis } = config;\n  // 去除第一行（标题行）\n  const mainData = (fileDataMap[xAxis.file] || []).slice(1);\n  const xData = mainData.map(row => row[xAxis.field]);\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  const usePrimaryKey = hasPrimaryKey(xAxis, yAxis, fileDataMap);\n  let yDataArr = [];\n  if (usePrimaryKey) {\n    // 主键合并（左连接）\n    yDataArr = yArr.map(y => {\n      const yFileData = (fileDataMap[y.file] || []).slice(1);\n      return mainData.map(row => {\n        const match = yFileData.find(r => r[xAxis.field] === row[xAxis.field]);\n        return match ? parseFloat(match[y.field]) || 0 : null;\n      });\n    });\n  } else {\n    // 行号对齐\n    yDataArr = yArr.map(y => {\n      const yFileData = (fileDataMap[y.file] || []).slice(1);\n      let arr = yFileData.map(row => parseFloat(row[y.field]) || 0);\n      if (arr.length > xData.length) arr = arr.slice(0, xData.length);\n      while (arr.length < xData.length) arr.push(null);\n      return arr;\n    });\n  }\n  return { xData, yDataArr, mergeType: usePrimaryKey ? 'primaryKey' : 'rowIndex' };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}