{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n// dataMergeUtils.js\n// 多文件数据合并与主键处理工具函数\n// 根据不同图表类型，主函数分发到对应的处理器进行数据处理，生成能够绘制图表的数据\n\n/*\n关键函数 mergeChartData(config, fileDataMap, nullHandlingType, options)\n    参数校验 validateParams\n    类型\n    图表类型分发器 chartTypeHandlers[type]\n    数据提取 getDataRows\n    过滤器插件 options.filterPlugin 或 defaultFilterPlugin\n    缺失值处理插件 handleNulls (调用 nullHandlingModule 中的具体方法)\n    主键合并 如有多文件/多字段，合并主键\n    组装seriesData 生成最终用于图表的数据结构\n    返回 {xData, yDataArr, mergeType, seriesData}\n*/\n\n/* eslint-disable */\n\n/**\n * @typedef {Object} AxisConfig\n * @property {string} file - 数据文件名\n * @property {string} field - 字段名\n */\n\n/**\n * @typedef {Object} ChartConfig\n * @property {AxisConfig} [xAxis]\n * @property {AxisConfig|AxisConfig[]} [yAxis]\n * @property {AxisConfig} [category]\n * @property {AxisConfig} [value]\n * @property {Object} [filter]\n * @property {string} [type] - 图表类型，如 'pie', 'line', 'bar' 等\n */\n\n/**\n * @typedef {Object.<string, Array<Object>>} FileDataMap\n */\n\n/**\n * 判断是否有主键（即所有y轴字段的文件都包含x轴字段）\n * @param {AxisConfig} xAxis\n * @param {AxisConfig|AxisConfig[]} yAxis\n * @param {FileDataMap} fileDataMap\n * @returns {boolean}\n */\nexport function hasPrimaryKey(xAxis, yAxis, fileDataMap) {\n  if (!xAxis || !xAxis.field) return false;\n  const xField = xAxis.field;\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  return yArr.every(y => {\n    const yFileData = fileDataMap[y.file];\n    return yFileData && yFileData.length > 0 && yFileData[0].hasOwnProperty(xField);\n  });\n}\n\n// ---------------- 通用数据处理工具函数 ----------------\n\n/**\n * 提取数据并去掉标题行\n * @param {FileDataMap} fileDataMap\n * @param {string} file\n * @returns {Array<Object>}\n */\nfunction getDataRows(fileDataMap, file) {\n  return (fileDataMap[file] || []).slice(1);\n}\n\n/**\n * 通用缺失值处理器分发\n * @param {string} type\n * @param {Array} arr\n * @param {Object} nullHandlingModule\n * @returns {Array}\n */\nfunction handleNulls(type, arr, nullHandlingModule) {\n  if (!type || type === 'ignore') return arr;\n  const handler = nullHandlingModule[type] || nullHandlingModule.ignoreNull;\n  return handler(arr);\n}\n\n/**\n * 参数校验\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n */\nfunction validateParams(config, fileDataMap) {\n  if (!config || typeof config !== 'object') throw new Error('config must be an object');\n  if (!fileDataMap || typeof fileDataMap !== 'object') throw new Error('fileDataMap must be an object');\n}\n\n// ---------------- 过滤器插件化 ----------------\n\n/**\n * 过滤器插件，默认实现\n * @param {Array} rows\n * @param {Object} filters\n * @returns {Array}\n */\nexport function defaultFilterPlugin(rows, filters) {\n  if (!filters || !filters.filters || !Array.isArray(filters.filters) || filters.filters.length === 0) return rows;\n  const logic = filters.logic || 'AND';\n  const conds = filters.filters || [];\n  if (conds.length === 0) return rows;\n  return rows.filter(row => {\n    const results = conds.map(f => {\n      const val = row[f.field];\n      switch (f.type) {\n        case 'integer':\n          {\n            const num = parseFloat(val);\n            const cmp = parseFloat(f.value);\n            if (f.operator === 'eq') return num === cmp;\n            if (f.operator === 'ne') return num !== cmp;\n            if (f.operator === 'gt') return num > cmp;\n            if (f.operator === 'ge') return num >= cmp;\n            if (f.operator === 'lt') return num < cmp;\n            if (f.operator === 'le') return num <= cmp;\n            return true;\n          }\n        case 'string':\n          {\n            const str = String(val ?? '');\n            const cmp = String(f.value ?? '');\n            if (f.operator === 'eq') return str === cmp;\n            if (f.operator === 'ne') return str !== cmp;\n            if (f.operator === 'contains') return str.includes(cmp);\n            if (f.operator === 'notcontains') return !str.includes(cmp);\n            if (f.operator === 'startsWith') return str.startsWith(cmp);\n            if (f.operator === 'endsWith') return str.endsWith(cmp);\n            return true;\n          }\n        case 'category':\n          {\n            if (f.operator === 'eq') return val === f.value;\n            if (f.operator === 'ne') return val !== f.value;\n            if (f.operator === 'in') return Array.isArray(f.value) ? f.value.includes(val) : false;\n            if (f.operator === 'notin') return Array.isArray(f.value) ? !f.value.includes(val) : false;\n            return true;\n          }\n        case 'boolean':\n          {\n            const boolVal = val === true || val === 'true' || val === 1 || val === '1';\n            const cmp = f.value === true || f.value === 'true' || f.value === 1 || f.value === '1';\n            if (f.operator === 'eq') return boolVal === cmp;\n            if (f.operator === 'ne') return boolVal !== cmp;\n            return true;\n          }\n        case 'date':\n          {\n            const dateVal = new Date(val).getTime();\n            const cmp = new Date(f.value).getTime();\n            if (f.operator === 'eq') return dateVal === cmp;\n            if (f.operator === 'ne') return dateVal !== cmp;\n            if (f.operator === 'before') return dateVal < cmp;\n            if (f.operator === 'after') return dateVal > cmp;\n            return true;\n          }\n        default:\n          return true;\n      }\n    });\n    return logic === 'AND' ? results.every(Boolean) : results.some(Boolean);\n  });\n}\nimport BoxplotChartIcon from '../../../components/svg/BoxplotChartIcon.vue';\n/**\n * 合并多文件数据，返回 { xData, yDataArr, mergeType, seriesData }\n * @param {Object} config - chartConfig\n * @param {Object} fileDataMap - 文件名到对象数组的映射\n * @returns {Object}\n */\n\nimport * as nullHandling from './nullHandling.js';\n\n// ---------------- 图表类型处理器 ----------------\n\n// 调试输入函数\nfunction debugInput(config, fileDataMap, options) {\n  console.log('[--debugInput {Chart Type Processor}--] config:', config);\n  console.log('[--debugInput {Chart Type Processor}--] fileDataMap:', fileDataMap);\n  console.log('[--debugInput {Chart Type Processor}--] options:', options);\n}\n\n/**\n * 通用 x/y 图表（如折线、柱状等）数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction xyChartHandler(config, fileDataMap, options) {\n  const {\n    nullHandlingType = 'ignore',\n    nullHandlingModule = nullHandling,\n    filterPlugin = defaultFilterPlugin\n  } = options;\n  const {\n    xAxis,\n    yAxis\n  } = config;\n  let mainData = getDataRows(fileDataMap, xAxis.file);\n  const {\n    isAggregate = true,\n    aggregateFn\n  } = options;\n  // 应用过滤\n  if (config.filter && config.filter.filters && config.filter.filters.length) {\n    mainData = filterPlugin(mainData, config.filter);\n  }\n  // 只过滤空行，不去重\n  mainData = mainData.filter(row => {\n    const key = row[xAxis.field];\n    return key !== undefined && key !== null && key !== '';\n  });\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  if (isAggregate) {\n    // 按 name 分组聚合，可自定义聚合方式\n    const groupMap = new Map(); // key: name, value: [ [y1, y2, ...], [y1, y2, ...], ... ]\n    for (const row of mainData) {\n      const key = row[xAxis.field];\n      if (!groupMap.has(key)) {\n        groupMap.set(key, yArr.map(() => []));\n      }\n      yArr.forEach((y, idx) => {\n        const rawVal = row[y.field];\n        const parsedVal = parseFloat(rawVal);\n        if (rawVal !== null && rawVal !== undefined && rawVal !== '' && !Number.isNaN(parsedVal)) {\n          groupMap.get(key)[idx].push(parsedVal);\n        }\n      });\n    }\n    const xData = Array.from(groupMap.keys());\n    // 默认聚合函数为累加\n    const defaultAggregate = arr => arr.reduce((a, b) => a + b, 0);\n    const aggFn = typeof aggregateFn === 'function' ? aggregateFn : defaultAggregate;\n    const yDataArr = yArr.map((y, idx) => xData.map(name => aggFn(groupMap.get(name)[idx])));\n    return {\n      xData,\n      yDataArr,\n      mergeType: 'groupByName',\n      seriesData: []\n    };\n  } else {\n    // 返回原始未聚合数据\n    const xData = mainData.map(row => row[xAxis.field]);\n    const yDataArr = yArr.map(y => mainData.map(row => {\n      const rawVal = row[y.field];\n      const parsedVal = parseFloat(rawVal);\n      return rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal) ? null : parsedVal;\n    }));\n    return {\n      xData,\n      yDataArr,\n      mergeType: 'raw',\n      seriesData: []\n    };\n  }\n}\n\n/**\n * 饼图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction pieChartHandler(config, fileDataMap, options) {\n  const {\n    filterPlugin = defaultFilterPlugin\n  } = options;\n  let catData = getDataRows(fileDataMap, config.category.file);\n  let valData = getDataRows(fileDataMap, config.value.file);\n  // 应用过滤\n  if (config.filter && config.filter.filters && config.filter.filters.length) {\n    catData = filterPlugin(catData, config.filter);\n    valData = filterPlugin(valData, config.filter);\n  }\n  const len = Math.min(catData.length, valData.length);\n  const result = [];\n  for (let i = 0; i < len; i++) {\n    const name = catData[i][config.category.field];\n    const rawVal = valData[i][config.value.field];\n    const parsedVal = parseFloat(rawVal);\n    const val = rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal) ? null : parsedVal;\n    if (name !== undefined && name !== null && name !== '') {\n      result.push({\n        name,\n        value: val\n      });\n    }\n  }\n  return {\n    xData: [],\n    yDataArr: [],\n    mergeType: 'pie',\n    seriesData: result\n  };\n}\n\n/**\n * K线图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction candlestickChartHandler(config, fileDataMap, options) {\n  const {\n    nullHandlingType = 'ignore',\n    nullHandlingModule = nullHandling,\n    filterPlugin = defaultFilterPlugin\n  } = options;\n  const {\n    time,\n    open,\n    close,\n    high,\n    low,\n    filter\n  } = config;\n  // 提取主文件数据\n  let mainData = getDataRows(fileDataMap, time.file);\n  if (filter && filter.filters && filter.filters.length) {\n    mainData = filterPlugin(mainData, filter);\n  }\n  // 按时间字段排序\n  mainData.sort((a, b) => {\n    if (a[time.field] < b[time.field]) return -1;\n    if (a[time.field] > b[time.field]) return 1;\n    return 0;\n  });\n  // 组装 xData 和 seriesData\n  const xData = mainData.map(row => row[time.field]);\n  const seriesData = mainData.map(row => {\n    const o = parseFloat(row[open.field]);\n    const c = parseFloat(row[close.field]);\n    const h = parseFloat(row[high.field]);\n    const l = parseFloat(row[low.field]);\n    // 缺失值处理\n    const arr = [o, c, l, h].map(v => v === null || v === undefined || v === '' || Number.isNaN(v) ? null : v);\n    return handleNulls(nullHandlingType, arr, nullHandlingModule);\n  });\n  return {\n    xData,\n    yDataArr: [seriesData],\n    mergeType: 'candlestick',\n    seriesData\n  };\n}\n\n/**\n * 热力图数据处理器（主键合并，一一对应）\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction heatmapChartHandler(config, fileDataMap, options) {\n  const {\n    xAxis,\n    yAxis,\n    value\n  } = config;\n  // 获取所有数据行\n  const xRows = getDataRows(fileDataMap, xAxis.file);\n  const yRows = getDataRows(fileDataMap, yAxis.file);\n  const valRows = getDataRows(fileDataMap, value.file);\n\n  // 收集所有x、y的取值（类别）\n  const xSet = new Set(xRows.map(row => row[xAxis.field]));\n  const ySet = new Set(yRows.map(row => row[yAxis.field]));\n  const xData = Array.from(xSet);\n  const yData = Array.from(ySet);\n\n  // 构建value映射\n  const valueMap = new Map();\n  valRows.forEach(row => {\n    // 优先用valRows里的x/y字段，否则用xRows/yRows索引补齐\n    const x = row[xAxis.field] !== undefined ? row[xAxis.field] : null;\n    const y = row[yAxis.field] !== undefined ? row[yAxis.field] : null;\n    if (x !== null && y !== null) {\n      const key = `${x}|${y}`;\n      valueMap.set(key, row[value.field]);\n    }\n  });\n\n  // 生成 seriesData，补齐所有 (x, y) 组合\n  const seriesData = [];\n  yData.forEach(y => {\n    xData.forEach(x => {\n      const key = `${x}|${y}`;\n      const v = valueMap.has(key) ? valueMap.get(key) : null;\n      seriesData.push([x, y, v]);\n    });\n  });\n  return {\n    xData,\n    yData,\n    mergeType: 'heatmap',\n    seriesData\n  };\n}\n\n/**\n * 雷达图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction radarChartHandler(config, fileDataMap, options) {\n  const {\n    indicator,\n    value,\n    name\n  } = config;\n\n  // 维度配置\n  const indicators = indicator.map(item => {\n    const rows = getDataRows(fileDataMap, item.file);\n    const values = rows.map(row => row[item.field]).filter(v => v !== undefined && v !== null);\n    const max = Math.ceil(Math.max(...values.map(v => Number(v))) * 1.2); // 乘以安全系数\n    return {\n      name: item.field,\n      max: max || 100\n    };\n  });\n\n  // 系列数据\n  const nameRows = getDataRows(fileDataMap, name.file);\n  const seriesData = nameRows.map(row => {\n    const values = value.map(item => row[item.field]);\n    return {\n      name: row[name.field],\n      value: values\n    };\n  });\n\n  // 先封装传输\n  const RadarPack = {\n    indicator: indicators,\n    seriesData_radar: seriesData\n  };\n  return {\n    xData: [],\n    yData: [],\n    mergeType: 'radar',\n    seriesData: RadarPack\n  };\n}\n\n/**\n * 箱线图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction boxplotChartHandler(config, fileDataMap, options) {\n  // 解析配置\n  const {\n    category,\n    series,\n    value,\n    min,\n    q1,\n    median,\n    q3,\n    max\n  } = config;\n  // 获取数据行\n  const catRows = getDataRows(fileDataMap, category.file);\n  const seriesRows = series ? getDataRows(fileDataMap, series.file) : null;\n  // 收集所有分组和系列\n  const xData = Array.from(new Set(catRows.map(row => row[category.field])));\n  const seriesList = seriesRows ? Array.from(new Set(seriesRows.map(row => row[series.field]))) : ['default'];\n  let useValue = !!value;\n  let valArrs = [];\n  if (useValue) {\n    if (Array.isArray(value)) {\n      valArrs = value.map(v => getDataRows(fileDataMap, v.file).map(row => parseFloat(row[v.field])));\n    } else {\n      valArrs = [getDataRows(fileDataMap, value.file).map(row => parseFloat(row[value.field]))];\n    }\n  }\n\n  // 构建分组：series -> category -> [values]\n  const groupMap = new Map(); // key: series, value: Map(category, [values])\n  catRows.forEach((row, idx) => {\n    const cat = row[category.field];\n    const ser = seriesRows ? seriesRows[idx][series.field] : 'default';\n    if (!groupMap.has(ser)) groupMap.set(ser, new Map());\n    const catMap = groupMap.get(ser);\n    if (!catMap.has(cat)) catMap.set(cat, []);\n    if (useValue) {\n      valArrs.forEach(arr => {\n        if (arr[idx] !== undefined && !Number.isNaN(arr[idx])) {\n          catMap.get(cat).push(arr[idx]);\n        }\n      });\n    }\n  });\n\n  // 计算统计量\n  function calcBoxStats(arr) {\n    if (!arr || arr.length === 0) return [null, null, null, null, null];\n    const sorted = arr.slice().sort((a, b) => a - b);\n    const minV = sorted[0];\n    const maxV = sorted[sorted.length - 1];\n    const medianV = quantile(sorted, 0.5);\n    const q1V = quantile(sorted, 0.25);\n    const q3V = quantile(sorted, 0.75);\n    return [minV, q1V, medianV, q3V, maxV];\n  }\n  function quantile(arr, q) {\n    const pos = (arr.length - 1) * q;\n    const base = Math.floor(pos);\n    const rest = pos - base;\n    if (arr[base + 1] !== undefined) {\n      return arr[base] + rest * (arr[base + 1] - arr[base]);\n    } else {\n      return arr[base];\n    }\n  }\n\n  // 组装 seriesData: 每个系列一个数组，数组顺序与 xData一致\n  let seriesData;\n  if (useValue) {\n    // 自动计算五数\n    seriesData = seriesList.map(ser => {\n      const catMap = groupMap.get(ser) || new Map();\n      return xData.map(cat => calcBoxStats(catMap.get(cat) || []));\n    });\n  } else {\n    // 直接读取五数\n    // 需要所有五数字段都存在\n    const minRows = min ? getDataRows(fileDataMap, min.file) : null;\n    const q1Rows = q1 ? getDataRows(fileDataMap, q1.file) : null;\n    const medianRows = median ? getDataRows(fileDataMap, median.file) : null;\n    const q3Rows = q3 ? getDataRows(fileDataMap, q3.file) : null;\n    const maxRows = max ? getDataRows(fileDataMap, max.file) : null;\n    seriesData = seriesList.map(ser => {\n      return xData.map((cat, idx) => {\n        // 按分组和系列查找对应行\n        let rowIdx = -1;\n        for (let i = 0; i < catRows.length; i++) {\n          const catVal = catRows[i][category.field];\n          const serVal = seriesRows ? seriesRows[i][series.field] : 'default';\n          if (catVal === cat && serVal === ser) {\n            rowIdx = i;\n            break;\n          }\n        }\n        if (rowIdx === -1) return [null, null, null, null, null];\n        return [minRows ? parseFloat(minRows[rowIdx][min.field]) : null, q1Rows ? parseFloat(q1Rows[rowIdx][q1.field]) : null, medianRows ? parseFloat(medianRows[rowIdx][median.field]) : null, q3Rows ? parseFloat(q3Rows[rowIdx][q3.field]) : null, maxRows ? parseFloat(maxRows[rowIdx][max.field]) : null];\n      });\n    });\n  }\n  c;\n  return {\n    xData,\n    seriesList,\n    yDataArr: [],\n    mergeType: 'boxplot',\n    seriesData // seriesData[系列idx][分组idx] = [min, q1, median, q3, max]\n  };\n}\n\n// ---------------- 图表类型分发器 ----------------\n\nconst chartTypeHandlers = {\n  Line: xyChartHandler,\n  Bar: xyChartHandler,\n  Pie: pieChartHandler,\n  Scatter: xyChartHandler,\n  Candlestick: candlestickChartHandler,\n  Heatmap: heatmapChartHandler,\n  Radar: radarChartHandler,\n  Boxplot: boxplotChartHandler\n  // 其他类型可继续扩展\n};\n\n/**\n * 主入口：合并多文件数据，返回 { xData, yDataArr, mergeType, seriesData }\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {string} [nullHandlingType]\n * @param {Object} [options] - 可选项：filterPlugin, nullHandlingModule\n * @returns {Object}\n */\nexport function mergeChartData(config, fileDataMap, nullHandlingType = 'ignore', options = {}) {\n  validateParams(config, fileDataMap);\n  let chartType = config.type;\n  console.log('[mergeChartData] Inferred chart type:', chartType);\n  const handler = chartTypeHandlers[chartType] || xyChartHandler;\n  console.log('[mergeChartData] Handler:', handler);\n  return handler(config, fileDataMap, {\n    ...options,\n    nullHandlingType\n  });\n}\n\n// applyFiltersToRows 已被插件化，见 defaultFilterPlugin","map":{"version":3,"names":["hasPrimaryKey","xAxis","yAxis","fileDataMap","field","xField","yArr","Array","isArray","every","y","yFileData","file","length","hasOwnProperty","getDataRows","slice","handleNulls","type","arr","nullHandlingModule","handler","ignoreNull","validateParams","config","Error","defaultFilterPlugin","rows","filters","logic","conds","filter","row","results","map","f","val","num","parseFloat","cmp","value","operator","str","String","includes","startsWith","endsWith","boolVal","dateVal","Date","getTime","Boolean","some","BoxplotChartIcon","nullHandling","debugInput","options","console","log","xyChartHandler","nullHandlingType","filterPlugin","mainData","isAggregate","aggregateFn","key","undefined","groupMap","Map","has","set","forEach","idx","rawVal","parsedVal","Number","isNaN","get","push","xData","from","keys","defaultAggregate","reduce","a","b","aggFn","yDataArr","name","mergeType","seriesData","pieChartHandler","catData","category","valData","len","Math","min","result","i","candlestickChartHandler","time","open","close","high","low","sort","o","c","h","l","v","heatmapChartHandler","xRows","yRows","valRows","xSet","Set","ySet","yData","valueMap","x","radarChartHandler","indicator","indicators","item","values","max","ceil","nameRows","RadarPack","seriesData_radar","boxplotChartHandler","series","q1","median","q3","catRows","seriesRows","seriesList","useValue","valArrs","cat","ser","catMap","calcBoxStats","sorted","minV","maxV","medianV","quantile","q1V","q3V","q","pos","base","floor","rest","minRows","q1Rows","medianRows","q3Rows","maxRows","rowIdx","catVal","serVal","chartTypeHandlers","Line","Bar","Pie","Scatter","Candlestick","Heatmap","Radar","Boxplot","mergeChartData","chartType"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/utils/dataMergeUtils.js"],"sourcesContent":["// dataMergeUtils.js\n// 多文件数据合并与主键处理工具函数\n// 根据不同图表类型，主函数分发到对应的处理器进行数据处理，生成能够绘制图表的数据\n\n/*\n关键函数 mergeChartData(config, fileDataMap, nullHandlingType, options)\n    参数校验 validateParams\n    类型\n    图表类型分发器 chartTypeHandlers[type]\n    数据提取 getDataRows\n    过滤器插件 options.filterPlugin 或 defaultFilterPlugin\n    缺失值处理插件 handleNulls (调用 nullHandlingModule 中的具体方法)\n    主键合并 如有多文件/多字段，合并主键\n    组装seriesData 生成最终用于图表的数据结构\n    返回 {xData, yDataArr, mergeType, seriesData}\n*/\n\n/* eslint-disable */\n\n/**\n * @typedef {Object} AxisConfig\n * @property {string} file - 数据文件名\n * @property {string} field - 字段名\n */\n\n/**\n * @typedef {Object} ChartConfig\n * @property {AxisConfig} [xAxis]\n * @property {AxisConfig|AxisConfig[]} [yAxis]\n * @property {AxisConfig} [category]\n * @property {AxisConfig} [value]\n * @property {Object} [filter]\n * @property {string} [type] - 图表类型，如 'pie', 'line', 'bar' 等\n */\n\n/**\n * @typedef {Object.<string, Array<Object>>} FileDataMap\n */\n\n\n/**\n * 判断是否有主键（即所有y轴字段的文件都包含x轴字段）\n * @param {AxisConfig} xAxis\n * @param {AxisConfig|AxisConfig[]} yAxis\n * @param {FileDataMap} fileDataMap\n * @returns {boolean}\n */\nexport function hasPrimaryKey(xAxis, yAxis, fileDataMap) {\n    if (!xAxis || !xAxis.field) return false;\n    const xField = xAxis.field;\n    const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n    return yArr.every(y => {\n        const yFileData = fileDataMap[y.file];\n        return yFileData && yFileData.length > 0 && yFileData[0].hasOwnProperty(xField);\n    });\n}\n\n\n// ---------------- 通用数据处理工具函数 ----------------\n\n/**\n * 提取数据并去掉标题行\n * @param {FileDataMap} fileDataMap\n * @param {string} file\n * @returns {Array<Object>}\n */\nfunction getDataRows(fileDataMap, file) {\n    return (fileDataMap[file] || []).slice(1);\n}\n\n/**\n * 通用缺失值处理器分发\n * @param {string} type\n * @param {Array} arr\n * @param {Object} nullHandlingModule\n * @returns {Array}\n */\nfunction handleNulls(type, arr, nullHandlingModule) {\n    if (!type || type === 'ignore') return arr;\n    const handler = nullHandlingModule[type] || nullHandlingModule.ignoreNull;\n    return handler(arr);\n}\n\n/**\n * 参数校验\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n */\nfunction validateParams(config, fileDataMap) {\n    if (!config || typeof config !== 'object') throw new Error('config must be an object');\n    if (!fileDataMap || typeof fileDataMap !== 'object') throw new Error('fileDataMap must be an object');\n}\n\n// ---------------- 过滤器插件化 ----------------\n\n/**\n * 过滤器插件，默认实现\n * @param {Array} rows\n * @param {Object} filters\n * @returns {Array}\n */\nexport function defaultFilterPlugin(rows, filters) {\n    if (!filters || !filters.filters || !Array.isArray(filters.filters) || filters.filters.length === 0) return rows;\n    const logic = filters.logic || 'AND';\n    const conds = filters.filters || [];\n    if (conds.length === 0) return rows;\n    return rows.filter(row => {\n        const results = conds.map(f => {\n            const val = row[f.field];\n            switch (f.type) {\n                case 'integer': {\n                    const num = parseFloat(val);\n                    const cmp = parseFloat(f.value);\n                    if (f.operator === 'eq') return num === cmp;\n                    if (f.operator === 'ne') return num !== cmp;\n                    if (f.operator === 'gt') return num > cmp;\n                    if (f.operator === 'ge') return num >= cmp;\n                    if (f.operator === 'lt') return num < cmp;\n                    if (f.operator === 'le') return num <= cmp;\n                    return true;\n                }\n                case 'string': {\n                    const str = String(val ?? '');\n                    const cmp = String(f.value ?? '');\n                    if (f.operator === 'eq') return str === cmp;\n                    if (f.operator === 'ne') return str !== cmp;\n                    if (f.operator === 'contains') return str.includes(cmp);\n                    if (f.operator === 'notcontains') return !str.includes(cmp);\n                    if (f.operator === 'startsWith') return str.startsWith(cmp);\n                    if (f.operator === 'endsWith') return str.endsWith(cmp);\n                    return true;\n                }\n                case 'category': {\n                    if (f.operator === 'eq') return val === f.value;\n                    if (f.operator === 'ne') return val !== f.value;\n                    if (f.operator === 'in') return Array.isArray(f.value) ? f.value.includes(val) : false;\n                    if (f.operator === 'notin') return Array.isArray(f.value) ? !f.value.includes(val) : false;\n                    return true;\n                }\n                case 'boolean': {\n                    const boolVal = val === true || val === 'true' || val === 1 || val === '1';\n                    const cmp = f.value === true || f.value === 'true' || f.value === 1 || f.value === '1';\n                    if (f.operator === 'eq') return boolVal === cmp;\n                    if (f.operator === 'ne') return boolVal !== cmp;\n                    return true;\n                }\n                case 'date': {\n                    const dateVal = new Date(val).getTime();\n                    const cmp = new Date(f.value).getTime();\n                    if (f.operator === 'eq') return dateVal === cmp;\n                    if (f.operator === 'ne') return dateVal !== cmp;\n                    if (f.operator === 'before') return dateVal < cmp;\n                    if (f.operator === 'after') return dateVal > cmp;\n                    return true;\n                }\n                default:\n                    return true;\n            }\n        });\n        return logic === 'AND' ? results.every(Boolean) : results.some(Boolean);\n    });\n}\n\nimport BoxplotChartIcon from '../../../components/svg/BoxplotChartIcon.vue';\n/**\n * 合并多文件数据，返回 { xData, yDataArr, mergeType, seriesData }\n * @param {Object} config - chartConfig\n * @param {Object} fileDataMap - 文件名到对象数组的映射\n * @returns {Object}\n */\n\nimport * as nullHandling from './nullHandling.js';\n\n// ---------------- 图表类型处理器 ----------------\n\n// 调试输入函数\nfunction debugInput(config, fileDataMap, options) {\n    console.log('[--debugInput {Chart Type Processor}--] config:', config);\n    console.log('[--debugInput {Chart Type Processor}--] fileDataMap:', fileDataMap);\n    console.log('[--debugInput {Chart Type Processor}--] options:', options);\n}\n\n/**\n * 通用 x/y 图表（如折线、柱状等）数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction xyChartHandler(config, fileDataMap, options) {\n    const { nullHandlingType = 'ignore', nullHandlingModule = nullHandling, filterPlugin = defaultFilterPlugin } = options;\n    const { xAxis, yAxis } = config;\n    let mainData = getDataRows(fileDataMap, xAxis.file);\n    const { isAggregate = true, aggregateFn } = options;\n    // 应用过滤\n    if (config.filter && config.filter.filters && config.filter.filters.length) {\n        mainData = filterPlugin(mainData, config.filter);\n    }\n    // 只过滤空行，不去重\n    mainData = mainData.filter(row => {\n        const key = row[xAxis.field];\n        return key !== undefined && key !== null && key !== '';\n    });\n    const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n    if (isAggregate) {\n        // 按 name 分组聚合，可自定义聚合方式\n        const groupMap = new Map(); // key: name, value: [ [y1, y2, ...], [y1, y2, ...], ... ]\n        for (const row of mainData) {\n            const key = row[xAxis.field];\n            if (!groupMap.has(key)) {\n                groupMap.set(key, yArr.map(() => []));\n            }\n            yArr.forEach((y, idx) => {\n                const rawVal = row[y.field];\n                const parsedVal = parseFloat(rawVal);\n                if (rawVal !== null && rawVal !== undefined && rawVal !== '' && !Number.isNaN(parsedVal)) {\n                    groupMap.get(key)[idx].push(parsedVal);\n                }\n            });\n        }\n        const xData = Array.from(groupMap.keys());\n        // 默认聚合函数为累加\n        const defaultAggregate = arr => arr.reduce((a, b) => a + b, 0);\n        const aggFn = typeof aggregateFn === 'function' ? aggregateFn : defaultAggregate;\n        const yDataArr = yArr.map((y, idx) => xData.map(name => aggFn(groupMap.get(name)[idx])));\n        return { xData, yDataArr, mergeType: 'groupByName', seriesData: [] };\n    } else {\n        // 返回原始未聚合数据\n        const xData = mainData.map(row => row[xAxis.field]);\n        const yDataArr = yArr.map(y => mainData.map(row => {\n            const rawVal = row[y.field];\n            const parsedVal = parseFloat(rawVal);\n            return (rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal)) ? null : parsedVal;\n        }));\n        return { xData, yDataArr, mergeType: 'raw', seriesData: [] };\n    }\n}\n\n/**\n * 饼图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction pieChartHandler(config, fileDataMap, options) {\n    const { filterPlugin = defaultFilterPlugin } = options;\n    let catData = getDataRows(fileDataMap, config.category.file);\n    let valData = getDataRows(fileDataMap, config.value.file);\n    // 应用过滤\n    if (config.filter && config.filter.filters && config.filter.filters.length) {\n        catData = filterPlugin(catData, config.filter);\n        valData = filterPlugin(valData, config.filter);\n    }\n    const len = Math.min(catData.length, valData.length);\n    const result = [];\n    for (let i = 0; i < len; i++) {\n        const name = catData[i][config.category.field];\n        const rawVal = valData[i][config.value.field];\n        const parsedVal = parseFloat(rawVal);\n        const val = (rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal)) ? null : parsedVal;\n        if (name !== undefined && name !== null && name !== '') {\n            result.push({ name, value: val });\n        }\n    }\n    return { xData: [], yDataArr: [], mergeType: 'pie', seriesData: result };\n}\n\n/**\n * K线图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction candlestickChartHandler(config, fileDataMap, options) {\n    const { nullHandlingType = 'ignore', nullHandlingModule = nullHandling, filterPlugin = defaultFilterPlugin } = options;\n    const { time, open, close, high, low, filter } = config;\n    // 提取主文件数据\n    let mainData = getDataRows(fileDataMap, time.file);\n    if (filter && filter.filters && filter.filters.length) {\n        mainData = filterPlugin(mainData, filter);\n    }\n    // 按时间字段排序\n    mainData.sort((a, b) => {\n        if (a[time.field] < b[time.field]) return -1;\n        if (a[time.field] > b[time.field]) return 1;\n        return 0;\n    });\n    // 组装 xData 和 seriesData\n    const xData = mainData.map(row => row[time.field]);\n    const seriesData = mainData.map(row => {\n        const o = parseFloat(row[open.field]);\n        const c = parseFloat(row[close.field]);\n        const h = parseFloat(row[high.field]);\n        const l = parseFloat(row[low.field]);\n        // 缺失值处理\n        const arr = [o, c, l, h].map(v => (v === null || v === undefined || v === '' || Number.isNaN(v)) ? null : v);\n        return handleNulls(nullHandlingType, arr, nullHandlingModule);\n    });\n    return { xData, yDataArr: [seriesData], mergeType: 'candlestick', seriesData };\n}\n\n/**\n * 热力图数据处理器（主键合并，一一对应）\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction heatmapChartHandler(config, fileDataMap, options) {\n    const { xAxis, yAxis, value } = config;\n    // 获取所有数据行\n    const xRows = getDataRows(fileDataMap, xAxis.file);\n    const yRows = getDataRows(fileDataMap, yAxis.file);\n    const valRows = getDataRows(fileDataMap, value.file);\n\n    // 收集所有x、y的取值（类别）\n    const xSet = new Set(xRows.map(row => row[xAxis.field]));\n    const ySet = new Set(yRows.map(row => row[yAxis.field]));\n    const xData = Array.from(xSet);\n    const yData = Array.from(ySet);\n\n    // 构建value映射\n    const valueMap = new Map();\n    valRows.forEach(row => {\n        // 优先用valRows里的x/y字段，否则用xRows/yRows索引补齐\n        const x = row[xAxis.field] !== undefined ? row[xAxis.field] : null;\n        const y = row[yAxis.field] !== undefined ? row[yAxis.field] : null;\n        if (x !== null && y !== null) {\n            const key = `${x}|${y}`;\n            valueMap.set(key, row[value.field]);\n        }\n    });\n\n    // 生成 seriesData，补齐所有 (x, y) 组合\n    const seriesData = [];\n    yData.forEach(y => {\n        xData.forEach(x => {\n            const key = `${x}|${y}`;\n            const v = valueMap.has(key) ? valueMap.get(key) : null;\n            seriesData.push([x, y, v]);\n        });\n    });\n    return { xData, yData, mergeType: 'heatmap', seriesData };\n}\n\n\n/**\n * 雷达图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction radarChartHandler(config, fileDataMap, options) {\n    const { indicator, value, name } = config;\n\n    // 维度配置\n    const indicators = indicator.map(item => {\n        const rows = getDataRows(fileDataMap, item.file);\n        const values = rows.map(row => row[item.field]).filter(v => v !== undefined && v !== null);\n        const max = Math.ceil(Math.max(...values.map(v => Number(v))) * 1.2); // 乘以安全系数\n        return {\n            name: item.field,\n            max: max || 100\n        };\n    });\n\n    // 系列数据\n    const nameRows = getDataRows(fileDataMap, name.file);\n    const seriesData = nameRows.map(row => {\n        const values = value.map(item => row[item.field]);\n        return {\n            name: row[name.field],\n            value: values\n        };\n    });\n\n    // 先封装传输\n    const RadarPack = {\n        indicator: indicators,\n        seriesData_radar: seriesData,\n    }\n    return { xData: [], yData: [], mergeType: 'radar', seriesData: RadarPack };\n}\n\n/**\n * 箱线图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction boxplotChartHandler(config, fileDataMap, options) {\n    // 解析配置\n    const { category, series, value, min, q1, median, q3, max } = config;\n    // 获取数据行\n    const catRows = getDataRows(fileDataMap, category.file);\n    const seriesRows = series ? getDataRows(fileDataMap, series.file) : null;\n    // 收集所有分组和系列\n    const xData = Array.from(new Set(catRows.map(row => row[category.field])));\n    const seriesList = seriesRows ? Array.from(new Set(seriesRows.map(row => row[series.field]))) : ['default'];\n\n    let useValue = !!value;\n    let valArrs = [];\n    if (useValue) {\n        if (Array.isArray(value)) {\n            valArrs = value.map(v => getDataRows(fileDataMap, v.file).map(row => parseFloat(row[v.field])));\n        } else {\n            valArrs = [getDataRows(fileDataMap, value.file).map(row => parseFloat(row[value.field]))];\n        }\n    }\n\n    // 构建分组：series -> category -> [values]\n    const groupMap = new Map(); // key: series, value: Map(category, [values])\n    catRows.forEach((row, idx) => {\n        const cat = row[category.field];\n        const ser = seriesRows ? seriesRows[idx][series.field] : 'default';\n        if (!groupMap.has(ser)) groupMap.set(ser, new Map());\n        const catMap = groupMap.get(ser);\n        if (!catMap.has(cat)) catMap.set(cat, []);\n        if (useValue) {\n            valArrs.forEach(arr => {\n                if (arr[idx] !== undefined && !Number.isNaN(arr[idx])) {\n                    catMap.get(cat).push(arr[idx]);\n                }\n            });\n        }\n    });\n\n    // 计算统计量\n    function calcBoxStats(arr) {\n        if (!arr || arr.length === 0) return [null, null, null, null, null];\n        const sorted = arr.slice().sort((a, b) => a - b);\n        const minV = sorted[0];\n        const maxV = sorted[sorted.length - 1];\n        const medianV = quantile(sorted, 0.5);\n        const q1V = quantile(sorted, 0.25);\n        const q3V = quantile(sorted, 0.75);\n        return [minV, q1V, medianV, q3V, maxV];\n    }\n    function quantile(arr, q) {\n        const pos = (arr.length - 1) * q;\n        const base = Math.floor(pos);\n        const rest = pos - base;\n        if (arr[base + 1] !== undefined) {\n            return arr[base] + rest * (arr[base + 1] - arr[base]);\n        } else {\n            return arr[base];\n        }\n    }\n\n    // 组装 seriesData: 每个系列一个数组，数组顺序与 xData一致\n    let seriesData;\n    if (useValue) {\n        // 自动计算五数\n        seriesData = seriesList.map(ser => {\n            const catMap = groupMap.get(ser) || new Map();\n            return xData.map(cat => calcBoxStats(catMap.get(cat) || []));\n        });\n    } else {\n        // 直接读取五数\n        // 需要所有五数字段都存在\n        const minRows = min ? getDataRows(fileDataMap, min.file) : null;\n        const q1Rows = q1 ? getDataRows(fileDataMap, q1.file) : null;\n        const medianRows = median ? getDataRows(fileDataMap, median.file) : null;\n        const q3Rows = q3 ? getDataRows(fileDataMap, q3.file) : null;\n        const maxRows = max ? getDataRows(fileDataMap, max.file) : null;\n        seriesData = seriesList.map(ser => {\n            return xData.map((cat, idx) => {\n                // 按分组和系列查找对应行\n                let rowIdx = -1;\n                for (let i = 0; i < catRows.length; i++) {\n                    const catVal = catRows[i][category.field];\n                    const serVal = seriesRows ? seriesRows[i][series.field] : 'default';\n                    if (catVal === cat && serVal === ser) {\n                        rowIdx = i;\n                        break;\n                    }\n                }\n                if (rowIdx === -1) return [null, null, null, null, null];\n                return [\n                    minRows ? parseFloat(minRows[rowIdx][min.field]) : null,\n                    q1Rows ? parseFloat(q1Rows[rowIdx][q1.field]) : null,\n                    medianRows ? parseFloat(medianRows[rowIdx][median.field]) : null,\n                    q3Rows ? parseFloat(q3Rows[rowIdx][q3.field]) : null,\n                    maxRows ? parseFloat(maxRows[rowIdx][max.field]) : null\n                ];\n            });\n        });\n    }\n\n    c\n\n    return {\n        xData,\n        seriesList,\n        yDataArr: [],\n        mergeType: 'boxplot',\n        seriesData // seriesData[系列idx][分组idx] = [min, q1, median, q3, max]\n    };\n}\n\n// ---------------- 图表类型分发器 ----------------\n\nconst chartTypeHandlers = {\n    Line: xyChartHandler,\n    Bar: xyChartHandler,\n    Pie: pieChartHandler,\n    Scatter: xyChartHandler,\n    Candlestick: candlestickChartHandler,\n    Heatmap: heatmapChartHandler,\n    Radar: radarChartHandler,\n    Boxplot: boxplotChartHandler,\n    // 其他类型可继续扩展\n};\n\n/**\n * 主入口：合并多文件数据，返回 { xData, yDataArr, mergeType, seriesData }\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {string} [nullHandlingType]\n * @param {Object} [options] - 可选项：filterPlugin, nullHandlingModule\n * @returns {Object}\n */\nexport function mergeChartData(config, fileDataMap, nullHandlingType = 'ignore', options = {}) {\n    validateParams(config, fileDataMap);\n    let chartType = config.type;\n\n    console.log('[mergeChartData] Inferred chart type:', chartType);\n\n    const handler = chartTypeHandlers[chartType] || xyChartHandler;\n\n    console.log('[mergeChartData] Handler:', handler);\n\n    return handler(config, fileDataMap, { ...options, nullHandlingType });\n}\n\n// applyFiltersToRows 已被插件化，见 defaultFilterPlugin\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}