{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, computed, watch } from 'vue';\nexport default {\n  __name: 'DataMappingPanel',\n  props: {\n    selectedChartType: {\n      type: String,\n      default: ''\n    },\n    workspaceFiles: {\n      type: Array,\n      default: () => []\n    }\n  },\n  emits: ['chart-config-change', 'generate-chart'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n    const emit = __emit;\n\n    // 渲染模式\n    const renderMode = ref('realtime');\n\n    // 展开的配置区域\n    const expandedSections = ref({\n      filter: false,\n      advanced: false\n    });\n\n    // 拖拽状态\n    const dragOverArea = ref(null);\n\n    // 数据过滤配置\n    const dataFilter = ref({\n      mode: 'all',\n      // all, range, condition\n      range: {\n        start: 1,\n        end: 100\n      },\n      conditions: []\n    });\n\n    // 基础配置区域\n    const basicConfigAreas = ref([{\n      key: 'x',\n      label: 'X轴',\n      type: 'category',\n      required: true,\n      multiple: false,\n      mappings: [],\n      error: false\n    }, {\n      key: 'y',\n      label: 'Y轴',\n      type: 'value',\n      required: true,\n      multiple: false,\n      mappings: [],\n      error: false\n    }, {\n      key: 'series',\n      label: '数据系列',\n      type: 'value',\n      required: false,\n      multiple: true,\n      mappings: [],\n      error: false\n    }]);\n\n    // 高级配置区域\n    const advancedConfigAreas = ref([{\n      key: 'color',\n      label: '颜色分组',\n      type: 'category',\n      required: false,\n      multiple: false,\n      mappings: []\n    }, {\n      key: 'size',\n      label: '大小映射',\n      type: 'value',\n      required: false,\n      multiple: false,\n      mappings: []\n    }, {\n      key: 'tooltip',\n      label: '提示信息',\n      type: 'any',\n      required: false,\n      multiple: true,\n      mappings: []\n    }]);\n\n    // 计算可用列\n    const availableColumns = computed(() => {\n      const columns = [];\n      props.workspaceFiles.forEach(file => {\n        if (file.previewData && file.previewData.length > 0) {\n          const columnNames = Object.keys(file.previewData[0]);\n          columnNames.forEach(name => {\n            columns.push({\n              name,\n              fileName: file.name,\n              fileId: file.id\n            });\n          });\n        }\n      });\n      return columns;\n    });\n\n    // 计算过滤后的数据数量\n    const filteredDataCount = computed(() => {\n      // 这里应该根据过滤条件计算实际的数据数量\n      // 暂时返回一个示例值\n      return 100;\n    });\n\n    // 计算是否可以生成图表\n    const canGenerateChart = computed(() => {\n      return basicConfigAreas.value.filter(area => area.required).every(area => area.mappings.length > 0);\n    });\n\n    // 当选择的图表类型改变时，更新配置区域\n    watch(() => props.selectedChartType, newType => {\n      updateConfigAreas(newType);\n    }, {\n      immediate: true\n    });\n\n    // 实时模式下监听配置变化\n    watch([basicConfigAreas, advancedConfigAreas, dataFilter], () => {\n      if (renderMode.value === 'realtime') {\n        generateChart();\n      }\n    }, {\n      deep: true\n    });\n\n    // 更新配置区域\n    function updateConfigAreas(chartType) {\n      const chartConfigs = {\n        'Line Chart': {\n          basic: [{\n            key: 'x',\n            label: 'X轴',\n            type: 'category',\n            required: true,\n            multiple: false\n          }, {\n            key: 'y',\n            label: 'Y轴',\n            type: 'value',\n            required: true,\n            multiple: false\n          }, {\n            key: 'series',\n            label: '数据系列',\n            type: 'value',\n            required: false,\n            multiple: true\n          }],\n          advanced: [{\n            key: 'color',\n            label: '颜色分组',\n            type: 'category',\n            required: false,\n            multiple: false\n          }, {\n            key: 'tooltip',\n            label: '提示信息',\n            type: 'any',\n            required: false,\n            multiple: true\n          }]\n        },\n        'Bar Chart': {\n          basic: [{\n            key: 'x',\n            label: 'X轴',\n            type: 'category',\n            required: true,\n            multiple: false\n          }, {\n            key: 'y',\n            label: 'Y轴',\n            type: 'value',\n            required: true,\n            multiple: false\n          }, {\n            key: 'series',\n            label: '数据系列',\n            type: 'value',\n            required: false,\n            multiple: true\n          }],\n          advanced: [{\n            key: 'color',\n            label: '颜色分组',\n            type: 'category',\n            required: false,\n            multiple: false\n          }, {\n            key: 'stack',\n            label: '堆叠分组',\n            type: 'category',\n            required: false,\n            multiple: false\n          }, {\n            key: 'tooltip',\n            label: '提示信息',\n            type: 'any',\n            required: false,\n            multiple: true\n          }]\n        },\n        'Pie Chart': {\n          basic: [{\n            key: 'category',\n            label: '分类',\n            type: 'category',\n            required: true,\n            multiple: false\n          }, {\n            key: 'value',\n            label: '数值',\n            type: 'value',\n            required: true,\n            multiple: false\n          }],\n          advanced: [{\n            key: 'tooltip',\n            label: '提示信息',\n            type: 'any',\n            required: false,\n            multiple: true\n          }]\n        },\n        'Scatter Plot': {\n          basic: [{\n            key: 'x',\n            label: 'X轴',\n            type: 'value',\n            required: true,\n            multiple: false\n          }, {\n            key: 'y',\n            label: 'Y轴',\n            type: 'value',\n            required: true,\n            multiple: false\n          }],\n          advanced: [{\n            key: 'color',\n            label: '颜色分组',\n            type: 'category',\n            required: false,\n            multiple: false\n          }, {\n            key: 'size',\n            label: '大小映射',\n            type: 'value',\n            required: false,\n            multiple: false\n          }, {\n            key: 'tooltip',\n            label: '提示信息',\n            type: 'any',\n            required: false,\n            multiple: true\n          }]\n        }\n      };\n      const config = chartConfigs[chartType] || chartConfigs['Line Chart'];\n\n      // 保持现有的映射，只更新结构\n      const preserveMappings = (areas, newConfig) => {\n        return newConfig.map(newArea => {\n          const existingArea = areas.find(area => area.key === newArea.key);\n          return {\n            ...newArea,\n            mappings: existingArea ? existingArea.mappings : [],\n            error: false\n          };\n        });\n      };\n      basicConfigAreas.value = preserveMappings(basicConfigAreas.value, config.basic);\n      advancedConfigAreas.value = preserveMappings(advancedConfigAreas.value, config.advanced);\n    }\n\n    // 切换渲染模式\n    function toggleRenderMode(mode) {\n      renderMode.value = mode;\n      emit('chart-config-change', {\n        renderMode: mode\n      });\n    }\n\n    // 切换配置区域展开/折叠\n    function toggleSection(section) {\n      expandedSections.value[section] = !expandedSections.value[section];\n    }\n\n    // 处理拖拽\n    function handleDragOver(areaKey) {\n      dragOverArea.value = areaKey;\n    }\n    function handleDragLeave() {\n      dragOverArea.value = null;\n    }\n    function handleDrop(event, areaKey) {\n      event.preventDefault();\n      dragOverArea.value = null;\n      try {\n        const data = JSON.parse(event.dataTransfer.getData('text/plain'));\n        if (data.type === 'column') {\n          addMapping(areaKey, data);\n        }\n      } catch (error) {\n        console.error('拖拽数据解析失败:', error);\n      }\n    }\n\n    // 添加映射\n    function addMapping(areaKey, columnData) {\n      const allAreas = [...basicConfigAreas.value, ...advancedConfigAreas.value];\n      const targetArea = allAreas.find(area => area.key === areaKey);\n      if (!targetArea) return;\n\n      // 检查是否已经存在相同的映射\n      const exists = targetArea.mappings.some(mapping => mapping.fileId === columnData.fileId && mapping.columnName === columnData.columnName);\n      if (exists) return;\n      const mapping = {\n        fileId: columnData.fileId,\n        fileName: columnData.fileName,\n        columnName: columnData.columnName,\n        columnType: columnData.columnType,\n        dataCount: getDataCount(columnData.fileId, columnData.columnName)\n      };\n      if (targetArea.multiple) {\n        targetArea.mappings.push(mapping);\n      } else {\n        targetArea.mappings = [mapping];\n      }\n\n      // 清除错误状态\n      targetArea.error = false;\n\n      // 验证配置\n      validateConfig();\n    }\n\n    // 移除映射\n    function removeMapping(areaKey, index) {\n      const allAreas = [...basicConfigAreas.value, ...advancedConfigAreas.value];\n      const targetArea = allAreas.find(area => area.key === areaKey);\n      if (targetArea) {\n        targetArea.mappings.splice(index, 1);\n        validateConfig();\n      }\n    }\n\n    // 获取数据计数\n    function getDataCount(fileId, columnName) {\n      const file = props.workspaceFiles.find(f => f.id === fileId);\n      if (file && file.previewData) {\n        return file.previewData.filter(row => row[columnName] !== null && row[columnName] !== undefined).length;\n      }\n      return 0;\n    }\n\n    // 验证配置\n    function validateConfig() {\n      basicConfigAreas.value.forEach(area => {\n        if (area.required && area.mappings.length === 0) {\n          area.error = true;\n        } else {\n          area.error = false;\n        }\n      });\n    }\n\n    // 清空所有映射\n    function clearAllMappings() {\n      basicConfigAreas.value.forEach(area => {\n        area.mappings = [];\n        area.error = false;\n      });\n      advancedConfigAreas.value.forEach(area => {\n        area.mappings = [];\n      });\n    }\n\n    // 生成图表\n    function generateChart() {\n      if (!canGenerateChart.value) {\n        validateConfig();\n        return;\n      }\n      const config = {\n        chartType: props.selectedChartType,\n        basicConfig: basicConfigAreas.value.reduce((acc, area) => {\n          acc[area.key] = area.mappings;\n          return acc;\n        }, {}),\n        advancedConfig: advancedConfigAreas.value.reduce((acc, area) => {\n          acc[area.key] = area.mappings;\n          return acc;\n        }, {}),\n        dataFilter: dataFilter.value,\n        renderMode: renderMode.value\n      };\n      emit('generate-chart', config);\n    }\n\n    // 获取图表图标\n    function getChartIcon(chartType) {\n      const icons = {\n        'Line Chart': '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><polyline points=\"22,6 13,13 8,8 2,14\"/></svg>',\n        'Bar Chart': '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/><path d=\"M7 7h10v10H7z\"/></svg>',\n        'Pie Chart': '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><path d=\"M21.21 15.89A10 10 0 1 1 8 2.83\"/><path d=\"M22 12A10 10 0 0 0 12 2v10z\"/></svg>',\n        'Scatter Plot': '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><circle cx=\"12\" cy=\"12\" r=\"3\"/><circle cx=\"19\" cy=\"5\" r=\"2\"/><circle cx=\"5\" cy=\"19\" r=\"2\"/><circle cx=\"10.5\" cy=\"7.5\" r=\"1.5\"/></svg>'\n      };\n      return icons[chartType] || icons['Line Chart'];\n    }\n\n    // 添加条件\n    function addCondition() {\n      dataFilter.value.conditions.push({\n        column: '',\n        operator: 'equals',\n        value: ''\n      });\n    }\n\n    // 移除条件\n    function removeCondition(index) {\n      dataFilter.value.conditions.splice(index, 1);\n      applyFilter();\n    }\n\n    // 应用过滤\n    function applyFilter() {\n      // 这里应该根据过滤条件实际过滤数据\n      // 暂时只触发重新渲染\n      if (renderMode.value === 'realtime') {\n        generateChart();\n      }\n    }\n    const __returned__ = {\n      props,\n      emit,\n      renderMode,\n      expandedSections,\n      dragOverArea,\n      dataFilter,\n      basicConfigAreas,\n      advancedConfigAreas,\n      availableColumns,\n      filteredDataCount,\n      canGenerateChart,\n      updateConfigAreas,\n      toggleRenderMode,\n      toggleSection,\n      handleDragOver,\n      handleDragLeave,\n      handleDrop,\n      addMapping,\n      removeMapping,\n      getDataCount,\n      validateConfig,\n      clearAllMappings,\n      generateChart,\n      getChartIcon,\n      addCondition,\n      removeCondition,\n      applyFilter,\n      ref,\n      computed,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","props","__props","emit","__emit","renderMode","expandedSections","filter","advanced","dragOverArea","dataFilter","mode","range","start","end","conditions","basicConfigAreas","key","label","type","required","multiple","mappings","error","advancedConfigAreas","availableColumns","columns","workspaceFiles","forEach","file","previewData","length","columnNames","Object","keys","name","push","fileName","fileId","id","filteredDataCount","canGenerateChart","value","area","every","selectedChartType","newType","updateConfigAreas","immediate","generateChart","deep","chartType","chartConfigs","basic","config","preserveMappings","areas","newConfig","map","newArea","existingArea","find","toggleRenderMode","toggleSection","section","handleDragOver","areaKey","handleDragLeave","handleDrop","event","preventDefault","data","JSON","parse","dataTransfer","getData","addMapping","console","columnData","allAreas","targetArea","exists","some","mapping","columnName","columnType","dataCount","getDataCount","validateConfig","removeMapping","index","splice","f","row","undefined","clearAllMappings","basicConfig","reduce","acc","advancedConfig","getChartIcon","icons","addCondition","column","operator","removeCondition","applyFilter"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/DataMappingPanel.vue"],"sourcesContent":["<template>\n<div class=\"data-mapping-panel\">\n  <div class=\"panel-header\">\n    <h3>数据映射配置</h3>\n    <div class=\"render-mode-toggle\">\n      <button\n        :class=\"{ active: renderMode === 'realtime' }\"\n        @click=\"toggleRenderMode('realtime')\"\n        title=\"实时渲染\"\n      >\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <path d=\"M13 2L3 14h9l-1 8 10-12h-9l1-8z\"/>\n        </svg>\n        实时\n      </button>\n      <button\n        :class=\"{ active: renderMode === 'manual' }\"\n        @click=\"toggleRenderMode('manual')\"\n        title=\"手动渲染\"\n      >\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <polygon points=\"5,3 19,12 5,21\"/>\n        </svg>\n        手动\n      </button>\n    </div>\n  </div>\n\n  <div class=\"mapping-content\">\n    <!-- 基础配置区域 -->\n    <div class=\"config-section basic-config\">\n      <div class=\"section-header\">\n        <h4>基础配置</h4>\n        <div class=\"chart-type-indicator\" v-if=\"selectedChartType\">\n          <span class=\"chart-icon\" v-html=\"getChartIcon(selectedChartType)\"></span>\n          <span class=\"chart-name\">{{ selectedChartType }}</span>\n        </div>\n      </div>\n      <div class=\"config-areas\">\n        <div\n          v-for=\"area in basicConfigAreas\" \n          :key=\"area.key\"\n          class=\"drop-area\"\n          :class=\"{\n            'has-mapping': area.mappings.length > 0,\n            'drag-over': dragOverArea === area.key,\n            'required': area.required,\n            'error': area.error\n          }\"\n          @drop=\"handleDrop($event, area.key)\"\n          @dragover.prevent=\"handleDragOver(area.key)\"\n          @dragleave=\"handleDragLeave\"\n        >\n          <div class=\"area-header\">\n            <span class=\"area-label\">{{ area.label }}</span>\n            <span v-if=\"area.required\" class=\"required-indicator\">*</span>\n            <span class=\"area-type\">{{ area.type }}</span>\n          </div>\n          \n          <div class=\"area-content\">\n            <div\n              v-if=\"area.mappings.length === 0\"\n              class=\"drop-placeholder\"\n            >\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/>\n                <polyline points=\"7,10 12,15 17,10\"/>\n                <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"/>\n              </svg>\n              <span>拖拽列到此处</span>\n            </div>\n            \n            <div\n              v-else\n              class=\"mapping-items\"\n            >\n              <div\n                v-for=\"(mapping, index) in area.mappings\" \n                :key=\"`${mapping.fileId}-${mapping.columnName}`\"\n                class=\"mapping-item\"\n                :class=\"{ 'multiple-allowed': area.multiple }\"\n              >\n                <div class=\"mapping-info\">\n                  <div class=\"mapping-header\">\n                    <span class=\"column-name\">{{ mapping.columnName }}</span>\n                    <span class=\"column-type\" :class=\"mapping.columnType\">{{ mapping.columnType }}</span>\n                  </div>\n                  <div class=\"mapping-source\">\n                    <span class=\"file-name\">{{ mapping.fileName }}</span>\n                    <span class=\"data-count\">{{ mapping.dataCount }} 行</span>\n                  </div>\n                </div>\n                \n                <button\n                  class=\"remove-mapping-btn\"\n                  @click=\"removeMapping(area.key, index)\"\n                  title=\"移除映射\"\n                >\n                  <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"/>\n                    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"/>\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 数据过滤配置 -->\n    <div class=\"config-section filter-config\">\n      <div class=\"section-header collapsible\" @click=\"toggleSection('filter')\">\n        <h4>数据过滤</h4>\n        <button class=\"collapse-btn\" :class=\"{ expanded: expandedSections.filter }\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n            <polyline points=\"6,9 12,15 18,9\"/>\n          </svg>\n        </button>\n      </div>\n      \n      <div v-if=\"expandedSections.filter\" class=\"section-content\">\n        <div class=\"filter-options\">\n          <div class=\"filter-mode\">\n            <label>\n              <input\n                type=\"radio\"\n                value=\"all\"\n                v-model=\"dataFilter.mode\"\n                @change=\"applyFilter\"\n              />\n              全部数据\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"range\"\n                v-model=\"dataFilter.mode\"\n                @change=\"applyFilter\"\n              />\n              范围选择\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"condition\"\n                v-model=\"dataFilter.mode\"\n                @change=\"applyFilter\"\n              />\n              条件过滤\n            </label>\n          </div>\n          \n          <div v-if=\"dataFilter.mode === 'range'\" class=\"range-filter\">\n            <div class=\"range-inputs\">\n              <input\n                type=\"number\"\n                placeholder=\"起始行\"\n                v-model.number=\"dataFilter.range.start\"\n                @change=\"applyFilter\"\n              />\n              <span>到</span>\n              <input\n                type=\"number\"\n                placeholder=\"结束行\"\n                v-model.number=\"dataFilter.range.end\"\n                @change=\"applyFilter\"\n              />\n            </div>\n          </div>\n          \n          <div v-if=\"dataFilter.mode === 'condition'\" class=\"condition-filter\">\n            <div class=\"condition-builder\">\n              <div\n                v-for=\"(condition, index) in dataFilter.conditions\"\n                :key=\"index\"\n                class=\"condition-item\"\n              >\n                <select v-model=\"condition.column\" @change=\"applyFilter\">\n                  <option value=\"\">选择列</option>\n                  <option\n                    v-for=\"column in availableColumns\"\n                    :key=\"column.name\"\n                    :value=\"column.name\"\n                  >\n                    {{ column.name }}\n                  </option>\n                </select>\n                <select v-model=\"condition.operator\" @change=\"applyFilter\">\n                  <option value=\"equals\">等于</option>\n                  <option value=\"not_equals\">不等于</option>\n                  <option value=\"greater\">大于</option>\n                  <option value=\"less\">小于</option>\n                  <option value=\"contains\">包含</option>\n                  <option value=\"not_contains\">不包含</option>\n                </select>\n                <input\n                  type=\"text\"\n                  placeholder=\"值\"\n                  v-model=\"condition.value\"\n                  @change=\"applyFilter\"\n                />\n                <button\n                  class=\"remove-condition-btn\"\n                  @click=\"removeCondition(index)\"\n                >\n                  ×\n                </button>\n              </div>\n              <button class=\"add-condition-btn\" @click=\"addCondition\">\n                + 添加条件\n              </button>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"filter-result\">\n          <span>过滤结果: {{ filteredDataCount }} 行</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- 高级配置区域 -->\n    <div class=\"config-section advanced-config\">\n      <div class=\"section-header collapsible\" @click=\"toggleSection('advanced')\">\n        <h4>高级配置</h4>\n        <button class=\"collapse-btn\" :class=\"{ expanded: expandedSections.advanced }\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n            <polyline points=\"6,9 12,15 18,9\"/>\n          </svg>\n        </button>\n      </div>\n      \n      <div v-if=\"expandedSections.advanced\" class=\"section-content\">\n        <div class=\"advanced-areas\">\n          <div\n            v-for=\"area in advancedConfigAreas\"\n            :key=\"area.key\"\n            class=\"drop-area advanced\"\n            :class=\"{\n              'has-mapping': area.mappings.length > 0,\n              'drag-over': dragOverArea === area.key\n            }\"\n            @drop=\"handleDrop($event, area.key)\"\n            @dragover.prevent=\"handleDragOver(area.key)\"\n            @dragleave=\"handleDragLeave\"\n          >\n            <div class=\"area-header\">\n              <span class=\"area-label\">{{ area.label }}</span>\n              <span class=\"area-type\">{{ area.type }}</span>\n            </div>\n            \n            <div class=\"area-content\">\n              <div\n                v-if=\"area.mappings.length === 0\"\n                class=\"drop-placeholder small\"\n              >\n                <span>可选配置</span>\n              </div>\n              \n              <div\n                v-else\n                class=\"mapping-items\"\n              >\n                <div\n                  v-for=\"(mapping, index) in area.mappings\"\n                  :key=\"`${mapping.fileId}-${mapping.columnName}`\"\n                  class=\"mapping-item small\"\n                >\n                  <div class=\"mapping-info\">\n                    <span class=\"column-name\">{{ mapping.columnName }}</span>\n                    <span class=\"file-name\">{{ mapping.fileName }}</span>\n                  </div>\n                  \n                  <button\n                    class=\"remove-mapping-btn\"\n                    @click=\"removeMapping(area.key, index)\"\n                  >\n                    ×\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- 操作按钮区域 -->\n  <div class=\"panel-footer\">\n    <button\n      class=\"action-btn secondary\"\n      @click=\"clearAllMappings\"\n    >\n      清空配置\n    </button>\n    <button\n      class=\"action-btn primary\"\n      :disabled=\"!canGenerateChart\"\n      @click=\"generateChart\"\n    >\n      <svg v-if=\"renderMode === 'manual'\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        <polygon points=\"5,3 19,12 5,21\"/>\n      </svg>\n      {{ renderMode === 'manual' ? '生成图表' : '应用配置' }}\n    </button>\n  </div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch } from 'vue'\n\nconst props = defineProps({\n  selectedChartType: {\n    type: String,\n    default: ''\n  },\n  workspaceFiles: {\n    type: Array,\n    default: () => []\n  }\n})\n\nconst emit = defineEmits(['chart-config-change', 'generate-chart'])\n\n// 渲染模式\nconst renderMode = ref('realtime')\n\n// 展开的配置区域\nconst expandedSections = ref({\n  filter: false,\n  advanced: false\n})\n\n// 拖拽状态\nconst dragOverArea = ref(null)\n\n// 数据过滤配置\nconst dataFilter = ref({\n  mode: 'all', // all, range, condition\n  range: {\n    start: 1,\n    end: 100\n  },\n  conditions: []\n})\n\n// 基础配置区域\nconst basicConfigAreas = ref([\n  {\n    key: 'x',\n    label: 'X轴',\n    type: 'category',\n    required: true,\n    multiple: false,\n    mappings: [],\n    error: false\n  },\n  {\n    key: 'y',\n    label: 'Y轴',\n    type: 'value',\n    required: true,\n    multiple: false,\n    mappings: [],\n    error: false\n  },\n  {\n    key: 'series',\n    label: '数据系列',\n    type: 'value',\n    required: false,\n    multiple: true,\n    mappings: [],\n    error: false\n  }\n])\n\n// 高级配置区域\nconst advancedConfigAreas = ref([\n  {\n    key: 'color',\n    label: '颜色分组',\n    type: 'category',\n    required: false,\n    multiple: false,\n    mappings: []\n  },\n  {\n    key: 'size',\n    label: '大小映射',\n    type: 'value',\n    required: false,\n    multiple: false,\n    mappings: []\n  },\n  {\n    key: 'tooltip',\n    label: '提示信息',\n    type: 'any',\n    required: false,\n    multiple: true,\n    mappings: []\n  }\n])\n\n// 计算可用列\nconst availableColumns = computed(() => {\n  const columns = []\n  props.workspaceFiles.forEach(file => {\n    if (file.previewData && file.previewData.length > 0) {\n      const columnNames = Object.keys(file.previewData[0])\n      columnNames.forEach(name => {\n        columns.push({\n          name,\n          fileName: file.name,\n          fileId: file.id\n        })\n      })\n    }\n  })\n  return columns\n})\n\n// 计算过滤后的数据数量\nconst filteredDataCount = computed(() => {\n  // 这里应该根据过滤条件计算实际的数据数量\n  // 暂时返回一个示例值\n  return 100\n})\n\n// 计算是否可以生成图表\nconst canGenerateChart = computed(() => {\n  return basicConfigAreas.value.filter(area => area.required).every(area => area.mappings.length > 0)\n})\n\n// 当选择的图表类型改变时，更新配置区域\nwatch(() => props.selectedChartType, (newType) => {\n  updateConfigAreas(newType)\n}, { immediate: true })\n\n// 实时模式下监听配置变化\nwatch([basicConfigAreas, advancedConfigAreas, dataFilter], () => {\n  if (renderMode.value === 'realtime') {\n    generateChart()\n  }\n}, { deep: true })\n\n// 更新配置区域\nfunction updateConfigAreas(chartType) {\n  const chartConfigs = {\n    'Line Chart': {\n      basic: [\n        { key: 'x', label: 'X轴', type: 'category', required: true, multiple: false },\n        { key: 'y', label: 'Y轴', type: 'value', required: true, multiple: false },\n        { key: 'series', label: '数据系列', type: 'value', required: false, multiple: true }\n      ],\n      advanced: [\n        { key: 'color', label: '颜色分组', type: 'category', required: false, multiple: false },\n        { key: 'tooltip', label: '提示信息', type: 'any', required: false, multiple: true }\n      ]\n    },\n    'Bar Chart': {\n      basic: [\n        { key: 'x', label: 'X轴', type: 'category', required: true, multiple: false },\n        { key: 'y', label: 'Y轴', type: 'value', required: true, multiple: false },\n        { key: 'series', label: '数据系列', type: 'value', required: false, multiple: true }\n      ],\n      advanced: [\n        { key: 'color', label: '颜色分组', type: 'category', required: false, multiple: false },\n        { key: 'stack', label: '堆叠分组', type: 'category', required: false, multiple: false },\n        { key: 'tooltip', label: '提示信息', type: 'any', required: false, multiple: true }\n      ]\n    },\n    'Pie Chart': {\n      basic: [\n        { key: 'category', label: '分类', type: 'category', required: true, multiple: false },\n        { key: 'value', label: '数值', type: 'value', required: true, multiple: false }\n      ],\n      advanced: [\n        { key: 'tooltip', label: '提示信息', type: 'any', required: false, multiple: true }\n      ]\n    },\n    'Scatter Plot': {\n      basic: [\n        { key: 'x', label: 'X轴', type: 'value', required: true, multiple: false },\n        { key: 'y', label: 'Y轴', type: 'value', required: true, multiple: false }\n      ],\n      advanced: [\n        { key: 'color', label: '颜色分组', type: 'category', required: false, multiple: false },\n        { key: 'size', label: '大小映射', type: 'value', required: false, multiple: false },\n        { key: 'tooltip', label: '提示信息', type: 'any', required: false, multiple: true }\n      ]\n    }\n  }\n  \n  const config = chartConfigs[chartType] || chartConfigs['Line Chart']\n  \n  // 保持现有的映射，只更新结构\n  const preserveMappings = (areas, newConfig) => {\n    return newConfig.map(newArea => {\n      const existingArea = areas.find(area => area.key === newArea.key)\n      return {\n        ...newArea,\n        mappings: existingArea ? existingArea.mappings : [],\n        error: false\n      }\n    })\n  }\n  \n  basicConfigAreas.value = preserveMappings(basicConfigAreas.value, config.basic)\n  advancedConfigAreas.value = preserveMappings(advancedConfigAreas.value, config.advanced)\n}\n\n// 切换渲染模式\nfunction toggleRenderMode(mode) {\n  renderMode.value = mode\n  emit('chart-config-change', { renderMode: mode })\n}\n\n// 切换配置区域展开/折叠\nfunction toggleSection(section) {\n  expandedSections.value[section] = !expandedSections.value[section]\n}\n\n// 处理拖拽\nfunction handleDragOver(areaKey) {\n  dragOverArea.value = areaKey\n}\n\nfunction handleDragLeave() {\n  dragOverArea.value = null\n}\n\nfunction handleDrop(event, areaKey) {\n  event.preventDefault()\n  dragOverArea.value = null\n  \n  try {\n    const data = JSON.parse(event.dataTransfer.getData('text/plain'))\n    if (data.type === 'column') {\n      addMapping(areaKey, data)\n    }\n  } catch (error) {\n    console.error('拖拽数据解析失败:', error)\n  }\n}\n\n// 添加映射\nfunction addMapping(areaKey, columnData) {\n  const allAreas = [...basicConfigAreas.value, ...advancedConfigAreas.value]\n  const targetArea = allAreas.find(area => area.key === areaKey)\n  \n  if (!targetArea) return\n  \n  // 检查是否已经存在相同的映射\n  const exists = targetArea.mappings.some(mapping => \n    mapping.fileId === columnData.fileId && mapping.columnName === columnData.columnName\n  )\n  \n  if (exists) return\n  \n  const mapping = {\n    fileId: columnData.fileId,\n    fileName: columnData.fileName,\n    columnName: columnData.columnName,\n    columnType: columnData.columnType,\n    dataCount: getDataCount(columnData.fileId, columnData.columnName)\n  }\n  \n  if (targetArea.multiple) {\n    targetArea.mappings.push(mapping)\n  } else {\n    targetArea.mappings = [mapping]\n  }\n  \n  // 清除错误状态\n  targetArea.error = false\n  \n  // 验证配置\n  validateConfig()\n}\n\n// 移除映射\nfunction removeMapping(areaKey, index) {\n  const allAreas = [...basicConfigAreas.value, ...advancedConfigAreas.value]\n  const targetArea = allAreas.find(area => area.key === areaKey)\n  \n  if (targetArea) {\n    targetArea.mappings.splice(index, 1)\n    validateConfig()\n  }\n}\n\n// 获取数据计数\nfunction getDataCount(fileId, columnName) {\n  const file = props.workspaceFiles.find(f => f.id === fileId)\n  if (file && file.previewData) {\n    return file.previewData.filter(row => row[columnName] !== null && row[columnName] !== undefined).length\n  }\n  return 0\n}\n\n// 验证配置\nfunction validateConfig() {\n  basicConfigAreas.value.forEach(area => {\n    if (area.required && area.mappings.length === 0) {\n      area.error = true\n    } else {\n      area.error = false\n    }\n  })\n}\n\n// 清空所有映射\nfunction clearAllMappings() {\n  basicConfigAreas.value.forEach(area => {\n    area.mappings = []\n    area.error = false\n  })\n  advancedConfigAreas.value.forEach(area => {\n    area.mappings = []\n  })\n}\n\n// 生成图表\nfunction generateChart() {\n  if (!canGenerateChart.value) {\n    validateConfig()\n    return\n  }\n  \n  const config = {\n    chartType: props.selectedChartType,\n    basicConfig: basicConfigAreas.value.reduce((acc, area) => {\n      acc[area.key] = area.mappings\n      return acc\n    }, {}),\n    advancedConfig: advancedConfigAreas.value.reduce((acc, area) => {\n      acc[area.key] = area.mappings\n      return acc\n    }, {}),\n    dataFilter: dataFilter.value,\n    renderMode: renderMode.value\n  }\n  \n  emit('generate-chart', config)\n}\n\n// 获取图表图标\nfunction getChartIcon(chartType) {\n  const icons = {\n    'Line Chart': '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><polyline points=\"22,6 13,13 8,8 2,14\"/></svg>',\n    'Bar Chart': '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/><path d=\"M7 7h10v10H7z\"/></svg>',\n    'Pie Chart': '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><path d=\"M21.21 15.89A10 10 0 1 1 8 2.83\"/><path d=\"M22 12A10 10 0 0 0 12 2v10z\"/></svg>',\n    'Scatter Plot': '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><circle cx=\"12\" cy=\"12\" r=\"3\"/><circle cx=\"19\" cy=\"5\" r=\"2\"/><circle cx=\"5\" cy=\"19\" r=\"2\"/><circle cx=\"10.5\" cy=\"7.5\" r=\"1.5\"/></svg>'\n  }\n  return icons[chartType] || icons['Line Chart']\n}\n\n// 添加条件\nfunction addCondition() {\n  dataFilter.value.conditions.push({\n    column: '',\n    operator: 'equals',\n    value: ''\n  })\n}\n\n// 移除条件\nfunction removeCondition(index) {\n  dataFilter.value.conditions.splice(index, 1)\n  applyFilter()\n}\n\n// 应用过滤\nfunction applyFilter() {\n  // 这里应该根据过滤条件实际过滤数据\n  // 暂时只触发重新渲染\n  if (renderMode.value === 'realtime') {\n    generateChart()\n  }\n}\n</script>\n\n<style scoped>\n.data-mapping-panel {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background: var(--bg-color);\n  border-left: 1px solid var(--border-color);\n}\n\n.panel-header {\n  padding: 16px;\n  border-bottom: 1px solid var(--border-color);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.panel-header h3 {\n  margin: 0;\n  font-size: 16px;\n  color: var(--text-color);\n}\n\n.render-mode-toggle {\n  display: flex;\n  gap: 4px;\n  background: rgba(0, 0, 0, 0.05);\n  padding: 2px;\n  border-radius: 6px;\n}\n\n[data-theme=\"dark\"] .render-mode-toggle {\n  background: rgba(255, 255, 255, 0.05);\n}\n\n.render-mode-toggle button {\n  background: none;\n  border: none;\n  padding: 6px 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  color: var(--text-secondary);\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  transition: all 0.2s;\n}\n\n.render-mode-toggle button:hover {\n  background: rgba(0, 0, 0, 0.05);\n}\n\n.render-mode-toggle button.active {\n  background: var(--primary-color);\n  color: white;\n}\n\n[data-theme=\"dark\"] .render-mode-toggle button:hover {\n  background: rgba(255, 255, 255, 0.05);\n}\n\n.mapping-content {\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n}\n\n.config-section {\n  margin-bottom: 20px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n}\n\n.section-header.collapsible {\n  cursor: pointer;\n  padding: 8px 12px;\n  border-radius: 6px;\n  transition: background-color 0.2s;\n}\n\n.section-header.collapsible:hover {\n  background: rgba(0, 0, 0, 0.02);\n}\n\n[data-theme=\"dark\"] .section-header.collapsible:hover {\n  background: rgba(255, 255, 255, 0.02);\n}\n\n.section-header h4 {\n  margin: 0;\n  font-size: 14px;\n  color: var(--text-color);\n}\n\n.chart-type-indicator {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 12px;\n  color: var(--text-secondary);\n  background: rgba(59, 130, 246, 0.1);\n  padding: 4px 8px;\n  border-radius: 4px;\n}\n\n.chart-icon {\n  display: flex;\n  align-items: center;\n}\n\n.chart-icon svg {\n  color: #3b82f6;\n}\n\n.collapse-btn {\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: var(--text-secondary);\n  transition: transform 0.2s;\n}\n\n.collapse-btn.expanded {\n  transform: rotate(180deg);\n}\n\n.config-areas {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.advanced-areas {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\n  gap: 12px;\n}\n\n.drop-area {\n  border: 2px dashed var(--border-color);\n  border-radius: 8px;\n  padding: 12px;\n  transition: all 0.2s;\n  min-height: 80px;\n  background: rgba(0, 0, 0, 0.01);\n}\n\n.drop-area.advanced {\n  min-height: 60px;\n  padding: 8px;\n}\n\n.drop-area.drag-over {\n  border-color: var(--primary-color);\n  background: rgba(59, 130, 246, 0.05);\n}\n\n.drop-area.has-mapping {\n  border-color: var(--primary-color);\n  background: rgba(59, 130, 246, 0.02);\n}\n\n.drop-area.required.error {\n  border-color: #ef4444;\n  background: rgba(239, 68, 68, 0.02);\n}\n\n.area-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.area-label {\n  font-size: 13px;\n  font-weight: 500;\n  color: var(--text-color);\n}\n\n.required-indicator {\n  color: #ef4444;\n  font-size: 12px;\n}\n\n.area-type {\n  font-size: 11px;\n  color: var(--text-secondary);\n  background: rgba(0, 0, 0, 0.05);\n  padding: 2px 6px;\n  border-radius: 3px;\n}\n\n[data-theme=\"dark\"] .area-type {\n  background: rgba(255, 255, 255, 0.05);\n}\n\n.drop-placeholder {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  color: var(--text-secondary);\n  font-size: 12px;\n  text-align: center;\n  min-height: 60px;\n}\n\n.drop-placeholder.small {\n  min-height: 40px;\n  font-size: 11px;\n}\n\n.drop-placeholder svg {\n  opacity: 0.5;\n}\n\n.mapping-items {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.mapping-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: rgba(255, 255, 255, 0.8);\n  border: 1px solid var(--border-color);\n  border-radius: 6px;\n  padding: 8px;\n  transition: all 0.2s;\n}\n\n.mapping-item.small {\n  padding: 6px;\n  font-size: 12px;\n}\n\n[data-theme=\"dark\"] .mapping-item {\n  background: rgba(17, 24, 39, 0.8);\n}\n\n.mapping-item:hover {\n  background: rgba(59, 130, 246, 0.05);\n  border-color: var(--primary-color);\n}\n\n.mapping-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.mapping-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n}\n\n.column-name {\n  font-size: 13px;\n  font-weight: 500;\n  color: var(--text-color);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.column-type {\n  font-size: 10px;\n  padding: 2px 4px;\n  border-radius: 3px;\n  font-weight: 500;\n}\n\n.column-type.numeric {\n  background: rgba(16, 185, 129, 0.1);\n  color: #065f46;\n}\n\n.column-type.text {\n  background: rgba(59, 130, 246, 0.1);\n  color: #1e40af;\n}\n\n.column-type.date {\n  background: rgba(139, 92, 246, 0.1);\n  color: #6b46c1;\n}\n\n[data-theme=\"dark\"] .column-type.numeric {\n  background: rgba(16, 185, 129, 0.2);\n  color: #6ee7b7;\n}\n\n[data-theme=\"dark\"] .column-type.text {\n  background: rgba(59, 130, 246, 0.2);\n  color: #93c5fd;\n}\n\n[data-theme=\"dark\"] .column-type.date {\n  background: rgba(139, 92, 246, 0.2);\n  color: #c4b5fd;\n}\n\n.mapping-source {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 11px;\n  color: var(--text-secondary);\n}\n\n.file-name {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 100px;\n}\n\n.data-count {\n  font-weight: 500;\n}\n\n.remove-mapping-btn {\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: var(--text-secondary);\n  padding: 4px;\n  border-radius: 4px;\n  transition: all 0.2s;\n}\n\n.remove-mapping-btn:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: #ef4444;\n}\n\n/* 数据过滤样式 */\n.filter-options {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.filter-mode {\n  display: flex;\n  gap: 16px;\n}\n\n.filter-mode label {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 12px;\n  color: var(--text-color);\n  cursor: pointer;\n}\n\n.range-filter {\n  padding: 8px 12px;\n  background: rgba(0, 0, 0, 0.02);\n  border-radius: 6px;\n}\n\n[data-theme=\"dark\"] .range-filter {\n  background: rgba(255, 255, 255, 0.02);\n}\n\n.range-inputs {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.range-inputs input {\n  width: 80px;\n  padding: 4px 8px;\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  font-size: 12px;\n}\n\n.condition-filter {\n  padding: 8px 12px;\n  background: rgba(0, 0, 0, 0.02);\n  border-radius: 6px;\n}\n\n[data-theme=\"dark\"] .condition-filter {\n  background: rgba(255, 255, 255, 0.02);\n}\n\n.condition-item {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.condition-item select,\n.condition-item input {\n  padding: 4px 8px;\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  font-size: 12px;\n}\n\n.remove-condition-btn {\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #ef4444;\n  font-size: 16px;\n  padding: 4px;\n}\n\n.add-condition-btn {\n  background: none;\n  border: 1px dashed var(--border-color);\n  padding: 6px 12px;\n  border-radius: 4px;\n  cursor: pointer;\n  color: var(--text-secondary);\n  font-size: 12px;\n  transition: all 0.2s;\n}\n\n.add-condition-btn:hover {\n  border-color: var(--primary-color);\n  color: var(--primary-color);\n}\n\n.filter-result {\n  padding: 8px 12px;\n  background: rgba(59, 130, 246, 0.05);\n  border-radius: 6px;\n  font-size: 12px;\n  color: var(--text-color);\n  margin-top: 8px;\n}\n\n/* 底部按钮区域 */\n.panel-footer {\n  padding: 16px;\n  border-top: 1px solid var(--border-color);\n  display: flex;\n  gap: 12px;\n}\n\n.action-btn {\n  flex: 1;\n  padding: 10px 16px;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n}\n\n.action-btn.secondary {\n  background: rgba(0, 0, 0, 0.05);\n  color: var(--text-color);\n}\n\n.action-btn.secondary:hover {\n  background: rgba(0, 0, 0, 0.1);\n}\n\n.action-btn.primary {\n  background: var(--primary-color);\n  color: white;\n}\n\n.action-btn.primary:hover {\n  background: #2563eb;\n}\n\n.action-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n[data-theme=\"dark\"] .action-btn.secondary {\n  background: rgba(255, 255, 255, 0.05);\n}\n\n[data-theme=\"dark\"] .action-btn.secondary:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n/* 响应式适配 */\n@media (max-width: 768px) {\n  .advanced-areas {\n    grid-template-columns: 1fr;\n  }\n  \n  .filter-mode {\n    flex-direction: column;\n    gap: 8px;\n  }\n  \n  .condition-item {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  \n  .range-inputs {\n    flex-direction: column;\n  }\n  \n  .range-inputs input {\n    width: 100%;\n  }\n}\n</style>\n"],"mappings":";;;;;;;;;AAyTA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,KAAI;;;;;;;;;;;;;;;;;;;;IADzC;IAGA,MAAMC,KAAK,GAAGC,OAAA;IAWd,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,UAAU,GAAGP,GAAG,CAAC,UAAU;;IAEjC;IACA,MAAMQ,gBAAgB,GAAGR,GAAG,CAAC;MAC3BS,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE;IACZ,CAAC;;IAED;IACA,MAAMC,YAAY,GAAGX,GAAG,CAAC,IAAI;;IAE7B;IACA,MAAMY,UAAU,GAAGZ,GAAG,CAAC;MACrBa,IAAI,EAAE,KAAK;MAAE;MACbC,KAAK,EAAE;QACLC,KAAK,EAAE,CAAC;QACRC,GAAG,EAAE;MACP,CAAC;MACDC,UAAU,EAAE;IACd,CAAC;;IAED;IACA,MAAMC,gBAAgB,GAAGlB,GAAG,CAAC,CAC3B;MACEmB,GAAG,EAAE,GAAG;MACRC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE,UAAU;MAChBC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT,CAAC,EACD;MACEN,GAAG,EAAE,GAAG;MACRC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT,CAAC,EACD;MACEN,GAAG,EAAE,QAAQ;MACbC,KAAK,EAAE,MAAM;MACbC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT,EACD;;IAED;IACA,MAAMC,mBAAmB,GAAG1B,GAAG,CAAC,CAC9B;MACEmB,GAAG,EAAE,OAAO;MACZC,KAAK,EAAE,MAAM;MACbC,IAAI,EAAE,UAAU;MAChBC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEL,GAAG,EAAE,MAAM;MACXC,KAAK,EAAE,MAAM;MACbC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEL,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE,MAAM;MACbC,IAAI,EAAE,KAAK;MACXC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;IACZ,EACD;;IAED;IACA,MAAMG,gBAAgB,GAAG1B,QAAQ,CAAC,MAAM;MACtC,MAAM2B,OAAO,GAAG,EAAC;MACjBzB,KAAK,CAAC0B,cAAc,CAACC,OAAO,CAACC,IAAI,IAAI;QACnC,IAAIA,IAAI,CAACC,WAAW,IAAID,IAAI,CAACC,WAAW,CAACC,MAAM,GAAG,CAAC,EAAE;UACnD,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACL,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC;UACnDE,WAAW,CAACJ,OAAO,CAACO,IAAI,IAAI;YAC1BT,OAAO,CAACU,IAAI,CAAC;cACXD,IAAI;cACJE,QAAQ,EAAER,IAAI,CAACM,IAAI;cACnBG,MAAM,EAAET,IAAI,CAACU;YACf,CAAC;UACH,CAAC;QACH;MACF,CAAC;MACD,OAAOb,OAAM;IACf,CAAC;;IAED;IACA,MAAMc,iBAAiB,GAAGzC,QAAQ,CAAC,MAAM;MACvC;MACA;MACA,OAAO,GAAE;IACX,CAAC;;IAED;IACA,MAAM0C,gBAAgB,GAAG1C,QAAQ,CAAC,MAAM;MACtC,OAAOiB,gBAAgB,CAAC0B,KAAK,CAACnC,MAAM,CAACoC,IAAI,IAAIA,IAAI,CAACvB,QAAQ,CAAC,CAACwB,KAAK,CAACD,IAAI,IAAIA,IAAI,CAACrB,QAAQ,CAACS,MAAM,GAAG,CAAC;IACpG,CAAC;;IAED;IACA/B,KAAK,CAAC,MAAMC,KAAK,CAAC4C,iBAAiB,EAAGC,OAAO,IAAK;MAChDC,iBAAiB,CAACD,OAAO;IAC3B,CAAC,EAAE;MAAEE,SAAS,EAAE;IAAK,CAAC;;IAEtB;IACAhD,KAAK,CAAC,CAACgB,gBAAgB,EAAEQ,mBAAmB,EAAEd,UAAU,CAAC,EAAE,MAAM;MAC/D,IAAIL,UAAU,CAACqC,KAAK,KAAK,UAAU,EAAE;QACnCO,aAAa,CAAC;MAChB;IACF,CAAC,EAAE;MAAEC,IAAI,EAAE;IAAK,CAAC;;IAEjB;IACA,SAASH,iBAAiBA,CAACI,SAAS,EAAE;MACpC,MAAMC,YAAY,GAAG;QACnB,YAAY,EAAE;UACZC,KAAK,EAAE,CACL;YAAEpC,GAAG,EAAE,GAAG;YAAEC,KAAK,EAAE,IAAI;YAAEC,IAAI,EAAE,UAAU;YAAEC,QAAQ,EAAE,IAAI;YAAEC,QAAQ,EAAE;UAAM,CAAC,EAC5E;YAAEJ,GAAG,EAAE,GAAG;YAAEC,KAAK,EAAE,IAAI;YAAEC,IAAI,EAAE,OAAO;YAAEC,QAAQ,EAAE,IAAI;YAAEC,QAAQ,EAAE;UAAM,CAAC,EACzE;YAAEJ,GAAG,EAAE,QAAQ;YAAEC,KAAK,EAAE,MAAM;YAAEC,IAAI,EAAE,OAAO;YAAEC,QAAQ,EAAE,KAAK;YAAEC,QAAQ,EAAE;UAAK,EAChF;UACDb,QAAQ,EAAE,CACR;YAAES,GAAG,EAAE,OAAO;YAAEC,KAAK,EAAE,MAAM;YAAEC,IAAI,EAAE,UAAU;YAAEC,QAAQ,EAAE,KAAK;YAAEC,QAAQ,EAAE;UAAM,CAAC,EACnF;YAAEJ,GAAG,EAAE,SAAS;YAAEC,KAAK,EAAE,MAAM;YAAEC,IAAI,EAAE,KAAK;YAAEC,QAAQ,EAAE,KAAK;YAAEC,QAAQ,EAAE;UAAK;QAElF,CAAC;QACD,WAAW,EAAE;UACXgC,KAAK,EAAE,CACL;YAAEpC,GAAG,EAAE,GAAG;YAAEC,KAAK,EAAE,IAAI;YAAEC,IAAI,EAAE,UAAU;YAAEC,QAAQ,EAAE,IAAI;YAAEC,QAAQ,EAAE;UAAM,CAAC,EAC5E;YAAEJ,GAAG,EAAE,GAAG;YAAEC,KAAK,EAAE,IAAI;YAAEC,IAAI,EAAE,OAAO;YAAEC,QAAQ,EAAE,IAAI;YAAEC,QAAQ,EAAE;UAAM,CAAC,EACzE;YAAEJ,GAAG,EAAE,QAAQ;YAAEC,KAAK,EAAE,MAAM;YAAEC,IAAI,EAAE,OAAO;YAAEC,QAAQ,EAAE,KAAK;YAAEC,QAAQ,EAAE;UAAK,EAChF;UACDb,QAAQ,EAAE,CACR;YAAES,GAAG,EAAE,OAAO;YAAEC,KAAK,EAAE,MAAM;YAAEC,IAAI,EAAE,UAAU;YAAEC,QAAQ,EAAE,KAAK;YAAEC,QAAQ,EAAE;UAAM,CAAC,EACnF;YAAEJ,GAAG,EAAE,OAAO;YAAEC,KAAK,EAAE,MAAM;YAAEC,IAAI,EAAE,UAAU;YAAEC,QAAQ,EAAE,KAAK;YAAEC,QAAQ,EAAE;UAAM,CAAC,EACnF;YAAEJ,GAAG,EAAE,SAAS;YAAEC,KAAK,EAAE,MAAM;YAAEC,IAAI,EAAE,KAAK;YAAEC,QAAQ,EAAE,KAAK;YAAEC,QAAQ,EAAE;UAAK;QAElF,CAAC;QACD,WAAW,EAAE;UACXgC,KAAK,EAAE,CACL;YAAEpC,GAAG,EAAE,UAAU;YAAEC,KAAK,EAAE,IAAI;YAAEC,IAAI,EAAE,UAAU;YAAEC,QAAQ,EAAE,IAAI;YAAEC,QAAQ,EAAE;UAAM,CAAC,EACnF;YAAEJ,GAAG,EAAE,OAAO;YAAEC,KAAK,EAAE,IAAI;YAAEC,IAAI,EAAE,OAAO;YAAEC,QAAQ,EAAE,IAAI;YAAEC,QAAQ,EAAE;UAAM,EAC7E;UACDb,QAAQ,EAAE,CACR;YAAES,GAAG,EAAE,SAAS;YAAEC,KAAK,EAAE,MAAM;YAAEC,IAAI,EAAE,KAAK;YAAEC,QAAQ,EAAE,KAAK;YAAEC,QAAQ,EAAE;UAAK;QAElF,CAAC;QACD,cAAc,EAAE;UACdgC,KAAK,EAAE,CACL;YAAEpC,GAAG,EAAE,GAAG;YAAEC,KAAK,EAAE,IAAI;YAAEC,IAAI,EAAE,OAAO;YAAEC,QAAQ,EAAE,IAAI;YAAEC,QAAQ,EAAE;UAAM,CAAC,EACzE;YAAEJ,GAAG,EAAE,GAAG;YAAEC,KAAK,EAAE,IAAI;YAAEC,IAAI,EAAE,OAAO;YAAEC,QAAQ,EAAE,IAAI;YAAEC,QAAQ,EAAE;UAAM,EACzE;UACDb,QAAQ,EAAE,CACR;YAAES,GAAG,EAAE,OAAO;YAAEC,KAAK,EAAE,MAAM;YAAEC,IAAI,EAAE,UAAU;YAAEC,QAAQ,EAAE,KAAK;YAAEC,QAAQ,EAAE;UAAM,CAAC,EACnF;YAAEJ,GAAG,EAAE,MAAM;YAAEC,KAAK,EAAE,MAAM;YAAEC,IAAI,EAAE,OAAO;YAAEC,QAAQ,EAAE,KAAK;YAAEC,QAAQ,EAAE;UAAM,CAAC,EAC/E;YAAEJ,GAAG,EAAE,SAAS;YAAEC,KAAK,EAAE,MAAM;YAAEC,IAAI,EAAE,KAAK;YAAEC,QAAQ,EAAE,KAAK;YAAEC,QAAQ,EAAE;UAAK;QAElF;MACF;MAEA,MAAMiC,MAAM,GAAGF,YAAY,CAACD,SAAS,CAAC,IAAIC,YAAY,CAAC,YAAY;;MAEnE;MACA,MAAMG,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;QAC7C,OAAOA,SAAS,CAACC,GAAG,CAACC,OAAO,IAAI;UAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACK,IAAI,CAAClB,IAAI,IAAIA,IAAI,CAAC1B,GAAG,KAAK0C,OAAO,CAAC1C,GAAG;UAChE,OAAO;YACL,GAAG0C,OAAO;YACVrC,QAAQ,EAAEsC,YAAY,GAAGA,YAAY,CAACtC,QAAQ,GAAG,EAAE;YACnDC,KAAK,EAAE;UACT;QACF,CAAC;MACH;MAEAP,gBAAgB,CAAC0B,KAAK,GAAGa,gBAAgB,CAACvC,gBAAgB,CAAC0B,KAAK,EAAEY,MAAM,CAACD,KAAK;MAC9E7B,mBAAmB,CAACkB,KAAK,GAAGa,gBAAgB,CAAC/B,mBAAmB,CAACkB,KAAK,EAAEY,MAAM,CAAC9C,QAAQ;IACzF;;IAEA;IACA,SAASsD,gBAAgBA,CAACnD,IAAI,EAAE;MAC9BN,UAAU,CAACqC,KAAK,GAAG/B,IAAG;MACtBR,IAAI,CAAC,qBAAqB,EAAE;QAAEE,UAAU,EAAEM;MAAK,CAAC;IAClD;;IAEA;IACA,SAASoD,aAAaA,CAACC,OAAO,EAAE;MAC9B1D,gBAAgB,CAACoC,KAAK,CAACsB,OAAO,CAAC,GAAG,CAAC1D,gBAAgB,CAACoC,KAAK,CAACsB,OAAO;IACnE;;IAEA;IACA,SAASC,cAAcA,CAACC,OAAO,EAAE;MAC/BzD,YAAY,CAACiC,KAAK,GAAGwB,OAAM;IAC7B;IAEA,SAASC,eAAeA,CAAA,EAAG;MACzB1D,YAAY,CAACiC,KAAK,GAAG,IAAG;IAC1B;IAEA,SAAS0B,UAAUA,CAACC,KAAK,EAAEH,OAAO,EAAE;MAClCG,KAAK,CAACC,cAAc,CAAC;MACrB7D,YAAY,CAACiC,KAAK,GAAG,IAAG;MAExB,IAAI;QACF,MAAM6B,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAACK,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;QAChE,IAAIJ,IAAI,CAACpD,IAAI,KAAK,QAAQ,EAAE;UAC1ByD,UAAU,CAACV,OAAO,EAAEK,IAAI;QAC1B;MACF,CAAC,CAAC,OAAOhD,KAAK,EAAE;QACdsD,OAAO,CAACtD,KAAK,CAAC,WAAW,EAAEA,KAAK;MAClC;IACF;;IAEA;IACA,SAASqD,UAAUA,CAACV,OAAO,EAAEY,UAAU,EAAE;MACvC,MAAMC,QAAQ,GAAG,CAAC,GAAG/D,gBAAgB,CAAC0B,KAAK,EAAE,GAAGlB,mBAAmB,CAACkB,KAAK;MACzE,MAAMsC,UAAU,GAAGD,QAAQ,CAAClB,IAAI,CAAClB,IAAI,IAAIA,IAAI,CAAC1B,GAAG,KAAKiD,OAAO;MAE7D,IAAI,CAACc,UAAU,EAAE;;MAEjB;MACA,MAAMC,MAAM,GAAGD,UAAU,CAAC1D,QAAQ,CAAC4D,IAAI,CAACC,OAAO,IAC7CA,OAAO,CAAC7C,MAAM,KAAKwC,UAAU,CAACxC,MAAM,IAAI6C,OAAO,CAACC,UAAU,KAAKN,UAAU,CAACM,UAC5E;MAEA,IAAIH,MAAM,EAAE;MAEZ,MAAME,OAAO,GAAG;QACd7C,MAAM,EAAEwC,UAAU,CAACxC,MAAM;QACzBD,QAAQ,EAAEyC,UAAU,CAACzC,QAAQ;QAC7B+C,UAAU,EAAEN,UAAU,CAACM,UAAU;QACjCC,UAAU,EAAEP,UAAU,CAACO,UAAU;QACjCC,SAAS,EAAEC,YAAY,CAACT,UAAU,CAACxC,MAAM,EAAEwC,UAAU,CAACM,UAAU;MAClE;MAEA,IAAIJ,UAAU,CAAC3D,QAAQ,EAAE;QACvB2D,UAAU,CAAC1D,QAAQ,CAACc,IAAI,CAAC+C,OAAO;MAClC,CAAC,MAAM;QACLH,UAAU,CAAC1D,QAAQ,GAAG,CAAC6D,OAAO;MAChC;;MAEA;MACAH,UAAU,CAACzD,KAAK,GAAG,KAAI;;MAEvB;MACAiE,cAAc,CAAC;IACjB;;IAEA;IACA,SAASC,aAAaA,CAACvB,OAAO,EAAEwB,KAAK,EAAE;MACrC,MAAMX,QAAQ,GAAG,CAAC,GAAG/D,gBAAgB,CAAC0B,KAAK,EAAE,GAAGlB,mBAAmB,CAACkB,KAAK;MACzE,MAAMsC,UAAU,GAAGD,QAAQ,CAAClB,IAAI,CAAClB,IAAI,IAAIA,IAAI,CAAC1B,GAAG,KAAKiD,OAAO;MAE7D,IAAIc,UAAU,EAAE;QACdA,UAAU,CAAC1D,QAAQ,CAACqE,MAAM,CAACD,KAAK,EAAE,CAAC;QACnCF,cAAc,CAAC;MACjB;IACF;;IAEA;IACA,SAASD,YAAYA,CAACjD,MAAM,EAAE8C,UAAU,EAAE;MACxC,MAAMvD,IAAI,GAAG5B,KAAK,CAAC0B,cAAc,CAACkC,IAAI,CAAC+B,CAAC,IAAIA,CAAC,CAACrD,EAAE,KAAKD,MAAM;MAC3D,IAAIT,IAAI,IAAIA,IAAI,CAACC,WAAW,EAAE;QAC5B,OAAOD,IAAI,CAACC,WAAW,CAACvB,MAAM,CAACsF,GAAG,IAAIA,GAAG,CAACT,UAAU,CAAC,KAAK,IAAI,IAAIS,GAAG,CAACT,UAAU,CAAC,KAAKU,SAAS,CAAC,CAAC/D,MAAK;MACxG;MACA,OAAO;IACT;;IAEA;IACA,SAASyD,cAAcA,CAAA,EAAG;MACxBxE,gBAAgB,CAAC0B,KAAK,CAACd,OAAO,CAACe,IAAI,IAAI;QACrC,IAAIA,IAAI,CAACvB,QAAQ,IAAIuB,IAAI,CAACrB,QAAQ,CAACS,MAAM,KAAK,CAAC,EAAE;UAC/CY,IAAI,CAACpB,KAAK,GAAG,IAAG;QAClB,CAAC,MAAM;UACLoB,IAAI,CAACpB,KAAK,GAAG,KAAI;QACnB;MACF,CAAC;IACH;;IAEA;IACA,SAASwE,gBAAgBA,CAAA,EAAG;MAC1B/E,gBAAgB,CAAC0B,KAAK,CAACd,OAAO,CAACe,IAAI,IAAI;QACrCA,IAAI,CAACrB,QAAQ,GAAG,EAAC;QACjBqB,IAAI,CAACpB,KAAK,GAAG,KAAI;MACnB,CAAC;MACDC,mBAAmB,CAACkB,KAAK,CAACd,OAAO,CAACe,IAAI,IAAI;QACxCA,IAAI,CAACrB,QAAQ,GAAG,EAAC;MACnB,CAAC;IACH;;IAEA;IACA,SAAS2B,aAAaA,CAAA,EAAG;MACvB,IAAI,CAACR,gBAAgB,CAACC,KAAK,EAAE;QAC3B8C,cAAc,CAAC;QACf;MACF;MAEA,MAAMlC,MAAM,GAAG;QACbH,SAAS,EAAElD,KAAK,CAAC4C,iBAAiB;QAClCmD,WAAW,EAAEhF,gBAAgB,CAAC0B,KAAK,CAACuD,MAAM,CAAC,CAACC,GAAG,EAAEvD,IAAI,KAAK;UACxDuD,GAAG,CAACvD,IAAI,CAAC1B,GAAG,CAAC,GAAG0B,IAAI,CAACrB,QAAO;UAC5B,OAAO4E,GAAE;QACX,CAAC,EAAE,CAAC,CAAC,CAAC;QACNC,cAAc,EAAE3E,mBAAmB,CAACkB,KAAK,CAACuD,MAAM,CAAC,CAACC,GAAG,EAAEvD,IAAI,KAAK;UAC9DuD,GAAG,CAACvD,IAAI,CAAC1B,GAAG,CAAC,GAAG0B,IAAI,CAACrB,QAAO;UAC5B,OAAO4E,GAAE;QACX,CAAC,EAAE,CAAC,CAAC,CAAC;QACNxF,UAAU,EAAEA,UAAU,CAACgC,KAAK;QAC5BrC,UAAU,EAAEA,UAAU,CAACqC;MACzB;MAEAvC,IAAI,CAAC,gBAAgB,EAAEmD,MAAM;IAC/B;;IAEA;IACA,SAAS8C,YAAYA,CAACjD,SAAS,EAAE;MAC/B,MAAMkD,KAAK,GAAG;QACZ,YAAY,EAAE,mJAAmJ;QACjK,WAAW,EAAE,4LAA4L;QACzM,WAAW,EAAE,6LAA6L;QAC1M,cAAc,EAAE;MAClB;MACA,OAAOA,KAAK,CAAClD,SAAS,CAAC,IAAIkD,KAAK,CAAC,YAAY;IAC/C;;IAEA;IACA,SAASC,YAAYA,CAAA,EAAG;MACtB5F,UAAU,CAACgC,KAAK,CAAC3B,UAAU,CAACqB,IAAI,CAAC;QAC/BmE,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,QAAQ;QAClB9D,KAAK,EAAE;MACT,CAAC;IACH;;IAEA;IACA,SAAS+D,eAAeA,CAACf,KAAK,EAAE;MAC9BhF,UAAU,CAACgC,KAAK,CAAC3B,UAAU,CAAC4E,MAAM,CAACD,KAAK,EAAE,CAAC;MAC3CgB,WAAW,CAAC;IACd;;IAEA;IACA,SAASA,WAAWA,CAAA,EAAG;MACrB;MACA;MACA,IAAIrG,UAAU,CAACqC,KAAK,KAAK,UAAU,EAAE;QACnCO,aAAa,CAAC;MAChB;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}