{"ast":null,"code":"import { chartTypes, chartIcons } from '../../assets/JS/SVG/chartIcons.js';\nimport { chartsTooltipConfig } from '../../assets/JS/Config/ChartsTooltipConfig.js';\nimport { watch, ref, reactive, nextTick } from 'vue';\n\n/**\n * Props\n * @prop {Array} types - 可选图表类型数组，默认全部类型\n * @prop {String} modelValue - 当前选中类型（v-model）\n *\n * Emits\n * @event select - 选中类型时触发，参数为类型字符串\n * @event update:modelValue - v-model 双向绑定\n */\n\nexport default {\n  __name: 'ChartIcon',\n  props: {\n    types: {\n      type: Array,\n      default: () => chartTypes\n    },\n    modelValue: {\n      type: String,\n      default: ''\n    }\n  },\n  emits: ['select', 'update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n    const emit = __emit;\n    const selectedType = ref(props.modelValue);\n    const tooltipRef = ref(null);\n\n    // 提示框状态\n    const tooltip = reactive({\n      visible: false,\n      type: '',\n      description: '',\n      dataRequirements: [],\n      useCases: [],\n      style: {}\n    });\n    let tooltipTimeout = null;\n    function renderButton(type) {\n      const icon = chartIcons[type] || '';\n      return `${icon}<span class=\"label\">${type}</span>`;\n    }\n    function handleClick(type) {\n      selectedType.value = type;\n      emit('select', type);\n      emit('update:modelValue', type);\n    }\n\n    // 显示提示框\n    function showTooltip(event, type) {\n      // 清除之前的定时器\n      if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout);\n      }\n\n      // 设置1秒延迟\n      tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type];\n        if (config) {\n          tooltip.type = type;\n          tooltip.description = config.description;\n          tooltip.dataRequirements = config.dataRequirements;\n          tooltip.useCases = config.useCases;\n          tooltip.visible = true;\n\n          // 在下一个tick中计算位置，确保DOM已更新\n          nextTick(() => {\n            positionTooltip(event);\n          });\n        }\n      }, 1200); // 1.2秒延迟\n    }\n\n    // 隐藏提示框\n    function hideTooltip() {\n      if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout);\n        tooltipTimeout = null;\n      }\n      tooltip.visible = false;\n    }\n\n    // 计算提示框位置，确保不超出屏幕\n    function positionTooltip(event) {\n      if (!tooltipRef.value) return;\n      const tooltipEl = tooltipRef.value;\n      const rect = tooltipEl.getBoundingClientRect();\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight;\n      let left = event.pageX + 10;\n      let top = event.pageY + 10;\n\n      // 防止右边超出屏幕\n      if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10;\n      }\n\n      // 防止底部超出屏幕\n      if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10;\n      }\n\n      // 防止左边超出屏幕\n      if (left < 0) {\n        left = 10;\n      }\n\n      // 防止顶部超出屏幕\n      if (top < 0) {\n        top = 10;\n      }\n      tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n      };\n    }\n    watch(() => props.modelValue, newValue => {\n      selectedType.value = newValue;\n    });\n    const __returned__ = {\n      props,\n      emit,\n      selectedType,\n      tooltipRef,\n      tooltip,\n      get tooltipTimeout() {\n        return tooltipTimeout;\n      },\n      set tooltipTimeout(v) {\n        tooltipTimeout = v;\n      },\n      renderButton,\n      handleClick,\n      showTooltip,\n      hideTooltip,\n      positionTooltip,\n      get chartTypes() {\n        return chartTypes;\n      },\n      get chartIcons() {\n        return chartIcons;\n      },\n      get chartsTooltipConfig() {\n        return chartsTooltipConfig;\n      },\n      watch,\n      ref,\n      reactive,\n      nextTick\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["chartTypes","chartIcons","chartsTooltipConfig","watch","ref","reactive","nextTick","props","__props","emit","__emit","selectedType","modelValue","tooltipRef","tooltip","visible","type","description","dataRequirements","useCases","style","tooltipTimeout","renderButton","icon","handleClick","value","showTooltip","event","clearTimeout","setTimeout","config","positionTooltip","hideTooltip","tooltipEl","rect","getBoundingClientRect","viewportWidth","window","innerWidth","viewportHeight","innerHeight","left","pageX","top","pageY","width","height","position","zIndex","newValue"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/Chart/ChartIcon.vue"],"sourcesContent":["<template>\n    <div class=\"chart-type-panel\">\n        <button\n        v-for=\"type in types.slice(1)\"\n        :key=\"type\"\n        class=\"sideBar-btn\"\n        :class=\"{ 'selected': selectedType === type }\"\n        v-html=\"renderButton(type)\"\n        @click=\"handleClick(type)\"\n        @mouseenter=\"showTooltip($event, type)\"\n        @mouseleave=\"hideTooltip\"\n        ></button>\n        <!-- 提示框 -->\n        <div\n            v-if=\"tooltip.visible\"\n            class=\"chart-tooltip\"\n            :style=\"tooltip.style\"\n            ref=\"tooltipRef\"\n        >\n            <div class=\"tooltip-header\">\n                <span class=\"tooltip-title\">{{ tooltip.type }}</span>\n                <span class=\"tooltip-description\">{{ tooltip.description }}</span>\n            </div>\n            <div class=\"tooltip-section\">\n                <h4>Data Requirements</h4>\n                <div class=\"tooltip-tags\">\n                    <span\n                        v-for=\"requirement in tooltip.dataRequirements\"\n                        :key=\"requirement\"\n                        class=\"tooltip-tag data-tag\"\n                    >\n                        {{ requirement }}\n                    </span>\n                </div>\n            </div>\n            <div class=\"tooltip-section\">\n                <h4>Use Cases</h4>\n                <div class=\"tooltip-tags\">\n                    <span\n                        v-for=\"useCase in tooltip.useCases\"\n                        :key=\"useCase\"\n                        class=\"tooltip-tag use-case-tag\"\n                    >\n                        {{ useCase }}\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script setup>\n/* eslint-disable */\nimport { chartTypes, chartIcons } from '../../assets/JS/SVG/chartIcons.js'\nimport { chartsTooltipConfig } from '../../assets/JS/Config/ChartsTooltipConfig.js'\nimport { watch, ref, reactive, nextTick } from 'vue'\n\n\n/**\n * Props\n * @prop {Array} types - 可选图表类型数组，默认全部类型\n * @prop {String} modelValue - 当前选中类型（v-model）\n *\n * Emits\n * @event select - 选中类型时触发，参数为类型字符串\n * @event update:modelValue - v-model 双向绑定\n */\nconst props = defineProps({\n    types: {\n        type: Array,\n        default: () => chartTypes\n    },\n    modelValue: {\n        type: String,\n        default: ''\n    }\n})\n\nconst emit = defineEmits(['select', 'update:modelValue'])\n\nconst selectedType = ref(props.modelValue)\nconst tooltipRef = ref(null)\n\n// 提示框状态\nconst tooltip = reactive({\n    visible: false,\n    type: '',\n    description: '',\n    dataRequirements: [],\n    useCases: [],\n    style: {}\n})\n\nlet tooltipTimeout = null\n\nfunction renderButton(type) {\n    const icon = chartIcons[type] || ''\n    return `${icon}<span class=\"label\">${type}</span>`\n}\n\nfunction handleClick(type) {\n    selectedType.value = type\n    emit('select', type)\n    emit('update:modelValue', type)\n}\n\n// 显示提示框\nfunction showTooltip(event, type) {\n    // 清除之前的定时器\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n    }\n    \n    // 设置1秒延迟\n    tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type]\n        if (config) {\n            tooltip.type = type\n            tooltip.description = config.description\n            tooltip.dataRequirements = config.dataRequirements\n            tooltip.useCases = config.useCases\n            tooltip.visible = true\n            \n            // 在下一个tick中计算位置，确保DOM已更新\n            nextTick(() => {\n                positionTooltip(event)\n            })\n        }\n    }, 1200) // 1.2秒延迟\n}\n\n// 隐藏提示框\nfunction hideTooltip() {\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n        tooltipTimeout = null\n    }\n    tooltip.visible = false\n}\n\n// 计算提示框位置，确保不超出屏幕\nfunction positionTooltip(event) {\n    if (!tooltipRef.value) return\n    \n    const tooltipEl = tooltipRef.value\n    const rect = tooltipEl.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    \n    let left = event.pageX + 10\n    let top = event.pageY + 10\n    \n    // 防止右边超出屏幕\n    if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10\n    }\n    \n    // 防止底部超出屏幕\n    if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10\n    }\n    \n    // 防止左边超出屏幕\n    if (left < 0) {\n        left = 10\n    }\n    \n    // 防止顶部超出屏幕\n    if (top < 0) {\n        top = 10\n    }\n    \n    tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n    }\n}\n\nwatch(() => props.modelValue, (newValue) => {\n    selectedType.value = newValue\n})\n</script>\n\n<style scoped>\n.chart-type-panel {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n.sideBar-btn {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    background: transparent;\n    border: none;\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    color: var(--text-color);\n    padding: 6px 14px;\n    border-radius: 8px;\n    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s;\n    position: relative;\n    overflow: hidden;\n}\n.sideBar-btn::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition: left 0.6s;\n}\n.sideBar-btn:hover {\n    background-color: rgba(136, 133, 133, 0.1);\n    transform: translateY(-2px) scale(1.02);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 选中状态的样式 */\n.sideBar-btn.selected {\n    background: linear-gradient(135deg, #686868, #4d4d4e);\n    color: white;\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.sideBar-btn.selected::before {\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\n}\n\n.sideBar-btn.selected:hover {\n    background: linear-gradient(135deg, #3a3a3a, #4f4f4f);\n    transform: translateY(-3px) scale(1.05);\n    box-shadow: 0 6px 16px rgba(59, 130, 246, 0.4);\n}\n\n.sideBar-btn.selected:hover::before {\n    left: 100%;\n}\n\n/* 点击动画 */\n.sideBar-btn:active {\n    transform: translateY(0) scale(0.98);\n    transition: all 0.1s ease;\n}\n\n.sideBar-btn.selected:active {\n    transform: translateY(-1px) scale(0.98);\n}\n.sideBar-btn svg {\n    fill: currentColor;\n    transition: all 0.3s ease;\n}\n.sideBar-btn.selected svg {\n    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));\n}\n.label {\n    white-space: nowrap;\n    transition: all 0.3s ease;\n}\n\n.sideBar-btn.selected .label {\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n/* 选中状态的动画效果 */\n@keyframes selectedShine {\n    0% {\n        background-position: -100% 0;\n    }\n    100% {\n        background-position: 100% 0;\n    }\n}\n\n.sideBar-btn.selected:hover .chart-icon-svg {\n    transform: scale(1.1);\n    filter: drop-shadow(0 2px 6px rgba(0, 0, 0, 0.3));\n}\n\n.sideBar-btn.selected:hover .label {\n    transform: translateX(2px);\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n}\n\n/* 提示框样式 */\n.chart-tooltip {\n    background: var(--bg-color);\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    border-radius: 8px;\n    padding: 16px;\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);\n    max-width: 320px;\n    min-width: 280px;\n    font-size: 14px;\n    line-height: 1.4;\n    backdrop-filter: blur(10px);\n    animation: tooltipFadeIn 0.2s ease-out;\n}\n\n/* 深色模式下的提示框样式 */\n@media (prefers-color-scheme: dark) {\n    .chart-tooltip {\n        border-color: rgba(255, 255, 255, 0.1);\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);\n    }\n}\n\n.tooltip-header {\n    margin-bottom: 12px;\n    border-bottom: 1px solid rgba(128, 128, 128, 0.2);\n    padding-bottom: 8px;\n}\n\n.tooltip-title {\n    font-weight: 600;\n    font-size: 16px;\n    color: var(--text-color);\n    display: block;\n    margin-bottom: 4px;\n}\n\n.tooltip-description {\n    color: var(--text-color);\n    opacity: 0.8;\n    font-size: 13px;\n    font-style: italic;\n}\n\n.tooltip-section {\n    margin-bottom: 12px;\n}\n\n.tooltip-section:last-child {\n    margin-bottom: 0;\n}\n\n.tooltip-section h4 {\n    margin: 0 0 8px 0;\n    font-size: 13px;\n    font-weight: 600;\n    color: var(--text-color);\n    opacity: 0.9;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n}\n\n.tooltip-tags {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 6px;\n}\n\n.tooltip-tag {\n    display: inline-block;\n    padding: 4px 8px;\n    border-radius: 4px;\n    font-size: 11px;\n    font-weight: 500;\n    line-height: 1.2;\n    text-align: center;\n    white-space: nowrap;\n    transition: all 0.2s ease;\n}\n\n.data-tag {\n    background: linear-gradient(135deg, #e3f2fd, #bbdefb);\n    color: #1565c0;\n    border: 1px solid #90caf9;\n}\n\n.use-case-tag {\n    background: linear-gradient(135deg, #f3e5f5, #e1bee7);\n    color: #7b1fa2;\n    border: 1px solid #ce93d8;\n}\n\n/* 深色模式下的标签样式 */\n[data-theme=\"dark\"] .data-tag {\n    background: linear-gradient(135deg, #1e3a8a, #3b82f6);\n    color: #dbeafe;\n    border-color: #60a5fa;\n}\n\n[data-theme=\"dark\"] .use-case-tag {\n    background: linear-gradient(135deg, #581c87, #9333ea);\n    color: #f3e8ff;\n    border-color: #c084fc;\n}\n\n\n.tooltip-tag:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n/* 提示框淡入动画 */\n@keyframes tooltipFadeIn {\n    from {\n        opacity: 0;\n        transform: translateY(-10px) scale(0.95);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0) scale(1);\n    }\n}\n</style>\n\n<style>\n.chart-icon-svg {\n    width: 1.6em;\n    height: 1.6em;\n    min-width: 24px;\n    min-height: 24px;\n    max-width: 32px;\n    max-height: 32px;\n    color: var(--text-color);\n    fill: currentColor;\n    vertical-align: middle;\n    display: inline-block;\n    transition: all 0.3s ease;\n}\n\n.sideBar-btn.selected .chart-icon-svg {\n    color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}