{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-display\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"empty-tip\"\n};\nconst _hoisted_3 = [\"innerHTML\"];\nconst _hoisted_4 = {\n  key: 1,\n  ref: \"chartRef\",\n  class: \"chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$setup.hasSeries ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"span\", {\n    class: \"empty-icon\",\n    innerHTML: $setup.emptyChartIcon\n  }, null, 8 /* PROPS */, _hoisted_3), _cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    style: {\n      \"margin-top\": \"10px\",\n      \"font-weight\": \"600\",\n      \"font-size\": \"1.08em\"\n    }\n  }, \"No Chart Data\", -1 /* HOISTED */)), _cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    style: {\n      \"margin-top\": \"8px\",\n      \"color\": \"#888\",\n      \"font-size\": \"0.98em\"\n    }\n  }, \" Fast Start: Select a chart type on the left, upload or choose a data file, configure fields, then click \\\"Generate Chart\\\"! \", -1 /* HOISTED */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */))]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","$setup","hasSeries","_hoisted_2","_createElementVNode","innerHTML","emptyChartIcon","_hoisted_3","style","_hoisted_4"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\ChartDisplay.vue"],"sourcesContent":["<template>\n<div class=\"chart-display\">\n    <div v-if=\"!hasSeries\" class=\"empty-tip\">\n        <span class=\"empty-icon\" v-html=\"emptyChartIcon\"></span>\n        <div style=\"margin-top: 10px; font-weight: 600; font-size: 1.08em;\">No Chart Data</div>\n        <div style=\"margin-top: 8px; color: #888; font-size: 0.98em;\">\n            Fast Start: Select a chart type on the left, upload or choose a data file, configure fields, then click \"Generate Chart\"!\n        </div>\n    </div>\n    <div v-else ref=\"chartRef\" class=\"chart-container\"></div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\n\nimport { ref, watch, onMounted, onBeforeUnmount, computed } from 'vue'\nimport * as echarts from 'echarts'\nimport { chartIcons } from '@/assets/JS/SVG/chartIcons.js'\n// 选用Bar图标作为空状态图标（更通用且有仪表感）\nconst emptyChartIcon = chartIcons.Bar || `<svg viewBox=\"0 0 24 24\" width=\"48\" height=\"48\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><rect x=\"4\" y=\"10\" width=\"2\" height=\"10\" fill=\"currentColor\"/><rect x=\"9\" y=\"6\" width=\"2\" height=\"14\" fill=\"currentColor\"/><rect x=\"14\" y=\"2\" width=\"2\" height=\"18\" fill=\"currentColor\"/><rect x=\"19\" y=\"8\" width=\"2\" height=\"12\" fill=\"currentColor\"/></svg>`\n\nconst props = defineProps({\n    option: { type: Object, required: true }\n})\n\nconst chartRef = ref(null)\nlet chartInstance = null\n\nconst hasSeries = computed(() => {\n    return props.option && Array.isArray(props.option.series) && props.option.series.length > 0\n})\n\nfunction renderChart() {\n    if (!hasSeries.value) return\n    if (!chartInstance && chartRef.value) {\n        chartInstance = echarts.init(chartRef.value)\n    }\n    if (chartInstance && props.option) {\n        chartInstance.setOption(props.option, true)\n    }\n}\n\nwatch(() => props.option, renderChart, { deep: true })\nonMounted(renderChart)\nonBeforeUnmount(() => {\n    if (chartInstance) chartInstance.dispose()\n})\n</script>\n\n<style scoped>\n.chart-display {\n    width: 90%;\n    height: 100%;\n    min-height: clamp(300px, 60vh, 600px); /* 响应式高度 */\n    background: var(--bg-color, #fff);\n    border-radius: clamp(8px, 2vw, 12px);\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: clamp(10px, 2vw, 20px);\n}\n\n.chart-container {\n    width: 100% !important;\n    height: 100% !important;\n    min-height: inherit;\n}\n\n.empty-tip {\n    color: #aaa;\n    font-size: clamp(1em, 2vw, 1.2em);\n    text-align: center;\n    letter-spacing: 1px;\n    padding: 20px;\n    user-select: none;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.empty-icon {\n    display: block;\n    margin: 0 auto 8px auto;\n    width: 48px;\n    height: 48px;\n    color: #bdbdbd;\n    opacity: 0.7;\n}\n\n/* 小屏幕适配 */\n@media (max-width: 767px) {\n    .chart-display {\n        height: 100%;      /* 填充父容器 */\n        padding: 8px;\n        border-radius: 8px;\n    }\n\n    .empty-tip {\n        font-size: 0.9em;\n        padding: 10px;\n    }\n}\n</style>\n"],"mappings":";;EACKA,KAAK,EAAC;AAAe;;EAD1BC,GAAA;EAE2BD,KAAK,EAAC;;mBAFjC;;EAAAC,GAAA;EASgBC,GAAG,EAAC,UAAU;EAACF,KAAK,EAAC;;;uBARrCG,mBAAA,CASM,OATNC,UASM,G,CARUC,MAAA,CAAAC,SAAS,I,cAArBH,mBAAA,CAMM,OANNI,UAMM,GALFC,mBAAA,CAAwD;IAAlDR,KAAK,EAAC,YAAY;IAACS,SAAuB,EAAfJ,MAAA,CAAAK;0BAHzCC,UAAA,G,0BAIQH,mBAAA,CAAuF;IAAlFI,KAA8D,EAA9D;MAAA;MAAA;MAAA;IAAA;EAA8D,GAAC,eAAa,sB,0BACjFJ,mBAAA,CAEM;IAFDI,KAAwD,EAAxD;MAAA;MAAA;MAAA;IAAA;EAAwD,GAAC,+HAE9D,qB,oBAEJT,mBAAA,CAAyD,OAAzDU,UAAyD,+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}