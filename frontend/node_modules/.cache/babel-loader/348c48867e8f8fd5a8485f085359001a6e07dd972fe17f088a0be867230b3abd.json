{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-toolbar\"\n};\nconst _hoisted_2 = [\"title\"];\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"empty-tip\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  ref: \"chartRef\",\n  class: \"chart-container\"\n};\nexport function render(_ctx, _cache) {\n  const _component_AnimateIcon = _resolveComponent(\"AnimateIcon\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"chart-display\", {\n      fullscreen: _ctx.isFullscreen\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    class: \"toolbar-btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.toggleFullscreen && _ctx.toggleFullscreen(...args)),\n    title: _ctx.isFullscreen ? 'Exit Fullscreen' : 'Fullscreen'\n  }, [!_ctx.isFullscreen ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"‚õ∂\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"üóó\"))], 8 /* PROPS */, _hoisted_2), _createElementVNode(\"button\", {\n    class: \"toolbar-btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.fitChart && _ctx.fitChart(...args)),\n    title: \"Fit to Container\"\n  }, \"‚Üî\")]), !_ctx.hasSeries ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_AnimateIcon, {\n    \"icon-list\": _ctx.iconList,\n    interval: 7500,\n    fade: 600\n  }, null, 8 /* PROPS */, [\"icon-list\"]), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"empty-title\"\n  }, \"No Chart Data\", -1 /* HOISTED */)), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"empty-desc\"\n  }, [_createTextVNode(\"Select a chart type on the left and configure your data to \"), _createElementVNode(\"span\", {\n    class: \"faststart\"\n  }, \"get started fast\"), _createTextVNode(\" with visualization!\")], -1 /* HOISTED */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, null, 512 /* NEED_PATCH */))], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_normalizeClass","fullscreen","_ctx","isFullscreen","_createElementVNode","_hoisted_1","onClick","_cache","args","toggleFullscreen","title","_hoisted_3","_hoisted_4","_hoisted_2","fitChart","hasSeries","_hoisted_5","_createVNode","_component_AnimateIcon","iconList","interval","fade","_createTextVNode","_hoisted_6"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\Chart\\ChartDisplay.vue"],"sourcesContent":["<template>\n<div class=\"chart-display\" :class=\"{ fullscreen: isFullscreen }\">\n    <div class=\"chart-toolbar\">\n        <button class=\"toolbar-btn\" @click=\"toggleFullscreen\" :title=\"isFullscreen ? 'Exit Fullscreen' : 'Fullscreen'\">\n            <span v-if=\"!isFullscreen\">‚õ∂</span>\n            <span v-else>üóó</span>\n        </button>\n        <button class=\"toolbar-btn\" @click=\"fitChart\" title=\"Fit to Container\">‚Üî</button>\n    </div>\n    <div v-if=\"!hasSeries\" class=\"empty-tip\">\n        <AnimateIcon :icon-list=\"iconList\" :interval=\"7500\" :fade=\"600\" />\n        <div class=\"empty-title\">No Chart Data</div>\n        <div class=\"empty-desc\">Select a chart type on the left and configure your data to <span class=\"faststart\">get started fast</span> with visualization!</div>\n    </div>\n    <div v-else ref=\"chartRef\" class=\"chart-container\"></div>\n</div>\n</template>\n\n<script setup>\nimport { nextTick } from 'vue'\nconst isFullscreen = ref(false)\n\nfunction toggleFullscreen() {\n    isFullscreen.value = !isFullscreen.value\n    nextTick(() => {\n        resizeChart()\n    })\n}\n\nfunction fitChart() {\n    resizeChart()\n}\n\nfunction resizeChart() {\n    if (chartInstance) {\n        chartInstance.resize()\n    }\n}\n/* eslint-disable */\nconst currentIcon = computed(() => {\n    const icon = iconList[iconIndex.value]\n    return icon && typeof icon === 'object' ? icon : null\n})\n/* eslint-disable */\nimport { ref, watch, onMounted, onBeforeUnmount, computed } from 'vue'\nimport LineChartIcon from '../svg/LineChartIcon.vue'\nimport BarChartIcon from '../svg/BarChartIcon.vue'\nimport PieChartIcon from '../svg/PieChartIcon.vue'\nimport ScatterChartIcon from '../svg/ScatterChartIcon.vue'\nimport MapChartIcon from '../svg/MapChartIcon.vue'\nimport KlineChartIcon from '../svg/KlineChartIcon.vue'\nimport RadarChartIcon from '../svg/RadarChartIcon.vue'\nimport BoxplotChartIcon from '../svg/BoxplotChartIcon.vue'\nimport HeatmapChartIcon from '../svg/HeatmapChartIcon.vue'\nimport GraphChartIcon from '../svg/GraphChartIcon.vue'\nimport TreeChartIcon from '../svg/TreeChartIcon.vue'\nimport TreemapChartIcon from '../svg/TreemapChartIcon.vue'\nimport SunburstChartIcon from '../svg/SunburstChartIcon.vue'\nimport ParallelChartIcon from '../svg/ParallelChartIcon.vue'\nimport SankeyChartIcon from '../svg/SankeyChartIcon.vue'\nimport FunnelChartIcon from '../svg/FunnelChartIcon.vue'\nimport GaugeChartIcon from '../svg/GaugeChartIcon.vue'\nimport PictorialBarChartIcon from '../svg/PictorialBarChartIcon.vue'\nimport ThemeRiverChartIcon from '../svg/ThemeRiverChartIcon.vue'\nimport CalendarChartIcon from '../svg/CalendarChartIcon.vue'\nimport AnimateIcon from '../Common/AnimateIcon.vue'\nimport * as echarts from 'echarts'\n\n// Âä®ÊÄÅÂºïÂÖ•ÊâÄÊúâ‰∏ªÈ¢ò\nconst requireTheme = require.context('../../assets/themes', false, /\\.js$/)\nconst themeList = computed(() => {\n    const names = requireTheme.keys().map(path => {\n        // path ÂΩ¢Â¶Ç './dark.js'\n        const match = path.match(/\\.\\/([^/]+)\\.js$/)\n        return match ? match[1] : null\n    }).filter(Boolean)\n    return ['default', ...names]\n})\n\n// Ê≥®ÂÜåÊâÄÊúâ‰∏ªÈ¢ò\nrequireTheme.keys().forEach(path => {\n    const name = path.match(/\\.\\/([^/]+)\\.js$/)[1]\n    const themeObj = requireTheme(path).default || requireTheme(path)\n    echarts.registerTheme(name, themeObj)\n    console.log('Registered theme:', name, themeObj)\n});\n\nconst props = defineProps({\n    option: { type: Object, required: true },\n    colorTheme: { type: String, default: 'default' }\n})\n\nconst chartRef = ref(null)\nlet chartInstance = null\n\nconst hasSeries = computed(() => {\n    return props.option && Array.isArray(props.option.series) && props.option.series.length > 0\n})\n\n// Á©∫Áä∂ÊÄÅÂõæÊ†áËΩÆÊí≠ÈÄªËæë\nconst iconList = [\n    BarChartIcon,\n    LineChartIcon,\n    PieChartIcon,\n    ScatterChartIcon,\n    MapChartIcon,\n    KlineChartIcon,\n    RadarChartIcon,\n    BoxplotChartIcon,\n    HeatmapChartIcon,\n    GraphChartIcon,\n    TreeChartIcon,\n    TreemapChartIcon,\n    SunburstChartIcon,\n    ParallelChartIcon,\n    SankeyChartIcon,\n    FunnelChartIcon,\n    GaugeChartIcon,\n    PictorialBarChartIcon,\n    ThemeRiverChartIcon,\n    CalendarChartIcon,\n]\nconst iconIndex = ref(0)\nconst iconOpacity = ref(1)\nlet iconTimer = null\nlet fadeTimer = null\n\nfunction startIconLoop() {\n    clearInterval(iconTimer)\n    clearTimeout(fadeTimer)\n    iconOpacity.value = 1\n    iconTimer = setInterval(() => {\n        // ÂÖàÊ∑°Âá∫\n        iconOpacity.value = 0\n        fadeTimer = setTimeout(() => {\n            iconIndex.value = (iconIndex.value + 1) % iconList.length\n            iconOpacity.value = 1\n        }, 400)\n    }, 3500)\n}\n\nonMounted(() => {\n    startIconLoop()\n    renderChart()\n    window.addEventListener('resize', resizeChart)\n})\nonBeforeUnmount(() => {\n    if (chartInstance) chartInstance.dispose()\n    clearInterval(iconTimer)\n    clearTimeout(fadeTimer)\n    window.removeEventListener('resize', resizeChart)\n})\n\n    console.log('Start rendering chart')\n    console.log('value of hasSeries:', hasSeries.value)\n    if (!hasSeries.value) return\n    // ÊØèÊ¨°ÈÉΩÈîÄÊØÅÊóßÁöÑÂÆû‰æã\n    if (chartInstance) {\n        chartInstance.dispose()\n        chartInstance = null\n    }\n    const themeName = props.colorTheme === 'default' ? null : props.colorTheme\n    console.log('Rendering chart with theme:', themeName)\n    chartInstance = echarts.init(chartRef.value, themeName)\n    if (props.option) {\n        console.log('[Rendering Theme]Setting chart option:', props.option)\n        chartInstance.setOption(props.option, true)\n    }\n    // ‰øùËØÅËá™ÈÄÇÂ∫î\n    nextTick(() => resizeChart())\n}\n\nwatch([() => props.option, () => props.colorTheme], renderChart, { deep: true })\nonMounted(renderChart)\nonBeforeUnmount(() => {\n    if (chartInstance) chartInstance.dispose()\n})\n</script>\n\n<style scoped>\n/* ÂìçÂ∫îÂºèËá™ÈÄÇÂ∫îÂÆπÂô® */\n.chart-display {\n    width: 100%;\n    height: 100%;\n    min-height: clamp(300px, 60vh, 600px);\n    background: var(--bg-color, #fff);\n    border-radius: clamp(8px, 2vw, 12px);\n    box-shadow: 0 0 1px 1px var(--text-color);\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: clamp(10px, 2vw, 20px);\n    transition: all 0.3s cubic-bezier(.4,1.6,.6,1);\n    overflow: hidden;\n}\n.chart-display.fullscreen {\n    position: fixed !important;\n    left: 0; top: 0; right: 0; bottom: 0;\n    width: 100vw !important;\n    height: 100vh !important;\n    min-height: 0 !important;\n    z-index: 9999;\n    border-radius: 0 !important;\n    box-shadow: none !important;\n    background: var(--bg-color, #222);\n}\n.chart-toolbar {\n    position: absolute;\n    top: 12px;\n    right: 18px;\n    z-index: 10;\n    display: flex;\n    gap: 8px;\n}\n.toolbar-btn {\n    background: rgba(255,255,255,0.7);\n    border: none;\n    border-radius: 6px;\n    font-size: 1.2em;\n    padding: 3px 10px;\n    cursor: pointer;\n    box-shadow: 0 1px 4px rgba(0,0,0,0.08);\n    transition: background 0.2s, box-shadow 0.2s;\n}\n.toolbar-btn:hover {\n    background: #e0e0e0;\n    box-shadow: 0 2px 8px rgba(0,0,0,0.12);\n}\n\n.chart-container {\n    width: 100% !important;\n    height: 100% !important;\n    min-height: inherit;\n    min-width: 0;\n    min-height: 0;\n    flex: 1 1 0%;\n    transition: width 0.3s, height 0.3s;\n}\n\n.empty-tip {\n    color: #888;\n    text-align: center;\n    letter-spacing: 1px;\n    padding: 24px 10px 10px 10px;\n    user-select: none;\n    background: none;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n.empty-svg {\n    margin-bottom: 15px;\n    opacity: 0.92;\n    animation: floatX 3.2s ease-in-out infinite;\n    will-change: transform;\n}\n.dynamic-line-svg .line-path {\n    stroke-dasharray: 120;\n    stroke-dashoffset: 120;\n    animation: line-draw 1.2s cubic-bezier(.4,1.6,.6,1) forwards;\n}\n.dynamic-line-svg .dot {\n    opacity: 0;\n    transform: scale(0.5);\n    animation: dot-pop 0.5s cubic-bezier(.4,1.6,.6,1) forwards;\n}\n.dynamic-line-svg .dot1 { animation-delay: 0.7s; }\n.dynamic-line-svg .dot2 { animation-delay: 0.85s; }\n.dynamic-line-svg .dot3 { animation-delay: 1.0s; }\n.dynamic-line-svg .dot4 { animation-delay: 1.15s; }\n.dynamic-line-svg .dot5 { animation-delay: 1.3s; }\n@keyframes line-draw {\n    to { stroke-dashoffset: 0; }\n}\n@keyframes dot-pop {\n    0% { opacity: 0; transform: scale(0.5); }\n    60% { opacity: 1; transform: scale(1.2); }\n    100% { opacity: 1; transform: scale(1); }\n}\n@keyframes floatX {\n    0% { transform: translateY(0) translateX(0); }\n    25% { transform: translateY(-8px) translateX(4px); }\n    50% { transform: translateY(-12px) translateX(-4px); }\n    75% { transform: translateY(-8px) translateX(4px); }\n    100% { transform: translateY(0) translateX(0); }\n}\n.empty-title {\n    font-size: 1.25em;\n    font-weight: bold;\n    color: #4F8EF7;\n    margin-bottom: 6px;\n}\n.empty-desc {\n    font-size: 1em;\n    color: #666;\n    margin-top: 2px;\n}\n.faststart {\n    color: #FFB300;\n    font-weight: bold;\n}\n\n/* Â∞èÂ±èÂπïÈÄÇÈÖç */\n@media (max-width: 767px) {\n    .chart-display {\n        height: 100%;\n        padding: 8px;\n        border-radius: 8px;\n    }\n    .empty-tip {\n        font-size: 0.95em;\n        padding: 10px 2px 6px 2px;\n    }\n    .empty-title {\n        font-size: 1.05em;\n    }\n    .empty-desc {\n        font-size: 0.95em;\n    }\n    .empty-svg svg {\n        width: 44px;\n        height: 44px;\n    }\n}\n</style>\n"],"mappings":";;EAESA,KAAK,EAAC;AAAe;mBAF9B;;EAAAC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;EAS2BD,KAAK,EAAC;;;EATjCC,GAAA;EAcgBC,GAAG,EAAC,UAAU;EAACF,KAAK,EAAC;;;;uBAbrCG,mBAAA,CAcM;IAdDH,KAAK,EADVI,eAAA,EACW,eAAe;MAAAC,UAAA,EAAuBC,IAAA,CAAAC;IAAY;MACzDC,mBAAA,CAMM,OANNC,UAMM,GALFD,mBAAA,CAGS;IAHDR,KAAK,EAAC,aAAa;IAAEU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,IAAA,CAAAO,gBAAA,IAAAP,IAAA,CAAAO,gBAAA,IAAAD,IAAA,CAAgB;IAAGE,KAAK,EAAER,IAAA,CAAAC,YAAY;OACzDD,IAAA,CAAAC,YAAY,I,cAAzBJ,mBAAA,CAAmC,QAJ/CY,UAAA,EAIuC,GAAC,M,cAC5BZ,mBAAA,CAAsB,QALlCa,UAAA,EAKyB,IAAE,G,iBAL3BC,UAAA,GAOQT,mBAAA,CAAiF;IAAzER,KAAK,EAAC,aAAa;IAAEU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,IAAA,CAAAY,QAAA,IAAAZ,IAAA,CAAAY,QAAA,IAAAN,IAAA,CAAQ;IAAEE,KAAK,EAAC;KAAmB,GAAC,E,IAEhER,IAAA,CAAAa,SAAS,I,cAArBhB,mBAAA,CAIM,OAJNiB,UAIM,GAHFC,YAAA,CAAkEC,sBAAA;IAApD,WAAS,EAAEhB,IAAA,CAAAiB,QAAQ;IAAGC,QAAQ,EAAE,IAAI;IAAGC,IAAI,EAAE;oEAC3DjB,mBAAA,CAA4C;IAAvCR,KAAK,EAAC;EAAa,GAAC,eAAa,sB,0BACtCQ,mBAAA,CAA4J;IAAvJR,KAAK,EAAC;EAAY,IAZ/B0B,gBAAA,CAYgC,6DAA2D,GAAAlB,mBAAA,CAA+C;IAAzCR,KAAK,EAAC;EAAW,GAAC,kBAAgB,GAZnI0B,gBAAA,CAY0I,sBAAoB,E,yCAE1JvB,mBAAA,CAAyD,OAAzDwB,UAAyD,+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}