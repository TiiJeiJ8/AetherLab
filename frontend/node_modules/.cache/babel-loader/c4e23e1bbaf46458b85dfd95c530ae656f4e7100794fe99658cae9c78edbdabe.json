{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n/* eslint-disable */\n\nimport { readonly } from \"vue\";\n\n/**\n * 平行坐标系图高级配置项：\n * 线条宽度 LineWidth\n * 副标题 subtext\n * 线条平滑性 isSmooth\n */\n\n// 平行坐标系图配置生成器\nexport default function parallelOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  // 默认配置项\n  const lineWidth = config.lineWidth || 2;\n  const isSmooth = config.isSmooth || false;\n  const subtext = config.subtext || '';\n\n  // 维度自动识别 (排除name字段)\n  let dimensions = Object.keys(seriesData[0] || {}).filter(key => key !== 'name');\n\n  // 是否添加category维度\n  const isCategoryDim = config?.isCategoryDim;\n  const positionCategoryDim = config?.positionCategoryDim || 'left'; // left/right\n  let parallelAxis = [];\n\n  // 构造数值型维度\n  const boundaryRatio = config.boundaryRatio || 0.05; // 默认5%边界\n  const valueAxes = dimensions.map((dim, idx) => {\n    const values = seriesData.map(item => item[dim]);\n    let min = Math.min(...values);\n    let max = Math.max(...values);\n    if (min === max) {\n      min -= 1;\n      max += 1;\n    }\n    const range = max - min;\n    min = min - range * boundaryRatio;\n    max = max + range * boundaryRatio;\n    min = Math.floor(min);\n    max = Math.ceil(max);\n    return {\n      dim: null,\n      // 后续统一设置dim索引\n      name: dim,\n      min,\n      max\n    };\n  });\n\n  // 构造category维度\n  if (isCategoryDim) {\n    const categories = Array.from(new Set(seriesData.map(item => item.name)));\n    const categoryAxis = {\n      dim: null,\n      // 后续统一设置dim索引\n      name: '类别',\n      type: 'category',\n      data: categories\n    };\n    if (positionCategoryDim === 'left') {\n      parallelAxis = [categoryAxis, ...valueAxes];\n    } else {\n      parallelAxis = [...valueAxes, categoryAxis];\n    }\n  } else {\n    parallelAxis = valueAxes;\n  }\n  // 统一设置dim索引\n  parallelAxis = parallelAxis.map((axis, idx) => ({\n    ...axis,\n    dim: idx\n  }));\n\n  // 维度顺序调整后，series数据也需调整\n  let dataDimensions = dimensions.slice();\n  if (isCategoryDim) {\n    if (positionCategoryDim === 'left') {\n      dataDimensions = ['name', ...dimensions];\n    } else {\n      dataDimensions = [...dimensions, 'name'];\n    }\n  }\n\n  // 按name分组\n  const groupMap = {};\n  seriesData.forEach(item => {\n    const group = item.name || 'default';\n    if (!groupMap[group]) groupMap[group] = [];\n    // 按dataDimensions顺序取值\n    groupMap[group].push(dataDimensions.map(dim => item[dim]));\n  });\n\n  // 构造series\n  const series = Object.entries(groupMap).map(([name, data]) => ({\n    name,\n    type: 'parallel',\n    lineStyle: {\n      width: lineWidth\n    },\n    smooth: isSmooth,\n    data\n  }));\n\n  // 返回ECharts配置\n  return {\n    title: {\n      text: config.title || 'Chart of Parallel',\n      subtext: subtext\n    },\n    tooltip: {\n      trigger: 'item'\n    },\n    parallelAxis,\n    parallel: {\n      left: '5%',\n      right: '13%',\n      bottom: '10%',\n      top: '15%'\n    },\n    series,\n    ...customOption\n  };\n}","map":{"version":3,"names":["readonly","parallelOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","lineWidth","isSmooth","subtext","dimensions","Object","keys","filter","key","isCategoryDim","positionCategoryDim","parallelAxis","boundaryRatio","valueAxes","map","dim","idx","values","item","min","Math","max","range","floor","ceil","name","categories","Array","from","Set","categoryAxis","type","data","axis","dataDimensions","slice","groupMap","forEach","group","push","series","entries","lineStyle","width","smooth","title","text","tooltip","trigger","parallel","left","right","bottom","top"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/chartOptions/parallel.js"],"sourcesContent":["/* eslint-disable */\n\nimport { readonly } from \"vue\";\n\n/**\n * 平行坐标系图高级配置项：\n * 线条宽度 LineWidth\n * 副标题 subtext\n * 线条平滑性 isSmooth\n */\n\n// 平行坐标系图配置生成器\nexport default function parallelOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    // 默认配置项\n    const lineWidth = config.lineWidth || 2;\n    const isSmooth = config.isSmooth || false;\n    const subtext = config.subtext || '';\n\n    // 维度自动识别 (排除name字段)\n    let dimensions = Object.keys(seriesData[0] || {}).filter(key => key !== 'name');\n\n    // 是否添加category维度\n    const isCategoryDim = config?.isCategoryDim;\n    const positionCategoryDim = config?.positionCategoryDim || 'left'; // left/right\n    let parallelAxis = [];\n\n    // 构造数值型维度\n    const boundaryRatio = config.boundaryRatio || 0.05; // 默认5%边界\n    const valueAxes = dimensions.map((dim, idx) => {\n        const values = seriesData.map(item => item[dim]);\n        let min = Math.min(...values);\n        let max = Math.max(...values);\n        if (min === max) {\n            min -= 1;\n            max += 1;\n        }\n        const range = max - min;\n        min = min - range * boundaryRatio;\n        max = max + range * boundaryRatio;\n        min = Math.floor(min);\n        max = Math.ceil(max);\n        return {\n            dim: null, // 后续统一设置dim索引\n            name: dim,\n            min,\n            max\n        };\n    });\n\n    // 构造category维度\n    if (isCategoryDim) {\n        const categories = Array.from(new Set(seriesData.map(item => item.name)));\n        const categoryAxis = {\n            dim: null, // 后续统一设置dim索引\n            name: '类别',\n            type: 'category',\n            data: categories\n        };\n        if (positionCategoryDim === 'left') {\n            parallelAxis = [categoryAxis, ...valueAxes];\n        } else {\n            parallelAxis = [...valueAxes, categoryAxis];\n        }\n    } else {\n        parallelAxis = valueAxes;\n    }\n    // 统一设置dim索引\n    parallelAxis = parallelAxis.map((axis, idx) => ({ ...axis, dim: idx }));\n\n    // 维度顺序调整后，series数据也需调整\n    let dataDimensions = dimensions.slice();\n    if (isCategoryDim) {\n        if (positionCategoryDim === 'left') {\n            dataDimensions = ['name', ...dimensions];\n        } else {\n            dataDimensions = [...dimensions, 'name'];\n        }\n    }\n\n    // 按name分组\n    const groupMap = {};\n    seriesData.forEach(item => {\n        const group = item.name || 'default';\n        if (!groupMap[group]) groupMap[group] = [];\n        // 按dataDimensions顺序取值\n        groupMap[group].push(dataDimensions.map(dim => item[dim]));\n    });\n\n    // 构造series\n    const series = Object.entries(groupMap).map(([name, data]) => ({\n        name,\n        type: 'parallel',\n        lineStyle: {\n            width: lineWidth\n        },\n        smooth: isSmooth,\n        data\n    }));\n\n    // 返回ECharts配置\n    return {\n        title: {\n            text: config.title || 'Chart of Parallel',\n            subtext: subtext\n        },\n        tooltip: {\n            trigger: 'item'\n        },\n        parallelAxis,\n        parallel: {\n            left: '5%',\n            right: '13%',\n            bottom: '10%',\n            top: '15%'\n        },\n        series,\n        ...customOption,\n    };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}