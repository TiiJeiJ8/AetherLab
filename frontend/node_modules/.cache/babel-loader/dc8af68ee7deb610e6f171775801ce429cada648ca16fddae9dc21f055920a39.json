{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/* eslint-disable */\n\n// 关系图生成器\nexport default function graphOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  const {\n    nodes,\n    edges\n  } = seriesData;\n\n  // 默认布局和样式\n  const defaultOption = {\n    tooltip: {\n      show: true,\n      formatter: function (params) {\n        if (params.dataType === 'node') {\n          return params.data.name || params.data.id;\n        } else if (params.dataType === 'edge') {\n          return `${params.data.source} → ${params.data.target}` + (params.data.weight ? ` (权重: ${params.data.weight})` : '');\n        }\n        return '';\n      }\n    },\n    legend: {\n      show: false\n    },\n    series: [{\n      type: 'graph',\n      layout: 'force',\n      roam: true,\n      data: nodes,\n      edges: edges,\n      label: {\n        show: true,\n        position: 'right',\n        formatter: '{b}'\n      },\n      force: {\n        repulsion: 200,\n        edgeLength: 100\n      },\n      lineStyle: {\n        color: '#aaa',\n        width: 2\n      },\n      edgeLabel: {\n        show: false\n      },\n      itemStyle: {\n        borderColor: '#333',\n        borderWidth: 1\n      }\n    }]\n  };\n\n  // 合并自定义配置\n  const option = Object.assign({}, defaultOption, customOption);\n  if (customOption.series && Array.isArray(customOption.series)) {\n    option.series = customOption.series.map((ser, idx) => Object.assign({}, defaultOption.series[idx] || {}, ser));\n  }\n  return option;\n}","map":{"version":3,"names":["graphOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","nodes","edges","defaultOption","tooltip","show","formatter","params","dataType","data","name","id","source","target","weight","legend","series","type","layout","roam","label","position","force","repulsion","edgeLength","lineStyle","color","width","edgeLabel","itemStyle","borderColor","borderWidth","option","Object","assign","Array","isArray","map","ser","idx"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/chartOptions/graph.js"],"sourcesContent":["/* eslint-disable */\n\n// 关系图生成器\nexport default function graphOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    const { nodes, edges } = seriesData;\n\n    // 默认布局和样式\n    const defaultOption = {\n        tooltip: {\n            show: true,\n            formatter: function (params) {\n                if (params.dataType === 'node') {\n                    return params.data.name || params.data.id;\n                } else if (params.dataType === 'edge') {\n                    return `${params.data.source} → ${params.data.target}` + (params.data.weight ? ` (权重: ${params.data.weight})` : '');\n                }\n                return '';\n            }\n        },\n        legend: {\n            show: false\n        },\n        series: [\n            {\n                type: 'graph',\n                layout: 'force',\n                roam: true,\n                data: nodes,\n                edges: edges,\n                label: {\n                    show: true,\n                    position: 'right',\n                    formatter: '{b}'\n                },\n                force: {\n                    repulsion: 200,\n                    edgeLength: 100\n                },\n                lineStyle: {\n                    color: '#aaa',\n                    width: 2\n                },\n                edgeLabel: {\n                    show: false\n                },\n                itemStyle: {\n                    borderColor: '#333',\n                    borderWidth: 1\n                }\n            }\n        ]\n    };\n\n    // 合并自定义配置\n    const option = Object.assign({}, defaultOption, customOption);\n    if (customOption.series && Array.isArray(customOption.series)) {\n        option.series = customOption.series.map((ser, idx) => Object.assign({}, defaultOption.series[idx] || {}, ser));\n    }\n\n    return option;\n}\n"],"mappings":";;AAAA;;AAEA;AACA,eAAe,SAASA,WAAWA,CAACC,MAAM,EAAEC,WAAW,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,YAAY,GAAG,CAAC,CAAC,EAAE;EACxH,MAAM;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGH,UAAU;;EAEnC;EACA,MAAMI,aAAa,GAAG;IAClBC,OAAO,EAAE;MACLC,IAAI,EAAE,IAAI;MACVC,SAAS,EAAE,SAAAA,CAAUC,MAAM,EAAE;QACzB,IAAIA,MAAM,CAACC,QAAQ,KAAK,MAAM,EAAE;UAC5B,OAAOD,MAAM,CAACE,IAAI,CAACC,IAAI,IAAIH,MAAM,CAACE,IAAI,CAACE,EAAE;QAC7C,CAAC,MAAM,IAAIJ,MAAM,CAACC,QAAQ,KAAK,MAAM,EAAE;UACnC,OAAO,GAAGD,MAAM,CAACE,IAAI,CAACG,MAAM,MAAML,MAAM,CAACE,IAAI,CAACI,MAAM,EAAE,IAAIN,MAAM,CAACE,IAAI,CAACK,MAAM,GAAG,SAASP,MAAM,CAACE,IAAI,CAACK,MAAM,GAAG,GAAG,EAAE,CAAC;QACvH;QACA,OAAO,EAAE;MACb;IACJ,CAAC;IACDC,MAAM,EAAE;MACJV,IAAI,EAAE;IACV,CAAC;IACDW,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,OAAO;MACbC,MAAM,EAAE,OAAO;MACfC,IAAI,EAAE,IAAI;MACVV,IAAI,EAAER,KAAK;MACXC,KAAK,EAAEA,KAAK;MACZkB,KAAK,EAAE;QACHf,IAAI,EAAE,IAAI;QACVgB,QAAQ,EAAE,OAAO;QACjBf,SAAS,EAAE;MACf,CAAC;MACDgB,KAAK,EAAE;QACHC,SAAS,EAAE,GAAG;QACdC,UAAU,EAAE;MAChB,CAAC;MACDC,SAAS,EAAE;QACPC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE;MACX,CAAC;MACDC,SAAS,EAAE;QACPvB,IAAI,EAAE;MACV,CAAC;MACDwB,SAAS,EAAE;QACPC,WAAW,EAAE,MAAM;QACnBC,WAAW,EAAE;MACjB;IACJ,CAAC;EAET,CAAC;;EAED;EACA,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE/B,aAAa,EAAEH,YAAY,CAAC;EAC7D,IAAIA,YAAY,CAACgB,MAAM,IAAImB,KAAK,CAACC,OAAO,CAACpC,YAAY,CAACgB,MAAM,CAAC,EAAE;IAC3DgB,MAAM,CAAChB,MAAM,GAAGhB,YAAY,CAACgB,MAAM,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKN,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE/B,aAAa,CAACa,MAAM,CAACuB,GAAG,CAAC,IAAI,CAAC,CAAC,EAAED,GAAG,CAAC,CAAC;EAClH;EAEA,OAAON,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}