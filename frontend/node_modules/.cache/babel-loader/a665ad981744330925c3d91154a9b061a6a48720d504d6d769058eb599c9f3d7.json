{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/* eslint-disable */\nimport ecStat from 'echarts-stat';\n\n/**\n * 散点图高级配置项：\n * 聚合\n * 基础拟合回归线（指数回归、线性回归、多项式回归）\n * 单轴散点图\n * 均值线\n * 系列最高值、最小值\n * 散点图标签顶部/右侧对齐\n * 散点样式（根据系列分配）\n * 视觉映射\n * 大小映射\n * 涟漪图\n * 极坐标系\n * 视觉映射\n * 气泡图\n * 极坐标系\n */\n\n// 散点图 option 生成器\nexport default function scatterOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  // 网格线显示控制\n  let xGrid = false,\n    yGrid = false;\n  switch (config.gridVisible) {\n    case 'x':\n      xGrid = true;\n      yGrid = false;\n      break;\n    case 'y':\n      xGrid = false;\n      yGrid = true;\n      break;\n    case 'both':\n      xGrid = true;\n      yGrid = true;\n      break;\n    case 'none':\n    default:\n      xGrid = false;\n      yGrid = false;\n  }\n  const {\n    yAxis,\n    title,\n    animation\n  } = config;\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  // 处理极坐标\n  let usePolar = config.polarStyle && config.polarStyle !== 'none';\n  let polar = usePolar ? {\n    radius: '70%',\n    center: ['50%', '50%']\n  } : undefined;\n  let angleAxis = undefined;\n  let radiusAxis = undefined;\n  if (usePolar) {\n    angleAxis = {\n      startAngle: config.startAngle || 0\n    };\n    radiusAxis = {};\n  }\n\n  // 散点大小映射：受 sizeMapping 控制\n  const sizeMin = typeof config.sizeMin === 'number' ? config.sizeMin : 10;\n  const sizeMax = typeof config.sizeMax === 'number' ? config.sizeMax : 50;\n  const enableSizeMapping = !!config.sizeMapping;\n  // 先生成散点series\n  const seriesArr = yArr.map((y, idx) => {\n    let coordinateSystem = usePolar ? 'polar' : 'cartesian2d';\n    if (config.singleAxisMode === 'x' || config.singleAxisMode === 'y') {\n      coordinateSystem = 'singleAxis';\n    }\n    // labelAlign\n    let label = undefined,\n      labelLayout = undefined,\n      labelLine = undefined;\n    if (config.labelAlign === 'right') {\n      label = {\n        show: true,\n        position: 'right',\n        minMargin: 2,\n        formatter: function (param) {\n          return param.data && (param.data[3] || param.name || '');\n        }\n      };\n      labelLayout = {\n        align: 'left',\n        verticalAlign: 'middle',\n        moveOverlap: 'shiftY'\n      };\n      labelLine = {\n        show: true,\n        length2: 5,\n        lineStyle: {\n          color: '#bbb'\n        }\n      };\n    } else if (config.labelAlign === 'inside') {\n      label = {\n        show: true,\n        position: config.labelAlign\n      };\n    }\n    // 计算本系列y的最小最大值\n    const yVals = yDataArr[idx];\n    const minY = Math.min(...yVals);\n    const maxY = Math.max(...yVals);\n    // 构造带symbolSize的data，是否映射由enableSizeMapping控制\n    const dataWithSize = yVals.map(yv => {\n      let size = sizeMin;\n      if (enableSizeMapping) {\n        size = minY === maxY ? sizeMin : sizeMin + (yv - minY) / (maxY - minY) * (sizeMax - sizeMin);\n      }\n      return {\n        value: yv,\n        symbolSize: size\n      };\n    });\n    let base = {\n      name: y.field,\n      type: config.rippleEffect ? 'effectScatter' : 'scatter',\n      data: dataWithSize,\n      animationDuration: animation ? 1500 : 0,\n      label,\n      labelLayout,\n      labelLine,\n      rippleEffect: config.rippleEffect ? {\n        brushType: 'stroke'\n      } : undefined,\n      coordinateSystem\n    };\n    // 最大/最小值\n    if (config.showMaxMin) {\n      base.markPoint = {\n        data: [{\n          type: 'max',\n          name: 'Max'\n        }, {\n          type: 'min',\n          name: 'Min'\n        }]\n      };\n    }\n    // 均值线\n    if (config.showMeanLine) {\n      base.markLine = {\n        data: [{\n          type: 'average',\n          name: 'Mean'\n        }]\n      };\n    }\n    return base;\n  });\n\n  // 再遍历添加回归线series\n  yArr.forEach((y, idx) => {\n    if (config.trendLine && config.trendLine !== '' && yDataArr[idx] && yDataArr[idx].length > 1) {\n      let coordinateSystem = usePolar ? 'polar' : 'cartesian2d';\n      if (config.singleAxisMode === 'x' || config.singleAxisMode === 'y') {\n        coordinateSystem = 'singleAxis';\n      }\n      let x = xData && xData.length === yDataArr[idx].length ? xData : yDataArr[idx].map((_, i) => i);\n      let points = x.map((xi, i) => [Number(xi), Number(yDataArr[idx][i])]).filter(([xi, yi]) => !isNaN(xi) && !isNaN(yi));\n      let regType = config.trendLine;\n      let regResult;\n      if (regType === 'linear') {\n        regResult = ecStat.regression('linear', points);\n      } else if (regType === 'exponential') {\n        regResult = ecStat.regression('exponential', points);\n      } else if (regType === 'polynomial') {\n        regResult = ecStat.regression('polynomial', points, config.polynomialOrder || 3);\n      }\n      if (regResult && regResult.points && regResult.points.length > 1) {\n        regResult.points.sort((a, b) => a[0] - b[0]);\n        seriesArr.push({\n          name: (y.field || 'Trend Line') + ' Regression',\n          type: 'line',\n          data: regResult.points,\n          showSymbol: false,\n          lineStyle: {\n            type: config.trendLineStyle || 'dashed',\n            color: config.trendLineColor || '#888',\n            width: config.trendLineWidth || 2\n          },\n          symbol: 'none',\n          markPoint: {\n            symbol: 'circle',\n            symbolSize: 8,\n            data: [{\n              coord: regResult.points[Math.floor(regResult.points.length / 2)],\n              value: regResult.expression,\n              label: {\n                show: config.trendLineLabelHidden !== true,\n                position: 'top',\n                color: config.trendLineColor || '#888',\n                fontWeight: config.trendLineFontStyle || 'bold',\n                fontSize: config.trendLineFontSize || 14,\n                overflow: 'break',\n                formatter: function () {\n                  return regResult.expression;\n                }\n              }\n            }]\n          },\n          coordinateSystem\n        });\n      }\n    }\n  });\n\n  // 单轴模式\n  let singleAxis = undefined;\n  let xAxis = undefined,\n    yAxisOpt = undefined;\n  if (config.singleAxisMode === 'x') {\n    singleAxis = {\n      type: 'category',\n      data: xData,\n      left: 60,\n      top: 60,\n      right: 60,\n      bottom: 60\n    };\n  } else if (config.singleAxisMode === 'y') {\n    singleAxis = {\n      type: 'value',\n      left: 60,\n      top: 60,\n      right: 60,\n      bottom: 60\n    };\n  } else {\n    xAxis = {\n      type: 'category',\n      data: xData,\n      axisLabel: {\n        interval: 0,\n        rotate: xData.length > 10 ? 45 : 0\n      },\n      splitLine: {\n        show: xGrid\n      },\n      name: config.xAxisName || 'X Axis'\n    };\n    yAxisOpt = {\n      type: 'value',\n      name: yArr.map(y => y.field).join(','),\n      splitLine: {\n        show: yGrid\n      },\n      name: config.yAxisName || 'Y Axis'\n    };\n  }\n\n  // 构造option\n  let option = {\n    title: {\n      text: config.title || 'Chart of Scatter',\n      subtext: config.subtext,\n      left: config.titlePosition === 'left' ? 'left' : config.titlePosition === 'center' ? 'center' : config.titlePosition === 'right' ? 'right' : 'center',\n      top: config.titlePosition === 'bottom' ? 'bottom' : 'top',\n      textStyle: {\n        fontSize: 16,\n        fontWeight: 'bold'\n      },\n      subtextStyle: {\n        fontSize: 12\n      }\n    },\n    tooltip: {\n      trigger: 'axis'\n    },\n    legend: {\n      type: 'scroll',\n      show: config.legendVisible !== false,\n      data: yArr.map(y => y.field),\n      top: config.legendPosition || 'bottom'\n    },\n    toolbox: {\n      show: true,\n      feature: {\n        dataZoom: {\n          show: true\n        },\n        dataView: {\n          show: true,\n          readOnly: false\n        },\n        restore: {\n          show: true\n        },\n        saveAsImage: {\n          show: true\n        }\n      }\n    },\n    polar,\n    angleAxis,\n    radiusAxis,\n    series: seriesArr,\n    animation: animation,\n    animationDuration: animation ? 1500 : 0,\n    grid: {\n      right: 80 // 给右侧留空间，防止标签被裁剪\n    },\n    ...customOption\n  };\n  if (config.singleAxisMode === 'x' || config.singleAxisMode === 'y') {\n    option.singleAxis = singleAxis;\n  } else if (!usePolar) {\n    option.xAxis = xAxis;\n    option.yAxis = yAxisOpt;\n  }\n  return option;\n}","map":{"version":3,"names":["ecStat","scatterOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","xGrid","yGrid","gridVisible","yAxis","title","animation","yArr","Array","isArray","usePolar","polarStyle","polar","radius","center","undefined","angleAxis","radiusAxis","startAngle","sizeMin","sizeMax","enableSizeMapping","sizeMapping","seriesArr","map","y","idx","coordinateSystem","singleAxisMode","label","labelLayout","labelLine","labelAlign","show","position","minMargin","formatter","param","data","name","align","verticalAlign","moveOverlap","length2","lineStyle","color","yVals","minY","Math","min","maxY","max","dataWithSize","yv","size","value","symbolSize","base","field","type","rippleEffect","animationDuration","brushType","showMaxMin","markPoint","showMeanLine","markLine","forEach","trendLine","length","x","_","i","points","xi","Number","filter","yi","isNaN","regType","regResult","regression","polynomialOrder","sort","a","b","push","showSymbol","trendLineStyle","trendLineColor","width","trendLineWidth","symbol","coord","floor","expression","trendLineLabelHidden","fontWeight","trendLineFontStyle","fontSize","trendLineFontSize","overflow","singleAxis","xAxis","yAxisOpt","left","top","right","bottom","axisLabel","interval","rotate","splitLine","xAxisName","join","yAxisName","option","text","subtext","titlePosition","textStyle","subtextStyle","tooltip","trigger","legend","legendVisible","legendPosition","toolbox","feature","dataZoom","dataView","readOnly","restore","saveAsImage","series","grid"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/chartOptions/scatter.js"],"sourcesContent":["/* eslint-disable */\nimport ecStat from 'echarts-stat';\n\n/**\n * 散点图高级配置项：\n * 聚合\n * 基础拟合回归线（指数回归、线性回归、多项式回归）\n * 单轴散点图\n * 均值线\n * 系列最高值、最小值\n * 散点图标签顶部/右侧对齐\n * 散点样式（根据系列分配）\n * 视觉映射\n * 大小映射\n * 涟漪图\n * 极坐标系\n * 视觉映射\n * 气泡图\n * 极坐标系\n */\n\n// 散点图 option 生成器\nexport default function scatterOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    // 网格线显示控制\n    let xGrid = false, yGrid = false;\n    switch (config.gridVisible) {\n        case 'x':\n            xGrid = true; yGrid = false; break;\n        case 'y':\n            xGrid = false; yGrid = true; break;\n        case 'both':\n            xGrid = true; yGrid = true; break;\n        case 'none':\n        default:\n            xGrid = false; yGrid = false;\n    }\n\n    const { yAxis, title, animation } = config;\n    const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n    // 处理极坐标\n    let usePolar = config.polarStyle && config.polarStyle !== 'none';\n    let polar = usePolar ? {\n        radius: '70%',\n        center: ['50%', '50%']\n    } : undefined;\n    let angleAxis = undefined;\n    let radiusAxis = undefined;\n    if (usePolar) {\n        angleAxis = {\n            startAngle: config.startAngle || 0,\n        };\n        radiusAxis = {};\n    }\n\n    // 散点大小映射：受 sizeMapping 控制\n    const sizeMin = typeof config.sizeMin === 'number' ? config.sizeMin : 10;\n    const sizeMax = typeof config.sizeMax === 'number' ? config.sizeMax : 50;\n    const enableSizeMapping = !!config.sizeMapping;\n    // 先生成散点series\n    const seriesArr = yArr.map((y, idx) => {\n        let coordinateSystem = usePolar ? 'polar' : 'cartesian2d';\n        if (config.singleAxisMode === 'x' || config.singleAxisMode === 'y') {\n            coordinateSystem = 'singleAxis';\n        }\n        // labelAlign\n        let label = undefined, labelLayout = undefined, labelLine = undefined;\n        if (config.labelAlign === 'right') {\n            label = {\n                show: true,\n                position: 'right',\n                minMargin: 2,\n                formatter: function (param) {\n                    return param.data && (param.data[3] || param.name || '');\n                }\n            };\n            labelLayout = {\n                align: 'left',\n                verticalAlign: 'middle',\n                moveOverlap: 'shiftY'\n            };\n            labelLine = {\n                show: true,\n                length2: 5,\n                lineStyle: { color: '#bbb' }\n            };\n        } else if (config.labelAlign === 'inside') {\n            label = {\n                show: true,\n                position: config.labelAlign\n            };\n        }\n        // 计算本系列y的最小最大值\n        const yVals = yDataArr[idx];\n        const minY = Math.min(...yVals);\n        const maxY = Math.max(...yVals);\n        // 构造带symbolSize的data，是否映射由enableSizeMapping控制\n        const dataWithSize = yVals.map(yv => {\n            let size = sizeMin;\n            if (enableSizeMapping) {\n                size = minY === maxY ? sizeMin : (sizeMin + ((yv - minY) / (maxY - minY)) * (sizeMax - sizeMin));\n            }\n            return {\n                value: yv,\n                symbolSize: size\n            };\n        });\n        let base = {\n            name: y.field,\n            type: config.rippleEffect ? 'effectScatter' : 'scatter',\n            data: dataWithSize,\n            animationDuration: animation ? 1500 : 0,\n            label,\n            labelLayout,\n            labelLine,\n            rippleEffect: config.rippleEffect ? { brushType: 'stroke' } : undefined,\n            coordinateSystem,\n        };\n        // 最大/最小值\n        if (config.showMaxMin) {\n            base.markPoint = {\n                data: [\n                    { type: 'max', name: 'Max' },\n                    { type: 'min', name: 'Min' }\n                ]\n            };\n        }\n        // 均值线\n        if (config.showMeanLine) {\n            base.markLine = {\n                data: [\n                    { type: 'average', name: 'Mean' }\n                ]\n            };\n        }\n        return base;\n    });\n\n    // 再遍历添加回归线series\n    yArr.forEach((y, idx) => {\n        if (config.trendLine && config.trendLine !== '' && yDataArr[idx] && yDataArr[idx].length > 1) {\n            let coordinateSystem = usePolar ? 'polar' : 'cartesian2d';\n            if (config.singleAxisMode === 'x' || config.singleAxisMode === 'y') {\n                coordinateSystem = 'singleAxis';\n            }\n            let x = xData && xData.length === yDataArr[idx].length ? xData : yDataArr[idx].map((_, i) => i);\n            let points = x.map((xi, i) => [Number(xi), Number(yDataArr[idx][i])])\n                .filter(([xi, yi]) => !isNaN(xi) && !isNaN(yi));\n            let regType = config.trendLine;\n            let regResult;\n            if (regType === 'linear') {\n                regResult = ecStat.regression('linear', points);\n            } else if (regType === 'exponential') {\n                regResult = ecStat.regression('exponential', points);\n            } else if (regType === 'polynomial') {\n                regResult = ecStat.regression('polynomial', points, config.polynomialOrder || 3);\n            }\n            if (regResult && regResult.points && regResult.points.length > 1) {\n                regResult.points.sort((a, b) => a[0] - b[0]);\n                seriesArr.push({\n                    name: (y.field || 'Trend Line') + ' Regression',\n                    type: 'line',\n                    data: regResult.points,\n                    showSymbol: false,\n                    lineStyle: { type: config.trendLineStyle || 'dashed', color: config.trendLineColor || '#888', width: config.trendLineWidth || 2 },\n                    symbol: 'none',\n                    markPoint: {\n                        symbol: 'circle',\n                        symbolSize: 8,\n                        data: [\n                            {\n                                coord: regResult.points[Math.floor(regResult.points.length / 2)],\n                                value: regResult.expression,\n                                label: {\n                                    show: config.trendLineLabelHidden !== true,\n                                    position: 'top',\n                                    color: config.trendLineColor || '#888',\n                                    fontWeight: config.trendLineFontStyle || 'bold',\n                                    fontSize: config.trendLineFontSize || 14,\n                                    overflow: 'break',\n                                    formatter: function () { return regResult.expression; }\n                                }\n                            }\n                        ]\n                    },\n                    coordinateSystem,\n                });\n            }\n        }\n    });\n\n    // 单轴模式\n    let singleAxis = undefined;\n    let xAxis = undefined, yAxisOpt = undefined;\n    if (config.singleAxisMode === 'x') {\n        singleAxis = {\n            type: 'category',\n            data: xData,\n            left: 60,\n            top: 60,\n            right: 60,\n            bottom: 60\n        };\n    } else if (config.singleAxisMode === 'y') {\n        singleAxis = {\n            type: 'value',\n            left: 60,\n            top: 60,\n            right: 60,\n            bottom: 60\n        };\n    } else {\n        xAxis = {\n            type: 'category',\n            data: xData,\n            axisLabel: { interval: 0, rotate: xData.length > 10 ? 45 : 0 },\n            splitLine: { show: xGrid },\n            name: config.xAxisName || 'X Axis',\n        };\n        yAxisOpt = {\n            type: 'value',\n            name: yArr.map(y => y.field).join(','),\n            splitLine: { show: yGrid },\n            name: config.yAxisName || 'Y Axis',\n        };\n    }\n\n    // 构造option\n    let option = {\n        title: {\n            text: config.title || 'Chart of Scatter',\n            subtext: config.subtext,\n            left: config.titlePosition === 'left' ? 'left'\n                : config.titlePosition === 'center' ? 'center'\n                    : config.titlePosition === 'right' ? 'right'\n                        : 'center',\n            top: config.titlePosition === 'bottom' ? 'bottom' : 'top',\n            textStyle: { fontSize: 16, fontWeight: 'bold' },\n            subtextStyle: { fontSize: 12 }\n        },\n        tooltip: { trigger: 'axis' },\n        legend: {\n            type: 'scroll',\n            show: config.legendVisible !== false,\n            data: yArr.map(y => y.field),\n            top: config.legendPosition || 'bottom',\n        },\n        toolbox: {\n            show: true,\n            feature: {\n                dataZoom: { show: true },\n                dataView: { show: true, readOnly: false },\n                restore: { show: true },\n                saveAsImage: { show: true }\n            }\n        },\n        polar,\n        angleAxis,\n        radiusAxis,\n        series: seriesArr,\n        animation: animation,\n        animationDuration: animation ? 1500 : 0,\n        grid: {\n            right: 80 // 给右侧留空间，防止标签被裁剪\n        },\n        ...customOption\n    };\n    if (config.singleAxisMode === 'x' || config.singleAxisMode === 'y') {\n        option.singleAxis = singleAxis;\n    } else if (!usePolar) {\n        option.xAxis = xAxis;\n        option.yAxis = yAxisOpt;\n    }\n    return option;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}