{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref, computed, watch, reactive, nextTick, watchEffect } from 'vue';\nimport { chartIcons } from '../../assets/JS/SVG/chartIcons.js';\nimport { chartsTooltipConfig } from '../../assets/JS/Config/ChartsTooltipConfig.js';\nimport { chartTypeConfig } from '../../assets/JS/Config/ChartTypeConfig.js';\nimport AutoRenderToggle from '../Common/AutoRenderToggle.vue';\nimport ChartMappingConfig from './ChartMappingConfig.vue';\nimport ChartFilterConfig from './ChartFilterConfig.vue';\nimport ChartAdvancedConfig from './ChartAdvancedConfig.vue';\n\n// Props\nimport { onMounted, onBeforeUnmount } from 'vue';\nexport default {\n  __name: 'ChartConfigPanel',\n  props: {\n    selectedChartType: {\n      type: String,\n      default: 'line'\n    },\n    currentFile: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['config-change', 'generate-chart'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n\n    // ECharts option 预览折叠状态\n    const showOptionPreview = ref(false);\n\n    // 图表配置，支持 filter 字段\n    const chartConfig = ref({\n      xAxis: {\n        field: '',\n        type: ''\n      },\n      yAxis: {\n        field: '',\n        type: ''\n      },\n      series: [],\n      title: '',\n      colorScheme: 'default',\n      animation: true,\n      dataRange: 'all',\n      nullHandling: 'ignore',\n      filter: [] // 用于 ECharts 5 filter 语法\n    });\n\n    // 当前类型的配置\n    const currentTypeConfig = computed(() => {\n      // 兼容首字母大写/小写\n      return chartTypeConfig[props.selectedChartType] || chartTypeConfig[props.selectedChartType.charAt(0).toUpperCase() + props.selectedChartType.slice(1)] || {};\n    });\n\n    // 初始化/切换图表类型时自动填充默认 filter\n    watchEffect(() => {\n      if (currentTypeConfig.value.filter && currentTypeConfig.value.filter.length) {\n        // 仅在 filter 为空时初始化，避免覆盖用户配置\n        if (!chartConfig.value.filter || chartConfig.value.filter.length === 0) {\n          // 深拷贝，避免引用同一个对象\n          chartConfig.value.filter = JSON.parse(JSON.stringify(currentTypeConfig.value.filter));\n        }\n      }\n    });\n\n    // Emits\n    const emit = __emit;\n\n    // 响应式数据\n    const showDataFilter = ref(false);\n    const showAdvancedConfig = ref(false);\n    const showFilterPanel = ref(false);\n    const errorMessage = ref('');\n    const tooltipRef = ref(null);\n\n    // 拖拽弹窗相关\n    const isPanelFocused = ref(true);\n    let drag = {\n      active: false,\n      offsetX: 0,\n      offsetY: 0\n    };\n    let panelEl = null;\n    function startDrag(e) {\n      panelEl = e.currentTarget;\n      drag.active = true;\n      drag.offsetX = e.clientX - panelEl.getBoundingClientRect().left;\n      drag.offsetY = e.clientY - panelEl.getBoundingClientRect().top;\n      document.addEventListener('mousemove', onDrag);\n      document.addEventListener('mouseup', stopDrag);\n    }\n    function onDrag(e) {\n      if (!drag.active || !panelEl) return;\n      panelEl.style.left = e.clientX - drag.offsetX + 'px';\n      panelEl.style.top = e.clientY - drag.offsetY + 'px';\n      panelEl.style.transform = 'none';\n    }\n    function stopDrag() {\n      drag.active = false;\n      panelEl = null;\n      document.removeEventListener('mousemove', onDrag);\n      document.removeEventListener('mouseup', stopDrag);\n    }\n    onBeforeUnmount(() => {\n      document.removeEventListener('mousemove', onDrag);\n      document.removeEventListener('mouseup', stopDrag);\n    });\n\n    // 自动渲染开关，默认手动渲染\n    const autoRender = ref(false);\n\n    // 提示框状态\n    const tooltip = reactive({\n      visible: false,\n      type: '',\n      description: '',\n      dataRequirements: [],\n      useCases: [],\n      style: {}\n    });\n    let tooltipTimeout = null;\n\n    // 拖拽状态\n    const isDragOver = ref({\n      xAxis: false,\n      yAxis: false,\n      series: false\n    });\n    const dragError = ref({\n      xAxis: false,\n      yAxis: false,\n      series: false\n    });\n\n    // 计算属性\n    const isConfigValid = computed(() => {\n      const xValid = chartConfig.value.xAxis && chartConfig.value.xAxis.field;\n      const y = chartConfig.value.yAxis;\n      const yValid = Array.isArray(y) ? y.length > 0 : y && y.field;\n      return xValid && yValid;\n    });\n\n    // 监听 chartConfig 变化，自动渲染\n    watch(chartConfig, val => {\n      if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value);\n      }\n      console.log('Current chartConfig:', JSON.parse(JSON.stringify(val)));\n    }, {\n      deep: true\n    });\n\n    // 监听自动渲染开关变化，切换为实时时立即渲染\n    watch(autoRender, val => {\n      if (val && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value);\n      }\n    });\n    function getChartIcon(type) {\n      // 直接使用传入的类型，chartIcons.js 中的键是首字母大写格式\n      return chartIcons[type] || '';\n    }\n    function toggleDataFilter() {\n      showDataFilter.value = !showDataFilter.value;\n    }\n    function toggleAdvancedConfig() {\n      showAdvancedConfig.value = !showAdvancedConfig.value;\n    }\n\n    // 显示提示框\n    function showTooltip(event, type) {\n      // 清除之前的定时器\n      if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout);\n      }\n\n      // 设置1.2秒延迟\n      tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type];\n        if (config) {\n          tooltip.type = type;\n          tooltip.description = config.description;\n          tooltip.dataRequirements = config.dataRequirements;\n          tooltip.useCases = config.useCases;\n          tooltip.visible = true;\n\n          // 在下一个tick中计算位置，确保DOM已更新\n          nextTick(() => {\n            positionTooltip(event);\n          });\n        }\n      }, 1200); // 1.2秒延迟\n    }\n\n    // 隐藏提示框\n    function hideTooltip() {\n      if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout);\n        tooltipTimeout = null;\n      }\n      tooltip.visible = false;\n    }\n\n    // 计算提示框位置，确保不超出屏幕\n    function positionTooltip(event) {\n      if (!tooltipRef.value) return;\n      const tooltipEl = tooltipRef.value;\n      const rect = tooltipEl.getBoundingClientRect();\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight;\n      let left = event.pageX + 10;\n      let top = event.pageY + 10;\n\n      // 防止右边超出屏幕\n      if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10;\n      }\n\n      // 防止底部超出屏幕\n      if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10;\n      }\n\n      // 防止左边超出屏幕\n      if (left < 0) {\n        left = 10;\n      }\n\n      // 防止顶部超出屏幕\n      if (top < 0) {\n        top = 10;\n      }\n      tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n      };\n    }\n\n    // 拖拽处理\n    function handleDragEnter(target) {\n      isDragOver.value[target] = true;\n      dragError.value[target] = false;\n    }\n    function handleDragLeave(target) {\n      isDragOver.value[target] = false;\n    }\n    function handleDragOver(event, target) {\n      event.preventDefault();\n      isDragOver.value[target] = true;\n    }\n    function handleDrop(event, target) {\n      event.preventDefault();\n      isDragOver.value[target] = false;\n      try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'));\n        if (dragData.type === 'column') {\n          const column = dragData.column;\n\n          // 验证数据类型是否适合目标区域\n          if (validateColumnForTarget(column, target)) {\n            mapColumnToTarget(column, target);\n            errorMessage.value = '';\n          } else {\n            dragError.value[target] = true;\n            errorMessage.value = `Column \"${column.name}\" data type is not suitable for ${getTargetName(target)}`;\n            setTimeout(() => {\n              dragError.value[target] = false;\n              errorMessage.value = '';\n            }, 3000);\n          }\n        }\n      } catch (error) {\n        console.error('Drop failed:', error);\n        errorMessage.value = 'Drag and drop failed, please try again';\n      }\n    }\n    function validateColumnForTarget(column, target) {\n      const columnType = column.type;\n      switch (target) {\n        case 'xAxis':\n          // X轴通常接受类别型数据\n          return ['string', 'category', 'date'].includes(columnType);\n        case 'yAxis':\n          // Y轴通常接受数值型数据\n          return ['number', 'integer'].includes(columnType);\n        case 'series':\n          // 系列数据通常接受数值型数据\n          return ['number', 'integer'].includes(columnType);\n        default:\n          return true;\n      }\n    }\n    function mapColumnToTarget(column, target) {\n      switch (target) {\n        case 'xAxis':\n          chartConfig.value.xAxis = {\n            field: column.name,\n            type: column.type\n          };\n          break;\n        case 'yAxis':\n          chartConfig.value.yAxis = {\n            field: column.name,\n            type: column.type\n          };\n          break;\n        case 'series':\n          // 系列可以有多个，但这里简化为单个\n          chartConfig.value.series = [{\n            field: column.name,\n            type: column.type\n          }];\n          break;\n      }\n      emit('config-change', chartConfig.value);\n    }\n    function removeMapping(target) {\n      switch (target) {\n        case 'xAxis':\n          chartConfig.value.xAxis = {\n            field: '',\n            type: ''\n          };\n          break;\n        case 'yAxis':\n          chartConfig.value.yAxis = {\n            field: '',\n            type: ''\n          };\n          break;\n        case 'series':\n          chartConfig.value.series = [];\n          break;\n      }\n      emit('config-change', chartConfig.value);\n    }\n    function removeSeriesMapping(index) {\n      chartConfig.value.series.splice(index, 1);\n      emit('config-change', chartConfig.value);\n    }\n    function getTargetName(target) {\n      const names = {\n        xAxis: 'X Axis',\n        yAxis: 'Y Axis',\n        series: 'Data Series'\n      };\n      return names[target] || target;\n    }\n    function generateChart() {\n      if (!isConfigValid.value) {\n        errorMessage.value = 'Please complete the required data mapping configuration';\n        return;\n      }\n      emit('generate-chart', chartConfig.value);\n    }\n    function resetConfig() {\n      chartConfig.value = {\n        xAxis: {\n          field: '',\n          type: ''\n        },\n        yAxis: {\n          field: '',\n          type: ''\n        },\n        series: [],\n        title: '',\n        colorScheme: 'default',\n        animation: true,\n        dataRange: 'all',\n        nullHandling: 'ignore'\n      };\n      errorMessage.value = '';\n      emit('config-change', chartConfig.value);\n    }\n\n    // 监听图表类型变化\n    watch(() => props.selectedChartType, newType => {\n      // 根据图表类型调整配置\n      if (newType === 'Pie' || newType === 'pie') {\n        // 饼图不需要Y轴\n        chartConfig.value.yAxis = {\n          field: '',\n          type: ''\n        };\n      }\n      // 自动渲染开启时，切换类型后立即触发渲染\n      if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value);\n      }\n    });\n    const __returned__ = {\n      props,\n      showOptionPreview,\n      chartConfig,\n      currentTypeConfig,\n      emit,\n      showDataFilter,\n      showAdvancedConfig,\n      showFilterPanel,\n      errorMessage,\n      tooltipRef,\n      isPanelFocused,\n      get drag() {\n        return drag;\n      },\n      set drag(v) {\n        drag = v;\n      },\n      get panelEl() {\n        return panelEl;\n      },\n      set panelEl(v) {\n        panelEl = v;\n      },\n      startDrag,\n      onDrag,\n      stopDrag,\n      autoRender,\n      tooltip,\n      get tooltipTimeout() {\n        return tooltipTimeout;\n      },\n      set tooltipTimeout(v) {\n        tooltipTimeout = v;\n      },\n      isDragOver,\n      dragError,\n      isConfigValid,\n      getChartIcon,\n      toggleDataFilter,\n      toggleAdvancedConfig,\n      showTooltip,\n      hideTooltip,\n      positionTooltip,\n      handleDragEnter,\n      handleDragLeave,\n      handleDragOver,\n      handleDrop,\n      validateColumnForTarget,\n      mapColumnToTarget,\n      removeMapping,\n      removeSeriesMapping,\n      getTargetName,\n      generateChart,\n      resetConfig,\n      ref,\n      computed,\n      watch,\n      reactive,\n      nextTick,\n      watchEffect,\n      get chartIcons() {\n        return chartIcons;\n      },\n      get chartsTooltipConfig() {\n        return chartsTooltipConfig;\n      },\n      get chartTypeConfig() {\n        return chartTypeConfig;\n      },\n      AutoRenderToggle,\n      ChartMappingConfig,\n      ChartFilterConfig,\n      ChartAdvancedConfig,\n      onMounted,\n      onBeforeUnmount\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","reactive","nextTick","watchEffect","chartIcons","chartsTooltipConfig","chartTypeConfig","AutoRenderToggle","ChartMappingConfig","ChartFilterConfig","ChartAdvancedConfig","onMounted","onBeforeUnmount","props","__props","showOptionPreview","chartConfig","xAxis","field","type","yAxis","series","title","colorScheme","animation","dataRange","nullHandling","filter","currentTypeConfig","selectedChartType","charAt","toUpperCase","slice","value","length","JSON","parse","stringify","emit","__emit","showDataFilter","showAdvancedConfig","showFilterPanel","errorMessage","tooltipRef","isPanelFocused","drag","active","offsetX","offsetY","panelEl","startDrag","e","currentTarget","clientX","getBoundingClientRect","left","clientY","top","document","addEventListener","onDrag","stopDrag","style","transform","removeEventListener","autoRender","tooltip","visible","description","dataRequirements","useCases","tooltipTimeout","isDragOver","dragError","isConfigValid","xValid","y","yValid","Array","isArray","val","console","log","deep","getChartIcon","toggleDataFilter","toggleAdvancedConfig","showTooltip","event","clearTimeout","setTimeout","config","positionTooltip","hideTooltip","tooltipEl","rect","viewportWidth","window","innerWidth","viewportHeight","innerHeight","pageX","pageY","width","height","position","zIndex","handleDragEnter","target","handleDragLeave","handleDragOver","preventDefault","handleDrop","dragData","dataTransfer","getData","column","validateColumnForTarget","mapColumnToTarget","name","getTargetName","error","columnType","includes","removeMapping","removeSeriesMapping","index","splice","names","generateChart","resetConfig","newType"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/Chart/ChartConfigPanel.vue"],"sourcesContent":["<template>\n<div class=\"chart-config-panel\">\n    <!-- 右侧边栏总标题 -->\n    <div class=\"panel-header-CCP\" style=\"position: relative; display: flex; align-items: center; justify-content: space-between;\">\n        <h3 style=\"margin: 0;\">\n            Chart Configuration\n        </h3>\n        <!-- 图表类型及相关提示 -->\n        <div\n            class=\"chart-type-tag\"\n            @mouseenter=\"showTooltip($event, props.selectedChartType)\"\n            @mouseleave=\"hideTooltip\"\n            style=\"position: relative; max-width: 50%; white-space: normal; word-break: break-all; text-align: right; right: 0; margin-right: 3%;\"\n        >\n            <span class=\"chart-type-icon\" v-html=\"getChartIcon(selectedChartType)\"></span>\n            <span class=\"chart-type-name\">{{ selectedChartType }}</span>\n        </div>\n    </div>\n\n    <!-- 动态数据映射配置区域 -->\n    <div class=\"mapping-section-toggle-wrapper\">\n        <ChartMappingConfig\n            v-if=\"currentTypeConfig.mapping\"\n            :mappingConfig=\"currentTypeConfig.mapping\"\n            v-model=\"chartConfig\"\n        >\n            <template #title-append>\n            <!-- 自动渲染开关 -->\n            <AutoRenderToggle v-model=\"autoRender\" />\n            </template>\n        </ChartMappingConfig>\n    </div>\n\n    <!-- 动态数据过滤配置区域（改为弹窗面板） -->\n    <button class=\"open-filter-panel-btn\" @click=\"showFilterPanel = true\" style=\"margin: 8px 0;\">\n      配置数据过滤条件\n    </button>\n    <div v-if=\"showFilterPanel\" class=\"filter-panel-modal\">\n      <div\n        class=\"filter-panel-content\"\n        :class=\"{ 'filter-panel-blur': !isPanelFocused }\"\n        tabindex=\"0\"\n        @mousedown=\"startDrag\"\n        @focus=\"isPanelFocused = true\"\n        @blur=\"isPanelFocused = false\"\n        @mouseenter=\"isPanelFocused = true\"\n        @mouseleave=\"isPanelFocused = false\"\n      >\n        <div style=\"display:flex;justify-content:space-between;align-items:center;cursor:move;\">\n          <h4 style=\"margin:0;\">数据过滤条件配置</h4>\n          <button @click=\"showFilterPanel = false\" style=\"font-size:18px;\">×</button>\n        </div>\n        <ChartFilterConfig\n          :filterConfig=\"currentTypeConfig.filter\"\n          v-model=\"chartConfig.filter\"\n        />\n      </div>\n    </div>\n\n    <!-- 动态高级配置区域 -->\n    <ChartAdvancedConfig\n        v-if=\"currentTypeConfig.advanced && currentTypeConfig.advanced.length\"\n        :advancedConfig=\"currentTypeConfig.advanced\"\n        v-model=\"chartConfig\"\n    />\n\n    <!-- ECharts option 相关配置项预览（可折叠） -->\n    <div class=\"echarts-option-preview-collapsible\" style=\"margin: 16px 0;\">\n      <div @click=\"showOptionPreview = !showOptionPreview\" style=\"cursor: pointer; display: flex; align-items: center; user-select: none; font-weight: bold; background: #f7f7fa; border-radius: 6px 6px 0 0; padding: 8px 12px; color: #666; font-size: 14px;\">\n        <span style=\"margin-right: 6px; font-size: 12px; transition: transform 0.2s;\" :style=\"{transform: showOptionPreview ? 'rotate(0deg)' : 'rotate(-90deg)'}\">&#9660;</span>\n        ECharts Option 预览（只读）\n      </div>\n      <transition name=\"collapse\">\n        <div v-show=\"showOptionPreview\" style=\"padding: 8px 12px; background: #f7f7fa; border-radius: 0 0 6px 6px; font-size: 13px; color: #444; border-top: 1px solid #eee;\">\n          <div><b>当前配置项：</b></div>\n          <pre style=\"white-space: pre-wrap; word-break: break-all; background: none; color: #444; margin: 0;\">{{ JSON.stringify(chartConfig, null, 2) }}</pre>\n          <div v-if=\"chartConfig.filter && chartConfig.filter.length\" style=\"margin-top: 8px;\">\n            <b>Filter 配置：</b>\n            <pre style=\"white-space: pre-wrap; word-break: break-all; background: none; color: #444; margin: 0;\">{{ JSON.stringify(chartConfig.filter, null, 2) }}</pre>\n          </div>\n        </div>\n      </transition>\n    </div>\n\n    <!-- 操作按钮 -->\n    <div class=\"action-section\">\n        <button\n        class=\"apply-btn\"\n        :disabled=\"autoRender || !isConfigValid\"\n        @click=\"generateChart\"\n        >\n        Apply Configuration\n        </button>\n        <button class=\"reset-btn\" @click=\"resetConfig\">\n        Reset Configuration\n        </button>\n    </div>\n\n    <!-- 错误提示 -->\n    <div v-if=\"errorMessage\" class=\"error-message\">\n        <div class=\"error-text\">{{ errorMessage }}</div>\n    </div>\n\n    <!-- 提示框 -->\n    <div\n        v-if=\"tooltip.visible\"\n        class=\"chart-tooltip\"\n        :style=\"tooltip.style\"\n        ref=\"tooltipRef\"\n    >\n        <div class=\"tooltip-header\">\n            <span class=\"tooltip-title\">{{ tooltip.type }}</span>\n            <span class=\"tooltip-description\">{{ tooltip.description }}</span>\n        </div>\n        <div class=\"tooltip-section\">\n            <h4>Data Requirements</h4>\n            <div class=\"tooltip-tags\">\n                <span\n                    v-for=\"requirement in tooltip.dataRequirements\"\n                    :key=\"requirement\"\n                    class=\"tooltip-tag data-tag\"\n                >\n                    {{ requirement }}\n                </span>\n            </div>\n        </div>\n        <div class=\"tooltip-section\">\n            <h4>Use Cases</h4>\n            <div class=\"tooltip-tags\">\n                <span\n                    v-for=\"useCase in tooltip.useCases\"\n                    :key=\"useCase\"\n                    class=\"tooltip-tag use-case-tag\"\n                >\n                    {{ useCase }}\n                </span>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch, reactive, nextTick, watchEffect } from 'vue'\nimport { chartIcons } from '../../assets/JS/SVG/chartIcons.js'\nimport { chartsTooltipConfig } from '../../assets/JS/Config/ChartsTooltipConfig.js'\nimport { chartTypeConfig } from '../../assets/JS/Config/ChartTypeConfig.js'\nimport AutoRenderToggle from '../Common/AutoRenderToggle.vue'\nimport ChartMappingConfig from './ChartMappingConfig.vue'\nimport ChartFilterConfig from './ChartFilterConfig.vue'\nimport ChartAdvancedConfig from './ChartAdvancedConfig.vue'\n\n// Props\nconst props = defineProps({\n    selectedChartType: {\n        type: String,\n        default: 'line'\n    },\n    currentFile: {\n        type: Object,\n        default: null\n    }\n})\n\n// ECharts option 预览折叠状态\nconst showOptionPreview = ref(false)\n\n// 图表配置，支持 filter 字段\nconst chartConfig = ref({\n    xAxis: {\n        field: '',\n        type: ''\n    },\n    yAxis: {\n        field: '',\n        type: ''\n    },\n    series: [],\n    title: '',\n    colorScheme: 'default',\n    animation: true,\n    dataRange: 'all',\n    nullHandling: 'ignore',\n    filter: [] // 用于 ECharts 5 filter 语法\n})\n\n// 当前类型的配置\nconst currentTypeConfig = computed(() => {\n  // 兼容首字母大写/小写\n  return chartTypeConfig[props.selectedChartType] || chartTypeConfig[props.selectedChartType.charAt(0).toUpperCase() + props.selectedChartType.slice(1)] || {}\n})\n\n// 初始化/切换图表类型时自动填充默认 filter\nwatchEffect(() => {\n  if (currentTypeConfig.value.filter && currentTypeConfig.value.filter.length) {\n    // 仅在 filter 为空时初始化，避免覆盖用户配置\n    if (!chartConfig.value.filter || chartConfig.value.filter.length === 0) {\n      // 深拷贝，避免引用同一个对象\n      chartConfig.value.filter = JSON.parse(JSON.stringify(currentTypeConfig.value.filter))\n    }\n  }\n})\n\n// Emits\nconst emit = defineEmits(['config-change', 'generate-chart'])\n\n// 响应式数据\nconst showDataFilter = ref(false)\nconst showAdvancedConfig = ref(false)\nconst showFilterPanel = ref(false)\nconst errorMessage = ref('')\nconst tooltipRef = ref(null)\n\n// 拖拽弹窗相关\nimport { onMounted, onBeforeUnmount } from 'vue'\nconst isPanelFocused = ref(true)\nlet drag = { active: false, offsetX: 0, offsetY: 0 }\nlet panelEl = null\n\nfunction startDrag(e) {\n  panelEl = e.currentTarget\n  drag.active = true\n  drag.offsetX = e.clientX - panelEl.getBoundingClientRect().left\n  drag.offsetY = e.clientY - panelEl.getBoundingClientRect().top\n  document.addEventListener('mousemove', onDrag)\n  document.addEventListener('mouseup', stopDrag)\n}\nfunction onDrag(e) {\n  if (!drag.active || !panelEl) return\n  panelEl.style.left = e.clientX - drag.offsetX + 'px'\n  panelEl.style.top = e.clientY - drag.offsetY + 'px'\n  panelEl.style.transform = 'none'\n}\nfunction stopDrag() {\n  drag.active = false\n  panelEl = null\n  document.removeEventListener('mousemove', onDrag)\n  document.removeEventListener('mouseup', stopDrag)\n}\nonBeforeUnmount(() => {\n  document.removeEventListener('mousemove', onDrag)\n  document.removeEventListener('mouseup', stopDrag)\n})\n\n// 自动渲染开关，默认手动渲染\nconst autoRender = ref(false)\n\n// 提示框状态\nconst tooltip = reactive({\n    visible: false,\n    type: '',\n    description: '',\n    dataRequirements: [],\n    useCases: [],\n    style: {}\n})\n\nlet tooltipTimeout = null\n\n// 拖拽状态\nconst isDragOver = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\nconst dragError = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\n// 计算属性\nconst isConfigValid = computed(() => {\n    const xValid = chartConfig.value.xAxis && chartConfig.value.xAxis.field;\n    const y = chartConfig.value.yAxis;\n    const yValid = Array.isArray(y) ? y.length > 0 : (y && y.field);\n    return xValid && yValid;\n})\n\n// 监听 chartConfig 变化，自动渲染\nwatch(chartConfig, (val) => {\n    if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n    console.log('Current chartConfig:', JSON.parse(JSON.stringify(val)))\n}, { deep: true })\n\n// 监听自动渲染开关变化，切换为实时时立即渲染\nwatch(autoRender, (val) => {\n    if (val && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n})\n\nfunction getChartIcon (type) {\n    // 直接使用传入的类型，chartIcons.js 中的键是首字母大写格式\n    return chartIcons[type] || ''\n}\n\nfunction toggleDataFilter() {\n    showDataFilter.value = !showDataFilter.value\n}\n\nfunction toggleAdvancedConfig() {\n    showAdvancedConfig.value = !showAdvancedConfig.value\n}\n\n// 显示提示框\nfunction showTooltip(event, type) {\n    // 清除之前的定时器\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n    }\n    \n    // 设置1.2秒延迟\n    tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type]\n        if (config) {\n            tooltip.type = type\n            tooltip.description = config.description\n            tooltip.dataRequirements = config.dataRequirements\n            tooltip.useCases = config.useCases\n            tooltip.visible = true\n            \n            // 在下一个tick中计算位置，确保DOM已更新\n            nextTick(() => {\n                positionTooltip(event)\n            })\n        }\n    }, 1200) // 1.2秒延迟\n}\n\n// 隐藏提示框\nfunction hideTooltip() {\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n        tooltipTimeout = null\n    }\n    tooltip.visible = false\n}\n\n// 计算提示框位置，确保不超出屏幕\nfunction positionTooltip(event) {\n    if (!tooltipRef.value) return\n    \n    const tooltipEl = tooltipRef.value\n    const rect = tooltipEl.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    \n    let left = event.pageX + 10\n    let top = event.pageY + 10\n    \n    // 防止右边超出屏幕\n    if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10\n    }\n    \n    // 防止底部超出屏幕\n    if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10\n    }\n    \n    // 防止左边超出屏幕\n    if (left < 0) {\n        left = 10\n    }\n    \n    // 防止顶部超出屏幕\n    if (top < 0) {\n        top = 10\n    }\n    \n    tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n    }\n}\n\n// 拖拽处理\nfunction handleDragEnter (target) {\n    isDragOver.value[target] = true\n    dragError.value[target] = false\n    }\n\nfunction handleDragLeave (target) {\n    isDragOver.value[target] = false\n}\n\nfunction handleDragOver (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = true\n}\n\nfunction handleDrop (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = false\n\n    try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'))\n\n        if (dragData.type === 'column') {\n        const column = dragData.column\n\n        // 验证数据类型是否适合目标区域\n        if (validateColumnForTarget(column, target)) {\n            mapColumnToTarget(column, target)\n            errorMessage.value = ''\n        } else {\n            dragError.value[target] = true\n            errorMessage.value = `Column \"${column.name}\" data type is not suitable for ${getTargetName(target)}`\n            setTimeout(() => {\n            dragError.value[target] = false\n            errorMessage.value = ''\n            }, 3000)\n        }\n        }\n    } catch (error) {\n        console.error('Drop failed:', error)\n        errorMessage.value = 'Drag and drop failed, please try again'\n    }\n}\n\nfunction validateColumnForTarget (column, target) {\n    const columnType = column.type\n\n    switch (target) {\n        case 'xAxis':\n        // X轴通常接受类别型数据\n        return ['string', 'category', 'date'].includes(columnType)\n        case 'yAxis':\n        // Y轴通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        case 'series':\n        // 系列数据通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        default:\n        return true\n    }\n}\n\nfunction mapColumnToTarget (column, target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'series':\n        // 系列可以有多个，但这里简化为单个\n        chartConfig.value.series = [{\n            field: column.name,\n            type: column.type\n        }]\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeMapping (target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = { field: '', type: '' }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = { field: '', type: '' }\n        break\n        case 'series':\n        chartConfig.value.series = []\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeSeriesMapping (index) {\n    chartConfig.value.series.splice(index, 1)\n    emit('config-change', chartConfig.value)\n}\n\nfunction getTargetName (target) {\n    const names = {\n        xAxis: 'X Axis',\n        yAxis: 'Y Axis',\n        series: 'Data Series'\n    }\n    return names[target] || target\n}\n\nfunction generateChart () {\n    if (!isConfigValid.value) {\n        errorMessage.value = 'Please complete the required data mapping configuration'\n        return\n    }\n\n    emit('generate-chart', chartConfig.value)\n}\n\nfunction resetConfig () {\n    chartConfig.value = {\n        xAxis: { field: '', type: '' },\n        yAxis: { field: '', type: '' },\n        series: [],\n        title: '',\n        colorScheme: 'default',\n        animation: true,\n        dataRange: 'all',\n        nullHandling: 'ignore'\n    }\n\n    errorMessage.value = ''\n    emit('config-change', chartConfig.value)\n}\n\n// 监听图表类型变化\nwatch(() => props.selectedChartType, (newType) => {\n    // 根据图表类型调整配置\n    if (newType === 'Pie' || newType === 'pie') {\n        // 饼图不需要Y轴\n        chartConfig.value.yAxis = { field: '', type: '' }\n    }\n    // 自动渲染开启时，切换类型后立即触发渲染\n    if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n})\n</script>\n\n<style scoped>\n@import '../../assets/CSS/ChartConfigPanel.css';\n\n/* 可折叠ECharts Option预览动画 */\n.collapse-enter-active, .collapse-leave-active {\n  transition: max-height 0.28s cubic-bezier(.4,0,.2,1), opacity 0.22s;\n}\n.collapse-enter-from, .collapse-leave-to {\n  max-height: 0;\n  opacity: 0;\n  overflow: hidden;\n}\n.collapse-enter-to, .collapse-leave-from {\n  max-height: 800px;\n  opacity: 1;\n}\n\n.filter-panel-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 2000;\n  pointer-events: none;\n}\n.filter-panel-content {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0 4px 24px rgba(0,0,0,0.18);\n  padding: 32px 28px 24px 28px;\n  min-width: 420px;\n  max-width: 90vw;\n  max-height: 80vh;\n  overflow-y: auto;\n  z-index: 2001;\n  pointer-events: auto;\n  outline: none;\n}\n.filter-panel-blur {\n  opacity: 0.6;\n  transition: opacity 0.2s;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}