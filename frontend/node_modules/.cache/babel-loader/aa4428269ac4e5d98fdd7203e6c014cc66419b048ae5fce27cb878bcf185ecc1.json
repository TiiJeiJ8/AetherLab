{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, computed, watch, onMounted, onUnmounted, nextTick } from 'vue';\nimport { getThemeIcon } from '@/assets/JS/SVG/icons.js';\n\n// Props\n\nexport default {\n  __name: 'FileStructurePanel',\n  props: {\n    fileInfo: {\n      type: Object,\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['close', 'minimize', 'column-drag'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 面板状态\n    const isVisible = ref(false);\n    const isMinimized = ref(false);\n    const isFocused = ref(true);\n    const isDragging = ref(false);\n    const draggedColumn = ref(null);\n\n    // 拖拽相关状态\n    const dragOffset = ref({\n      x: 0,\n      y: 0\n    });\n    const panelPosition = ref({\n      position: 'fixed',\n      top: '10%',\n      right: '24%',\n      width: '22.4%',\n      maxHeight: '70vh'\n    });\n\n    // DOM 引用\n    const panelRef = ref(null);\n\n    // 文件列结构数据\n    const columns = ref([]);\n\n    // 计算实际数据行数（排除标题行）\n    const dataRows = computed(() => {\n      if (!props.fileInfo || !props.fileInfo.data || !Array.isArray(props.fileInfo.data)) {\n        return 0;\n      }\n      return Math.max(0, props.fileInfo.data.length - 1); // 减去标题行\n    });\n\n    // 监听 visible 属性变化\n    watch(() => props.visible, newVal => {\n      isVisible.value = newVal;\n      if (newVal) {\n        isFocused.value = true;\n        isMinimized.value = false;\n        nextTick(() => {\n          analyzeFileStructure();\n        });\n      }\n    }, {\n      immediate: true\n    });\n\n    // 监听文件信息变化\n    watch(() => props.fileInfo, newFileInfo => {\n      if (newFileInfo && isVisible.value) {\n        analyzeFileStructure();\n      }\n    }, {\n      deep: true\n    });\n\n    // 分析文件结构\n    async function analyzeFileStructure() {\n      if (!props.fileInfo || !props.fileInfo.data) {\n        console.warn('No file data available for structure analysis');\n        return;\n      }\n      const data = props.fileInfo.data;\n      if (!Array.isArray(data) || data.length === 0) {\n        console.warn('Invalid data format for structure analysis');\n        return;\n      }\n      const headers = props.fileInfo.headers || Object.keys(data[0]);\n      const analyzedColumns = [];\n      const chunkSize = 5; // 每次处理5列，防止主线程阻塞\n      let i = 0;\n      function processChunk() {\n        const end = Math.min(i + chunkSize, headers.length);\n        for (; i < end; i++) {\n          const header = headers[i];\n          const columnData = data.slice(1).map(row => {\n            if (Array.isArray(row)) {\n              return row[i];\n            } else if (typeof row === 'object') {\n              return row[header];\n            }\n            return null;\n          }).filter(val => val !== null && val !== undefined && val !== '');\n          // 推断数据类型\n          const type = inferDataType(columnData);\n          // 获取样本数据\n          const sample = columnData.slice(0, 3).join(', ') || 'No data';\n          const stats = calculateColumnStats(columnData, data.length - 1);\n          analyzedColumns.push({\n            name: header,\n            type,\n            sample,\n            stats,\n            index: i\n          });\n        }\n        columns.value = [...analyzedColumns];\n        if (i < headers.length) {\n          setTimeout(processChunk, 0);\n        }\n      }\n      processChunk();\n    }\n\n    // 推断数据类型\n    function inferDataType(columnData) {\n      if (columnData.length === 0) return 'unknown';\n      const sample = columnData.slice(0, Math.min(20, columnData.length)); // 取更多样本进行分析\n      const uniqueValues = [...new Set(sample)];\n      const uniqueCount = uniqueValues.length;\n\n      // 检查是否为明确的布尔值（true/false字符串）\n      const isTrueFalseBool = sample.every(val => {\n        const str = String(val).toLowerCase();\n        return str === 'true' || str === 'false' || val === true || val === false;\n      });\n      if (isTrueFalseBool && uniqueCount <= 2) {\n        return 'boolean';\n      }\n\n      // 检查是否为数字\n      const isNumeric = sample.every(val => !isNaN(val) && !isNaN(parseFloat(val)));\n      if (isNumeric) {\n        const isInteger = sample.every(val => Number.isInteger(parseFloat(val)));\n        if (isInteger) {\n          // 对于整数，需要智能判断是布尔值、类别值还是普通整数\n          if (uniqueCount === 2 && uniqueValues.every(val => val === 0 || val === 1 || val === '0' || val === '1')) {\n            // 只有两个唯一值且都是0/1，可能是布尔值\n            // 但需要考虑数据的语义上下文，这里倾向于认为是布尔值\n            return 'boolean';\n          } else if (uniqueCount <= 10 && uniqueCount < sample.length * 0.5) {\n            // 唯一值较少且明显少于样本数量的一半，可能是类别值\n            return 'category';\n          } else {\n            return 'integer';\n          }\n        } else {\n          return 'number';\n        }\n      }\n\n      // 检查是否为日期\n      const isDate = sample.some(val => !isNaN(Date.parse(val)));\n      if (isDate) return 'date';\n\n      // 检查是否为类别值（字符串类型的类别）\n      if (uniqueCount <= 10 && uniqueCount < sample.length * 0.5) {\n        return 'category';\n      }\n\n      // 默认为字符串\n      return 'string';\n    }\n\n    // 计算列统计信息\n    function calculateColumnStats(columnData, totalRows) {\n      const nonEmptyCount = columnData.length;\n      const nullCount = totalRows - nonEmptyCount;\n      const uniqueCount = new Set(columnData).size;\n      return {\n        nullCount,\n        uniqueCount,\n        fillRate: Math.round(nonEmptyCount / totalRows * 100)\n      };\n    }\n\n    // 获取列类型样式类\n    function getColumnTypeClass(type) {\n      const typeClasses = {\n        'string': 'type-string',\n        'number': 'type-number',\n        'integer': 'type-integer',\n        'date': 'type-date',\n        'boolean': 'type-boolean',\n        'category': 'type-category',\n        'unknown': 'type-unknown'\n      };\n      return typeClasses[type] || 'type-unknown';\n    }\n\n    // 格式化文件大小\n    function formatFileSize(bytes) {\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n\n    // 鼠标事件处理\n    function handleMouseEnter() {\n      isFocused.value = true;\n    }\n    function handleMouseLeave() {\n      if (!isDragging.value) {\n        isFocused.value = false;\n      }\n    }\n    function handleMouseDown() {\n      isFocused.value = true;\n    }\n\n    // 面板拖拽功能\n    function startDrag(event) {\n      isDragging.value = true;\n      isFocused.value = true;\n      const rect = panelRef.value.getBoundingClientRect();\n      dragOffset.value = {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n      };\n      document.addEventListener('mousemove', handlePanelDrag, {\n        passive: false\n      });\n      document.addEventListener('mouseup', stopDrag, {\n        passive: false\n      });\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    let lastDragRAF = null;\n    function handlePanelDrag(event) {\n      if (!isDragging.value) return;\n      if (lastDragRAF) return; // 节流\n      lastDragRAF = requestAnimationFrame(() => {\n        lastDragRAF = null;\n        const newX = event.clientX - dragOffset.value.x;\n        const newY = event.clientY - dragOffset.value.y;\n        // 确保面板不会拖拽到屏幕外\n        const maxX = window.innerWidth - 400;\n        const maxY = window.innerHeight - 300;\n        const clampedX = Math.max(0, Math.min(newX, maxX));\n        const clampedY = Math.max(0, Math.min(newY, maxY));\n        panelPosition.value = {\n          ...panelPosition.value,\n          top: `${clampedY}px`,\n          left: `${clampedX}px`,\n          right: 'auto'\n        };\n      });\n      event.preventDefault();\n    }\n    function stopDrag(event) {\n      isDragging.value = false;\n      document.removeEventListener('mousemove', handlePanelDrag);\n      document.removeEventListener('mouseup', stopDrag);\n      setTimeout(() => {\n        if (!isDragging.value) {\n          isFocused.value = false;\n        }\n      }, 150);\n      event.preventDefault();\n    }\n\n    // 列拖拽功能\n    function handleDragStart(column, index, event) {\n      draggedColumn.value = index;\n\n      // 设置拖拽数据， file 和 index 字段，确保唯一性\n      const dragData = {\n        type: 'column',\n        column: {\n          ...column,\n          type: column.type,\n          // 明确携带类型\n          file: props.fileInfo?.name || '',\n          index // 唯一标识同文件内的同名列\n        },\n        source: 'file-structure'\n      };\n      event.dataTransfer.setData('application/json', JSON.stringify(dragData));\n      event.dataTransfer.effectAllowed = 'copy';\n\n      // 自定义拖拽图像\n      const dragImage = createDragImage(column);\n      event.dataTransfer.setDragImage(dragImage, 0, 0);\n      emit('column-drag', {\n        action: 'start',\n        column,\n        index\n      });\n    }\n    function handleDragEnd() {\n      draggedColumn.value = null;\n      emit('column-drag', {\n        action: 'end'\n      });\n    }\n\n    // 创建拖拽图像\n    function createDragImage(column) {\n      const dragElement = document.createElement('div');\n      dragElement.className = 'drag-preview';\n      dragElement.innerHTML = `\n    <div class=\"drag-preview-content\">\n      <span class=\"drag-column-name\">${column.name}</span>\n      <span class=\"drag-column-type\">${column.type}</span>\n    </div>\n  `;\n\n      // 添加样式\n      dragElement.style.cssText = `\n    position: absolute;\n    top: -1000px;\n    left: -1000px;\n    background: rgba(59, 130, 246, 0.9);\n    color: white;\n    padding: 8px 12px;\n    border-radius: 6px;\n    font-size: 12px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n    pointer-events: none;\n    z-index: 10000;\n  `;\n      document.body.appendChild(dragElement);\n\n      // 清理\n      setTimeout(() => {\n        document.body.removeChild(dragElement);\n      }, 100);\n      return dragElement;\n    }\n\n    // 面板控制\n    function minimize() {\n      isMinimized.value = !isMinimized.value;\n      emit('minimize', isMinimized.value);\n    }\n    function close() {\n      isVisible.value = false;\n      emit('close');\n    }\n\n    // 组件挂载时添加全局点击监听\n    onMounted(() => {\n      document.addEventListener('click', handleGlobalClick);\n    });\n    onUnmounted(() => {\n      document.removeEventListener('click', handleGlobalClick);\n      document.removeEventListener('mousemove', handlePanelDrag);\n      document.removeEventListener('mouseup', stopDrag);\n    });\n\n    // 全局点击处理\n    function handleGlobalClick(event) {\n      if (panelRef.value && !panelRef.value.contains(event.target)) {\n        isFocused.value = false;\n      }\n    }\n    const __returned__ = {\n      props,\n      emit,\n      isVisible,\n      isMinimized,\n      isFocused,\n      isDragging,\n      draggedColumn,\n      dragOffset,\n      panelPosition,\n      panelRef,\n      columns,\n      dataRows,\n      analyzeFileStructure,\n      inferDataType,\n      calculateColumnStats,\n      getColumnTypeClass,\n      formatFileSize,\n      handleMouseEnter,\n      handleMouseLeave,\n      handleMouseDown,\n      startDrag,\n      get lastDragRAF() {\n        return lastDragRAF;\n      },\n      set lastDragRAF(v) {\n        lastDragRAF = v;\n      },\n      handlePanelDrag,\n      stopDrag,\n      handleDragStart,\n      handleDragEnd,\n      createDragImage,\n      minimize,\n      close,\n      handleGlobalClick,\n      ref,\n      computed,\n      watch,\n      onMounted,\n      onUnmounted,\n      nextTick,\n      get getThemeIcon() {\n        return getThemeIcon;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","onUnmounted","nextTick","getThemeIcon","props","__props","emit","__emit","isVisible","isMinimized","isFocused","isDragging","draggedColumn","dragOffset","x","y","panelPosition","position","top","right","width","maxHeight","panelRef","columns","dataRows","fileInfo","data","Array","isArray","Math","max","length","visible","newVal","value","analyzeFileStructure","immediate","newFileInfo","deep","console","warn","headers","Object","keys","analyzedColumns","chunkSize","i","processChunk","end","min","header","columnData","slice","map","row","filter","val","undefined","type","inferDataType","sample","join","stats","calculateColumnStats","push","name","index","setTimeout","uniqueValues","Set","uniqueCount","isTrueFalseBool","every","str","String","toLowerCase","isNumeric","isNaN","parseFloat","isInteger","Number","isDate","some","Date","parse","totalRows","nonEmptyCount","nullCount","size","fillRate","round","getColumnTypeClass","typeClasses","formatFileSize","bytes","k","sizes","floor","log","pow","toFixed","handleMouseEnter","handleMouseLeave","handleMouseDown","startDrag","event","rect","getBoundingClientRect","clientX","left","clientY","document","addEventListener","handlePanelDrag","passive","stopDrag","preventDefault","stopPropagation","lastDragRAF","requestAnimationFrame","newX","newY","maxX","window","innerWidth","maxY","innerHeight","clampedX","clampedY","removeEventListener","handleDragStart","column","dragData","file","source","dataTransfer","setData","JSON","stringify","effectAllowed","dragImage","createDragImage","setDragImage","action","handleDragEnd","dragElement","createElement","className","innerHTML","style","cssText","body","appendChild","removeChild","minimize","close","handleGlobalClick","contains","target"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/Common/FileStructurePanel.vue"],"sourcesContent":["<template>\n  <transition name=\"fade-panel\">\n    <div\n      v-show=\"isVisible\"\n      class=\"file-structure-panel\"\n      :class=\"{\n        'is-focused': isFocused,\n        'dragging': isDragging\n      }\"\n      :style=\"panelPosition\"\n      @mouseenter=\"handleMouseEnter\"\n      @mouseleave=\"handleMouseLeave\"\n      @mousedown=\"handleMouseDown\"\n      ref=\"panelRef\">\n    <!-- 面板头部 -->\n    <div\n      class=\"panel-header\"\n      @mousedown.prevent=\"startDrag\">\n      <div class=\"panel-title\">\n        <span class=\"panel-icon\" v-html=\"getThemeIcon('structure')\"></span>\n        <span>{{ fileInfo.name }} - Structure</span>\n      </div>\n      <div class=\"panel-controls\">\n        <button class=\"control-btn minimize-btn\" @click=\"minimize\" title=\"Minimize\">\n          <span v-html=\"getThemeIcon('minimize')\"></span>\n        </button>\n        <button class=\"control-btn close-btn\" @click=\"close\" title=\"Close\">\n          <span v-html=\"getThemeIcon('close')\"></span>\n        </button>\n      </div>\n    </div>\n\n    <!-- 面板内容 -->\n    <div class=\"panel-content\" v-if=\"!isMinimized\">\n      <!-- 文件信息摘要 -->\n      <div class=\"file-summary\">\n        <div class=\"summary-item\">\n          <span class=\"summary-label\">Rows:</span>\n          <span class=\"summary-value\">{{ dataRows }}</span>\n        </div>\n        <div class=\"summary-item\">\n          <span class=\"summary-label\">Columns:</span>\n          <span class=\"summary-value\">{{ fileInfo.columns || 0 }}</span>\n        </div>\n        <div class=\"summary-item\">\n          <span class=\"summary-label\">Size:</span>\n          <span class=\"summary-value\">{{ formatFileSize(fileInfo.size) }}</span>\n        </div>\n      </div>\n\n      <!-- 列结构列表 -->\n      <div class=\"columns-container\">\n        <div class=\"columns-header\">\n          <h4>Data Columns</h4>\n          <span class=\"columns-count\">{{ columns.length }} columns</span>\n        </div>\n        <div class=\"columns-list\">\n          <div\n            v-for=\"(column, index) in columns\"\n            :key=\"index\"\n            class=\"column-item\"\n            :class=\"{ 'dragging': draggedColumn === index }\"\n            draggable=\"true\"\n            @dragstart=\"handleDragStart(column, index, $event)\"\n            @dragend=\"handleDragEnd\">\n            <div class=\"column-info\">\n              <div class=\"column-header\">\n                <span class=\"column-name\">{{ column.name }}</span>\n                <span class=\"column-type\" :class=\"getColumnTypeClass(column.type)\">\n                  {{ column.type }}\n                </span>\n              </div>\n              <div class=\"column-details\">\n                <div class=\"sample-data\">\n                  <span class=\"sample-label\">Sample:</span>\n                  <span class=\"sample-value\">{{ column.sample }}</span>\n                </div>\n                <div class=\"column-stats\" v-if=\"column.stats\">\n                  <span class=\"stat-item\" v-if=\"column.stats.nullCount !== undefined\">\n                    Nulls: {{ column.stats.nullCount }}\n                  </span>\n                  <span class=\"stat-item\" v-if=\"column.stats.uniqueCount !== undefined\">\n                    Unique: {{ column.stats.uniqueCount }}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div class=\"drag-handle\" title=\"Drag to configure chart\">\n              <span v-html=\"getThemeIcon('drag')\"></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n  </transition>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch, onMounted, onUnmounted, nextTick } from 'vue'\nimport { getThemeIcon } from '@/assets/JS/SVG/icons.js'\n\n// Props\nconst props = defineProps({\n  fileInfo: {\n    type: Object,\n    required: true\n  },\n  visible: {\n    type: Boolean,\n    default: false\n  }\n})\n\n// Emits\nconst emit = defineEmits(['close', 'minimize', 'column-drag'])\n\n// 面板状态\nconst isVisible = ref(false)\nconst isMinimized = ref(false)\nconst isFocused = ref(true)\nconst isDragging = ref(false)\nconst draggedColumn = ref(null)\n\n// 拖拽相关状态\nconst dragOffset = ref({ x: 0, y: 0 })\nconst panelPosition = ref({\n  position: 'fixed',\n  top: '10%',\n  right: '24%',\n  width: '22.4%',\n  maxHeight: '70vh'\n})\n\n// DOM 引用\nconst panelRef = ref(null)\n\n// 文件列结构数据\nconst columns = ref([])\n\n// 计算实际数据行数（排除标题行）\nconst dataRows = computed(() => {\n  if (!props.fileInfo || !props.fileInfo.data || !Array.isArray(props.fileInfo.data)) {\n    return 0\n  }\n  return Math.max(0, props.fileInfo.data.length - 1) // 减去标题行\n})\n\n// 监听 visible 属性变化\nwatch(() => props.visible, (newVal) => {\n  isVisible.value = newVal\n  if (newVal) {\n    isFocused.value = true\n    isMinimized.value = false\n    nextTick(() => {\n      analyzeFileStructure()\n    })\n  }\n}, { immediate: true })\n\n// 监听文件信息变化\nwatch(() => props.fileInfo, (newFileInfo) => {\n  if (newFileInfo && isVisible.value) {\n    analyzeFileStructure()\n  }\n}, { deep: true })\n\n// 分析文件结构\nasync function analyzeFileStructure() {\n  if (!props.fileInfo || !props.fileInfo.data) {\n    console.warn('No file data available for structure analysis')\n    return\n  }\n  const data = props.fileInfo.data\n  if (!Array.isArray(data) || data.length === 0) {\n    console.warn('Invalid data format for structure analysis')\n    return\n  }\n  const headers = props.fileInfo.headers || Object.keys(data[0])\n  const analyzedColumns = []\n  const chunkSize = 5 // 每次处理5列，防止主线程阻塞\n  let i = 0\n  function processChunk() {\n    const end = Math.min(i + chunkSize, headers.length)\n    for (; i < end; i++) {\n      const header = headers[i]\n      const columnData = data.slice(1).map(row => {\n        if (Array.isArray(row)) {\n          return row[i]\n        } else if (typeof row === 'object') {\n          return row[header]\n        }\n        return null\n      }).filter(val => val !== null && val !== undefined && val !== '')\n      // 推断数据类型\n      const type = inferDataType(columnData)\n      // 获取样本数据\n      const sample = columnData.slice(0, 3).join(', ') || 'No data'\n      const stats = calculateColumnStats(columnData, data.length - 1)\n      analyzedColumns.push({\n        name: header,\n        type,\n        sample,\n        stats,\n        index: i\n      })\n    }\n    columns.value = [...analyzedColumns]\n    if (i < headers.length) {\n      setTimeout(processChunk, 0)\n    }\n  }\n  processChunk()\n}\n\n// 推断数据类型\nfunction inferDataType(columnData) {\n  if (columnData.length === 0) return 'unknown'\n  \n  const sample = columnData.slice(0, Math.min(20, columnData.length)) // 取更多样本进行分析\n  const uniqueValues = [...new Set(sample)]\n  const uniqueCount = uniqueValues.length\n  \n  // 检查是否为明确的布尔值（true/false字符串）\n  const isTrueFalseBool = sample.every(val => {\n    const str = String(val).toLowerCase()\n    return str === 'true' || str === 'false' || val === true || val === false\n  })\n  \n  if (isTrueFalseBool && uniqueCount <= 2) {\n    return 'boolean'\n  }\n  \n  // 检查是否为数字\n  const isNumeric = sample.every(val => !isNaN(val) && !isNaN(parseFloat(val)))\n  \n  if (isNumeric) {\n    const isInteger = sample.every(val => Number.isInteger(parseFloat(val)))\n    \n    if (isInteger) {\n      // 对于整数，需要智能判断是布尔值、类别值还是普通整数\n      if (uniqueCount === 2 && uniqueValues.every(val => val === 0 || val === 1 || val === '0' || val === '1')) {\n        // 只有两个唯一值且都是0/1，可能是布尔值\n        // 但需要考虑数据的语义上下文，这里倾向于认为是布尔值\n        return 'boolean'\n      } else if (uniqueCount <= 10 && uniqueCount < sample.length * 0.5) {\n        // 唯一值较少且明显少于样本数量的一半，可能是类别值\n        return 'category'\n      } else {\n        return 'integer'\n      }\n    } else {\n      return 'number'\n    }\n  }\n  \n  // 检查是否为日期\n  const isDate = sample.some(val => !isNaN(Date.parse(val)))\n  if (isDate) return 'date'\n  \n  // 检查是否为类别值（字符串类型的类别）\n  if (uniqueCount <= 10 && uniqueCount < sample.length * 0.5) {\n    return 'category'\n  }\n  \n  // 默认为字符串\n  return 'string'\n}\n\n// 计算列统计信息\nfunction calculateColumnStats(columnData, totalRows) {\n  const nonEmptyCount = columnData.length\n  const nullCount = totalRows - nonEmptyCount\n  const uniqueCount = new Set(columnData).size\n  \n  return {\n    nullCount,\n    uniqueCount,\n    fillRate: Math.round((nonEmptyCount / totalRows) * 100)\n  }\n}\n\n// 获取列类型样式类\nfunction getColumnTypeClass(type) {\n  const typeClasses = {\n    'string': 'type-string',\n    'number': 'type-number',\n    'integer': 'type-integer',\n    'date': 'type-date',\n    'boolean': 'type-boolean',\n    'category': 'type-category',\n    'unknown': 'type-unknown'\n  }\n  return typeClasses[type] || 'type-unknown'\n}\n\n// 格式化文件大小\nfunction formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes'\n  const k = 1024\n  const sizes = ['Bytes', 'KB', 'MB', 'GB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\n// 鼠标事件处理\nfunction handleMouseEnter() {\n  isFocused.value = true\n}\n\nfunction handleMouseLeave() {\n  if (!isDragging.value) {\n    isFocused.value = false\n  }\n}\n\nfunction handleMouseDown() {\n  isFocused.value = true\n}\n\n// 面板拖拽功能\nfunction startDrag(event) {\n  isDragging.value = true\n  isFocused.value = true\n  const rect = panelRef.value.getBoundingClientRect()\n  dragOffset.value = {\n    x: event.clientX - rect.left,\n    y: event.clientY - rect.top\n  }\n  document.addEventListener('mousemove', handlePanelDrag, { passive: false })\n  document.addEventListener('mouseup', stopDrag, { passive: false })\n  event.preventDefault()\n  event.stopPropagation()\n}\n\nlet lastDragRAF = null\nfunction handlePanelDrag(event) {\n  if (!isDragging.value) return\n  if (lastDragRAF) return // 节流\n  lastDragRAF = requestAnimationFrame(() => {\n    lastDragRAF = null\n    const newX = event.clientX - dragOffset.value.x\n    const newY = event.clientY - dragOffset.value.y\n    // 确保面板不会拖拽到屏幕外\n    const maxX = window.innerWidth - 400\n    const maxY = window.innerHeight - 300\n    const clampedX = Math.max(0, Math.min(newX, maxX))\n    const clampedY = Math.max(0, Math.min(newY, maxY))\n    panelPosition.value = {\n      ...panelPosition.value,\n      top: `${clampedY}px`,\n      left: `${clampedX}px`,\n      right: 'auto'\n    }\n  })\n  event.preventDefault()\n}\n\nfunction stopDrag(event) {\n  isDragging.value = false\n  \n  document.removeEventListener('mousemove', handlePanelDrag)\n  document.removeEventListener('mouseup', stopDrag)\n  \n  setTimeout(() => {\n    if (!isDragging.value) {\n      isFocused.value = false\n    }\n  }, 150)\n  \n  event.preventDefault()\n}\n\n// 列拖拽功能\nfunction handleDragStart(column, index, event) {\n  draggedColumn.value = index\n\n  // 设置拖拽数据， file 和 index 字段，确保唯一性\n  const dragData = {\n    type: 'column',\n    column: {\n      ...column,\n      type: column.type, // 明确携带类型\n      file: props.fileInfo?.name || '',\n      index // 唯一标识同文件内的同名列\n    },\n    source: 'file-structure'\n  }\n\n  event.dataTransfer.setData('application/json', JSON.stringify(dragData))\n  event.dataTransfer.effectAllowed = 'copy'\n\n  // 自定义拖拽图像\n  const dragImage = createDragImage(column)\n  event.dataTransfer.setDragImage(dragImage, 0, 0)\n\n  emit('column-drag', { action: 'start', column, index })\n}\n\nfunction handleDragEnd() {\n  draggedColumn.value = null\n  emit('column-drag', { action: 'end' })\n}\n\n// 创建拖拽图像\nfunction createDragImage(column) {\n  const dragElement = document.createElement('div')\n  dragElement.className = 'drag-preview'\n  dragElement.innerHTML = `\n    <div class=\"drag-preview-content\">\n      <span class=\"drag-column-name\">${column.name}</span>\n      <span class=\"drag-column-type\">${column.type}</span>\n    </div>\n  `\n  \n  // 添加样式\n  dragElement.style.cssText = `\n    position: absolute;\n    top: -1000px;\n    left: -1000px;\n    background: rgba(59, 130, 246, 0.9);\n    color: white;\n    padding: 8px 12px;\n    border-radius: 6px;\n    font-size: 12px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n    pointer-events: none;\n    z-index: 10000;\n  `\n  \n  document.body.appendChild(dragElement)\n  \n  // 清理\n  setTimeout(() => {\n    document.body.removeChild(dragElement)\n  }, 100)\n  \n  return dragElement\n}\n\n// 面板控制\nfunction minimize() {\n  isMinimized.value = !isMinimized.value\n  emit('minimize', isMinimized.value)\n}\n\nfunction close() {\n  isVisible.value = false\n  emit('close')\n}\n\n// 组件挂载时添加全局点击监听\nonMounted(() => {\n  document.addEventListener('click', handleGlobalClick)\n})\n\nonUnmounted(() => {\n  document.removeEventListener('click', handleGlobalClick)\n  document.removeEventListener('mousemove', handlePanelDrag)\n  document.removeEventListener('mouseup', stopDrag)\n})\n\n// 全局点击处理\nfunction handleGlobalClick(event) {\n  if (panelRef.value && !panelRef.value.contains(event.target)) {\n    isFocused.value = false\n  }\n}\n</script>\n\n<style scoped>\n@import '../../assets/CSS/FileStructurePanel.css';\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}