{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n// 数据结构分析服务\nexport class DataStructureService {\n  /**\n   * 分析文件结构\n   * @param {Object} file - 文件对象\n   * @returns {Promise<Object>} 文件结构信息\n   */\n  static async analyzeFileStructure(file) {\n    try {\n      // 模拟分析文件结构\n      const fileType = file.name.split('.').pop().toLowerCase();\n      if (fileType === 'csv') {\n        return this.analyzeCsvStructure(file);\n      } else if (['xlsx', 'xls'].includes(fileType)) {\n        return this.analyzeExcelStructure(file);\n      } else if (fileType === 'json') {\n        return this.analyzeJsonStructure(file);\n      } else {\n        throw new Error(`不支持的文件类型: ${fileType}`);\n      }\n    } catch (error) {\n      console.error('文件结构分析失败:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 分析CSV文件结构\n   */\n  static async analyzeCsvStructure(file) {\n    // 模拟CSV文件结构分析\n    return {\n      rows: 1500,\n      columns: [{\n        name: 'Date',\n        type: 'date',\n        samples: ['2023-01-01', '2023-01-02', '2023-01-03']\n      }, {\n        name: 'Sales',\n        type: 'number',\n        samples: [1200, 1500, 980]\n      }, {\n        name: 'Product',\n        type: 'string',\n        samples: ['Product A', 'Product B', 'Product C']\n      }, {\n        name: 'Category',\n        type: 'string',\n        samples: ['Electronics', 'Clothing', 'Books']\n      }, {\n        name: 'Price',\n        type: 'number',\n        samples: [29.99, 45.50, 12.99]\n      }]\n    };\n  }\n\n  /**\n   * 分析Excel文件结构\n   */\n  static async analyzeExcelStructure(file) {\n    // 模拟Excel文件结构分析\n    return {\n      rows: 2000,\n      columns: [{\n        name: 'ID',\n        type: 'number',\n        samples: [1, 2, 3]\n      }, {\n        name: 'Name',\n        type: 'string',\n        samples: ['张三', '李四', '王五']\n      }, {\n        name: 'Age',\n        type: 'number',\n        samples: [25, 30, 28]\n      }, {\n        name: 'Department',\n        type: 'string',\n        samples: ['Sales', 'Marketing', 'IT']\n      }, {\n        name: 'Salary',\n        type: 'number',\n        samples: [5000, 6000, 7000]\n      }]\n    };\n  }\n\n  /**\n   * 分析JSON文件结构\n   */\n  static async analyzeJsonStructure(file) {\n    // 模拟JSON文件结构分析\n    return {\n      rows: 800,\n      columns: [{\n        name: 'id',\n        type: 'number',\n        samples: [1, 2, 3]\n      }, {\n        name: 'title',\n        type: 'string',\n        samples: ['Title 1', 'Title 2', 'Title 3']\n      }, {\n        name: 'views',\n        type: 'number',\n        samples: [1000, 2000, 1500]\n      }, {\n        name: 'created_at',\n        type: 'date',\n        samples: ['2023-01-01', '2023-01-02', '2023-01-03']\n      }]\n    };\n  }\n\n  /**\n   * 构建临时数据集\n   * @param {Object} mappingConfig - 映射配置\n   * @returns {Array} 临时数据集\n   */\n  static buildTempDataset(mappingConfig) {\n    const {\n      mappings,\n      filter\n    } = mappingConfig;\n\n    // 模拟数据集构建\n    const tempData = [];\n\n    // 根据映射配置构建数据\n    for (let i = 0; i < 100; i++) {\n      const dataPoint = {};\n      Object.keys(mappings).forEach(key => {\n        const mapping = mappings[key];\n        if (mapping && mapping.column) {\n          // 根据列类型生成模拟数据\n          dataPoint[key] = this.generateMockData(mapping.column.type, i);\n        }\n      });\n      tempData.push(dataPoint);\n    }\n\n    // 应用过滤器\n    return this.applyFilter(tempData, filter);\n  }\n\n  /**\n   * 生成模拟数据\n   */\n  static generateMockData(type, index) {\n    switch (type) {\n      case 'number':\n        return Math.floor(Math.random() * 1000) + index;\n      case 'string':\n        return `Item ${index + 1}`;\n      case 'date':\n        const date = new Date();\n        date.setDate(date.getDate() + index);\n        return date.toISOString().split('T')[0];\n      default:\n        return `Value ${index}`;\n    }\n  }\n\n  /**\n   * 应用过滤器\n   */\n  static applyFilter(data, filter) {\n    if (!filter) return data;\n    switch (filter.type) {\n      case 'range':\n        const {\n          start,\n          end\n        } = filter.range;\n        return data.slice(start - 1, end);\n      case 'condition':\n        const {\n          column,\n          operator,\n          value\n        } = filter.condition;\n        return data.filter(item => {\n          const itemValue = item[column];\n          switch (operator) {\n            case 'eq':\n              return itemValue == value;\n            case 'ne':\n              return itemValue != value;\n            case 'gt':\n              return itemValue > value;\n            case 'lt':\n              return itemValue < value;\n            case 'contains':\n              return String(itemValue).includes(value);\n            default:\n              return true;\n          }\n        });\n      default:\n        return data;\n    }\n  }\n}\n\n// 图表配置构建器\nexport class ChartConfigBuilder {\n  /**\n   * 根据映射配置构建ECharts配置\n   * @param {string} chartType - 图表类型\n   * @param {Object} mappingConfig - 映射配置\n   * @returns {Object} ECharts配置对象\n   */\n  static buildChartConfig(chartType, mappingConfig) {\n    const tempData = DataStructureService.buildTempDataset(mappingConfig);\n    switch (chartType) {\n      case 'line':\n        return this.buildLineChart(tempData, mappingConfig);\n      case 'bar':\n        return this.buildBarChart(tempData, mappingConfig);\n      case 'pie':\n        return this.buildPieChart(tempData, mappingConfig);\n      case 'scatter':\n        return this.buildScatterChart(tempData, mappingConfig);\n      case 'heatmap':\n        return this.buildHeatmapChart(tempData, mappingConfig);\n      default:\n        return this.buildLineChart(tempData, mappingConfig);\n    }\n  }\n\n  /**\n   * 构建折线图配置\n   */\n  static buildLineChart(data, mappingConfig) {\n    const {\n      mappings\n    } = mappingConfig;\n    const xData = data.map(item => item.x);\n    const yData = data.map(item => item.y);\n    return {\n      title: {\n        text: '折线图'\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      xAxis: {\n        type: 'category',\n        data: xData\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: '数据',\n        type: 'line',\n        data: yData,\n        smooth: true\n      }]\n    };\n  }\n\n  /**\n   * 构建柱状图配置\n   */\n  static buildBarChart(data, mappingConfig) {\n    const {\n      mappings\n    } = mappingConfig;\n    const xData = data.map(item => item.x);\n    const yData = data.map(item => item.y);\n    return {\n      title: {\n        text: '柱状图'\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      xAxis: {\n        type: 'category',\n        data: xData\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: '数据',\n        type: 'bar',\n        data: yData\n      }]\n    };\n  }\n\n  /**\n   * 构建饼图配置\n   */\n  static buildPieChart(data, mappingConfig) {\n    const pieData = data.map(item => ({\n      name: item.name,\n      value: item.value\n    }));\n    return {\n      title: {\n        text: '饼图'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      series: [{\n        name: '数据',\n        type: 'pie',\n        radius: '60%',\n        data: pieData,\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }]\n    };\n  }\n\n  /**\n   * 构建散点图配置\n   */\n  static buildScatterChart(data, mappingConfig) {\n    const scatterData = data.map(item => [item.x, item.y]);\n    return {\n      title: {\n        text: '散点图'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      xAxis: {\n        type: 'value'\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: '数据',\n        type: 'scatter',\n        data: scatterData,\n        symbolSize: 8\n      }]\n    };\n  }\n\n  /**\n   * 构建热力图配置\n   */\n  static buildHeatmapChart(data, mappingConfig) {\n    const heatmapData = data.map((item, index) => [index % 7, Math.floor(index / 7), item.value]);\n    return {\n      title: {\n        text: '热力图'\n      },\n      tooltip: {\n        position: 'top'\n      },\n      grid: {\n        height: '50%',\n        top: '10%'\n      },\n      xAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n      },\n      yAxis: {\n        type: 'category',\n        data: ['Week 1', 'Week 2', 'Week 3', 'Week 4']\n      },\n      visualMap: {\n        min: 0,\n        max: 1000,\n        calculable: true,\n        orient: 'horizontal',\n        left: 'center',\n        bottom: '15%'\n      },\n      series: [{\n        name: '数据',\n        type: 'heatmap',\n        data: heatmapData,\n        label: {\n          show: true\n        },\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }]\n    };\n  }\n}","map":{"version":3,"names":["DataStructureService","analyzeFileStructure","file","fileType","name","split","pop","toLowerCase","analyzeCsvStructure","includes","analyzeExcelStructure","analyzeJsonStructure","Error","error","console","rows","columns","type","samples","buildTempDataset","mappingConfig","mappings","filter","tempData","i","dataPoint","Object","keys","forEach","key","mapping","column","generateMockData","push","applyFilter","index","Math","floor","random","date","Date","setDate","getDate","toISOString","data","start","end","range","slice","operator","value","condition","item","itemValue","String","ChartConfigBuilder","buildChartConfig","chartType","buildLineChart","buildBarChart","buildPieChart","buildScatterChart","buildHeatmapChart","xData","map","x","yData","y","title","text","tooltip","trigger","xAxis","yAxis","series","smooth","pieData","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","scatterData","symbolSize","heatmapData","position","grid","height","top","visualMap","min","max","calculable","orient","left","bottom","label","show"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/services/DataStructureService.js"],"sourcesContent":["// 数据结构分析服务\nexport class DataStructureService {\n  \n  /**\n   * 分析文件结构\n   * @param {Object} file - 文件对象\n   * @returns {Promise<Object>} 文件结构信息\n   */\n  static async analyzeFileStructure(file) {\n    try {\n      // 模拟分析文件结构\n      const fileType = file.name.split('.').pop().toLowerCase()\n      \n      if (fileType === 'csv') {\n        return this.analyzeCsvStructure(file)\n      } else if (['xlsx', 'xls'].includes(fileType)) {\n        return this.analyzeExcelStructure(file)\n      } else if (fileType === 'json') {\n        return this.analyzeJsonStructure(file)\n      } else {\n        throw new Error(`不支持的文件类型: ${fileType}`)\n      }\n    } catch (error) {\n      console.error('文件结构分析失败:', error)\n      throw error\n    }\n  }\n  \n  /**\n   * 分析CSV文件结构\n   */\n  static async analyzeCsvStructure(file) {\n    // 模拟CSV文件结构分析\n    return {\n      rows: 1500,\n      columns: [\n        { \n          name: 'Date', \n          type: 'date', \n          samples: ['2023-01-01', '2023-01-02', '2023-01-03'] \n        },\n        { \n          name: 'Sales', \n          type: 'number', \n          samples: [1200, 1500, 980] \n        },\n        { \n          name: 'Product', \n          type: 'string', \n          samples: ['Product A', 'Product B', 'Product C'] \n        },\n        { \n          name: 'Category', \n          type: 'string', \n          samples: ['Electronics', 'Clothing', 'Books'] \n        },\n        { \n          name: 'Price', \n          type: 'number', \n          samples: [29.99, 45.50, 12.99] \n        }\n      ]\n    }\n  }\n  \n  /**\n   * 分析Excel文件结构\n   */\n  static async analyzeExcelStructure(file) {\n    // 模拟Excel文件结构分析\n    return {\n      rows: 2000,\n      columns: [\n        { \n          name: 'ID', \n          type: 'number', \n          samples: [1, 2, 3] \n        },\n        { \n          name: 'Name', \n          type: 'string', \n          samples: ['张三', '李四', '王五'] \n        },\n        { \n          name: 'Age', \n          type: 'number', \n          samples: [25, 30, 28] \n        },\n        { \n          name: 'Department', \n          type: 'string', \n          samples: ['Sales', 'Marketing', 'IT'] \n        },\n        { \n          name: 'Salary', \n          type: 'number', \n          samples: [5000, 6000, 7000] \n        }\n      ]\n    }\n  }\n  \n  /**\n   * 分析JSON文件结构\n   */\n  static async analyzeJsonStructure(file) {\n    // 模拟JSON文件结构分析\n    return {\n      rows: 800,\n      columns: [\n        { \n          name: 'id', \n          type: 'number', \n          samples: [1, 2, 3] \n        },\n        { \n          name: 'title', \n          type: 'string', \n          samples: ['Title 1', 'Title 2', 'Title 3'] \n        },\n        { \n          name: 'views', \n          type: 'number', \n          samples: [1000, 2000, 1500] \n        },\n        { \n          name: 'created_at', \n          type: 'date', \n          samples: ['2023-01-01', '2023-01-02', '2023-01-03'] \n        }\n      ]\n    }\n  }\n  \n  /**\n   * 构建临时数据集\n   * @param {Object} mappingConfig - 映射配置\n   * @returns {Array} 临时数据集\n   */\n  static buildTempDataset(mappingConfig) {\n    const { mappings, filter } = mappingConfig\n    \n    // 模拟数据集构建\n    const tempData = []\n    \n    // 根据映射配置构建数据\n    for (let i = 0; i < 100; i++) {\n      const dataPoint = {}\n      \n      Object.keys(mappings).forEach(key => {\n        const mapping = mappings[key]\n        if (mapping && mapping.column) {\n          // 根据列类型生成模拟数据\n          dataPoint[key] = this.generateMockData(mapping.column.type, i)\n        }\n      })\n      \n      tempData.push(dataPoint)\n    }\n    \n    // 应用过滤器\n    return this.applyFilter(tempData, filter)\n  }\n  \n  /**\n   * 生成模拟数据\n   */\n  static generateMockData(type, index) {\n    switch (type) {\n      case 'number':\n        return Math.floor(Math.random() * 1000) + index\n      case 'string':\n        return `Item ${index + 1}`\n      case 'date':\n        const date = new Date()\n        date.setDate(date.getDate() + index)\n        return date.toISOString().split('T')[0]\n      default:\n        return `Value ${index}`\n    }\n  }\n  \n  /**\n   * 应用过滤器\n   */\n  static applyFilter(data, filter) {\n    if (!filter) return data\n    \n    switch (filter.type) {\n      case 'range':\n        const { start, end } = filter.range\n        return data.slice(start - 1, end)\n      case 'condition':\n        const { column, operator, value } = filter.condition\n        return data.filter(item => {\n          const itemValue = item[column]\n          switch (operator) {\n            case 'eq':\n              return itemValue == value\n            case 'ne':\n              return itemValue != value\n            case 'gt':\n              return itemValue > value\n            case 'lt':\n              return itemValue < value\n            case 'contains':\n              return String(itemValue).includes(value)\n            default:\n              return true\n          }\n        })\n      default:\n        return data\n    }\n  }\n}\n\n// 图表配置构建器\nexport class ChartConfigBuilder {\n  \n  /**\n   * 根据映射配置构建ECharts配置\n   * @param {string} chartType - 图表类型\n   * @param {Object} mappingConfig - 映射配置\n   * @returns {Object} ECharts配置对象\n   */\n  static buildChartConfig(chartType, mappingConfig) {\n    const tempData = DataStructureService.buildTempDataset(mappingConfig)\n    \n    switch (chartType) {\n      case 'line':\n        return this.buildLineChart(tempData, mappingConfig)\n      case 'bar':\n        return this.buildBarChart(tempData, mappingConfig)\n      case 'pie':\n        return this.buildPieChart(tempData, mappingConfig)\n      case 'scatter':\n        return this.buildScatterChart(tempData, mappingConfig)\n      case 'heatmap':\n        return this.buildHeatmapChart(tempData, mappingConfig)\n      default:\n        return this.buildLineChart(tempData, mappingConfig)\n    }\n  }\n  \n  /**\n   * 构建折线图配置\n   */\n  static buildLineChart(data, mappingConfig) {\n    const { mappings } = mappingConfig\n    const xData = data.map(item => item.x)\n    const yData = data.map(item => item.y)\n    \n    return {\n      title: { text: '折线图' },\n      tooltip: { trigger: 'axis' },\n      xAxis: { \n        type: 'category',\n        data: xData \n      },\n      yAxis: { type: 'value' },\n      series: [{\n        name: '数据',\n        type: 'line',\n        data: yData,\n        smooth: true\n      }]\n    }\n  }\n  \n  /**\n   * 构建柱状图配置\n   */\n  static buildBarChart(data, mappingConfig) {\n    const { mappings } = mappingConfig\n    const xData = data.map(item => item.x)\n    const yData = data.map(item => item.y)\n    \n    return {\n      title: { text: '柱状图' },\n      tooltip: { trigger: 'axis' },\n      xAxis: { \n        type: 'category',\n        data: xData \n      },\n      yAxis: { type: 'value' },\n      series: [{\n        name: '数据',\n        type: 'bar',\n        data: yData\n      }]\n    }\n  }\n  \n  /**\n   * 构建饼图配置\n   */\n  static buildPieChart(data, mappingConfig) {\n    const pieData = data.map(item => ({\n      name: item.name,\n      value: item.value\n    }))\n    \n    return {\n      title: { text: '饼图' },\n      tooltip: { trigger: 'item' },\n      series: [{\n        name: '数据',\n        type: 'pie',\n        radius: '60%',\n        data: pieData,\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }]\n    }\n  }\n  \n  /**\n   * 构建散点图配置\n   */\n  static buildScatterChart(data, mappingConfig) {\n    const scatterData = data.map(item => [item.x, item.y])\n    \n    return {\n      title: { text: '散点图' },\n      tooltip: { trigger: 'item' },\n      xAxis: { type: 'value' },\n      yAxis: { type: 'value' },\n      series: [{\n        name: '数据',\n        type: 'scatter',\n        data: scatterData,\n        symbolSize: 8\n      }]\n    }\n  }\n  \n  /**\n   * 构建热力图配置\n   */\n  static buildHeatmapChart(data, mappingConfig) {\n    const heatmapData = data.map((item, index) => [\n      index % 7, Math.floor(index / 7), item.value\n    ])\n    \n    return {\n      title: { text: '热力图' },\n      tooltip: { position: 'top' },\n      grid: {\n        height: '50%',\n        top: '10%'\n      },\n      xAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n      },\n      yAxis: {\n        type: 'category',\n        data: ['Week 1', 'Week 2', 'Week 3', 'Week 4']\n      },\n      visualMap: {\n        min: 0,\n        max: 1000,\n        calculable: true,\n        orient: 'horizontal',\n        left: 'center',\n        bottom: '15%'\n      },\n      series: [{\n        name: '数据',\n        type: 'heatmap',\n        data: heatmapData,\n        label: {\n          show: true\n        },\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }]\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}