{"ast":null,"code":"import { ref, computed } from 'vue';\nexport default {\n  __name: 'DataPreviewModal',\n  props: {\n    show: Boolean,\n    currentFile: Object,\n    previewData: {\n      type: Array,\n      default: () => []\n    },\n    isSidePreview: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['close'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n    const emit = __emit;\n\n    // 表头计算 - 使用第一行数据作为标题\n    const tableHeaders = computed(() => {\n      if (!props.previewData.length) return [];\n\n      // 获取第一行数据作为表头\n      const firstRow = props.previewData[0];\n      if (Array.isArray(firstRow)) {\n        // 如果是数组格式，直接使用数组元素作为标题\n        return firstRow;\n      } else if (typeof firstRow === 'object') {\n        // 如果是对象格式，使用对象的值作为标题\n        return Object.values(firstRow);\n      }\n      return [];\n    });\n\n    // 实际数据行（排除标题行）\n    const dataRows = computed(() => {\n      if (!props.previewData.length) return [];\n      return props.previewData.slice(1); // 跳过第一行（标题行）\n    });\n\n    // 判断是否需要显示滚动提示\n    const showScrollHint = computed(() => {\n      return tableHeaders.value.length > 6; // 当列数超过6列时显示滚动提示\n    });\n\n    // 格式化文件大小\n    function formatFileSize(bytes) {\n      if (!bytes) return '0 Bytes';\n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n    function onClose() {\n      emit('close');\n    }\n    const __returned__ = {\n      props,\n      emit,\n      tableHeaders,\n      dataRows,\n      showScrollHint,\n      formatFileSize,\n      onClose,\n      ref,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","props","__props","emit","__emit","tableHeaders","previewData","length","firstRow","Array","isArray","Object","values","dataRows","slice","showScrollHint","value","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","onClose"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/DataPreviewModal.vue"],"sourcesContent":["<template>\n<transition name=\"modal-fade\">\n    <div v-if=\"show\"\n        class=\"preview-modal\"\n        @click.self=\"onClose\">\n        <transition name=\"modal-slide\" appear>\n            <div class=\"preview-content\" v-if=\"show\">\n                <!-- 头部 -->\n                <div class=\"preview-header\">\n                    <div class=\"header-info\">\n                        <h3>{{ currentFile?.name || 'Data Preview' }}</h3>\n                        <span class=\"file-info\" v-if=\"currentFile\">\n                            {{ formatFileSize(currentFile.size) }} |\n                            {{ currentFile.rows || 0 }} row × {{ currentFile.columns || 0 }} column (Only first 100 rows shown)\n                        </span>\n                    </div>\n                    <button class=\"close-btn\" @click=\"onClose\">×</button>\n                </div>\n\n                <!-- 数据表格预览 -->\n                <div class=\"preview-table-wrapper\">\n                    <div v-if=\"dataRows.length\" class=\"table-container\">\n                        <!-- 滚动提示 -->\n                        <div class=\"scroll-hint\" v-if=\"showScrollHint\">\n                            <span>← 左右滑动查看更多列 →</span>\n                        </div>\n                        <table class=\"preview-table\">\n                            <thead>\n                                <tr>\n                                    <th class=\"row-number\">#</th>\n                                    <th v-for=\"(header, idx) in tableHeaders\"\n                                        :key=\"idx\"\n                                        :title=\"header.length > 12 ? header : ''\"\n                                        class=\"column-header\">{{ header }}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"(row, idx) in dataRows\"\n                                    :key=\"idx\">\n                                    <td class=\"row-number\">{{ idx + 1 }}</td>\n                                    <td v-for=\"(header, headerIdx) in tableHeaders\"\n                                        :key=\"headerIdx\">\n                                        {{ Array.isArray(row) ? row[headerIdx] : (typeof row === 'object' ? Object.values(row)[headerIdx] : row) }}\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div v-else class=\"empty-tip\">\n                        <div class=\"empty-icon\">📊</div>\n                        <p>暂无数据可预览</p>\n                    </div>\n                </div>\n            </div>\n        </transition>\n    </div>\n</transition>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed } from 'vue'\n\nconst props = defineProps({\n    show: Boolean,\n    currentFile: Object,\n    previewData: {\n        type: Array,\n        default: () => []\n    },\n    isSidePreview: {\n        type: Boolean,\n        default: false\n    }\n})\n\nconst emit = defineEmits(['close'])\n\n// 表头计算 - 使用第一行数据作为标题\nconst tableHeaders = computed(() => {\n    if (!props.previewData.length) return []\n    \n    // 获取第一行数据作为表头\n    const firstRow = props.previewData[0]\n    if (Array.isArray(firstRow)) {\n        // 如果是数组格式，直接使用数组元素作为标题\n        return firstRow\n    } else if (typeof firstRow === 'object') {\n        // 如果是对象格式，使用对象的值作为标题\n        return Object.values(firstRow)\n    }\n    return []\n})\n\n// 实际数据行（排除标题行）\nconst dataRows = computed(() => {\n    if (!props.previewData.length) return []\n    return props.previewData.slice(1) // 跳过第一行（标题行）\n})\n\n// 判断是否需要显示滚动提示\nconst showScrollHint = computed(() => {\n    return tableHeaders.value.length > 6 // 当列数超过6列时显示滚动提示\n})\n\n// 格式化文件大小\nfunction formatFileSize(bytes) {\n    if (!bytes) return '0 Bytes'\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\nfunction onClose() {\n    emit('close')\n}\n</script>\n\n<style scoped>\n/* CSS变量定义 */\n:root {\n    --bg-color: #fff;\n    --text-color: #1f2937;\n    --text-secondary: #6b7280;\n    --border-color: #e5e7eb;\n    --header-bg: linear-gradient(135deg, #f8f9fa 0%, #f1f5f9 100%);\n    --table-bg: #fff;\n    --table-header-bg: #f3f4f6;\n    --table-row-hover: linear-gradient(135deg, #f9fafb 0%, #f0f9ff 100%);\n    --row-number-bg: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);\n    --row-number-header-bg: #e5e7eb;\n    --scrollbar-track: #f1f5f9;\n    --scrollbar-thumb: linear-gradient(135deg, #cbd5e1 0%, #94a3b8 100%);\n    --scrollbar-thumb-hover: linear-gradient(135deg, #94a3b8 0%, #64748b 100%);\n    --modal-backdrop: rgba(0, 0, 0, 0.6);\n    --empty-icon-color: #9ca3af;\n}\n\n/* 暗黑模式变量 */\n[data-theme=\"dark\"] {\n    --bg-color: #1f2937;\n    --text-color: #f9fafb;\n    --text-secondary: #d1d5db;\n    --border-color: #374151;\n    --header-bg: linear-gradient(135deg, #374151 0%, #4b5563 100%);\n    --table-bg: #1f2937;\n    --table-header-bg: #374151;\n    --table-row-hover: linear-gradient(135deg, #374151 0%, #1e3a8a 100%);\n    --row-number-bg: linear-gradient(135deg, #4b5563 0%, #6b7280 100%);\n    --row-number-header-bg: #4b5563;\n    --scrollbar-track: #374151;\n    --scrollbar-thumb: linear-gradient(135deg, #6b7280 0%, #9ca3af 100%);\n    --scrollbar-thumb-hover: linear-gradient(135deg, #9ca3af 0%, #d1d5db 100%);\n    --modal-backdrop: rgba(0, 0, 0, 0.8);\n    --empty-icon-color: #6b7280;\n}\n\n/* 模态框基础样式 */\n.preview-modal {\n    position: fixed;\n    top: 0; left: 0; right: 0; bottom: 0;\n    background: var(--modal-backdrop);\n    z-index: 10001;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    backdrop-filter: blur(4px);\n    padding: 20px;\n}\n\n.preview-content {\n    width: min(96vw, 1400px);\n    height: min(92vh, 900px);\n    background: var(--bg-color);\n    border-radius: 20px;\n    box-shadow: 0 25px 80px rgba(0, 0, 0, 0.35);\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    border: 1px solid var(--border-color);\n    margin: auto;\n}\n\n/* 头部样式 */\n.preview-header {\n    padding: 28px 32px;\n    border-bottom: 1px solid var(--border-color);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background: var(--header-bg);\n    flex-shrink: 0;\n    position: relative;\n}\n\n.preview-header::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 4px;\n    background: linear-gradient(90deg, #3b82f6, #8b5cf6, #06b6d4);\n    border-radius: 20px 20px 0 0;\n}\n\n.header-info h3 {\n    margin: 0 0 6px 0;\n    font-size: 20px;\n    font-weight: 700;\n    color: var(--text-color);\n    letter-spacing: -0.025em;\n}\n\n.file-info {\n    font-size: 14px;\n    color: var(--text-secondary);\n    font-weight: 500;\n}\n\n.close-btn {\n    background: none;\n    border: none;\n    font-size: 30px;\n    cursor: pointer;\n    color: var(--text-secondary);\n    padding: 10px;\n    border-radius: 12px;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    line-height: 1;\n}\n\n.close-btn:hover {\n    background: rgba(239, 68, 68, 0.1);\n    color: #ef4444;\n    transform: scale(1.1);\n}\n\n/* 表格区域 */\n.preview-table-wrapper {\n    flex: 1;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    background: var(--table-bg);\n}\n\n.table-container {\n    flex: 1;\n    overflow: auto;\n    padding: 0;\n    /* 确保支持水平滚动 */\n    overflow-x: auto;\n    overflow-y: auto;\n}\n\n.preview-table {\n    width: 100%;\n    min-width: 800px; /* 确保有最小宽度以触发水平滚动 */\n    border-collapse: collapse;\n    font-size: 14px;\n    background: var(--table-bg);\n}\n\n.preview-table th {\n    background: var(--table-header-bg);\n    font-weight: 700;\n    color: var(--text-color);\n    padding: 16px 20px;\n    text-align: left;\n    border-bottom: 2px solid var(--border-color);\n    position: sticky;\n    top: 0;\n    z-index: 20;\n    font-size: 14px;\n    letter-spacing: 0.025em;\n    text-transform: uppercase;\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n    /* 确保背景不透明，防止数据行穿透 */\n    backdrop-filter: blur(10px);\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    /* 长标题处理 */\n    min-width: 120px; /* 设置最小宽度 */\n    max-width: 200px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    /* 添加标题提示 */\n    position: relative;\n}\n\n.preview-table td {\n    padding: 14px 20px;\n    border-bottom: 1px solid var(--border-color);\n    color: var(--text-color);\n    min-width: 120px; /* 设置最小宽度 */\n    max-width: 220px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    font-size: 14px;\n    transition: all 0.2s ease;\n    background: var(--table-bg);\n}\n\n.preview-table tr:hover {\n    background: var(--table-row-hover);\n    transform: translateX(2px);\n    box-shadow: 0 2px 8px rgba(59, 130, 246, 0.1);\n}\n\n.row-number {\n    background: var(--row-number-bg) !important;\n    font-weight: 600;\n    color: var(--text-secondary) !important;\n    text-align: center !important;\n    width: 70px;\n    min-width: 70px;\n    max-width: 70px !important;\n    font-family: 'Consolas', 'Monaco', monospace;\n}\n\n.preview-table th.row-number {\n    background: var(--row-number-header-bg) !important;\n    font-weight: 800;\n    /* 确保行号列有不透明背景 */\n    backdrop-filter: blur(10px);\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 列标题样式 */\n.column-header {\n    cursor: help;\n    transition: all 0.2s ease;\n}\n\n.column-header:hover {\n    background: var(--table-row-hover) !important;\n    transform: translateY(-1px);\n}\n\n/* 暗黑模式下确保标题背景不透明 */\n[data-theme=\"dark\"] .preview-table th {\n    background: var(--table-header-bg) !important;\n    backdrop-filter: blur(10px);\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n}\n\n[data-theme=\"dark\"] .preview-table th.row-number {\n    background: var(--row-number-header-bg) !important;\n    backdrop-filter: blur(10px);\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n}\n\n/* 空状态 */\n.empty-tip {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    color: var(--empty-icon-color);\n    padding: 80px 20px;\n    animation: fadeInEmpty 0.6s ease-out;\n    background: var(--table-bg);\n}\n\n.empty-icon {\n    font-size: 72px;\n    margin-bottom: 20px;\n    opacity: 0.6;\n    animation: bounceIcon 2s ease-in-out infinite;\n}\n\n.empty-tip p {\n    margin: 0;\n    font-size: 18px;\n    font-weight: 500;\n    color: var(--text-secondary);\n}\n\n@keyframes fadeInEmpty {\n    from {\n        opacity: 0;\n        transform: translateY(20px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n@keyframes bounceIcon {\n    0%, 20%, 50%, 80%, 100% {\n        transform: translateY(0);\n    }\n    40% {\n        transform: translateY(-10px);\n    }\n    60% {\n        transform: translateY(-5px);\n    }\n}\n\n/* 动画效果 */\n.modal-fade-enter-active {\n    transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);\n}\n\n.modal-fade-leave-active {\n    transition: all 0.25s cubic-bezier(0.4, 0, 1, 1);\n}\n\n.modal-fade-enter-from,\n.modal-fade-leave-to {\n    opacity: 0;\n    backdrop-filter: blur(0px);\n}\n\n.modal-slide-enter-active {\n    transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n}\n\n.modal-slide-leave-active {\n    transition: all 0.25s cubic-bezier(0.4, 0, 1, 1);\n}\n\n.modal-slide-enter-from {\n    opacity: 0;\n    transform: scale(0.85) translateY(-30px);\n}\n\n.modal-slide-leave-to {\n    opacity: 0;\n    transform: scale(0.9) translateY(-20px);\n}\n\n/* 表格行动画 */\n.preview-table tbody tr {\n    animation: fadeInRow 0.6s ease-out backwards;\n}\n\n.preview-table tbody tr:nth-child(1) { animation-delay: 0.1s; }\n.preview-table tbody tr:nth-child(2) { animation-delay: 0.15s; }\n.preview-table tbody tr:nth-child(3) { animation-delay: 0.2s; }\n.preview-table tbody tr:nth-child(4) { animation-delay: 0.25s; }\n.preview-table tbody tr:nth-child(5) { animation-delay: 0.3s; }\n.preview-table tbody tr:nth-child(n+6) { animation-delay: 0.35s; }\n\n@keyframes fadeInRow {\n    from {\n        opacity: 0;\n        transform: translateX(-20px);\n    }\n    to {\n        opacity: 1;\n        transform: translateX(0);\n    }\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n    .preview-content {\n        width: 96vw;\n        height: 92vh;\n        margin: 15px;\n        border-radius: 16px;\n    }\n    \n    .side-preview .preview-content {\n        width: 96vw;\n        height: 88vh;\n        margin: 8px;\n    }\n    \n    .preview-header {\n        padding: 20px 24px;\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 10px;\n    }\n    \n    .close-btn {\n        position: absolute;\n        top: 20px;\n        right: 24px;\n    }\n    \n    .preview-table th,\n    .preview-table td {\n        padding: 12px 16px;\n        font-size: 13px;\n    }\n    \n    .preview-table th {\n        min-width: 100px; /* 移动端减小最小宽度 */\n        max-width: 120px;\n    }\n    \n    .preview-table td {\n        min-width: 100px; /* 移动端减小最小宽度 */\n        max-width: 120px;\n    }\n    \n    .row-number {\n        width: 50px;\n        min-width: 50px;\n        max-width: 50px !important;\n    }\n}\n\n/* 滚动条样式 */\n.table-container::-webkit-scrollbar {\n    width: 10px;\n    height: 10px;\n}\n\n.table-container::-webkit-scrollbar-track {\n    background: var(--scrollbar-track);\n    border-radius: 5px;\n}\n\n.table-container::-webkit-scrollbar-thumb {\n    background: var(--scrollbar-thumb);\n    border-radius: 5px;\n    border: 1px solid var(--border-color);\n}\n\n.table-container::-webkit-scrollbar-thumb:hover {\n    background: var(--scrollbar-thumb-hover);\n}\n\n.table-container::-webkit-scrollbar-corner {\n    background: var(--scrollbar-track);\n}\n\n/* 暗黑模式下的特殊调整 */\n[data-theme=\"dark\"] .preview-content {\n    box-shadow: 0 25px 80px rgba(0, 0, 0, 0.6);\n    border: 1px solid rgba(55, 65, 81, 0.3);\n}\n\n[data-theme=\"dark\"] .close-btn:hover {\n    background: rgba(248, 113, 113, 0.15);\n    color: #f87171;\n}\n\n[data-theme=\"dark\"] .preview-table tr:hover {\n    box-shadow: 0 2px 8px rgba(59, 130, 246, 0.2);\n}\n\n[data-theme=\"dark\"] .preview-table th {\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n</style>"],"mappings":"AA6DA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAI;;;;;;;;;;;;;;;;;;;;;;IADlC;IAGA,MAAMC,KAAK,GAAGC,OAAA;IAad,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,YAAY,GAAGL,QAAQ,CAAC,MAAM;MAChC,IAAI,CAACC,KAAK,CAACK,WAAW,CAACC,MAAM,EAAE,OAAO,EAAC;;MAEvC;MACA,MAAMC,QAAQ,GAAGP,KAAK,CAACK,WAAW,CAAC,CAAC;MACpC,IAAIG,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;QACzB;QACA,OAAOA,QAAO;MAClB,CAAC,MAAM,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;QACrC;QACA,OAAOG,MAAM,CAACC,MAAM,CAACJ,QAAQ;MACjC;MACA,OAAO,EAAC;IACZ,CAAC;;IAED;IACA,MAAMK,QAAQ,GAAGb,QAAQ,CAAC,MAAM;MAC5B,IAAI,CAACC,KAAK,CAACK,WAAW,CAACC,MAAM,EAAE,OAAO,EAAC;MACvC,OAAON,KAAK,CAACK,WAAW,CAACQ,KAAK,CAAC,CAAC,CAAC,EAAC;IACtC,CAAC;;IAED;IACA,MAAMC,cAAc,GAAGf,QAAQ,CAAC,MAAM;MAClC,OAAOK,YAAY,CAACW,KAAK,CAACT,MAAM,GAAG,CAAC,EAAC;IACzC,CAAC;;IAED;IACA,SAASU,cAAcA,CAACC,KAAK,EAAE;MAC3B,IAAI,CAACA,KAAK,EAAE,OAAO,SAAQ;MAC3B,MAAMC,CAAC,GAAG,IAAG;MACb,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;MACxC,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACN,KAAK,CAAC,GAAGI,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC;MAClD,OAAOM,UAAU,CAAC,CAACP,KAAK,GAAGI,IAAI,CAACI,GAAG,CAACP,CAAC,EAAEE,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGP,KAAK,CAACC,CAAC;IAC1E;IAEA,SAASO,OAAOA,CAAA,EAAG;MACfzB,IAAI,CAAC,OAAO;IAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}