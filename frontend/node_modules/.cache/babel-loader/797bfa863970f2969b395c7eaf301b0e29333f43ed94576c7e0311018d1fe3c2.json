{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-display\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"empty-tip\"\n};\nconst _hoisted_3 = [\"innerHTML\"];\nconst _hoisted_4 = {\n  key: 1,\n  ref: \"chartRef\",\n  class: \"chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$setup.hasSeries ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"empty-svg\",\n    innerHTML: _ctx.getThemeIcon('chartPlaceholder')\n  }, null, 8 /* PROPS */, _hoisted_3), _cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"empty-title\"\n  }, \"No Chart Data\", -1 /* HOISTED */)), _cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    class: \"empty-desc\"\n  }, [_createTextVNode(\"Select a chart type on the left and configure your data to \"), _createElementVNode(\"span\", {\n    class: \"faststart\"\n  }, \"get started fast\"), _createTextVNode(\" with visualization!\")], -1 /* HOISTED */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */))]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","$setup","hasSeries","_hoisted_2","_createElementVNode","innerHTML","_ctx","getThemeIcon","_hoisted_3","_createTextVNode","_hoisted_4"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\ChartDisplay.vue"],"sourcesContent":["<template>\n<div class=\"chart-display\">\n    <div v-if=\"!hasSeries\" class=\"empty-tip\">\n        <div class=\"empty-svg\" v-html=\"getThemeIcon('chartPlaceholder')\"></div>\n        <div class=\"empty-title\">No Chart Data</div>\n        <div class=\"empty-desc\">Select a chart type on the left and configure your data to <span class=\"faststart\">get started fast</span> with visualization!</div>\n    </div>\n    <div v-else ref=\"chartRef\" class=\"chart-container\"></div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, watch, onMounted, onBeforeUnmount, computed } from 'vue'\nimport * as echarts from 'echarts'\n\nconst props = defineProps({\n    option: { type: Object, required: true }\n})\n\nconst chartRef = ref(null)\nlet chartInstance = null\n\nconst hasSeries = computed(() => {\n    return props.option && Array.isArray(props.option.series) && props.option.series.length > 0\n})\n\nfunction renderChart() {\n    if (!hasSeries.value) return\n    if (!chartInstance && chartRef.value) {\n        chartInstance = echarts.init(chartRef.value)\n    }\n    if (chartInstance && props.option) {\n        chartInstance.setOption(props.option, true)\n    }\n}\n\nwatch(() => props.option, renderChart, { deep: true })\nonMounted(renderChart)\nonBeforeUnmount(() => {\n    if (chartInstance) chartInstance.dispose()\n})\n</script>\n\n<style scoped>\n.chart-display {\n    width: 100%;\n    height: 100%;\n    min-height: clamp(300px, 60vh, 600px);\n    background: var(--bg-color, #fff);\n    border-radius: clamp(8px, 2vw, 12px);\n    box-shadow: 0 0 1px 1px var(--text-color);\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: clamp(10px, 2vw, 20px);\n}\n\n.chart-container {\n    width: 100% !important;\n    height: 100% !important;\n    min-height: inherit;\n}\n\n.empty-tip {\n    color: #888;\n    text-align: center;\n    letter-spacing: 1px;\n    padding: 24px 10px 10px 10px;\n    user-select: none;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n.empty-svg {\n    margin-bottom: 12px;\n    opacity: 0.85;\n    animation: float 2.5s ease-in-out infinite;\n}\n@keyframes float {\n    0% { transform: translateY(0); }\n    50% { transform: translateY(-8px); }\n    100% { transform: translateY(0); }\n}\n.empty-title {\n    font-size: 1.25em;\n    font-weight: bold;\n    color: #4F8EF7;\n    margin-bottom: 6px;\n}\n.empty-desc {\n    font-size: 1em;\n    color: #666;\n    margin-top: 2px;\n}\n.faststart {\n    color: #FFB300;\n    font-weight: bold;\n}\n\n/* 小屏幕适配 */\n@media (max-width: 767px) {\n    .chart-display {\n        height: 100%;\n        padding: 8px;\n        border-radius: 8px;\n    }\n    .empty-tip {\n        font-size: 0.95em;\n        padding: 10px 2px 6px 2px;\n    }\n    .empty-title {\n        font-size: 1.05em;\n    }\n    .empty-desc {\n        font-size: 0.95em;\n    }\n    .empty-svg svg {\n        width: 44px;\n        height: 44px;\n    }\n}\n</style>\n"],"mappings":";;EACKA,KAAK,EAAC;AAAe;;EAD1BC,GAAA;EAE2BD,KAAK,EAAC;;mBAFjC;;EAAAC,GAAA;EAOgBC,GAAG,EAAC,UAAU;EAACF,KAAK,EAAC;;;uBANrCG,mBAAA,CAOM,OAPNC,UAOM,G,CANUC,MAAA,CAAAC,SAAS,I,cAArBH,mBAAA,CAIM,OAJNI,UAIM,GAHFC,mBAAA,CAAuE;IAAlER,KAAK,EAAC,WAAW;IAACS,SAAyC,EAAjCC,IAAA,CAAAC,YAAY;0BAHnDC,UAAA,G,0BAIQJ,mBAAA,CAA4C;IAAvCR,KAAK,EAAC;EAAa,GAAC,eAAa,sB,0BACtCQ,mBAAA,CAA4J;IAAvJR,KAAK,EAAC;EAAY,IAL/Ba,gBAAA,CAKgC,6DAA2D,GAAAL,mBAAA,CAA+C;IAAzCR,KAAK,EAAC;EAAW,GAAC,kBAAgB,GALnIa,gBAAA,CAK0I,sBAAoB,E,yCAE1JV,mBAAA,CAAyD,OAAzDW,UAAyD,+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}