{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-type-panel\"\n};\nconst _hoisted_2 = [\"innerHTML\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.types, type => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: type,\n      class: \"sideBar-btn\",\n      innerHTML: $setup.renderButton(type),\n      onClick: $event => $setup.handleClick(type)\n    }, null, 8 /* PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$props","types","type","key","innerHTML","$setup","renderButton","onClick","$event","handleClick","_hoisted_2"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\newArchitecture\\frontend_vue_design\\src\\components\\chartIcons.vue"],"sourcesContent":["<template>\n    <div class=\"chart-type-panel\">\n        <button\n        v-for=\"type in types\"\n        :key=\"type\"\n        class=\"sideBar-btn\"\n        v-html=\"renderButton(type)\"\n        @click=\"handleClick(type)\"\n        ></button>\n    </div>\n</template>\n\n<script setup>\n/* eslint-disable */\n    import { chartTypes, chartIcons } from '../assets/JS/chartIcons.js'\n    import { defineProps, defineEmits } from 'vue'\n\n    const props = defineProps({\n        types: {\n            type: Array,\n            default: () => chartTypes\n        }\n    })\n\n    const emit = defineEmits(['select'])\n\n    function renderButton(type) {\n        const icon = chartIcons[type] || ''\n        return `${icon}<span class=\"label\">${type}</span>`\n    }\n\n    function handleClick(type) {\n        emit('select', type)\n    }\n</script>\n\n<style scoped>\n    .chart-type-panel {\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n    }\n    .sideBar-btn {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        background: transparent;\n        border: none;\n        font-size: 1rem;\n        font-weight: 600;\n        cursor: pointer;\n        color: var(--text-color);\n        padding: 6px 14px;\n        border-radius: 8px;\n        transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s;\n    }\n    .sideBar-btn:hover {\n        background-color: rgba(136, 133, 133, 0.1);\n        transform: translateY(-2px) scale(1.02);\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    }\n    .sideBar-btn svg {\n        width: 15px;\n        height: 15px;\n        fill: currentco;\n    }\n    .label {\n        white-space: nowrap;\n    }\n</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAkB;mBADjC;;uBACIC,mBAAA,CAQM,OARNC,UAQM,I,kBAPFD,mBAAA,CAMUE,SAAA,QARlBC,WAAA,CAGuBC,MAAA,CAAAC,KAAK,EAAbC,IAAI;yBADXN,mBAAA,CAMU;MAJTO,GAAG,EAAED,IAAI;MACVP,KAAK,EAAC,aAAa;MACnBS,SAA2B,EAAnBC,MAAA,CAAAC,YAAY,CAACJ,IAAI;MACxBK,OAAK,EAAAC,MAAA,IAAEH,MAAA,CAAAI,WAAW,CAACP,IAAI;4BAPhCQ,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}