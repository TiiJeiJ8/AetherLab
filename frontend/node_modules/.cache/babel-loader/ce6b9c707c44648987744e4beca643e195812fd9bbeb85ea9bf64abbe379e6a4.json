{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-config-panel\"\n};\nconst _hoisted_2 = {\n  class: \"panel-header-CCP\",\n  style: {\n    \"position\": \"relative\",\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"block-toggle-group\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = [\"innerHTML\"];\nconst _hoisted_7 = {\n  class: \"chart-type-name\"\n};\nconst _hoisted_8 = {\n  class: \"action-section\"\n};\nconst _hoisted_9 = [\"disabled\"];\nconst _hoisted_10 = {\n  key: 3,\n  class: \"error-message\"\n};\nconst _hoisted_11 = {\n  class: \"error-text\"\n};\nconst _hoisted_12 = {\n  class: \"tooltip-header\"\n};\nconst _hoisted_13 = {\n  class: \"tooltip-title\"\n};\nconst _hoisted_14 = {\n  class: \"tooltip-description\"\n};\nconst _hoisted_15 = {\n  class: \"tooltip-section\"\n};\nconst _hoisted_16 = {\n  class: \"tooltip-tags\"\n};\nconst _hoisted_17 = {\n  class: \"tooltip-section\"\n};\nconst _hoisted_18 = {\n  class: \"tooltip-tags\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 右侧边栏总标题 \"), _createElementVNode(\"div\", _hoisted_2, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", {\n    style: {\n      \"margin\": \"0\"\n    }\n  }, \" Chart Configuration \", -1 /* HOISTED */)), _createCommentVNode(\" 方块双作按钮自动渲染开关 \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"block-toggle\", {\n      'checked': $setup.autoRender\n    }]),\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.toggleAutoRender && _ctx.toggleAutoRender(...args))\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"block-toggle-slider\", {\n      'right': !$setup.autoRender\n    }])\n  }, null, 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"block-toggle-option left\", {\n      active: $setup.autoRender\n    }]),\n    onMouseenter: _cache[0] || (_cache[0] = $event => $setup.showToggleTooltip('Auto')),\n    onMouseleave: $setup.hideToggleTooltip\n  }, [_createElementVNode(\"span\", {\n    innerHTML: $setup.getThemeIcon('refresh')\n  }, null, 8 /* PROPS */, _hoisted_4)], 34 /* CLASS, NEED_HYDRATION */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"block-toggle-option right\", {\n      active: !$setup.autoRender\n    }]),\n    onMouseenter: _cache[1] || (_cache[1] = $event => $setup.showToggleTooltip('Manual')),\n    onMouseleave: $setup.hideToggleTooltip\n  }, [_createElementVNode(\"span\", {\n    innerHTML: $setup.getThemeIcon('eye')\n  }, null, 8 /* PROPS */, _hoisted_5)], 34 /* CLASS, NEED_HYDRATION */), $setup.toggleTooltip.visible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"toggle-tooltip\",\n    style: _normalizeStyle($setup.toggleTooltip.style)\n  }, _toDisplayString($setup.toggleTooltip.text), 5 /* TEXT, STYLE */)) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */)]), _createCommentVNode(\" 图表类型及相关提示 \"), _createElementVNode(\"div\", {\n    class: \"chart-type-tag\",\n    onMouseenter: _cache[3] || (_cache[3] = $event => $setup.showTooltip($event, $setup.props.selectedChartType)),\n    onMouseleave: $setup.hideTooltip,\n    style: {\n      \"position\": \"relative\",\n      \"max-width\": \"50%\",\n      \"white-space\": \"normal\",\n      \"word-break\": \"break-all\",\n      \"text-align\": \"right\",\n      \"right\": \"0\",\n      \"margin-right\": \"3%\"\n    }\n  }, [_createElementVNode(\"span\", {\n    class: \"chart-type-icon\",\n    innerHTML: $setup.getChartIcon($props.selectedChartType)\n  }, null, 8 /* PROPS */, _hoisted_6), _createElementVNode(\"span\", _hoisted_7, _toDisplayString($props.selectedChartType), 1 /* TEXT */)], 32 /* NEED_HYDRATION */)]), _createCommentVNode(\" 动态数据映射配置区域 \"), $setup.currentTypeConfig.mapping ? (_openBlock(), _createBlock($setup[\"ChartMappingConfig\"], {\n    key: 0,\n    mappingConfig: $setup.currentTypeConfig.mapping,\n    modelValue: $setup.chartConfig,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.chartConfig = $event)\n  }, null, 8 /* PROPS */, [\"mappingConfig\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 动态数据过滤配置区域 \"), $setup.currentTypeConfig.filter && $setup.currentTypeConfig.filter.length ? (_openBlock(), _createBlock($setup[\"ChartFilterConfig\"], {\n    key: 1,\n    filterConfig: $setup.currentTypeConfig.filter,\n    modelValue: $setup.chartConfig,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.chartConfig = $event)\n  }, null, 8 /* PROPS */, [\"filterConfig\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 动态高级配置区域 \"), $setup.currentTypeConfig.advanced && $setup.currentTypeConfig.advanced.length ? (_openBlock(), _createBlock($setup[\"ChartAdvancedConfig\"], {\n    key: 2,\n    advancedConfig: $setup.currentTypeConfig.advanced,\n    modelValue: $setup.chartConfig,\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.chartConfig = $event)\n  }, null, 8 /* PROPS */, [\"advancedConfig\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 操作按钮 \"), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    class: \"apply-btn\",\n    disabled: $setup.autoRender || !$setup.isConfigValid,\n    onClick: $setup.generateChart\n  }, \" Apply Configuration \", 8 /* PROPS */, _hoisted_9), _createElementVNode(\"button\", {\n    class: \"reset-btn\",\n    onClick: $setup.resetConfig\n  }, \" Reset Configuration \")]), _createCommentVNode(\" 错误提示 \"), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, _toDisplayString($setup.errorMessage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 提示框 \"), $setup.tooltip.visible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 4,\n    class: \"chart-tooltip\",\n    style: _normalizeStyle($setup.tooltip.style),\n    ref: \"tooltipRef\"\n  }, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"span\", _hoisted_13, _toDisplayString($setup.tooltip.type), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_14, _toDisplayString($setup.tooltip.description), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_15, [_cache[8] || (_cache[8] = _createElementVNode(\"h4\", null, \"Data Requirements\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tooltip.dataRequirements, requirement => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: requirement,\n      class: \"tooltip-tag data-tag\"\n    }, _toDisplayString(requirement), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_17, [_cache[9] || (_cache[9] = _createElementVNode(\"h4\", null, \"Use Cases\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_18, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tooltip.useCases, useCase => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: useCase,\n      class: \"tooltip-tag use-case-tag\"\n    }, _toDisplayString(useCase), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","style","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_normalizeClass","$setup","autoRender","onClick","_cache","args","_ctx","toggleAutoRender","active","onMouseenter","$event","showToggleTooltip","onMouseleave","hideToggleTooltip","innerHTML","getThemeIcon","_hoisted_4","_hoisted_5","toggleTooltip","visible","_normalizeStyle","text","showTooltip","props","selectedChartType","hideTooltip","getChartIcon","$props","_hoisted_6","_hoisted_7","_toDisplayString","currentTypeConfig","mapping","_createBlock","mappingConfig","modelValue","chartConfig","filter","length","filterConfig","advanced","advancedConfig","_hoisted_8","disabled","isConfigValid","generateChart","_hoisted_9","resetConfig","errorMessage","_hoisted_10","_hoisted_11","tooltip","ref","_hoisted_12","_hoisted_13","type","_hoisted_14","description","_hoisted_15","_hoisted_16","_Fragment","_renderList","dataRequirements","requirement","_hoisted_17","_hoisted_18","useCases","useCase"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\Chart\\ChartConfigPanel.vue"],"sourcesContent":["<template>\n<div class=\"chart-config-panel\">\n    <!-- 右侧边栏总标题 -->\n    <div class=\"panel-header-CCP\" style=\"position: relative; display: flex; align-items: center; justify-content: space-between;\">\n        <h3 style=\"margin: 0;\">\n            Chart Configuration\n        </h3>\n        <!-- 方块双作按钮自动渲染开关 -->\n        <div class=\"block-toggle-group\">\n            <div class=\"block-toggle\" :class=\"{ 'checked': autoRender }\" @click=\"toggleAutoRender\">\n                <div class=\"block-toggle-slider\" :class=\"{ 'right': !autoRender }\"></div>\n                <div class=\"block-toggle-option left\" :class=\"{ active: autoRender }\"\n                     @mouseenter=\"showToggleTooltip('Auto')\" @mouseleave=\"hideToggleTooltip\"\n                     >\n                    <span v-html=\"getThemeIcon('refresh')\"></span>\n                </div>\n                <div class=\"block-toggle-option right\" :class=\"{ active: !autoRender }\"\n                     @mouseenter=\"showToggleTooltip('Manual')\" @mouseleave=\"hideToggleTooltip\"\n                     >\n                    <span v-html=\"getThemeIcon('eye')\"></span>\n                </div>\n                <div v-if=\"toggleTooltip.visible\" class=\"toggle-tooltip\" :style=\"toggleTooltip.style\">\n                    {{ toggleTooltip.text }}\n                </div>\n            </div>\n        </div>\n        <!-- 图表类型及相关提示 -->\n        <div\n            class=\"chart-type-tag\"\n            @mouseenter=\"showTooltip($event, props.selectedChartType)\"\n            @mouseleave=\"hideTooltip\"\n            style=\"position: relative; max-width: 50%; white-space: normal; word-break: break-all; text-align: right; right: 0; margin-right: 3%;\"\n        >\n            <span class=\"chart-type-icon\" v-html=\"getChartIcon(selectedChartType)\"></span>\n            <span class=\"chart-type-name\">{{ selectedChartType }}</span>\n        </div>\n    </div>\n\n    <!-- 动态数据映射配置区域 -->\n    <ChartMappingConfig\n        v-if=\"currentTypeConfig.mapping\"\n        :mappingConfig=\"currentTypeConfig.mapping\"\n        v-model=\"chartConfig\"\n    />\n\n    <!-- 动态数据过滤配置区域 -->\n    <ChartFilterConfig\n        v-if=\"currentTypeConfig.filter && currentTypeConfig.filter.length\"\n        :filterConfig=\"currentTypeConfig.filter\"\n        v-model=\"chartConfig\"\n    />\n\n    <!-- 动态高级配置区域 -->\n    <ChartAdvancedConfig\n        v-if=\"currentTypeConfig.advanced && currentTypeConfig.advanced.length\"\n        :advancedConfig=\"currentTypeConfig.advanced\"\n        v-model=\"chartConfig\"\n    />\n\n    <!-- 操作按钮 -->\n    <div class=\"action-section\">\n        <button\n        class=\"apply-btn\"\n        :disabled=\"autoRender || !isConfigValid\"\n        @click=\"generateChart\"\n        >\n        Apply Configuration\n        </button>\n        <button class=\"reset-btn\" @click=\"resetConfig\">\n        Reset Configuration\n        </button>\n    </div>\n\n    <!-- 错误提示 -->\n    <div v-if=\"errorMessage\" class=\"error-message\">\n        <div class=\"error-text\">{{ errorMessage }}</div>\n    </div>\n\n    <!-- 提示框 -->\n    <div\n        v-if=\"tooltip.visible\"\n        class=\"chart-tooltip\"\n        :style=\"tooltip.style\"\n        ref=\"tooltipRef\"\n    >\n        <div class=\"tooltip-header\">\n            <span class=\"tooltip-title\">{{ tooltip.type }}</span>\n            <span class=\"tooltip-description\">{{ tooltip.description }}</span>\n        </div>\n        <div class=\"tooltip-section\">\n            <h4>Data Requirements</h4>\n            <div class=\"tooltip-tags\">\n                <span\n                    v-for=\"requirement in tooltip.dataRequirements\"\n                    :key=\"requirement\"\n                    class=\"tooltip-tag data-tag\"\n                >\n                    {{ requirement }}\n                </span>\n            </div>\n        </div>\n        <div class=\"tooltip-section\">\n            <h4>Use Cases</h4>\n            <div class=\"tooltip-tags\">\n                <span\n                    v-for=\"useCase in tooltip.useCases\"\n                    :key=\"useCase\"\n                    class=\"tooltip-tag use-case-tag\"\n                >\n                    {{ useCase }}\n                </span>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch, reactive, nextTick } from 'vue'\nimport { chartIcons } from '../../assets/JS/SVG/chartIcons.js'\nimport { chartsTooltipConfig } from '../../assets/JS/Config/ChartsTooltipConfig.js'\nimport { chartTypeConfig } from '../../assets/JS/Config/ChartTypeConfig.js'\nimport { getThemeIcon } from '@/assets/JS/SVG/icons.js'\nimport ChartMappingConfig from './ChartMappingConfig.vue'\nimport ChartFilterConfig from './ChartFilterConfig.vue'\nimport ChartAdvancedConfig from './ChartAdvancedConfig.vue'\n\n// 当前类型的配置\nconst currentTypeConfig = computed(() => {\n  // 兼容首字母大写/小写\n    return chartTypeConfig[props.selectedChartType] || chartTypeConfig[props.selectedChartType.charAt(0).toUpperCase() + props.selectedChartType.slice(1)] || {}\n})\n\n// Props\nconst props = defineProps({\n    selectedChartType: {\n        type: String,\n        default: 'line'\n    },\n    currentFile: {\n        type: Object,\n        default: null\n    }\n})\n\n// Emits\nconst emit = defineEmits(['config-change', 'generate-chart'])\n\n// 响应式数据\nconst showDataFilter = ref(false)\nconst showAdvancedConfig = ref(false)\nconst errorMessage = ref('')\nconst tooltipRef = ref(null)\n\n// 自动渲染开关\nconst autoRender = ref(true)\n\n// 切换按钮气泡提示\nconst toggleTooltip = ref({ visible: false, text: '', style: {} })\nfunction showToggleTooltip(type) {\n    toggleTooltip.value.text = type === 'Auto' ? 'Real-time Render' : 'Manual Render'\n    toggleTooltip.value.visible = true\n    // 动态定位气泡\n    setTimeout(() => {\n        const btn = document.querySelector('.block-toggle .block-toggle-option.' + (type === 'Auto' ? 'left' : 'right'))\n        if (btn) {\n            const rect = btn.getBoundingClientRect()\n            toggleTooltip.value.style = {\n                left: `${rect.left + rect.width / 2 - 50}px`,\n                top: `${rect.bottom + 6}px`,\n                position: 'fixed',\n                zIndex: 2000,\n                minWidth: '100px',\n                textAlign: 'center'\n            }\n        }\n    }, 0)\n}\nfunction hideToggleTooltip() {\n    toggleTooltip.value.visible = false\n}\n\n// 提示框状态\nconst tooltip = reactive({\n    visible: false,\n    type: '',\n    description: '',\n    dataRequirements: [],\n    useCases: [],\n    style: {}\n})\n\nlet tooltipTimeout = null\n\n// 拖拽状态\nconst isDragOver = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\nconst dragError = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\n// 图表配置\nconst chartConfig = ref({\n    xAxis: {\n        field: '',\n        type: ''\n    },\n    yAxis: {\n        field: '',\n        type: ''\n    },\n    series: [],\n    title: '',\n    colorScheme: 'default',\n    animation: true,\n    dataRange: 'all',\n    nullHandling: 'ignore'\n})\n\n// 计算属性\nconst isConfigValid = computed(() => {\n    const xValid = chartConfig.value.xAxis && chartConfig.value.xAxis.field;\n    const y = chartConfig.value.yAxis;\n    const yValid = Array.isArray(y) ? y.length > 0 : (y && y.field);\n    return xValid && yValid;\n})\n\n// 监听 chartConfig 变化，自动渲染\nwatch(chartConfig, (val) => {\n    if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n    console.log('Current chartConfig:', JSON.parse(JSON.stringify(val)))\n}, { deep: true })\n\n// 监听自动渲染开关变化，切换为实时时立即渲染\nwatch(autoRender, (val) => {\n    if (val && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n})\n\nfunction getChartIcon (type) {\n    // 直接使用传入的类型，chartIcons.js 中的键是首字母大写格式\n    return chartIcons[type] || ''\n}\n\nfunction toggleDataFilter() {\n    showDataFilter.value = !showDataFilter.value\n}\n\nfunction toggleAdvancedConfig() {\n    showAdvancedConfig.value = !showAdvancedConfig.value\n}\n\n// 显示提示框\nfunction showTooltip(event, type) {\n    // 清除之前的定时器\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n    }\n    \n    // 设置1.2秒延迟\n    tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type]\n        if (config) {\n            tooltip.type = type\n            tooltip.description = config.description\n            tooltip.dataRequirements = config.dataRequirements\n            tooltip.useCases = config.useCases\n            tooltip.visible = true\n            \n            // 在下一个tick中计算位置，确保DOM已更新\n            nextTick(() => {\n                positionTooltip(event)\n            })\n        }\n    }, 1200) // 1.2秒延迟\n}\n\n// 隐藏提示框\nfunction hideTooltip() {\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n        tooltipTimeout = null\n    }\n    tooltip.visible = false\n}\n\n// 计算提示框位置，确保不超出屏幕\nfunction positionTooltip(event) {\n    if (!tooltipRef.value) return\n    \n    const tooltipEl = tooltipRef.value\n    const rect = tooltipEl.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    \n    let left = event.pageX + 10\n    let top = event.pageY + 10\n    \n    // 防止右边超出屏幕\n    if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10\n    }\n    \n    // 防止底部超出屏幕\n    if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10\n    }\n    \n    // 防止左边超出屏幕\n    if (left < 0) {\n        left = 10\n    }\n    \n    // 防止顶部超出屏幕\n    if (top < 0) {\n        top = 10\n    }\n    \n    tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n    }\n}\n\n// 拖拽处理\nfunction handleDragEnter (target) {\n    isDragOver.value[target] = true\n    dragError.value[target] = false\n    }\n\nfunction handleDragLeave (target) {\n    isDragOver.value[target] = false\n}\n\nfunction handleDragOver (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = true\n}\n\nfunction handleDrop (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = false\n\n    try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'))\n\n        if (dragData.type === 'column') {\n        const column = dragData.column\n\n        // 验证数据类型是否适合目标区域\n        if (validateColumnForTarget(column, target)) {\n            mapColumnToTarget(column, target)\n            errorMessage.value = ''\n        } else {\n            dragError.value[target] = true\n            errorMessage.value = `Column \"${column.name}\" data type is not suitable for ${getTargetName(target)}`\n            setTimeout(() => {\n            dragError.value[target] = false\n            errorMessage.value = ''\n            }, 3000)\n        }\n        }\n    } catch (error) {\n        console.error('Drop failed:', error)\n        errorMessage.value = 'Drag and drop failed, please try again'\n    }\n}\n\nfunction validateColumnForTarget (column, target) {\n    const columnType = column.type\n\n    switch (target) {\n        case 'xAxis':\n        // X轴通常接受类别型数据\n        return ['string', 'category', 'date'].includes(columnType)\n        case 'yAxis':\n        // Y轴通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        case 'series':\n        // 系列数据通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        default:\n        return true\n    }\n}\n\nfunction mapColumnToTarget (column, target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'series':\n        // 系列可以有多个，但这里简化为单个\n        chartConfig.value.series = [{\n            field: column.name,\n            type: column.type\n        }]\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeMapping (target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = { field: '', type: '' }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = { field: '', type: '' }\n        break\n        case 'series':\n        chartConfig.value.series = []\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeSeriesMapping (index) {\n    chartConfig.value.series.splice(index, 1)\n    emit('config-change', chartConfig.value)\n}\n\nfunction getTargetName (target) {\n    const names = {\n        xAxis: 'X Axis',\n        yAxis: 'Y Axis',\n        series: 'Data Series'\n    }\n    return names[target] || target\n}\n\nfunction generateChart () {\n    if (!isConfigValid.value) {\n        errorMessage.value = 'Please complete the required data mapping configuration'\n        return\n    }\n\n    emit('generate-chart', chartConfig.value)\n}\n\nfunction resetConfig () {\n    chartConfig.value = {\n        xAxis: { field: '', type: '' },\n        yAxis: { field: '', type: '' },\n        series: [],\n        title: '',\n        colorScheme: 'default',\n        animation: true,\n        dataRange: 'all',\n        nullHandling: 'ignore'\n    }\n\n    errorMessage.value = ''\n    emit('config-change', chartConfig.value)\n}\n\n// 监听图表类型变化\nwatch(() => props.selectedChartType, (newType) => {\n    // 根据图表类型调整配置\n    if (newType === 'Pie' || newType === 'pie') {\n        // 饼图不需要Y轴\n        chartConfig.value.yAxis = { field: '', type: '' }\n    }\n})\n</script>\n\n<style scoped>\n\n@import '../../assets/CSS/ChartConfigPanel.css';\n\n.auto-render-toggle {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-right: 18px;\n}\n.toggle-label {\n    font-size: 0.98em;\n    font-weight: 500;\n    color: #bbb;\n    transition: color 0.3s;\n}\n.toggle-label.active {\n    color: #3b82f6;\n}\n.toggle-btn {\n    width: 48px;\n    height: 26px;\n    background: #e5e7eb;\n    border-radius: 16px;\n    border: none;\n    position: relative;\n    cursor: pointer;\n    outline: none;\n    transition: background 0.3s;\n    box-shadow: 0 2px 8px rgba(59,130,246,0.08);\n    padding: 0;\n    display: flex;\n    align-items: center;\n}\n.toggle-btn.checked {\n    background: linear-gradient(90deg, #3b82f6 60%, #06b6d4 100%);\n}\n.toggle-slider {\n    position: absolute;\n    left: 3px;\n    top: 3px;\n    width: 20px;\n    height: 20px;\n    background: #fff;\n    border-radius: 50%;\n    box-shadow: 0 1px 4px rgba(59,130,246,0.12);\n    transition: left 0.3s cubic-bezier(.4,2,.6,1), background 0.3s;\n}\n.toggle-btn.checked .toggle-slider {\n    left: 25px;\n    background: #fff;\n}\n\n.block-toggle-group {\n    display: flex;\n    align-items: center;\n    margin-right: 18px;\n}\n.block-toggle {\n    position: relative;\n    width: 74px;\n    height: 26px;\n    background: #f5f5f5;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    box-shadow: 0 1px 4px rgba(0,0,0,0.04);\n    transition: background 0.2s;\n    user-select: none;\n    border: 1px solid #e0e0e0;\n}\n.block-toggle.checked {\n    background: #f5f5f5;\n    border-color: #bdbdbd;\n}\n.block-toggle-option {\n    flex: 1;\n    text-align: center;\n    z-index: 2;\n    font-size: 0.93em;\n    font-weight: 500;\n    color: #888;\n    transition: color 0.2s, font-weight 0.2s;\n    padding: 0 1px;\n    line-height: 26px;\n    border-radius: 6px;\n    position: relative;\n    letter-spacing: 0.01em;\n}\n.block-toggle-option.active {\n    color: #222;\n    font-weight: 700;\n    background: #e0e0e0;\n}\n.block-toggle-slider {\n    position: absolute;\n    top: 1.5px;\n    left: 2px;\n    width: 32px;\n    height: 21px;\n    background: #e0e0e0;\n    border-radius: 5px;\n    box-shadow: 0 1px 4px rgba(0,0,0,0.06);\n    transition: left 0.18s cubic-bezier(.4,2,.6,1), background 0.2s;\n    z-index: 1;\n}\n.block-toggle-slider.right {\n    left: 40px;\n    background: #e0e0e0;\n}\n.block-toggle-option span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 1.1em;\n}\n.toggle-tooltip {\n    position: fixed;\n    background: #222;\n    color: #fff;\n    border-radius: 5px;\n    padding: 4px 12px;\n    font-size: 0.93em;\n    pointer-events: none;\n    box-shadow: 0 2px 8px rgba(0,0,0,0.13);\n    white-space: nowrap;\n    opacity: 0.97;\n    transition: opacity 0.18s;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}