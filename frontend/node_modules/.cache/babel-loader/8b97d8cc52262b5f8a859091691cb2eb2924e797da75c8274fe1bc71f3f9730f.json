{"ast":null,"code":"import { normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"progress-container\"\n};\nconst _hoisted_2 = {\n  class: \"progress-bar\"\n};\nconst _hoisted_3 = {\n  class: \"progress-text\"\n};\nconst _hoisted_4 = {\n  class: \"progress-percentage\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"progress-status\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.showProgress ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"progress-fill\", $setup.progressClass]),\n    style: _normalizeStyle({\n      width: $props.progress + '%'\n    })\n  }, null, 6 /* CLASS, STYLE */)]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString(Math.round($props.progress)) + \"%\", 1 /* TEXT */), $props.statusText ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString($props.statusText), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","$props","showProgress","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_normalizeClass","$setup","progressClass","style","_normalizeStyle","width","progress","_hoisted_3","_hoisted_4","_toDisplayString","Math","round","statusText","_hoisted_5","_createCommentVNode"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\newArchitecture\\frontend_vue_design\\src\\components\\ProgressBar.vue"],"sourcesContent":["<template>\n    <div class=\"progress-container\" v-if=\"showProgress\">\n        <div class=\"progress-bar\">\n            <div\n                class=\"progress-fill\"\n                :style=\"{ width: progress + '%' }\"\n                :class=\"progressClass\">\n            </div>\n        </div>\n        <div class=\"progress-text\">\n            <span class=\"progress-percentage\">{{ Math.round(progress) }}%</span>\n            <span class=\"progress-status\" v-if=\"statusText\">{{ statusText }}</span>\n        </div>\n    </div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { computed } from 'vue'\n\nconst props = defineProps({\n    progress: {\n        type: Number,\n        default: 0,\n        validator: (value) => value >= 0 && value <= 100\n    },\n    status: {\n        type: String,\n        default: 'uploading' // uploading, syncing, success, error\n    },\n    statusText: {\n        type: String,\n        default: ''\n    },\n    showProgress: {\n        type: Boolean,\n        default: true\n    }\n})\n\nconst progressClass = computed(() => {\n    return {\n        'progress-uploading': props.status === 'uploading',\n        'progress-syncing': props.status === 'syncing',\n        'progress-success': props.status === 'success',\n        'progress-error': props.status === 'error'\n    }\n})\n</script>\n\n<style scoped>\n.progress-container {\n    width: 100%;\n    margin: 8px 0;\n}\n\n.progress-bar {\n    width: 100%;\n    height: 6px;\n    background: #e5e7eb;\n    border-radius: 3px;\n    overflow: hidden;\n    position: relative;\n}\n\n.progress-fill {\n    height: 100%;\n    border-radius: 3px;\n    transition: width 0.3s ease, background-color 0.3s ease;\n    position: relative;\n}\n\n.progress-fill::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n        90deg,\n        transparent,\n        rgba(255, 255, 255, 0.3),\n        transparent\n    );\n    animation: shimmer 1.5s infinite;\n}\n\n.progress-uploading {\n    background: linear-gradient(90deg, #3b82f6, #1e40af);\n}\n\n.progress-syncing {\n    background: linear-gradient(90deg, #10b981, #059669);\n}\n\n.progress-success {\n    background: linear-gradient(90deg, #22c55e, #16a34a);\n}\n\n.progress-error {\n    background: linear-gradient(90deg, #ef4444, #dc2626);\n}\n\n.progress-text {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 4px;\n    font-size: 12px;\n}\n\n.progress-percentage {\n    font-weight: 600;\n    color: #374151;\n}\n\n.progress-status {\n    color: #6b7280;\n    font-size: 11px;\n}\n\n@keyframes shimmer {\n    0% {\n        transform: translateX(-100%);\n    }\n    100% {\n        transform: translateX(100%);\n    }\n}\n\n/* 响应式适配 */\n@media (max-width: 768px) {\n    .progress-bar {\n        height: 8px;\n    }\n    \n    .progress-text {\n        font-size: 11px;\n    }\n    \n    .progress-status {\n        font-size: 10px;\n    }\n}\n</style>\n"],"mappings":";;EAAAA,GAAA;EACSC,KAAK,EAAC;;;EACFA,KAAK,EAAC;AAAc;;EAOpBA,KAAK,EAAC;AAAe;;EAChBA,KAAK,EAAC;AAAqB;;EAV7CD,GAAA;EAWkBC,KAAK,EAAC;;;SAVkBC,MAAA,CAAAC,YAAY,I,cAAlDC,mBAAA,CAYM,OAZNC,UAYM,GAXFC,mBAAA,CAMM,OANNC,UAMM,GALFD,mBAAA,CAIM;IAHFL,KAAK,EAJrBO,eAAA,EAIsB,eAAe,EAEbC,MAAA,CAAAC,aAAa;IADpBC,KAAK,EALtBC,eAAA;MAAAC,KAAA,EAKiCX,MAAA,CAAAY,QAAQ;IAAA;oCAIjCR,mBAAA,CAGM,OAHNS,UAGM,GAFFT,mBAAA,CAAoE,QAApEU,UAAoE,EAAAC,gBAAA,CAA/BC,IAAI,CAACC,KAAK,CAACjB,MAAA,CAAAY,QAAQ,KAAI,GAAC,iBACzBZ,MAAA,CAAAkB,UAAU,I,cAA9ChB,mBAAA,CAAuE,QAAvEiB,UAAuE,EAAAJ,gBAAA,CAApBf,MAAA,CAAAkB,UAAU,oBAXzEE,mBAAA,e,OAAAA,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}