{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, computed } from 'vue';\nexport default {\n  __name: 'ChartFilterConfig',\n  props: {\n    // 传入当前已映射字段，格式：[{name, label, type, values?}]\n    mappedFields: {\n      type: Array,\n      default: () => []\n    }\n  },\n  emits: ['apply-filter'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n    const emit = __emit;\n    const filters = ref([]);\n    const logic = ref('AND');\n    const collapsed = ref(false);\n    const errorMsg = ref('');\n    const availableFields = computed(() => props.mappedFields);\n    function addFilter() {\n      filters.value.push({\n        id: Date.now() + Math.random(),\n        field: '',\n        operator: '',\n        value: '',\n        valueMin: '',\n        valueMax: '',\n        type: ''\n      });\n    }\n    function removeFilter(idx) {\n      filters.value.splice(idx, 1);\n    }\n    function getOperators(type) {\n      if (type === 'number') {\n        return [{\n          value: 'eq',\n          label: '='\n        }, {\n          value: 'ne',\n          label: '≠'\n        }, {\n          value: 'gt',\n          label: '>'\n        }, {\n          value: 'lt',\n          label: '<'\n        }, {\n          value: 'ge',\n          label: '≥'\n        }, {\n          value: 'le',\n          label: '≤'\n        }, {\n          value: 'range',\n          label: '区间'\n        }];\n      } else if (type === 'category') {\n        return [{\n          value: 'eq',\n          label: '='\n        }, {\n          value: 'ne',\n          label: '≠'\n        }, {\n          value: 'in',\n          label: '包含'\n        }];\n      } else {\n        return [{\n          value: 'eq',\n          label: '='\n        }, {\n          value: 'ne',\n          label: '≠'\n        }];\n      }\n    }\n    function getCategoryValues(field) {\n      const f = props.mappedFields.find(f => f.name === field);\n      return f && f.values ? f.values : [];\n    }\n    function onFieldChange(filter) {\n      const f = props.mappedFields.find(fld => fld.name === filter.field);\n      filter.type = f ? f.type : '';\n      filter.operator = '';\n      filter.value = '';\n      filter.valueMin = '';\n      filter.valueMax = '';\n    }\n    function validate() {\n      for (const f of filters.value) {\n        if (!f.field || !f.operator || f.operator !== 'range' && (f.value === '' || f.value === undefined)) {\n          errorMsg.value = '请完整填写所有筛选条件';\n          return false;\n        }\n        if (f.type === 'number' && f.operator === 'range' && (f.valueMin === '' || f.valueMax === '')) {\n          errorMsg.value = '区间筛选需填写最小值和最大值';\n          return false;\n        }\n      }\n      errorMsg.value = '';\n      return true;\n    }\n    function applyFilters() {\n      if (!validate()) return;\n      // 只传递原始参数，父组件负责转换为 ECharts filter 结构\n      emit('apply-filter', {\n        logic: logic.value,\n        filters: filters.value.map(f => ({\n          field: f.field,\n          operator: f.operator,\n          value: f.operator === 'range' ? [f.valueMin, f.valueMax] : f.value,\n          type: f.type\n        }))\n      });\n    }\n    const __returned__ = {\n      props,\n      emit,\n      filters,\n      logic,\n      collapsed,\n      errorMsg,\n      availableFields,\n      addFilter,\n      removeFilter,\n      getOperators,\n      getCategoryValues,\n      onFieldChange,\n      validate,\n      applyFilters,\n      ref,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","props","__props","emit","__emit","filters","logic","collapsed","errorMsg","availableFields","mappedFields","addFilter","value","push","id","Date","now","Math","random","field","operator","valueMin","valueMax","type","removeFilter","idx","splice","getOperators","label","getCategoryValues","f","find","name","values","onFieldChange","filter","fld","validate","undefined","applyFilters","map"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/Chart/ChartFilterConfig.vue"],"sourcesContent":["<template>\n  <div class=\"filter-panel\" :class=\"{ collapsed }\">\n    <div class=\"filter-panel-header\">\n      <span>Data Filtering</span>\n      <div class=\"logic-toggle\">\n        <label :class=\"{active: logic==='AND'}\" @click=\"logic='AND'\">AND</label>\n        <label :class=\"{active: logic==='OR'}\" @click=\"logic='OR'\">OR</label>\n      </div>\n      <button class=\"collapse-btn\" @click=\"collapsed=!collapsed\">{{ collapsed ? '▼' : '▲' }}</button>\n    </div>\n    <transition name=\"fade\">\n      <div v-show=\"!collapsed\">\n        <div v-for=\"(filter, idx) in filters\" :key=\"filter.id\" class=\"filter-row\">\n          <select v-model=\"filter.field\" @change=\"onFieldChange(filter)\">\n            <option value=\"\" disabled>字段</option>\n            <option v-for=\"f in availableFields\" :key=\"f.name\" :value=\"f.name\">{{ f.label || f.name }}</option>\n          </select>\n          <select v-model=\"filter.operator\">\n            <option v-for=\"op in getOperators(filter.type)\" :key=\"op.value\" :value=\"op.value\">{{ op.label }}</option>\n          </select>\n          <template v-if=\"filter.type==='number'\">\n            <input v-if=\"filter.operator!=='range'\" type=\"number\" v-model=\"filter.value\" placeholder=\"数值\" />\n            <span v-else>\n              <input type=\"number\" v-model=\"filter.valueMin\" placeholder=\"最小值\" style=\"width:60px;\" /> -\n              <input type=\"number\" v-model=\"filter.valueMax\" placeholder=\"最大值\" style=\"width:60px;\" />\n            </span>\n          </template>\n          <template v-else-if=\"filter.type==='category'\">\n            <select v-if=\"filter.operator==='in'\" v-model=\"filter.value\" multiple style=\"min-width:80px;\">\n              <option v-for=\"v in getCategoryValues(filter.field)\" :key=\"v\" :value=\"v\">{{ v }}</option>\n            </select>\n            <select v-else v-model=\"filter.value\">\n              <option v-for=\"v in getCategoryValues(filter.field)\" :key=\"v\" :value=\"v\">{{ v }}</option>\n            </select>\n          </template>\n          <input v-else v-model=\"filter.value\" placeholder=\"值\" />\n          <button class=\"remove-btn\" @click=\"removeFilter(idx)\">×</button>\n        </div>\n        <div class=\"filter-panel-actions\">\n          <button @click=\"addFilter\">+ 添加条件</button>\n          <button class=\"apply-btn\" @click=\"applyFilters\">应用</button>\n        </div>\n        <div v-if=\"errorMsg\" class=\"filter-error\">{{ errorMsg }}</div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, defineEmits, defineProps } from 'vue'\nconst props = defineProps({\n  // 传入当前已映射字段，格式：[{name, label, type, values?}]\n  mappedFields: { type: Array, default: () => [] }\n})\nconst emit = defineEmits(['apply-filter'])\n\nconst filters = ref([])\nconst logic = ref('AND')\nconst collapsed = ref(false)\nconst errorMsg = ref('')\n\nconst availableFields = computed(() => props.mappedFields)\n\nfunction addFilter() {\n  filters.value.push({\n    id: Date.now() + Math.random(),\n    field: '',\n    operator: '',\n    value: '',\n    valueMin: '',\n    valueMax: '',\n    type: ''\n  })\n}\nfunction removeFilter(idx) {\n  filters.value.splice(idx, 1)\n}\nfunction getOperators(type) {\n  if (type === 'number') {\n    return [\n      { value: 'eq', label: '=' },\n      { value: 'ne', label: '≠' },\n      { value: 'gt', label: '>' },\n      { value: 'lt', label: '<' },\n      { value: 'ge', label: '≥' },\n      { value: 'le', label: '≤' },\n      { value: 'range', label: '区间' }\n    ]\n  } else if (type === 'category') {\n    return [\n      { value: 'eq', label: '=' },\n      { value: 'ne', label: '≠' },\n      { value: 'in', label: '包含' }\n    ]\n  } else {\n    return [\n      { value: 'eq', label: '=' },\n      { value: 'ne', label: '≠' }\n    ]\n  }\n}\nfunction getCategoryValues(field) {\n  const f = props.mappedFields.find(f => f.name === field)\n  return f && f.values ? f.values : []\n}\nfunction onFieldChange(filter) {\n  const f = props.mappedFields.find(fld => fld.name === filter.field)\n  filter.type = f ? f.type : ''\n  filter.operator = ''\n  filter.value = ''\n  filter.valueMin = ''\n  filter.valueMax = ''\n}\nfunction validate() {\n  for (const f of filters.value) {\n    if (!f.field || !f.operator || (f.operator !== 'range' && (f.value === '' || f.value === undefined))) {\n      errorMsg.value = '请完整填写所有筛选条件'; return false\n    }\n    if (f.type === 'number' && f.operator === 'range' && (f.valueMin === '' || f.valueMax === '')) {\n      errorMsg.value = '区间筛选需填写最小值和最大值'; return false\n    }\n  }\n  errorMsg.value = ''\n  return true\n}\nfunction applyFilters() {\n  if (!validate()) return\n  // 只传递原始参数，父组件负责转换为 ECharts filter 结构\n  emit('apply-filter', {\n    logic: logic.value,\n    filters: filters.value.map(f => ({\n      field: f.field,\n      operator: f.operator,\n      value: f.operator === 'range' ? [f.valueMin, f.valueMax] : f.value,\n      type: f.type\n    }))\n  })\n}\n</script>\n\n<style scoped>\n.filter-panel {\n  border: 1px solid #e0e0e0;\n  border-radius: 6px;\n  background: #fafbfc;\n  padding: 10px 12px 8px 12px;\n  margin-bottom: 12px;\n  min-width: 260px;\n  max-width: 420px;\n  font-size: 14px;\n}\n.filter-panel.collapsed { min-height: 0; max-height: 36px; overflow: hidden; padding-bottom: 0; }\n.filter-panel-header {\n  display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px;\n}\n.logic-toggle label {\n  margin: 0 4px; padding: 2px 10px; border-radius: 4px; cursor: pointer; background: #f3f3f3; color: #666;\n}\n.logic-toggle label.active { background: #409EFF; color: #fff; }\n.collapse-btn { background: none; border: none; color: #888; cursor: pointer; font-size: 1.1em; margin-left: 8px; }\n.filter-row {\n  display: flex; align-items: center; gap: 8px; margin-bottom: 6px; background: #fff; border-radius: 5px; padding: 6px 4px;\n  box-shadow: 0 1px 2px rgba(0,0,0,0.03);\n}\n.filter-row select, .filter-row input {\n  font-size: 13px; padding: 2px 6px; border-radius: 4px; border: 1px solid #ccc;\n}\n.remove-btn { background: none; border: none; color: #c72d4e; font-size: 1.2em; cursor: pointer; margin-left: 2px; }\n.filter-panel-actions { display: flex; gap: 12px; margin-top: 10px; }\n.apply-btn { background: #409EFF; color: #fff; border: none; border-radius: 4px; padding: 4px 18px; cursor: pointer; }\n.filter-error { color: #c72d4e; margin-top: 6px; font-size: 13px; }\n.fade-enter-active, .fade-leave-active { transition: opacity 0.18s; }\n.fade-enter-from, .fade-leave-to { opacity: 0; }\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}