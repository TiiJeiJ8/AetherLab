{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  width: \"150\",\n  height: \"120\",\n  viewBox: \"0 0 120 80\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  class: \"empty-radar-svg\"\n};\nconst _hoisted_2 = [\"points\"];\nconst _hoisted_3 = [\"x2\", \"y2\"];\nconst _hoisted_4 = [\"points\"];\nconst _hoisted_5 = [\"cx\", \"cy\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"svg\", _hoisted_1, [_createElementVNode(\"g\", null, [_createCommentVNode(\" 多层蛛网环 \"), (_openBlock(), _createElementBlock(_Fragment, null, _renderList([1, 0.75, 0.5, 0.25], (r, idx) => {\n    return _createElementVNode(\"polygon\", {\n      key: 'grid' + idx,\n      points: $setup.getPolygonPoints(r),\n      class: \"radar-web\",\n      style: _normalizeStyle({\n        opacity: 0.08 + 0.08 * idx\n      })\n    }, null, 12 /* STYLE, PROPS */, _hoisted_2);\n  }), 64 /* STABLE_FRAGMENT */)), _createCommentVNode(\" 蛛丝径向线动画 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.base, (p, i) => {\n    return _openBlock(), _createElementBlock(\"line\", {\n      key: 'line' + i,\n      x1: \"60\",\n      y1: \"48\",\n      x2: p[0],\n      y2: p[1],\n      class: \"radar-silk\",\n      style: _normalizeStyle({\n        animationDelay: i * 0.22 + 's'\n      })\n    }, null, 12 /* STYLE, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 区域和端点淡入 \"), _createElementVNode(\"polygon\", {\n    class: \"radar-area\",\n    points: $setup.animatedPoints\n  }, null, 8 /* PROPS */, _hoisted_4), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.areaPoints, (p, i) => {\n    return _openBlock(), _createElementBlock(\"circle\", {\n      key: 'dot' + i,\n      cx: p[0],\n      cy: p[1],\n      r: \"3\",\n      class: \"radar-dot\"\n    }, null, 8 /* PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["width","height","viewBox","fill","xmlns","class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_Fragment","_renderList","r","idx","key","points","$setup","getPolygonPoints","style","_normalizeStyle","opacity","_hoisted_2","base","p","i","x1","y1","x2","y2","animationDelay","_hoisted_3","animatedPoints","_hoisted_4","areaPoints","cx","cy","_hoisted_5"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\svg\\RadarChartIcon.vue"],"sourcesContent":["<template>\n<svg width=\"150\" height=\"120\" viewBox=\"0 0 120 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"empty-radar-svg\">\n  <g>\n    <!-- 多层蛛网环 -->\n    <polygon v-for=\"(r,idx) in [1,0.75,0.5,0.25]\" :key=\"'grid'+idx\" :points=\"getPolygonPoints(r)\" class=\"radar-web\" :style=\"{opacity: 0.08 + 0.08*idx}\" />\n    <!-- 蛛丝径向线动画 -->\n    <line v-for=\"(p,i) in base\" :key=\"'line'+i\" x1=\"60\" y1=\"48\" :x2=\"p[0]\" :y2=\"p[1]\" class=\"radar-silk\" :style=\"{animationDelay: (i*0.22)+'s'}\" />\n    <!-- 区域和端点淡入 -->\n    <polygon class=\"radar-area\" :points=\"animatedPoints\" />\n    <circle v-for=\"(p,i) in areaPoints\" :key=\"'dot'+i\" :cx=\"p[0]\" :cy=\"p[1]\" r=\"3\" class=\"radar-dot\" />\n  </g>\n</svg>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue'\n// 雷达五边形顶点\nconst base = Array.from({length:5}, (_,i) => {\n  const angle = -Math.PI/2 + i*2*Math.PI/5\n  return [60 + 40*Math.cos(angle), 48 + 28*Math.sin(angle)]\n})\nconst center = [60, 48]\nconst t = ref(0)\nlet dir = 1, animId = null\nconst duration = 1800\nconst min = 0.18, max = 1\nconst areaPoints = computed(() => base.map(([x, y]) => [\n  center[0] + (x - center[0]) * (min + (max - min) * t.value),\n  center[1] + (y - center[1]) * (min + (max - min) * t.value)\n]))\nconst animatedPoints = computed(() => areaPoints.value.map(p => p.join(\",\")).join(\" \"))\nfunction getPolygonPoints(ratio) {\n  return base.map(([x, y]) => [\n    center[0] + (x - center[0]) * ratio,\n    center[1] + (y - center[1]) * ratio\n  ].join(\",\")).join(\" \")\n}\nfunction animateRadar(ts) {\n  if (!animateRadar.last) animateRadar.last = ts\n  const dt = ts - animateRadar.last\n  animateRadar.last = ts\n  t.value += dir * dt / duration\n  if (t.value > 1) t.value = 1\n  if (t.value < 0) t.value = 0\n  if ((dir === 1 && t.value >= 1) || (dir === -1 && t.value <= 0)) {\n    setTimeout(() => {\n      dir *= -1\n      animateRadar.last = undefined\n      animId = requestAnimationFrame(animateRadar)\n    }, 320)\n    return\n  }\n  animId = requestAnimationFrame(animateRadar)\n}\nonMounted(() => { t.value = 0; dir = 1; animId = requestAnimationFrame(animateRadar) })\nonBeforeUnmount(() => { if (animId) cancelAnimationFrame(animId) })\n</script>\n\n<style scoped>\n.empty-radar-svg { display: block; margin: 0 auto; animation: floatX 4.2s ease-in-out infinite; }\n.radar-web {\n  fill: none;\n  stroke: #A0C4FF;\n  stroke-width: 1.1;\n  transition: opacity 0.3s;\n}\n.radar-silk {\n  stroke: #4F8EF7;\n  stroke-width: 2.2;\n  stroke-dasharray: 36;\n  stroke-dashoffset: 36;\n  opacity: 0.85;\n  animation: silk-grow 1.1s cubic-bezier(.4,1.6,.6,1) forwards;\n}\n@keyframes silk-grow {\n  0% { stroke-dashoffset: 36; opacity: 0.18; }\n  18% { stroke-dashoffset: 0; opacity: 1; }\n  100% { stroke-dashoffset: 0; opacity: 1; }\n}\n.radar-area {\n  fill: #4F8EF7;\n  opacity: 0;\n  filter: drop-shadow(0 2px 6px #4f8ef72a);\n  animation: area-fadein 0.7s 1.2s cubic-bezier(.4,1.6,.6,1) forwards;\n}\n.radar-dot {\n  fill: #FFB300;\n  opacity: 0;\n  transition: opacity 0.4s;\n  animation: dot-fadein 0.7s 1.2s cubic-bezier(.4,1.6,.6,1) forwards;\n}\n@keyframes area-fadein {\n  0% { opacity: 0; }\n  100% { opacity: 0.3; }\n}\n@keyframes dot-fadein {\n  0% { opacity: 0; }\n  100% { opacity: 0.7; }\n}\n@keyframes floatX {\n    0% { transform: translateY(0) translateX(0); }\n    25% { transform: translateY(-8px) translateX(4px); }\n    50% { transform: translateY(-12px) translateX(-4px); }\n    75% { transform: translateY(-8px) translateX(4px); }\n    100% { transform: translateY(0) translateX(0); }\n}\n</style>\n"],"mappings":";;EACKA,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC,KAAK;EAACC,OAAO,EAAC,YAAY;EAACC,IAAI,EAAC,MAAM;EAACC,KAAK,EAAC,4BAA4B;EAACC,KAAK,EAAC;;mBADxG;mBAAA;mBAAA;mBAAA;;uBACAC,mBAAA,CAUM,OAVNC,UAUM,GATJC,mBAAA,CAQI,YAPFC,mBAAA,WAAc,G,cACdH,mBAAA,CAAsJI,SAAA,QAJ1JC,WAAA,CAI+B,oBAAiB,EAJhD,CAIqBC,CAAC,EAACC,GAAG;WAAtBL,mBAAA,CAAsJ;MAAvGM,GAAG,WAASD,GAAG;MAAGE,MAAM,EAAEC,MAAA,CAAAC,gBAAgB,CAACL,CAAC;MAAGP,KAAK,EAAC,WAAW;MAAEa,KAAK,EAJ1HC,eAAA;QAAAC,OAAA,gBAIkJP;MAAG;oCAJrJQ,UAAA;kCAKIZ,mBAAA,aAAgB,G,kBAChBH,mBAAA,CAA+II,SAAA,QANnJC,WAAA,CAM0BK,MAAA,CAAAM,IAAI,EAN9B,CAMkBC,CAAC,EAACC,CAAC;yBAAjBlB,mBAAA,CAA+I;MAAlHQ,GAAG,WAASU,CAAC;MAAEC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAAEC,EAAE,EAAEJ,CAAC;MAAMK,EAAE,EAAEL,CAAC;MAAKlB,KAAK,EAAC,YAAY;MAAEa,KAAK,EAN/GC,eAAA;QAAAU,cAAA,EAMmIL,CAAC;MAAA;oCANpIM,UAAA;kCAOIrB,mBAAA,aAAgB,EAChBD,mBAAA,CAAuD;IAA9CH,KAAK,EAAC,YAAY;IAAEU,MAAM,EAAEC,MAAA,CAAAe;0BARzCC,UAAA,I,kBASI1B,mBAAA,CAAmGI,SAAA,QATvGC,WAAA,CAS4BK,MAAA,CAAAiB,UAAU,EATtC,CASoBV,CAAC,EAACC,CAAC;yBAAnBlB,mBAAA,CAAmG;MAA9DQ,GAAG,UAAQU,CAAC;MAAGU,EAAE,EAAEX,CAAC;MAAMY,EAAE,EAAEZ,CAAC;MAAKX,CAAC,EAAC,GAAG;MAACP,KAAK,EAAC;4BATzF+B,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}