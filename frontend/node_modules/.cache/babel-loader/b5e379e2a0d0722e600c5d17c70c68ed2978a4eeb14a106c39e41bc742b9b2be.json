{"ast":null,"code":"// API 服务模块\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000';\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器\napi.interceptors.request.use(config => {\n  console.log('发送请求:', config);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 响应拦截器\napi.interceptors.response.use(response => {\n  console.log('收到响应:', response);\n  return response;\n}, error => {\n  console.error('请求错误:', error);\n  return Promise.reject(error);\n});\n\n// 文件上传服务\nexport const fileService = {\n  // 上传文件\n  async uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        timeout: 60000 // 文件上传可能需要更长时间\n      });\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.detail || '文件上传失败');\n    }\n  },\n  // 获取文件列表\n  async getFiles() {\n    try {\n      const response = await api.get('/api/files');\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.detail || '获取文件列表失败');\n    }\n  },\n  // 预览文件数据\n  async previewFile(fileId, rows = 10) {\n    try {\n      const response = await api.get(`/api/files/${fileId}/preview?rows=${rows}`);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.detail || '预览文件失败');\n    }\n  }\n};\n\n// 图表服务\nexport const chartService = {\n  // 保存图表配置\n  async saveChart(chartData) {\n    try {\n      const response = await api.post('/api/charts', chartData);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.detail || '保存图表失败');\n    }\n  },\n  // 获取图表列表\n  async getCharts() {\n    try {\n      const response = await api.get('/api/charts');\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.detail || '获取图表列表失败');\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","console","log","error","Promise","reject","response","fileService","uploadFile","file","formData","FormData","append","post","data","Error","detail","getFiles","get","previewFile","fileId","rows","chartService","saveChart","chartData","getCharts"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/services/api.js"],"sourcesContent":["// API 服务模块\nimport axios from 'axios'\n\nconst API_BASE_URL = 'http://localhost:8000'\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\n// 请求拦截器\napi.interceptors.request.use(\n  config => {\n    console.log('发送请求:', config)\n    return config\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\napi.interceptors.response.use(\n  response => {\n    console.log('收到响应:', response)\n    return response\n  },\n  error => {\n    console.error('请求错误:', error)\n    return Promise.reject(error)\n  }\n)\n\n// 文件上传服务\nexport const fileService = {\n  // 上传文件\n  async uploadFile(file) {\n    const formData = new FormData()\n    formData.append('file', file)\n    \n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        timeout: 60000 // 文件上传可能需要更长时间\n      })\n      return response.data\n    } catch (error) {\n      throw new Error(error.response?.data?.detail || '文件上传失败')\n    }\n  },\n\n  // 获取文件列表\n  async getFiles() {\n    try {\n      const response = await api.get('/api/files')\n      return response.data\n    } catch (error) {\n      throw new Error(error.response?.data?.detail || '获取文件列表失败')\n    }\n  },\n\n  // 预览文件数据\n  async previewFile(fileId, rows = 10) {\n    try {\n      const response = await api.get(`/api/files/${fileId}/preview?rows=${rows}`)\n      return response.data\n    } catch (error) {\n      throw new Error(error.response?.data?.detail || '预览文件失败')\n    }\n  }\n}\n\n// 图表服务\nexport const chartService = {\n  // 保存图表配置\n  async saveChart(chartData) {\n    try {\n      const response = await api.post('/api/charts', chartData)\n      return response.data\n    } catch (error) {\n      throw new Error(error.response?.data?.detail || '保存图表失败')\n    }\n  },\n\n  // 获取图表列表\n  async getCharts() {\n    try {\n      const response = await api.get('/api/charts')\n      return response.data\n    } catch (error) {\n      throw new Error(error.response?.data?.detail || '获取图表列表失败')\n    }\n  }\n}\n\nexport default api\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}