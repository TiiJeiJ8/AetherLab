{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/* eslint-disable */\n\nimport { readonly } from \"vue\";\n\n/**\n * 平行坐标系图高级配置项：\n * 线条宽度 LineWidth\n * 副标题 subtext\n * 线条平滑性 isSmooth\n */\n\n// 平行坐标系图配置生成器\nexport default function parallelOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  // 默认配置项\n  const lineWidth = customOption.lineWidth || 2;\n  const isSmooth = customOption.isSmooth || false;\n  const subtext = customOption.subtext || '';\n\n  // 维度自动识别（排除name字段）\n  const dimensions = Object.keys(seriesData[0] || {}).filter(key => key !== 'name');\n\n  // 构造parallelAxis\n  const parallelAxis = dimensions.map((dim, idx) => ({\n    dim: idx,\n    name: dim\n  }));\n\n  // 按name分组\n  const groupMap = {};\n  seriesData.forEach(item => {\n    const group = item.name || 'default';\n    if (!groupMap[group]) groupMap[group] = [];\n    groupMap[group].push(dimensions.map(dim => item[dim]));\n  });\n\n  // 构造series\n  const series = Object.entries(groupMap).map(([name, data]) => ({\n    name,\n    type: 'parallel',\n    lineStyle: {\n      width: lineWidth\n    },\n    smooth: isSmooth,\n    data\n  }));\n\n  // 返回ECharts配置\n  return {\n    title: {\n      text: customOption.title || '平行坐标系图',\n      subtext: subtext\n    },\n    tooltip: {\n      trigger: 'item'\n    },\n    parallelAxis,\n    parallel: {\n      left: '5%',\n      right: '13%',\n      bottom: '10%',\n      top: '15%'\n    },\n    series,\n    ...customOption.extraOption // 允许额外自定义\n  };\n}","map":{"version":3,"names":["readonly","parallelOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","lineWidth","isSmooth","subtext","dimensions","Object","keys","filter","key","parallelAxis","map","dim","idx","name","groupMap","forEach","item","group","push","series","entries","data","type","lineStyle","width","smooth","title","text","tooltip","trigger","parallel","left","right","bottom","top","extraOption"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/chartOptions/parallel.js"],"sourcesContent":["/* eslint-disable */\n\nimport { readonly } from \"vue\";\n\n/**\n * 平行坐标系图高级配置项：\n * 线条宽度 LineWidth\n * 副标题 subtext\n * 线条平滑性 isSmooth\n */\n\n// 平行坐标系图配置生成器\nexport default function parallelOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  // 默认配置项\n  const lineWidth = customOption.lineWidth || 2;\n  const isSmooth = customOption.isSmooth || false;\n  const subtext = customOption.subtext || '';\n\n  // 维度自动识别（排除name字段）\n  const dimensions = Object.keys(seriesData[0] || {}).filter(key => key !== 'name');\n\n  // 构造parallelAxis\n  const parallelAxis = dimensions.map((dim, idx) => ({\n    dim: idx,\n    name: dim\n  }));\n\n  // 按name分组\n  const groupMap = {};\n  seriesData.forEach(item => {\n    const group = item.name || 'default';\n    if (!groupMap[group]) groupMap[group] = [];\n    groupMap[group].push(dimensions.map(dim => item[dim]));\n  });\n\n  // 构造series\n  const series = Object.entries(groupMap).map(([name, data]) => ({\n    name,\n    type: 'parallel',\n    lineStyle: {\n      width: lineWidth\n    },\n    smooth: isSmooth,\n    data\n  }));\n\n  // 返回ECharts配置\n  return {\n    title: {\n      text: customOption.title || '平行坐标系图',\n      subtext: subtext\n    },\n    tooltip: {\n      trigger: 'item'\n    },\n    parallelAxis,\n    parallel: {\n      left: '5%',\n      right: '13%',\n      bottom: '10%',\n      top: '15%'\n    },\n    series,\n    ...customOption.extraOption // 允许额外自定义\n  };\n}"],"mappings":";;;;;AAAA;;AAEA,SAASA,QAAQ,QAAQ,KAAK;;AAE9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,SAASC,cAAcA,CAACC,MAAM,EAAEC,WAAW,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,YAAY,GAAG,CAAC,CAAC,EAAE;EAC7H;EACA,MAAMC,SAAS,GAAGD,YAAY,CAACC,SAAS,IAAI,CAAC;EAC7C,MAAMC,QAAQ,GAAGF,YAAY,CAACE,QAAQ,IAAI,KAAK;EAC/C,MAAMC,OAAO,GAAGH,YAAY,CAACG,OAAO,IAAI,EAAE;;EAE1C;EACA,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACP,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAACQ,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAK,MAAM,CAAC;;EAEjF;EACA,MAAMC,YAAY,GAAGL,UAAU,CAACM,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,MAAM;IACjDD,GAAG,EAAEC,GAAG;IACRC,IAAI,EAAEF;EACR,CAAC,CAAC,CAAC;;EAEH;EACA,MAAMG,QAAQ,GAAG,CAAC,CAAC;EACnBf,UAAU,CAACgB,OAAO,CAACC,IAAI,IAAI;IACzB,MAAMC,KAAK,GAAGD,IAAI,CAACH,IAAI,IAAI,SAAS;IACpC,IAAI,CAACC,QAAQ,CAACG,KAAK,CAAC,EAAEH,QAAQ,CAACG,KAAK,CAAC,GAAG,EAAE;IAC1CH,QAAQ,CAACG,KAAK,CAAC,CAACC,IAAI,CAACd,UAAU,CAACM,GAAG,CAACC,GAAG,IAAIK,IAAI,CAACL,GAAG,CAAC,CAAC,CAAC;EACxD,CAAC,CAAC;;EAEF;EACA,MAAMQ,MAAM,GAAGd,MAAM,CAACe,OAAO,CAACN,QAAQ,CAAC,CAACJ,GAAG,CAAC,CAAC,CAACG,IAAI,EAAEQ,IAAI,CAAC,MAAM;IAC7DR,IAAI;IACJS,IAAI,EAAE,UAAU;IAChBC,SAAS,EAAE;MACTC,KAAK,EAAEvB;IACT,CAAC;IACDwB,MAAM,EAAEvB,QAAQ;IAChBmB;EACF,CAAC,CAAC,CAAC;;EAEH;EACA,OAAO;IACLK,KAAK,EAAE;MACLC,IAAI,EAAE3B,YAAY,CAAC0B,KAAK,IAAI,QAAQ;MACpCvB,OAAO,EAAEA;IACX,CAAC;IACDyB,OAAO,EAAE;MACPC,OAAO,EAAE;IACX,CAAC;IACDpB,YAAY;IACZqB,QAAQ,EAAE;MACRC,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE,KAAK;MACZC,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE;IACP,CAAC;IACDf,MAAM;IACN,GAAGnB,YAAY,CAACmC,WAAW,CAAC;EAC9B,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}