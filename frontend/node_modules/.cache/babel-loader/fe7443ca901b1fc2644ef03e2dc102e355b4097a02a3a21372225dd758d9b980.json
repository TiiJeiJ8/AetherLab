{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderSlot as _renderSlot, vShow as _vShow, withModifiers as _withModifiers, withDirectives as _withDirectives, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"SidebarToggleBtn\",\n  style: {\n    \"font-size\": \"auto\"\n  }\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"aside\", {\n    class: _normalizeClass(['sidebar', _ctx.positionClass, {\n      collapsed: _ctx.isCollapsed,\n      expanded: _ctx.isExpanded\n    }]),\n    style: _normalizeStyle({\n      width: _ctx.sidebarWidth + 'px'\n    }),\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.toggleCollapse && _ctx.toggleCollapse(...args)),\n    onMouseenter: _cache[2] || (_cache[2] = (...args) => _ctx.handleMouseEnter && _ctx.handleMouseEnter(...args)),\n    onMouseleave: _cache[3] || (_cache[3] = (...args) => _ctx.handleMouseLeave && _ctx.handleMouseLeave(...args))\n  }, [_createCommentVNode(\" 切换按钮图标 \"), _createElementVNode(\"span\", _hoisted_1, _toDisplayString(_ctx.isCollapsed ? 'III' : '☰'), 1 /* TEXT */), _createCommentVNode(\" 内容区域过渡动画 \"), _createVNode(_Transition, {\n    name: \"fade-slide\",\n    persisted: \"\"\n  }, {\n    default: _withCtx(() => [_withDirectives(_createElementVNode(\"div\", {\n      class: \"sidebar-content\",\n      onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"]))\n    }, [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true)], 512 /* NEED_PATCH */), [[_vShow, _ctx.isExpanded || !_ctx.isCollapsed]])]),\n    _: 3 /* FORWARDED */\n  })], 38 /* CLASS, STYLE, NEED_HYDRATION */);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_normalizeClass","_ctx","positionClass","isCollapsed","expanded","isExpanded","_normalizeStyle","width","sidebarWidth","onClick","_cache","args","toggleCollapse","onMouseenter","handleMouseEnter","onMouseleave","handleMouseLeave","_createCommentVNode","_createElementVNode","_hoisted_1","_toDisplayString","_createVNode","_Transition","name","persisted","default","_withCtx","_withModifiers","_renderSlot","$slots","undefined","_"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\newArchitecture\\frontend_vue_design\\src\\components\\SideBar.vue"],"sourcesContent":["<template>\n    <aside\n        :class=\"[\n            'sidebar',\n            positionClass,\n            { collapsed: isCollapsed, expanded: isExpanded }\n        ]\"\n        :style=\"{ width: sidebarWidth + 'px' }\"\n        @click=\"toggleCollapse\"\n        @mouseenter=\"handleMouseEnter\"\n        @mouseleave=\"handleMouseLeave\"\n    >\n        <!-- 切换按钮图标 -->\n        <span class=\"SidebarToggleBtn\" style=\"font-size: auto;\">\n            {{ isCollapsed ? 'III' : '☰' }}\n        </span>\n        <!-- 内容区域过渡动画 -->\n        <transition name=\"fade-slide\">\n            <div\n                v-show=\"isExpanded || !isCollapsed\"\n                class=\"sidebar-content\"\n                @click.stop\n            >\n                <slot />\n            </div>\n        </transition>\n    </aside>\n</template>\n\n<script setup>\n/* eslint-disable */\n    import { ref, computed, onUnmounted } from 'vue'\n\n    const props = defineProps({\n        position: {\n            type: String,\n            default: 'left',\n            validator: v => ['left', 'right'].includes(v),\n        },\n        collapsedWidth: {\n            type: Number,\n            default: 40,\n        },\n        expandedWidth: {\n            type: Number,\n            default: 200,\n        },\n        autoCollapseOnMobile: {\n            type: Boolean,\n            default: true,\n        },\n        mobileWidth: {\n            type: Number,\n            default: 32,\n        }\n    })\n\n    const isCollapsed = ref(true)\n    const isHovered = ref(false)\n    const isFixed = ref(false)\n\n    const isMobile = ref(window.innerWidth < 768)\n    function onResize() {\n        isMobile.value = window.innerWidth < 768\n        if (props.autoCollapseOnMobile && isMobile.value) {\n            isCollapsed.value = true\n        }\n    }\n    window.addEventListener('resize', onResize)\n\n    function handleMouseEnter() {\n        if (!isFixed.value) {\n            isHovered.value = true\n        }\n    }\n    function handleMouseLeave() {\n        isHovered.value = false\n    }\n\n    const isExpanded = computed(() => !isCollapsed.value || isHovered.value)\n\n    // 动态宽度，配合动画\n    const sidebarWidth = computed(() =>\n        {isExpanded.value ? props.expandedWidth : props.collapsedWidth\n    )\n\n    function toggleCollapse() {\n        isCollapsed.value = !isCollapsed.value\n    }\n\n    const positionClass = computed(() => {\n        return props.position === 'left' ? 'sidebar-left' : 'sidebar-right'\n    })\n\n    onUnmounted(() => {\n        window.removeEventListener('resize', onResize)\n    })\n</script>\n    \n<style scoped>\n.sidebar {\n    position: fixed;\n    top: 100px;\n    bottom: 30px;\n    background-color: var(--bg-color);\n    box-shadow: 0 0 1px var(--text-color);\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    z-index: 9998;\n    user-select: none;\n    cursor: pointer;\n    transition: width 0.4s cubic-bezier(.4,2,.6,1), box-shadow 0.3s, background-color 0.3s;\n}\n\n.sidebar-left {\n    left: 0;\n    border-radius: 0 10px 10px 0;\n}\n\n.sidebar-right {\n    right: 0;\n    border-radius: 10px 0 0 10px;\n}\n\n/* 图标按钮 */\n.SidebarToggleBtn {\n    font-size: 1.2rem;\n    padding: 8px;\n    margin: 6px;\n    align-self: flex-end;\n    pointer-events: none;\n    user-select: none;\n    color: var(--text-color);\n}\n\n/* 内容区域 */\n.sidebar-content {\n    flex: 1;\n    overflow-y: auto;\n    overflow-x: hidden;\n    padding: 12px 16px;\n    color: var(--text-color);\n    pointer-events: auto;\n    cursor: default;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n.sidebar-content::-webkit-scrollbar {\n    width: 8px;\n    background: transparent;\n}\n\n/* 进入/离开动画 */\n.fade-slide-enter-active,\n.fade-slide-leave-active {\n    transition: all 0.3s ease;\n}\n.fade-slide-enter-from,\n.fade-slide-leave-to {\n    opacity: 0;\n    transform: translateY(-10px);\n}\n\n/* 小屏自动折叠 */\n@media (max-width: 767px) {\n    .sidebar {\n        top: 80px;\n        width: var(--collapsed-width) !important;\n        height: 30%;\n    }\n}\n</style>\n"],"mappings":";;EAacA,KAAK,EAAC,kBAAkB;EAACC,KAAwB,EAAxB;IAAA;EAAA;;;uBAZnCC,mBAAA,CAyBQ;IAxBHF,KAAK,EAFdG,eAAA,E,WAEqDC,IAAA,CAAAC,aAAa,E;iBAA2BD,IAAA,CAAAE,WAAW;MAAAC,QAAA,EAAYH,IAAA,CAAAI;IAAU,E;IAKrHP,KAAK,EAPdQ,eAAA;MAAAC,KAAA,EAOyBN,IAAA,CAAAO,YAAY;IAAA;IAC5BC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEV,IAAA,CAAAW,cAAA,IAAAX,IAAA,CAAAW,cAAA,IAAAD,IAAA,CAAc;IACrBE,YAAU,EAAAH,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEV,IAAA,CAAAa,gBAAA,IAAAb,IAAA,CAAAa,gBAAA,IAAAH,IAAA,CAAgB;IAC5BI,YAAU,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEV,IAAA,CAAAe,gBAAA,IAAAf,IAAA,CAAAe,gBAAA,IAAAL,IAAA,CAAgB;MAE7BM,mBAAA,YAAe,EACfC,mBAAA,CAEO,QAFPC,UAEO,EAAAC,gBAAA,CADAnB,IAAA,CAAAE,WAAW,gCAElBc,mBAAA,cAAiB,EACjBI,YAAA,CAQaC,WAAA;IARDC,IAAI,EAAC,YAAY;IAA7BC,SAQa,EARb;;IAjBRC,OAAA,EAAAC,QAAA,CAkBY,MAMM,C,gBANNR,mBAAA,CAMM;MAJFrB,KAAK,EAAC,iBAAiB;MACtBY,OAAK,EAAAC,MAAA,QAAAA,MAAA,MArBtBiB,cAAA,CAqBgB,QAAW;QAEXC,WAAA,CAAQ3B,IAAA,CAAA4B,MAAA,iBAAAC,SAAA,Q,mCAJA7B,IAAA,CAAAI,UAAU,KAAKJ,IAAA,CAAAE,WAAW,E;IAnBlD4B,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}