{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/* eslint-disable */\nimport { ref, computed } from 'vue';\n\n// 数据预览相关\nconst showDataPreview = ref(false);\nconst currentDataFile = ref(null);\nconst previewData = ref([]);\n\n// 全局文件数据结构优化\n// workspaceFiles: [{ name, id, size, status, parsedData: [...] }, ...]\nexport const workspaceFiles = ref([]);\n// 构建文件名到数据的映射，自动将 headers+data 组装成对象数组，便于多文件查找\nexport const fileDataMap = computed(() => {\n  const map = {};\n  workspaceFiles.value.forEach(file => {\n    if (file.data && file.headers) {\n      const rows = file.data;\n      if (Array.isArray(rows) && Array.isArray(file.headers)) {\n        map[file.name] = rows.map(row => Object.fromEntries(file.headers.map((h, i) => [h, row[i]])));\n      }\n    }\n  });\n  console.log('[fileDataMap computed]', map);\n  return map;\n});","map":{"version":3,"names":["ref","computed","showDataPreview","currentDataFile","previewData","workspaceFiles","fileDataMap","map","value","forEach","file","data","headers","rows","Array","isArray","name","row","Object","fromEntries","h","i","console","log"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/utils/dataStructureOptimize.js"],"sourcesContent":["/* eslint-disable */\nimport { ref, computed } from 'vue'\n\n// 数据预览相关\nconst showDataPreview = ref(false)\nconst currentDataFile = ref(null)\nconst previewData = ref([])\n\n// 全局文件数据结构优化\n// workspaceFiles: [{ name, id, size, status, parsedData: [...] }, ...]\nexport const workspaceFiles = ref([])\n// 构建文件名到数据的映射，自动将 headers+data 组装成对象数组，便于多文件查找\nexport const fileDataMap = computed(() => {\n    const map = {}\n    workspaceFiles.value.forEach(file => {\n        if (file.data && file.headers) {\n            const rows = file.data\n            if (Array.isArray(rows) && Array.isArray(file.headers)) {\n                map[file.name] = rows.map(row =>\n                    Object.fromEntries(file.headers.map((h, i) => [h, row[i]]))\n                )\n            }\n        }\n    })\n    console.log('[fileDataMap computed]', map)\n    return map\n})"],"mappings":";;;AAAA;AACA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;;AAEnC;AACA,MAAMC,eAAe,GAAGF,GAAG,CAAC,KAAK,CAAC;AAClC,MAAMG,eAAe,GAAGH,GAAG,CAAC,IAAI,CAAC;AACjC,MAAMI,WAAW,GAAGJ,GAAG,CAAC,EAAE,CAAC;;AAE3B;AACA;AACA,OAAO,MAAMK,cAAc,GAAGL,GAAG,CAAC,EAAE,CAAC;AACrC;AACA,OAAO,MAAMM,WAAW,GAAGL,QAAQ,CAAC,MAAM;EACtC,MAAMM,GAAG,GAAG,CAAC,CAAC;EACdF,cAAc,CAACG,KAAK,CAACC,OAAO,CAACC,IAAI,IAAI;IACjC,IAAIA,IAAI,CAACC,IAAI,IAAID,IAAI,CAACE,OAAO,EAAE;MAC3B,MAAMC,IAAI,GAAGH,IAAI,CAACC,IAAI;MACtB,IAAIG,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IAAIC,KAAK,CAACC,OAAO,CAACL,IAAI,CAACE,OAAO,CAAC,EAAE;QACpDL,GAAG,CAACG,IAAI,CAACM,IAAI,CAAC,GAAGH,IAAI,CAACN,GAAG,CAACU,GAAG,IACzBC,MAAM,CAACC,WAAW,CAACT,IAAI,CAACE,OAAO,CAACL,GAAG,CAAC,CAACa,CAAC,EAAEC,CAAC,KAAK,CAACD,CAAC,EAAEH,GAAG,CAACI,CAAC,CAAC,CAAC,CAAC,CAC9D,CAAC;MACL;IACJ;EACJ,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEhB,GAAG,CAAC;EAC1C,OAAOA,GAAG;AACd,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}