{"ast":null,"code":"import { ref, computed, watch } from 'vue';\n\n// Props\n\nexport default {\n  __name: 'ChartConfigPanel',\n  props: {\n    selectedChartType: {\n      type: String,\n      default: 'bar'\n    },\n    currentFile: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['config-change', 'generate-chart'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 响应式数据\n    const showDataFilter = ref(false);\n    const showAdvancedConfig = ref(false);\n    const errorMessage = ref('');\n\n    // 拖拽状态\n    const isDragOver = ref({\n      xAxis: false,\n      yAxis: false,\n      series: false\n    });\n    const dragError = ref({\n      xAxis: false,\n      yAxis: false,\n      series: false\n    });\n\n    // 图表配置\n    const chartConfig = ref({\n      xAxis: {\n        field: '',\n        type: ''\n      },\n      yAxis: {\n        field: '',\n        type: ''\n      },\n      series: [],\n      title: '',\n      colorScheme: 'default',\n      animation: true,\n      dataRange: 'all',\n      nullHandling: 'ignore'\n    });\n\n    // 计算属性\n    const isConfigValid = computed(() => {\n      return chartConfig.value.xAxis.field && (chartConfig.value.yAxis.field || chartConfig.value.series.length > 0);\n    });\n\n    // 图表类型映射\n    const chartTypeMap = {\n      line: {\n        name: '折线图',\n        icon: `<svg viewBox=\"0 0 24 24\" class=\"chart-icon-svg\"><polyline points=\"4,16 8,12 12,14 16,8 20,10\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"/></svg>`\n      },\n      bar: {\n        name: '柱状图',\n        icon: `<svg viewBox=\"0 0 24 24\" class=\"chart-icon-svg\"><rect x=\"4\" y=\"10\" width=\"2\" height=\"10\" fill=\"currentColor\"/><rect x=\"9\" y=\"6\" width=\"2\" height=\"14\" fill=\"currentColor\"/><rect x=\"14\" y=\"2\" width=\"2\" height=\"18\" fill=\"currentColor\"/><rect x=\"19\" y=\"8\" width=\"2\" height=\"12\" fill=\"currentColor\"/></svg>`\n      },\n      pie: {\n        name: '饼图',\n        icon: `<svg viewBox=\"0 0 24 24\" class=\"chart-icon-svg\"><circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"/><path d=\"M12 2 A10 10 0 0 1 22 12 L12 12 Z\" fill=\"currentColor\"/></svg>`\n      },\n      scatter: {\n        name: '散点图',\n        icon: `<svg viewBox=\"0 0 24 24\" class=\"chart-icon-svg\"><circle cx=\"6\" cy=\"18\" r=\"2\" fill=\"currentColor\"/><circle cx=\"10\" cy=\"10\" r=\"2\" fill=\"currentColor\"/><circle cx=\"15\" cy=\"6\" r=\"2\" fill=\"currentColor\"/><circle cx=\"19\" cy=\"14\" r=\"2\" fill=\"currentColor\"/></svg>`\n      },\n      area: {\n        name: '面积图',\n        icon: `<svg viewBox=\"0 0 24 24\" class=\"chart-icon-svg\"><polyline points=\"4,16 8,12 12,14 16,8 20,10\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"/><polygon points=\"4,16 8,12 12,14 16,8 20,10 20,20 4,20\" fill=\"currentColor\" opacity=\"0.3\"/></svg>`\n      },\n      radar: {\n        name: '雷达图',\n        icon: `<svg viewBox=\"0 0 24 24\" class=\"chart-icon-svg\"><polygon points=\"12,4 20,8 17,20 7,20 4,8\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"/><circle cx=\"12\" cy=\"12\" r=\"2\" fill=\"currentColor\"/></svg>`\n      },\n      heatmap: {\n        name: '热力图',\n        icon: `<svg viewBox=\"0 0 24 24\" class=\"chart-icon-svg\"><rect x=\"3\" y=\"3\" width=\"6\" height=\"6\" fill=\"currentColor\"/><rect x=\"9\" y=\"3\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.6\"/><rect x=\"15\" y=\"3\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.3\"/><rect x=\"3\" y=\"9\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.8\"/><rect x=\"9\" y=\"9\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.5\"/><rect x=\"15\" y=\"9\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.2\"/><rect x=\"3\" y=\"15\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.4\"/><rect x=\"9\" y=\"15\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.7\"/><rect x=\"15\" y=\"15\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.9\"/></svg>`\n      }\n    };\n\n    // 方法\n    function getChartTypeName(type) {\n      return chartTypeMap[type]?.name || type;\n    }\n    function getChartIcon(type) {\n      return chartTypeMap[type]?.icon || chartTypeMap.bar.icon;\n    }\n    function toggleDataFilter() {\n      showDataFilter.value = !showDataFilter.value;\n    }\n    function toggleAdvancedConfig() {\n      showAdvancedConfig.value = !showAdvancedConfig.value;\n    }\n\n    // 拖拽处理\n    function handleDragEnter(target) {\n      isDragOver.value[target] = true;\n      dragError.value[target] = false;\n    }\n    function handleDragLeave(target) {\n      isDragOver.value[target] = false;\n    }\n    function handleDragOver(event, target) {\n      event.preventDefault();\n      isDragOver.value[target] = true;\n    }\n    function handleDrop(event, target) {\n      event.preventDefault();\n      isDragOver.value[target] = false;\n      try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'));\n        if (dragData.type === 'column') {\n          const column = dragData.column;\n\n          // 验证数据类型是否适合目标区域\n          if (validateColumnForTarget(column, target)) {\n            mapColumnToTarget(column, target);\n            errorMessage.value = '';\n          } else {\n            dragError.value[target] = true;\n            errorMessage.value = `列 \"${column.name}\" 的数据类型不适合 ${getTargetName(target)}`;\n            setTimeout(() => {\n              dragError.value[target] = false;\n              errorMessage.value = '';\n            }, 3000);\n          }\n        }\n      } catch (error) {\n        console.error('Drop failed:', error);\n        errorMessage.value = '拖拽失败，请重试';\n      }\n    }\n    function validateColumnForTarget(column, target) {\n      const columnType = column.type;\n      switch (target) {\n        case 'xAxis':\n          // X轴通常接受类别型数据\n          return ['string', 'category', 'date'].includes(columnType);\n        case 'yAxis':\n          // Y轴通常接受数值型数据\n          return ['number', 'integer'].includes(columnType);\n        case 'series':\n          // 系列数据通常接受数值型数据\n          return ['number', 'integer'].includes(columnType);\n        default:\n          return true;\n      }\n    }\n    function mapColumnToTarget(column, target) {\n      switch (target) {\n        case 'xAxis':\n          chartConfig.value.xAxis = {\n            field: column.name,\n            type: column.type\n          };\n          break;\n        case 'yAxis':\n          chartConfig.value.yAxis = {\n            field: column.name,\n            type: column.type\n          };\n          break;\n        case 'series':\n          // 系列可以有多个，但这里简化为单个\n          chartConfig.value.series = [{\n            field: column.name,\n            type: column.type\n          }];\n          break;\n      }\n      emit('config-change', chartConfig.value);\n    }\n    function removeMapping(target) {\n      switch (target) {\n        case 'xAxis':\n          chartConfig.value.xAxis = {\n            field: '',\n            type: ''\n          };\n          break;\n        case 'yAxis':\n          chartConfig.value.yAxis = {\n            field: '',\n            type: ''\n          };\n          break;\n        case 'series':\n          chartConfig.value.series = [];\n          break;\n      }\n      emit('config-change', chartConfig.value);\n    }\n    function removeSeriesMapping(index) {\n      chartConfig.value.series.splice(index, 1);\n      emit('config-change', chartConfig.value);\n    }\n    function getTargetName(target) {\n      const names = {\n        xAxis: 'X轴',\n        yAxis: 'Y轴',\n        series: '数据系列'\n      };\n      return names[target] || target;\n    }\n    function generateChart() {\n      if (!isConfigValid.value) {\n        errorMessage.value = '请完成必要的数据映射配置';\n        return;\n      }\n      emit('generate-chart', chartConfig.value);\n    }\n    function resetConfig() {\n      chartConfig.value = {\n        xAxis: {\n          field: '',\n          type: ''\n        },\n        yAxis: {\n          field: '',\n          type: ''\n        },\n        series: [],\n        title: '',\n        colorScheme: 'default',\n        animation: true,\n        dataRange: 'all',\n        nullHandling: 'ignore'\n      };\n      errorMessage.value = '';\n      emit('config-change', chartConfig.value);\n    }\n\n    // 监听图表类型变化\n    watch(() => props.selectedChartType, newType => {\n      // 根据图表类型调整配置\n      if (newType === 'pie') {\n        // 饼图不需要Y轴\n        chartConfig.value.yAxis = {\n          field: '',\n          type: ''\n        };\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      showDataFilter,\n      showAdvancedConfig,\n      errorMessage,\n      isDragOver,\n      dragError,\n      chartConfig,\n      isConfigValid,\n      chartTypeMap,\n      getChartTypeName,\n      getChartIcon,\n      toggleDataFilter,\n      toggleAdvancedConfig,\n      handleDragEnter,\n      handleDragLeave,\n      handleDragOver,\n      handleDrop,\n      validateColumnForTarget,\n      mapColumnToTarget,\n      removeMapping,\n      removeSeriesMapping,\n      getTargetName,\n      generateChart,\n      resetConfig,\n      ref,\n      computed,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","props","__props","emit","__emit","showDataFilter","showAdvancedConfig","errorMessage","isDragOver","xAxis","yAxis","series","dragError","chartConfig","field","type","title","colorScheme","animation","dataRange","nullHandling","isConfigValid","value","length","chartTypeMap","line","name","icon","bar","pie","scatter","area","radar","heatmap","getChartTypeName","getChartIcon","toggleDataFilter","toggleAdvancedConfig","handleDragEnter","target","handleDragLeave","handleDragOver","event","preventDefault","handleDrop","dragData","JSON","parse","dataTransfer","getData","column","validateColumnForTarget","mapColumnToTarget","getTargetName","setTimeout","error","console","columnType","includes","removeMapping","removeSeriesMapping","index","splice","names","generateChart","resetConfig","selectedChartType","newType"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/ChartConfigPanel.vue"],"sourcesContent":["<template>\n  <div class=\"chart-config-panel\">\n    <!-- 右侧边栏总标题 -->\n    <div class=\"panel-header\">\n      <h3>图表配置</h3>\n    </div>\n\n    <!-- 数据映射配置区域 -->\n    <div class=\"mapping-section\">\n      <div class=\"mapping-section-header\">\n        <h4>数据映射配置</h4>\n        <div class=\"chart-type-tag\">\n          <span class=\"chart-type-icon\" v-html=\"getChartIcon(selectedChartType)\"></span>\n          <span class=\"chart-type-name\">{{ getChartTypeName(selectedChartType) }}</span>\n        </div>\n      </div>\n\n      <!-- X轴配置 -->\n      <div class=\"mapping-item\">\n        <div class=\"mapping-item-header\">\n          <label class=\"mapping-label\">X轴</label>\n          <div class=\"mapping-type-tag\">category</div>\n        </div>\n        <div\n          class=\"drop-zone\"\n          :class=\"{\n            'drop-zone-active': isDragOver.xAxis,\n            'drop-zone-filled': chartConfig.xAxis.field,\n            'drop-zone-error': dragError.xAxis\n          }\"\n          @drop=\"handleDrop($event, 'xAxis')\"\n          @dragover.prevent=\"handleDragOver($event, 'xAxis')\"\n          @dragenter.prevent=\"handleDragEnter('xAxis')\"\n          @dragleave.prevent=\"handleDragLeave('xAxis')\"\n        >\n          <div v-if=\"!chartConfig.xAxis.field\" class=\"drop-placeholder\">\n            <div class=\"drop-icon\">↓</div>\n            <span class=\"drop-text\">拖拽列到此处</span>\n          </div>\n          <div v-else class=\"mapped-field\">\n            <div class=\"field-info\">\n              <span class=\"field-name\">{{ chartConfig.xAxis.field }}</span>\n              <span class=\"field-type\">{{ chartConfig.xAxis.type }}</span>\n            </div>\n            <button class=\"remove-btn\" @click=\"removeMapping('xAxis')\">×</button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Y轴配置 -->\n      <div class=\"mapping-item\">\n        <div class=\"mapping-item-header\">\n          <label class=\"mapping-label\">Y轴</label>\n          <div class=\"mapping-type-tag\">value</div>\n        </div>\n        <div\n          class=\"drop-zone\"\n          :class=\"{\n            'drop-zone-active': isDragOver.yAxis,\n            'drop-zone-filled': chartConfig.yAxis.field,\n            'drop-zone-error': dragError.yAxis\n          }\"\n          @drop=\"handleDrop($event, 'yAxis')\"\n          @dragover.prevent=\"handleDragOver($event, 'yAxis')\"\n          @dragenter.prevent=\"handleDragEnter('yAxis')\"\n          @dragleave.prevent=\"handleDragLeave('yAxis')\"\n        >\n          <div v-if=\"!chartConfig.yAxis.field\" class=\"drop-placeholder\">\n            <div class=\"drop-icon\">↓</div>\n            <span class=\"drop-text\">拖拽列到此处</span>\n          </div>\n          <div v-else class=\"mapped-field\">\n            <div class=\"field-info\">\n              <span class=\"field-name\">{{ chartConfig.yAxis.field }}</span>\n              <span class=\"field-type\">{{ chartConfig.yAxis.type }}</span>\n            </div>\n            <button class=\"remove-btn\" @click=\"removeMapping('yAxis')\">×</button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 数据系列配置 -->\n      <div class=\"mapping-item\">\n        <div class=\"mapping-item-header\">\n          <label class=\"mapping-label\">数据系列</label>\n          <div class=\"mapping-type-tag\">value</div>\n        </div>\n        <div\n          class=\"drop-zone\"\n          :class=\"{\n            'drop-zone-active': isDragOver.series,\n            'drop-zone-filled': chartConfig.series.length > 0,\n            'drop-zone-error': dragError.series\n          }\"\n          @drop=\"handleDrop($event, 'series')\"\n          @dragover.prevent=\"handleDragOver($event, 'series')\"\n          @dragenter.prevent=\"handleDragEnter('series')\"\n          @dragleave.prevent=\"handleDragLeave('series')\"\n        >\n          <div v-if=\"chartConfig.series.length === 0\" class=\"drop-placeholder\">\n            <div class=\"drop-icon\">↓</div>\n            <span class=\"drop-text\">拖拽列到此处</span>\n          </div>\n          <div v-else class=\"mapped-series\">\n            <div\n              v-for=\"(serie, index) in chartConfig.series\"\n              :key=\"index\"\n              class=\"mapped-field\"\n            >\n              <div class=\"field-info\">\n                <span class=\"field-name\">{{ serie.field }}</span>\n                <span class=\"field-type\">{{ serie.type }}</span>\n              </div>\n              <button class=\"remove-btn\" @click=\"removeSeriesMapping(index)\">×</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 数据过滤 -->\n    <div class=\"filter-section\">\n      <div class=\"section-header\" @click=\"toggleDataFilter\">\n        <h4>数据过滤</h4>\n        <div class=\"toggle-icon\" :class=\"{ 'toggle-open': showDataFilter }\">▼</div>\n      </div>\n      <div v-if=\"showDataFilter\" class=\"section-content\">\n        <div class=\"filter-item\">\n          <label>数据范围</label>\n          <select v-model=\"chartConfig.dataRange\">\n            <option value=\"all\">全部数据</option>\n            <option value=\"first100\">前100行</option>\n            <option value=\"last100\">后100行</option>\n            <option value=\"sample\">随机采样</option>\n          </select>\n        </div>\n        <div class=\"filter-item\">\n          <label>空值处理</label>\n          <select v-model=\"chartConfig.nullHandling\">\n            <option value=\"ignore\">忽略空值</option>\n            <option value=\"zero\">替换为0</option>\n            <option value=\"interpolate\">线性插值</option>\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <!-- 高级配置 -->\n    <div class=\"advanced-section\">\n      <div class=\"section-header\" @click=\"toggleAdvancedConfig\">\n        <h4>高级配置</h4>\n        <div class=\"toggle-icon\" :class=\"{ 'toggle-open': showAdvancedConfig }\">▼</div>\n      </div>\n      <div v-if=\"showAdvancedConfig\" class=\"section-content\">\n        <div class=\"config-item\">\n          <label>图表标题</label>\n          <input v-model=\"chartConfig.title\" placeholder=\"输入图表标题\">\n        </div>\n        <div class=\"config-item\">\n          <label>颜色主题</label>\n          <select v-model=\"chartConfig.colorScheme\">\n            <option value=\"default\">默认</option>\n            <option value=\"blue\">蓝色系</option>\n            <option value=\"green\">绿色系</option>\n            <option value=\"warm\">暖色系</option>\n            <option value=\"cool\">冷色系</option>\n          </select>\n        </div>\n        <div class=\"config-item\">\n          <label>动画效果</label>\n          <input type=\"checkbox\" v-model=\"chartConfig.animation\">\n        </div>\n      </div>\n    </div>\n\n    <!-- 操作按钮 -->\n    <div class=\"action-section\">\n      <button\n        class=\"apply-btn\"\n        :disabled=\"!isConfigValid\"\n        @click=\"generateChart\"\n      >\n        应用配置\n      </button>\n      <button class=\"reset-btn\" @click=\"resetConfig\">\n        清空配置\n      </button>\n    </div>\n\n    <!-- 错误提示 -->\n    <div v-if=\"errorMessage\" class=\"error-message\">\n      {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch } from 'vue'\n\n// Props\nconst props = defineProps({\n  selectedChartType: {\n    type: String,\n    default: 'bar'\n  },\n  currentFile: {\n    type: Object,\n    default: null\n  }\n})\n\n// Emits\nconst emit = defineEmits(['config-change', 'generate-chart'])\n\n// 响应式数据\nconst showDataFilter = ref(false)\nconst showAdvancedConfig = ref(false)\nconst errorMessage = ref('')\n\n// 拖拽状态\nconst isDragOver = ref({\n  xAxis: false,\n  yAxis: false,\n  series: false\n})\n\nconst dragError = ref({\n  xAxis: false,\n  yAxis: false,\n  series: false\n})\n\n// 图表配置\nconst chartConfig = ref({\n  xAxis: {\n    field: '',\n    type: ''\n  },\n  yAxis: {\n    field: '',\n    type: ''\n  },\n  series: [],\n  title: '',\n  colorScheme: 'default',\n  animation: true,\n  dataRange: 'all',\n  nullHandling: 'ignore'\n})\n\n// 计算属性\nconst isConfigValid = computed(() => {\n  return chartConfig.value.xAxis.field &&\n         (chartConfig.value.yAxis.field || chartConfig.value.series.length > 0)\n})\n\n// 图表类型映射\nconst chartTypeMap = {\n  line: { \n    name: '折线图', \n    icon: `<svg viewBox=\"0 0 24 24\" class=\"chart-icon-svg\"><polyline points=\"4,16 8,12 12,14 16,8 20,10\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"/></svg>`\n  },\n  bar: { \n    name: '柱状图', \n    icon: `<svg viewBox=\"0 0 24 24\" class=\"chart-icon-svg\"><rect x=\"4\" y=\"10\" width=\"2\" height=\"10\" fill=\"currentColor\"/><rect x=\"9\" y=\"6\" width=\"2\" height=\"14\" fill=\"currentColor\"/><rect x=\"14\" y=\"2\" width=\"2\" height=\"18\" fill=\"currentColor\"/><rect x=\"19\" y=\"8\" width=\"2\" height=\"12\" fill=\"currentColor\"/></svg>`\n  },\n  pie: { \n    name: '饼图', \n    icon: `<svg viewBox=\"0 0 24 24\" class=\"chart-icon-svg\"><circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"/><path d=\"M12 2 A10 10 0 0 1 22 12 L12 12 Z\" fill=\"currentColor\"/></svg>`\n  },\n  scatter: { \n    name: '散点图', \n    icon: `<svg viewBox=\"0 0 24 24\" class=\"chart-icon-svg\"><circle cx=\"6\" cy=\"18\" r=\"2\" fill=\"currentColor\"/><circle cx=\"10\" cy=\"10\" r=\"2\" fill=\"currentColor\"/><circle cx=\"15\" cy=\"6\" r=\"2\" fill=\"currentColor\"/><circle cx=\"19\" cy=\"14\" r=\"2\" fill=\"currentColor\"/></svg>`\n  },\n  area: { \n    name: '面积图', \n    icon: `<svg viewBox=\"0 0 24 24\" class=\"chart-icon-svg\"><polyline points=\"4,16 8,12 12,14 16,8 20,10\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\"/><polygon points=\"4,16 8,12 12,14 16,8 20,10 20,20 4,20\" fill=\"currentColor\" opacity=\"0.3\"/></svg>`\n  },\n  radar: { \n    name: '雷达图', \n    icon: `<svg viewBox=\"0 0 24 24\" class=\"chart-icon-svg\"><polygon points=\"12,4 20,8 17,20 7,20 4,8\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"/><circle cx=\"12\" cy=\"12\" r=\"2\" fill=\"currentColor\"/></svg>`\n  },\n  heatmap: { \n    name: '热力图', \n    icon: `<svg viewBox=\"0 0 24 24\" class=\"chart-icon-svg\"><rect x=\"3\" y=\"3\" width=\"6\" height=\"6\" fill=\"currentColor\"/><rect x=\"9\" y=\"3\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.6\"/><rect x=\"15\" y=\"3\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.3\"/><rect x=\"3\" y=\"9\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.8\"/><rect x=\"9\" y=\"9\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.5\"/><rect x=\"15\" y=\"9\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.2\"/><rect x=\"3\" y=\"15\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.4\"/><rect x=\"9\" y=\"15\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.7\"/><rect x=\"15\" y=\"15\" width=\"6\" height=\"6\" fill=\"currentColor\" opacity=\"0.9\"/></svg>`\n  }\n}\n\n// 方法\nfunction getChartTypeName (type) {\n  return chartTypeMap[type]?.name || type\n}\n\nfunction getChartIcon (type) {\n  return chartTypeMap[type]?.icon || chartTypeMap.bar.icon\n}\n\nfunction toggleDataFilter() {\n  showDataFilter.value = !showDataFilter.value\n}\n\nfunction toggleAdvancedConfig() {\n  showAdvancedConfig.value = !showAdvancedConfig.value\n}\n\n// 拖拽处理\nfunction handleDragEnter (target) {\n  isDragOver.value[target] = true\n  dragError.value[target] = false\n}\n\nfunction handleDragLeave (target) {\n  isDragOver.value[target] = false\n}\n\nfunction handleDragOver (event, target) {\n  event.preventDefault()\n  isDragOver.value[target] = true\n}\n\nfunction handleDrop (event, target) {\n  event.preventDefault()\n  isDragOver.value[target] = false\n\n  try {\n    const dragData = JSON.parse(event.dataTransfer.getData('text/plain'))\n\n    if (dragData.type === 'column') {\n      const column = dragData.column\n\n      // 验证数据类型是否适合目标区域\n      if (validateColumnForTarget(column, target)) {\n        mapColumnToTarget(column, target)\n        errorMessage.value = ''\n      } else {\n        dragError.value[target] = true\n        errorMessage.value = `列 \"${column.name}\" 的数据类型不适合 ${getTargetName(target)}`\n        setTimeout(() => {\n          dragError.value[target] = false\n          errorMessage.value = ''\n        }, 3000)\n      }\n    }\n  } catch (error) {\n    console.error('Drop failed:', error)\n    errorMessage.value = '拖拽失败，请重试'\n  }\n}\n\nfunction validateColumnForTarget (column, target) {\n  const columnType = column.type\n\n  switch (target) {\n    case 'xAxis':\n      // X轴通常接受类别型数据\n      return ['string', 'category', 'date'].includes(columnType)\n    case 'yAxis':\n      // Y轴通常接受数值型数据\n      return ['number', 'integer'].includes(columnType)\n    case 'series':\n      // 系列数据通常接受数值型数据\n      return ['number', 'integer'].includes(columnType)\n    default:\n      return true\n  }\n}\n\nfunction mapColumnToTarget (column, target) {\n  switch (target) {\n    case 'xAxis':\n      chartConfig.value.xAxis = {\n        field: column.name,\n        type: column.type\n      }\n      break\n    case 'yAxis':\n      chartConfig.value.yAxis = {\n        field: column.name,\n        type: column.type\n      }\n      break\n    case 'series':\n      // 系列可以有多个，但这里简化为单个\n      chartConfig.value.series = [{\n        field: column.name,\n        type: column.type\n      }]\n      break\n  }\n\n  emit('config-change', chartConfig.value)\n}\n\nfunction removeMapping (target) {\n  switch (target) {\n    case 'xAxis':\n      chartConfig.value.xAxis = { field: '', type: '' }\n      break\n    case 'yAxis':\n      chartConfig.value.yAxis = { field: '', type: '' }\n      break\n    case 'series':\n      chartConfig.value.series = []\n      break\n  }\n\n  emit('config-change', chartConfig.value)\n}\n\nfunction removeSeriesMapping (index) {\n  chartConfig.value.series.splice(index, 1)\n  emit('config-change', chartConfig.value)\n}\n\nfunction getTargetName (target) {\n  const names = {\n    xAxis: 'X轴',\n    yAxis: 'Y轴',\n    series: '数据系列'\n  }\n  return names[target] || target\n}\n\nfunction generateChart () {\n  if (!isConfigValid.value) {\n    errorMessage.value = '请完成必要的数据映射配置'\n    return\n  }\n\n  emit('generate-chart', chartConfig.value)\n}\n\nfunction resetConfig () {\n  chartConfig.value = {\n    xAxis: { field: '', type: '' },\n    yAxis: { field: '', type: '' },\n    series: [],\n    title: '',\n    colorScheme: 'default',\n    animation: true,\n    dataRange: 'all',\n    nullHandling: 'ignore'\n  }\n\n  errorMessage.value = ''\n  emit('config-change', chartConfig.value)\n}\n\n// 监听图表类型变化\nwatch(() => props.selectedChartType, (newType) => {\n  // 根据图表类型调整配置\n  if (newType === 'pie') {\n    // 饼图不需要Y轴\n    chartConfig.value.yAxis = { field: '', type: '' }\n  }\n})\n</script>\n\n<style scoped>\n.chart-config-panel {\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  background: var(--bg-color, #ffffff);\n  overflow-y: auto;\n}\n\n/* 面板总标题 */\n.panel-header {\n  margin-bottom: 25px;\n  padding-bottom: 15px;\n  border-bottom: 2px solid var(--border-color, #e5e5e5);\n}\n\n.panel-header h3 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: var(--text-color, #333333);\n}\n\n/* 数据映射配置区域 */\n.mapping-section {\n  margin-bottom: 30px;\n}\n\n.mapping-section-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.mapping-section-header h4 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: var(--text-color, #333333);\n}\n\n.chart-type-tag {\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  padding: 4px 10px;\n  background: var(--primary-color, #5470c6);\n  color: white;\n  border-radius: 12px;\n  font-size: 11px;\n  font-weight: 500;\n  box-shadow: 0 1px 3px rgba(84, 112, 198, 0.2);\n}\n\n.chart-type-icon {\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.chart-icon-svg {\n  width: 14px;\n  height: 14px;\n  color: currentColor;\n}\n\n.chart-type-name {\n  font-size: 11px;\n  font-weight: 500;\n}\n\n.mapping-item {\n  margin-bottom: 20px;\n}\n\n.mapping-item-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n}\n\n.mapping-label {\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--text-color, #333333);\n}\n\n.mapping-type-tag {\n  display: inline-flex;\n  align-items: center;\n  padding: 2px 8px;\n  background: var(--bg-secondary, #f1f3f4);\n  color: var(--text-secondary, #666666);\n  border-radius: 10px;\n  font-size: 10px;\n  font-weight: 500;\n  text-transform: uppercase;\n  border: 1px solid var(--border-color, #e5e5e5);\n}\n\n.drop-zone {\n  min-height: 50px;\n  border: 1px solid var(--border-color, #e5e5e5);\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  background: var(--bg-color, #ffffff);\n}\n\n.drop-zone-active {\n  border-color: var(--primary-color, #5470c6);\n  background-color: rgba(84, 112, 198, 0.05);\n}\n\n.drop-zone-filled {\n  border-color: var(--success-color, #28a745);\n  background-color: rgba(40, 167, 69, 0.05);\n}\n\n.drop-zone-error {\n  border-color: var(--error-color, #dc3545);\n  background-color: rgba(220, 53, 69, 0.05);\n  animation: shake 0.5s ease-in-out;\n}\n\n@keyframes shake {\n  0%, 100% { transform: translateX(0); }\n  25% { transform: translateX(-2px); }\n  75% { transform: translateX(2px); }\n}\n\n.drop-placeholder {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--text-secondary, #666666);\n}\n\n.drop-icon {\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.drop-text {\n  font-size: 12px;\n}\n\n.mapped-field {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 8px 12px;\n  background: var(--bg-secondary, #f8f9fa);\n  border-radius: 4px;\n}\n\n.field-info {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n}\n\n.field-name {\n  font-size: 13px;\n  font-weight: 500;\n  color: var(--text-color, #333333);\n}\n\n.field-type {\n  font-size: 11px;\n  color: var(--text-secondary, #666666);\n  text-transform: uppercase;\n}\n\n.remove-btn {\n  background: var(--error-color, #dc3545);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 12px;\n  transition: background-color 0.2s;\n}\n\n.remove-btn:hover {\n  background: var(--error-hover, #c82333);\n}\n\n/* 过滤和高级配置区域 */\n.filter-section,\n.advanced-section {\n  margin-bottom: 25px;\n}\n\n.section-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  padding: 12px 0;\n  border-bottom: 1px solid var(--border-color, #e5e5e5);\n}\n\n.section-header h4 {\n  margin: 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: var(--text-color, #333333);\n}\n\n.toggle-icon {\n  font-size: 12px;\n  color: var(--text-secondary, #666666);\n  transition: transform 0.2s ease;\n}\n\n.toggle-open {\n  transform: rotate(180deg);\n}\n\n.section-content {\n  padding: 15px 0;\n}\n\n.filter-item,\n.config-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n}\n\n.filter-item label,\n.config-item label {\n  font-size: 13px;\n  font-weight: 500;\n  color: var(--text-color, #333333);\n  flex: 1;\n}\n\n.filter-item select,\n.config-item select {\n  flex: 1;\n  max-width: 140px;\n  padding: 6px 8px;\n  border: 1px solid var(--border-color, #e5e5e5);\n  border-radius: 4px;\n  background: var(--bg-color, #ffffff);\n  color: var(--text-color, #333333);\n  font-size: 12px;\n}\n\n.config-item input[type=\"text\"] {\n  flex: 1;\n  max-width: 160px;\n  padding: 6px 8px;\n  border: 1px solid var(--border-color, #e5e5e5);\n  border-radius: 4px;\n  background: var(--bg-color, #ffffff);\n  color: var(--text-color, #333333);\n  font-size: 12px;\n}\n\n.config-item input[type=\"checkbox\"] {\n  width: 16px;\n  height: 16px;\n}\n\n/* 操作按钮 */\n.action-section {\n  display: flex;\n  gap: 10px;\n  margin-top: 25px;\n}\n\n.apply-btn {\n  flex: 1;\n  padding: 10px 16px;\n  background: var(--primary-color, #5470c6);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 13px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.apply-btn:hover:not(:disabled) {\n  background: var(--primary-hover, #4c63b6);\n}\n\n.apply-btn:disabled {\n  background: var(--disabled-color, #a8a8a8);\n  cursor: not-allowed;\n}\n\n.reset-btn {\n  padding: 10px 16px;\n  background: var(--secondary-color, #6c757d);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 13px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.reset-btn:hover {\n  background: var(--secondary-hover, #5a6268);\n}\n\n.error-message {\n  margin-top: 15px;\n  padding: 8px 12px;\n  background: rgba(220, 53, 69, 0.1);\n  border: 1px solid var(--error-color, #dc3545);\n  border-radius: 4px;\n  color: var(--error-color, #dc3545);\n  font-size: 12px;\n}\n\n/* 暗黑主题适配 */\n:root.dark {\n  --bg-color: #1e1e1e;\n  --bg-secondary: #2d2d2d;\n  --bg-tertiary: #3d3d3d;\n  --text-color: #e0e0e0;\n  --text-secondary: #b0b0b0;\n  --border-color: #404040;\n  --primary-color: #5470c6;\n  --primary-hover: #4c63b6;\n  --success-color: #28a745;\n  --error-color: #dc3545;\n  --error-hover: #c82333;\n  --secondary-color: #6c757d;\n  --secondary-hover: #5a6268;\n  --disabled-color: #495057;\n  --shadow-color: rgba(0, 0, 0, 0.3);\n  --hover-bg: rgba(255, 255, 255, 0.05);\n}\n\n/* 添加平滑过渡 */\n.chart-config-panel {\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  background: var(--bg-color, #ffffff);\n  overflow-y: auto;\n  transition: all 0.3s ease;\n}\n\n/* 面板总标题 */\n.panel-header {\n  margin-bottom: 25px;\n  padding-bottom: 15px;\n  border-bottom: 2px solid var(--border-color, #e5e5e5);\n  transition: border-color 0.3s ease;\n}\n\n.panel-header h3 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: var(--text-color, #333333);\n  transition: color 0.3s ease;\n}\n\n/* 数据映射配置区域 */\n.mapping-section {\n  margin-bottom: 30px;\n}\n\n.mapping-section-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  animation: fadeInUp 0.5s ease;\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.mapping-section-header h4 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: var(--text-color, #333333);\n  transition: color 0.3s ease;\n}\n\n.chart-type-tag {\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  padding: 4px 10px;\n  background: var(--primary-color, #5470c6);\n  color: white;\n  border-radius: 12px;\n  font-size: 11px;\n  font-weight: 500;\n  box-shadow: 0 2px 4px var(--shadow-color, rgba(84, 112, 198, 0.2));\n  transition: all 0.3s ease;\n  animation: slideInRight 0.4s ease;\n}\n\n@keyframes slideInRight {\n  from {\n    opacity: 0;\n    transform: translateX(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n.chart-type-tag:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 8px var(--shadow-color, rgba(84, 112, 198, 0.3));\n}\n\n.chart-type-icon {\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: transform 0.3s ease;\n}\n\n.chart-type-tag:hover .chart-type-icon {\n  transform: scale(1.1);\n}\n\n.chart-icon-svg {\n  width: 14px;\n  height: 14px;\n  color: currentColor;\n  transition: all 0.3s ease;\n}\n\n.chart-type-name {\n  font-size: 11px;\n  font-weight: 500;\n}\n\n.mapping-item {\n  margin-bottom: 20px;\n  animation: fadeInUp 0.5s ease;\n  animation-fill-mode: both;\n}\n\n.mapping-item:nth-child(1) { animation-delay: 0.1s; }\n.mapping-item:nth-child(2) { animation-delay: 0.2s; }\n.mapping-item:nth-child(3) { animation-delay: 0.3s; }\n\n.mapping-item-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n}\n\n.mapping-label {\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--text-color, #333333);\n  transition: color 0.3s ease;\n}\n\n.mapping-type-tag {\n  display: inline-flex;\n  align-items: center;\n  padding: 2px 8px;\n  background: var(--bg-secondary, #f1f3f4);\n  color: var(--text-secondary, #666666);\n  border-radius: 10px;\n  font-size: 10px;\n  font-weight: 500;\n  text-transform: uppercase;\n  border: 1px solid var(--border-color, #e5e5e5);\n  transition: all 0.3s ease;\n}\n\n.mapping-type-tag:hover {\n  background: var(--bg-tertiary, #e9ecef);\n  transform: scale(1.05);\n}\n\n.drop-zone {\n  min-height: 50px;\n  border: 1px solid var(--border-color, #e5e5e5);\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  background: var(--bg-color, #ffffff);\n  position: relative;\n  overflow: hidden;\n}\n\n.drop-zone::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n  transition: left 0.5s ease;\n}\n\n.drop-zone:hover::before {\n  left: 100%;\n}\n\n.drop-zone-active {\n  border-color: var(--primary-color, #5470c6);\n  background-color: rgba(84, 112, 198, 0.05);\n  transform: scale(1.02);\n  box-shadow: 0 4px 12px var(--shadow-color, rgba(84, 112, 198, 0.15));\n}\n\n.drop-zone-filled {\n  border-color: var(--success-color, #28a745);\n  background-color: rgba(40, 167, 69, 0.05);\n  transform: scale(1.01);\n}\n\n.drop-zone-error {\n  border-color: var(--error-color, #dc3545);\n  background-color: rgba(220, 53, 69, 0.05);\n  animation: shake 0.5s ease-in-out;\n}\n\n@keyframes shake {\n  0%, 100% { transform: translateX(0); }\n  25% { transform: translateX(-4px); }\n  75% { transform: translateX(4px); }\n}\n\n.drop-placeholder {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--text-secondary, #666666);\n  transition: all 0.3s ease;\n}\n\n.drop-zone:hover .drop-placeholder {\n  color: var(--primary-color, #5470c6);\n  transform: scale(1.05);\n}\n\n.drop-icon {\n  font-size: 16px;\n  font-weight: bold;\n  transition: transform 0.3s ease;\n}\n\n.drop-zone:hover .drop-icon {\n  animation: bounce 0.6s ease;\n}\n\n@keyframes bounce {\n  0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\n  40% { transform: translateY(-3px); }\n  60% { transform: translateY(-2px); }\n}\n\n.drop-text {\n  font-size: 12px;\n  transition: color 0.3s ease;\n}\n\n.mapped-field {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 8px 12px;\n  background: var(--bg-secondary, #f8f9fa);\n  border-radius: 6px;\n  transition: all 0.3s ease;\n  animation: slideInDown 0.4s ease;\n}\n\n@keyframes slideInDown {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.mapped-field:hover {\n  background: var(--bg-tertiary, #e9ecef);\n  transform: translateY(-1px);\n  box-shadow: 0 2px 8px var(--shadow-color, rgba(0, 0, 0, 0.1));\n}\n\n.field-info {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n}\n\n.field-name {\n  font-size: 13px;\n  font-weight: 500;\n  color: var(--text-color, #333333);\n  transition: color 0.3s ease;\n}\n\n.field-type {\n  font-size: 11px;\n  color: var(--text-secondary, #666666);\n  text-transform: uppercase;\n  transition: color 0.3s ease;\n}\n\n.remove-btn {\n  background: var(--error-color, #dc3545);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 12px;\n  transition: all 0.3s ease;\n}\n\n.remove-btn:hover {\n  background: var(--error-hover, #c82333);\n  transform: scale(1.1) rotate(90deg);\n}\n\n/* 过滤和高级配置区域 */\n.filter-section,\n.advanced-section {\n  margin-bottom: 25px;\n  animation: fadeInUp 0.5s ease;\n  animation-fill-mode: both;\n}\n\n.filter-section { animation-delay: 0.4s; }\n.advanced-section { animation-delay: 0.5s; }\n\n.section-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  padding: 12px 0;\n  border-bottom: 1px solid var(--border-color, #e5e5e5);\n  transition: all 0.3s ease;\n  border-radius: 4px;\n}\n\n.section-header:hover {\n  background: var(--hover-bg, rgba(0, 0, 0, 0.02));\n  padding-left: 8px;\n  padding-right: 8px;\n}\n\n.section-header h4 {\n  margin: 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: var(--text-color, #333333);\n  transition: color 0.3s ease;\n}\n\n.toggle-icon {\n  font-size: 12px;\n  color: var(--text-secondary, #666666);\n  transition: all 0.3s ease;\n}\n\n.toggle-open {\n  transform: rotate(180deg);\n  color: var(--primary-color, #5470c6);\n}\n\n.section-content {\n  padding: 15px 0;\n  animation: slideDown 0.3s ease;\n}\n\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    max-height: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    max-height: 200px;\n    transform: translateY(0);\n  }\n}\n\n.filter-item,\n.config-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n  padding: 8px;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n}\n\n.filter-item:hover,\n.config-item:hover {\n  background: var(--hover-bg, rgba(0, 0, 0, 0.02));\n}\n\n.filter-item label,\n.config-item label {\n  font-size: 13px;\n  font-weight: 500;\n  color: var(--text-color, #333333);\n  flex: 1;\n  transition: color 0.3s ease;\n}\n\n.filter-item select,\n.config-item select {\n  flex: 1;\n  max-width: 140px;\n  padding: 6px 8px;\n  border: 1px solid var(--border-color, #e5e5e5);\n  border-radius: 4px;\n  background: var(--bg-color, #ffffff);\n  color: var(--text-color, #333333);\n  font-size: 12px;\n  transition: all 0.3s ease;\n}\n\n.filter-item select:focus,\n.config-item select:focus {\n  border-color: var(--primary-color, #5470c6);\n  box-shadow: 0 0 0 2px rgba(84, 112, 198, 0.2);\n  outline: none;\n}\n\n.config-item input[type=\"text\"] {\n  flex: 1;\n  max-width: 160px;\n  padding: 6px 8px;\n  border: 1px solid var(--border-color, #e5e5e5);\n  border-radius: 4px;\n  background: var(--bg-color, #ffffff);\n  color: var(--text-color, #333333);\n  font-size: 12px;\n  transition: all 0.3s ease;\n}\n\n.config-item input[type=\"text\"]:focus {\n  border-color: var(--primary-color, #5470c6);\n  box-shadow: 0 0 0 2px rgba(84, 112, 198, 0.2);\n  outline: none;\n}\n\n.config-item input[type=\"checkbox\"] {\n  width: 16px;\n  height: 16px;\n  accent-color: var(--primary-color, #5470c6);\n  transition: all 0.3s ease;\n}\n\n.config-item input[type=\"checkbox\"]:hover {\n  transform: scale(1.1);\n}\n\n/* 操作按钮 */\n.action-section {\n  display: flex;\n  gap: 10px;\n  margin-top: 25px;\n  animation: fadeInUp 0.5s ease;\n  animation-delay: 0.6s;\n  animation-fill-mode: both;\n}\n\n.apply-btn {\n  flex: 1;\n  padding: 12px 16px;\n  background: var(--primary-color, #5470c6);\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 13px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n.apply-btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n  transition: left 0.5s ease;\n}\n\n.apply-btn:hover:not(:disabled) {\n  background: var(--primary-hover, #4c63b6);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px var(--shadow-color, rgba(84, 112, 198, 0.3));\n}\n\n.apply-btn:hover:not(:disabled)::before {\n  left: 100%;\n}\n\n.apply-btn:disabled {\n  background: var(--disabled-color, #a8a8a8);\n  cursor: not-allowed;\n  transform: none;\n}\n\n.reset-btn {\n  padding: 12px 16px;\n  background: var(--secondary-color, #6c757d);\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 13px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.reset-btn:hover {\n  background: var(--secondary-hover, #5a6268);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px var(--shadow-color, rgba(108, 117, 125, 0.3));\n}\n\n.error-message {\n  margin-top: 15px;\n  padding: 12px;\n  background: rgba(220, 53, 69, 0.1);\n  border: 1px solid var(--error-color, #dc3545);\n  border-radius: 6px;\n  color: var(--error-color, #dc3545);\n  font-size: 12px;\n  animation: slideInDown 0.3s ease;\n  transition: all 0.3s ease;\n}\n\n.error-message:hover {\n  background: rgba(220, 53, 69, 0.15);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}