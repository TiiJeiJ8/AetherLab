{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n// dataMergeUtils.js\n// 多文件数据合并与主键处理工具函数\n// 根据不同图表类型，主函数分发到对应的处理器进行数据处理，生成能够绘制图表的数据\n\n/*\n关键函数 mergeChartData(config, fileDataMap, nullHandlingType, options)\n    参数校验 validateParams\n    类型\n    图表类型分发器 chartTypeHandlers[type]\n    数据提取 getDataRows\n    过滤器插件 options.filterPlugin 或 defaultFilterPlugin\n    缺失值处理插件 handleNulls (调用 nullHandlingModule 中的具体方法)\n    主键合并 如有多文件/多字段，合并主键\n    组装seriesData 生成最终用于图表的数据结构\n    返回 {xData, yDataArr, mergeType, seriesData}\n*/\n\n/* eslint-disable */\n\n/**\n * @typedef {Object} AxisConfig\n * @property {string} file - 数据文件名\n * @property {string} field - 字段名\n */\n\n/**\n * @typedef {Object} ChartConfig\n * @property {AxisConfig} [xAxis]\n * @property {AxisConfig|AxisConfig[]} [yAxis]\n * @property {AxisConfig} [category]\n * @property {AxisConfig} [value]\n * @property {Object} [filter]\n * @property {string} [type] - 图表类型，如 'pie', 'line', 'bar' 等\n */\n\n/**\n * @typedef {Object.<string, Array<Object>>} FileDataMap\n */\n\n/**\n * 判断是否有主键（即所有y轴字段的文件都包含x轴字段）\n * @param {AxisConfig} xAxis\n * @param {AxisConfig|AxisConfig[]} yAxis\n * @param {FileDataMap} fileDataMap\n * @returns {boolean}\n */\nexport function hasPrimaryKey(xAxis, yAxis, fileDataMap) {\n  if (!xAxis || !xAxis.field) return false;\n  const xField = xAxis.field;\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  return yArr.every(y => {\n    const yFileData = fileDataMap[y.file];\n    return yFileData && yFileData.length > 0 && yFileData[0].hasOwnProperty(xField);\n  });\n}\n\n// ---------------- 通用数据处理工具函数 ----------------\n\n/**\n * 提取数据并去掉标题行\n * @param {FileDataMap} fileDataMap\n * @param {string} file\n * @returns {Array<Object>}\n */\nfunction getDataRows(fileDataMap, file) {\n  return (fileDataMap[file] || []).slice(1);\n}\n\n/**\n * 通用缺失值处理器分发\n * @param {string} type\n * @param {Array} arr\n * @param {Object} nullHandlingModule\n * @returns {Array}\n */\nfunction handleNulls(type, arr, nullHandlingModule) {\n  if (!type || type === 'ignore') return arr;\n  const handler = nullHandlingModule[type] || nullHandlingModule.ignoreNull;\n  return handler(arr);\n}\n\n/**\n * 参数校验\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n */\nfunction validateParams(config, fileDataMap) {\n  if (!config || typeof config !== 'object') throw new Error('config must be an object');\n  if (!fileDataMap || typeof fileDataMap !== 'object') throw new Error('fileDataMap must be an object');\n}\n\n// ---------------- 过滤器插件化 ----------------\n\n/**\n * 过滤器插件，默认实现\n * @param {Array} rows\n * @param {Object} filters\n * @returns {Array}\n */\nexport function defaultFilterPlugin(rows, filters) {\n  if (!filters || !filters.filters || !Array.isArray(filters.filters) || filters.filters.length === 0) return rows;\n  const logic = filters.logic || 'AND';\n  const conds = filters.filters || [];\n  if (conds.length === 0) return rows;\n  return rows.filter(row => {\n    const results = conds.map(f => {\n      const val = row[f.field];\n      switch (f.type) {\n        case 'integer':\n          {\n            const num = parseFloat(val);\n            const cmp = parseFloat(f.value);\n            if (f.operator === 'eq') return num === cmp;\n            if (f.operator === 'ne') return num !== cmp;\n            if (f.operator === 'gt') return num > cmp;\n            if (f.operator === 'ge') return num >= cmp;\n            if (f.operator === 'lt') return num < cmp;\n            if (f.operator === 'le') return num <= cmp;\n            return true;\n          }\n        case 'string':\n          {\n            const str = String(val ?? '');\n            const cmp = String(f.value ?? '');\n            if (f.operator === 'eq') return str === cmp;\n            if (f.operator === 'ne') return str !== cmp;\n            if (f.operator === 'contains') return str.includes(cmp);\n            if (f.operator === 'notcontains') return !str.includes(cmp);\n            if (f.operator === 'startsWith') return str.startsWith(cmp);\n            if (f.operator === 'endsWith') return str.endsWith(cmp);\n            return true;\n          }\n        case 'category':\n          {\n            if (f.operator === 'eq') return val === f.value;\n            if (f.operator === 'ne') return val !== f.value;\n            if (f.operator === 'in') return Array.isArray(f.value) ? f.value.includes(val) : false;\n            if (f.operator === 'notin') return Array.isArray(f.value) ? !f.value.includes(val) : false;\n            return true;\n          }\n        case 'boolean':\n          {\n            const boolVal = val === true || val === 'true' || val === 1 || val === '1';\n            const cmp = f.value === true || f.value === 'true' || f.value === 1 || f.value === '1';\n            if (f.operator === 'eq') return boolVal === cmp;\n            if (f.operator === 'ne') return boolVal !== cmp;\n            return true;\n          }\n        case 'date':\n          {\n            const dateVal = new Date(val).getTime();\n            const cmp = new Date(f.value).getTime();\n            if (f.operator === 'eq') return dateVal === cmp;\n            if (f.operator === 'ne') return dateVal !== cmp;\n            if (f.operator === 'before') return dateVal < cmp;\n            if (f.operator === 'after') return dateVal > cmp;\n            return true;\n          }\n        default:\n          return true;\n      }\n    });\n    return logic === 'AND' ? results.every(Boolean) : results.some(Boolean);\n  });\n}\n\n/**\n * 合并多文件数据，返回 { xData, yDataArr, mergeType, seriesData }\n * @param {Object} config - chartConfig\n * @param {Object} fileDataMap - 文件名到对象数组的映射\n * @returns {Object}\n */\n\nimport * as nullHandling from './nullHandling.js';\n\n// ---------------- 图表类型处理器 ----------------\n\n// 调试输入函数\nfunction debugInput(config, fileDataMap, options) {\n  console.log('[--debugInput {Chart Type Processor}--] config:', config);\n  console.log('[--debugInput {Chart Type Processor}--] fileDataMap:', fileDataMap);\n  console.log('[--debugInput {Chart Type Processor}--] options:', options);\n}\n\n/**\n * 通用 x/y 图表（如折线、柱状等）数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction xyChartHandler(config, fileDataMap, options) {\n  const {\n    nullHandlingType = 'ignore',\n    nullHandlingModule = nullHandling,\n    filterPlugin = defaultFilterPlugin\n  } = options;\n  const {\n    xAxis,\n    yAxis\n  } = config;\n  let mainData = getDataRows(fileDataMap, xAxis.file);\n  // 应用过滤\n  if (config.filter && config.filter.filters && config.filter.filters.length) {\n    mainData = filterPlugin(mainData, config.filter);\n  }\n  // 去除空行和重复主键（只保留第一次出现的主键）\n  const seenKeys = new Set();\n  mainData = mainData.filter(row => {\n    const key = row[xAxis.field];\n    if (key === undefined || key === null || key === '') return false;\n    if (seenKeys.has(key)) return false;\n    seenKeys.add(key);\n    return true;\n  });\n  const xData = mainData.map(row => row[xAxis.field]);\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  const usePrimaryKey = hasPrimaryKey(xAxis, yAxis, fileDataMap);\n  let yDataArr = [];\n  if (usePrimaryKey) {\n    // 主键合并，严格按主文件顺序，y文件只查一次，不重复\n    yDataArr = yArr.map(y => {\n      const yFileData = getDataRows(fileDataMap, y.file);\n      const yMap = new Map();\n      for (const row of yFileData) {\n        yMap.set(row[xAxis.field], row);\n      }\n      let arr = mainData.map(row => {\n        const match = yMap.get(row[xAxis.field]);\n        if (!match) return null;\n        const rawVal = match[y.field];\n        const parsedVal = parseFloat(rawVal);\n        return rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal) ? null : parsedVal;\n      });\n      arr = handleNulls(nullHandlingType, arr, nullHandlingModule);\n      return arr;\n    });\n  } else {\n    // 索引合并，严格按主文件长度，y文件只取前n行\n    yDataArr = yArr.map(y => {\n      const yFileData = getDataRows(fileDataMap, y.file);\n      let arr = mainData.map((row, idx) => {\n        const yRow = yFileData[idx];\n        if (!yRow) return null;\n        const rawVal = yRow[y.field];\n        const parsedVal = parseFloat(rawVal);\n        return rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal) ? null : parsedVal;\n      });\n      arr = handleNulls(nullHandlingType, arr, nullHandlingModule);\n      return arr;\n    });\n  }\n  return {\n    xData,\n    yDataArr,\n    mergeType: usePrimaryKey ? 'primaryKey' : 'rowIndex',\n    seriesData: []\n  };\n}\n\n/**\n * 饼图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction pieChartHandler(config, fileDataMap, options) {\n  const {\n    filterPlugin = defaultFilterPlugin\n  } = options;\n  let catData = getDataRows(fileDataMap, config.category.file);\n  let valData = getDataRows(fileDataMap, config.value.file);\n  // 应用过滤\n  if (config.filter && config.filter.filters && config.filter.filters.length) {\n    catData = filterPlugin(catData, config.filter);\n    valData = filterPlugin(valData, config.filter);\n  }\n  const len = Math.min(catData.length, valData.length);\n  const result = [];\n  for (let i = 0; i < len; i++) {\n    const name = catData[i][config.category.field];\n    const rawVal = valData[i][config.value.field];\n    const parsedVal = parseFloat(rawVal);\n    const val = rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal) ? null : parsedVal;\n    if (name !== undefined && name !== null && name !== '') {\n      result.push({\n        name,\n        value: val\n      });\n    }\n  }\n  return {\n    xData: [],\n    yDataArr: [],\n    mergeType: 'pie',\n    seriesData: result\n  };\n}\n\n/**\n * K线图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction candlestickChartHandler(config, fileDataMap, options) {\n  const {\n    nullHandlingType = 'ignore',\n    nullHandlingModule = nullHandling,\n    filterPlugin = defaultFilterPlugin\n  } = options;\n  const {\n    time,\n    open,\n    close,\n    high,\n    low,\n    filter\n  } = config;\n  // 提取主文件数据\n  let mainData = getDataRows(fileDataMap, time.file);\n  if (filter && filter.filters && filter.filters.length) {\n    mainData = filterPlugin(mainData, filter);\n  }\n  // 按时间字段排序\n  mainData.sort((a, b) => {\n    if (a[time.field] < b[time.field]) return -1;\n    if (a[time.field] > b[time.field]) return 1;\n    return 0;\n  });\n  // 组装 xData 和 seriesData\n  const xData = mainData.map(row => row[time.field]);\n  const seriesData = mainData.map(row => {\n    const o = parseFloat(row[open.field]);\n    const c = parseFloat(row[close.field]);\n    const h = parseFloat(row[high.field]);\n    const l = parseFloat(row[low.field]);\n    // 缺失值处理\n    const arr = [o, c, l, h].map(v => v === null || v === undefined || v === '' || Number.isNaN(v) ? null : v);\n    return handleNulls(nullHandlingType, arr, nullHandlingModule);\n  });\n  return {\n    xData,\n    yDataArr: [seriesData],\n    mergeType: 'candlestick',\n    seriesData\n  };\n}\n\n/**\n * 热力图数据处理器（主键合并，一一对应）\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction heatmapChartHandler(config, fileDataMap, options) {\n  const {\n    xAxis,\n    yAxis,\n    value\n  } = config;\n  // 获取所有数据行\n  const xRows = getDataRows(fileDataMap, xAxis.file);\n  const yRows = getDataRows(fileDataMap, yAxis.file);\n  const valRows = getDataRows(fileDataMap, value.file);\n\n  // 收集所有x、y的取值（类别）\n  const xSet = new Set(xRows.map(row => row[xAxis.field]));\n  const ySet = new Set(yRows.map(row => row[yAxis.field]));\n  const xData = Array.from(xSet);\n  const yData = Array.from(ySet);\n\n  // 构建value映射\n  const valueMap = new Map();\n  valRows.forEach(row => {\n    // 优先用valRows里的x/y字段，否则用xRows/yRows索引补齐\n    const x = row[xAxis.field] !== undefined ? row[xAxis.field] : null;\n    const y = row[yAxis.field] !== undefined ? row[yAxis.field] : null;\n    if (x !== null && y !== null) {\n      const key = `${x}|${y}`;\n      valueMap.set(key, row[value.field]);\n    }\n  });\n\n  // 生成 seriesData，补齐所有 (x, y) 组合\n  const seriesData = [];\n  yData.forEach(y => {\n    xData.forEach(x => {\n      const key = `${x}|${y}`;\n      const v = valueMap.has(key) ? valueMap.get(key) : null;\n      seriesData.push([x, y, v]);\n    });\n  });\n  return {\n    xData,\n    yData,\n    mergeType: 'heatmap',\n    seriesData\n  };\n}\n\n/**\n * 雷达图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction radarChartHandler(config, fileDataMap, options) {\n  const {\n    indicator,\n    value,\n    name\n  } = config;\n\n  // 维度配置\n  const indicators = indicator.map(item => {\n    const rows = getDataRows(fileDataMap, item.file);\n    const values = rows.map(row => row[item.field]).filter(v => v !== undefined && v !== null);\n    const max = Math.ceil(Math.max(...values.map(v => Number(v))) * 1.2); // 乘以安全系数\n    return {\n      name: item.field,\n      max: max || 100\n    };\n  });\n\n  // 系列数据\n  const nameRows = getDataRows(fileDataMap, name.file);\n  const seriesData = nameRows.map(row => {\n    const values = value.map(item => row[item.field]);\n    return {\n      name: row[name.field],\n      value: values\n    };\n  });\n\n  // 先封装传输\n  const RadarPack = {\n    indicator: indicators,\n    seriesData_radar: seriesData\n  };\n  return {\n    xData: [],\n    yData: [],\n    mergeType: 'radar',\n    seriesData: RadarPack\n  };\n}\n\n/**\n * 箱线图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction boxplotChartHandler(config, fileDataMap, options) {\n  debugInput(config, fileDataMap, options);\n}\n\n// ---------------- 图表类型分发器 ----------------\n\nconst chartTypeHandlers = {\n  Line: xyChartHandler,\n  Bar: xyChartHandler,\n  Pie: pieChartHandler,\n  Scatter: xyChartHandler,\n  Candlestick: candlestickChartHandler,\n  Heatmap: heatmapChartHandler,\n  Radar: radarChartHandler\n  // 其他类型可继续扩展\n};\n\n/**\n * 主入口：合并多文件数据，返回 { xData, yDataArr, mergeType, seriesData }\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {string} [nullHandlingType]\n * @param {Object} [options] - 可选项：filterPlugin, nullHandlingModule\n * @returns {Object}\n */\nexport function mergeChartData(config, fileDataMap, nullHandlingType = 'ignore', options = {}) {\n  validateParams(config, fileDataMap);\n  let chartType = config.type;\n  console.log('[mergeChartData] Inferred chart type:', chartType);\n  const handler = chartTypeHandlers[chartType] || xyChartHandler;\n  console.log('[mergeChartData] Handler:', handler);\n  return handler(config, fileDataMap, {\n    ...options,\n    nullHandlingType\n  });\n}\n\n// applyFiltersToRows 已被插件化，见 defaultFilterPlugin","map":{"version":3,"names":["hasPrimaryKey","xAxis","yAxis","fileDataMap","field","xField","yArr","Array","isArray","every","y","yFileData","file","length","hasOwnProperty","getDataRows","slice","handleNulls","type","arr","nullHandlingModule","handler","ignoreNull","validateParams","config","Error","defaultFilterPlugin","rows","filters","logic","conds","filter","row","results","map","f","val","num","parseFloat","cmp","value","operator","str","String","includes","startsWith","endsWith","boolVal","dateVal","Date","getTime","Boolean","some","nullHandling","debugInput","options","console","log","xyChartHandler","nullHandlingType","filterPlugin","mainData","seenKeys","Set","key","undefined","has","add","xData","usePrimaryKey","yDataArr","yMap","Map","set","match","get","rawVal","parsedVal","Number","isNaN","idx","yRow","mergeType","seriesData","pieChartHandler","catData","category","valData","len","Math","min","result","i","name","push","candlestickChartHandler","time","open","close","high","low","sort","a","b","o","c","h","l","v","heatmapChartHandler","xRows","yRows","valRows","xSet","ySet","from","yData","valueMap","forEach","x","radarChartHandler","indicator","indicators","item","values","max","ceil","nameRows","RadarPack","seriesData_radar","boxplotChartHandler","chartTypeHandlers","Line","Bar","Pie","Scatter","Candlestick","Heatmap","Radar","mergeChartData","chartType"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/utils/dataMergeUtils.js"],"sourcesContent":["// dataMergeUtils.js\n// 多文件数据合并与主键处理工具函数\n// 根据不同图表类型，主函数分发到对应的处理器进行数据处理，生成能够绘制图表的数据\n\n/*\n关键函数 mergeChartData(config, fileDataMap, nullHandlingType, options)\n    参数校验 validateParams\n    类型\n    图表类型分发器 chartTypeHandlers[type]\n    数据提取 getDataRows\n    过滤器插件 options.filterPlugin 或 defaultFilterPlugin\n    缺失值处理插件 handleNulls (调用 nullHandlingModule 中的具体方法)\n    主键合并 如有多文件/多字段，合并主键\n    组装seriesData 生成最终用于图表的数据结构\n    返回 {xData, yDataArr, mergeType, seriesData}\n*/\n\n/* eslint-disable */\n\n/**\n * @typedef {Object} AxisConfig\n * @property {string} file - 数据文件名\n * @property {string} field - 字段名\n */\n\n/**\n * @typedef {Object} ChartConfig\n * @property {AxisConfig} [xAxis]\n * @property {AxisConfig|AxisConfig[]} [yAxis]\n * @property {AxisConfig} [category]\n * @property {AxisConfig} [value]\n * @property {Object} [filter]\n * @property {string} [type] - 图表类型，如 'pie', 'line', 'bar' 等\n */\n\n/**\n * @typedef {Object.<string, Array<Object>>} FileDataMap\n */\n\n\n/**\n * 判断是否有主键（即所有y轴字段的文件都包含x轴字段）\n * @param {AxisConfig} xAxis\n * @param {AxisConfig|AxisConfig[]} yAxis\n * @param {FileDataMap} fileDataMap\n * @returns {boolean}\n */\nexport function hasPrimaryKey(xAxis, yAxis, fileDataMap) {\n    if (!xAxis || !xAxis.field) return false;\n    const xField = xAxis.field;\n    const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n    return yArr.every(y => {\n        const yFileData = fileDataMap[y.file];\n        return yFileData && yFileData.length > 0 && yFileData[0].hasOwnProperty(xField);\n    });\n}\n\n\n// ---------------- 通用数据处理工具函数 ----------------\n\n/**\n * 提取数据并去掉标题行\n * @param {FileDataMap} fileDataMap\n * @param {string} file\n * @returns {Array<Object>}\n */\nfunction getDataRows(fileDataMap, file) {\n    return (fileDataMap[file] || []).slice(1);\n}\n\n/**\n * 通用缺失值处理器分发\n * @param {string} type\n * @param {Array} arr\n * @param {Object} nullHandlingModule\n * @returns {Array}\n */\nfunction handleNulls(type, arr, nullHandlingModule) {\n    if (!type || type === 'ignore') return arr;\n    const handler = nullHandlingModule[type] || nullHandlingModule.ignoreNull;\n    return handler(arr);\n}\n\n/**\n * 参数校验\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n */\nfunction validateParams(config, fileDataMap) {\n    if (!config || typeof config !== 'object') throw new Error('config must be an object');\n    if (!fileDataMap || typeof fileDataMap !== 'object') throw new Error('fileDataMap must be an object');\n}\n\n// ---------------- 过滤器插件化 ----------------\n\n/**\n * 过滤器插件，默认实现\n * @param {Array} rows\n * @param {Object} filters\n * @returns {Array}\n */\nexport function defaultFilterPlugin(rows, filters) {\n    if (!filters || !filters.filters || !Array.isArray(filters.filters) || filters.filters.length === 0) return rows;\n    const logic = filters.logic || 'AND';\n    const conds = filters.filters || [];\n    if (conds.length === 0) return rows;\n    return rows.filter(row => {\n        const results = conds.map(f => {\n            const val = row[f.field];\n            switch (f.type) {\n                case 'integer': {\n                    const num = parseFloat(val);\n                    const cmp = parseFloat(f.value);\n                    if (f.operator === 'eq') return num === cmp;\n                    if (f.operator === 'ne') return num !== cmp;\n                    if (f.operator === 'gt') return num > cmp;\n                    if (f.operator === 'ge') return num >= cmp;\n                    if (f.operator === 'lt') return num < cmp;\n                    if (f.operator === 'le') return num <= cmp;\n                    return true;\n                }\n                case 'string': {\n                    const str = String(val ?? '');\n                    const cmp = String(f.value ?? '');\n                    if (f.operator === 'eq') return str === cmp;\n                    if (f.operator === 'ne') return str !== cmp;\n                    if (f.operator === 'contains') return str.includes(cmp);\n                    if (f.operator === 'notcontains') return !str.includes(cmp);\n                    if (f.operator === 'startsWith') return str.startsWith(cmp);\n                    if (f.operator === 'endsWith') return str.endsWith(cmp);\n                    return true;\n                }\n                case 'category': {\n                    if (f.operator === 'eq') return val === f.value;\n                    if (f.operator === 'ne') return val !== f.value;\n                    if (f.operator === 'in') return Array.isArray(f.value) ? f.value.includes(val) : false;\n                    if (f.operator === 'notin') return Array.isArray(f.value) ? !f.value.includes(val) : false;\n                    return true;\n                }\n                case 'boolean': {\n                    const boolVal = val === true || val === 'true' || val === 1 || val === '1';\n                    const cmp = f.value === true || f.value === 'true' || f.value === 1 || f.value === '1';\n                    if (f.operator === 'eq') return boolVal === cmp;\n                    if (f.operator === 'ne') return boolVal !== cmp;\n                    return true;\n                }\n                case 'date': {\n                    const dateVal = new Date(val).getTime();\n                    const cmp = new Date(f.value).getTime();\n                    if (f.operator === 'eq') return dateVal === cmp;\n                    if (f.operator === 'ne') return dateVal !== cmp;\n                    if (f.operator === 'before') return dateVal < cmp;\n                    if (f.operator === 'after') return dateVal > cmp;\n                    return true;\n                }\n                default:\n                    return true;\n            }\n        });\n        return logic === 'AND' ? results.every(Boolean) : results.some(Boolean);\n    });\n}\n\n/**\n * 合并多文件数据，返回 { xData, yDataArr, mergeType, seriesData }\n * @param {Object} config - chartConfig\n * @param {Object} fileDataMap - 文件名到对象数组的映射\n * @returns {Object}\n */\n\nimport * as nullHandling from './nullHandling.js';\n\n// ---------------- 图表类型处理器 ----------------\n\n// 调试输入函数\nfunction debugInput(config, fileDataMap, options) {\n    console.log('[--debugInput {Chart Type Processor}--] config:', config);\n    console.log('[--debugInput {Chart Type Processor}--] fileDataMap:', fileDataMap);\n    console.log('[--debugInput {Chart Type Processor}--] options:', options);\n}\n\n/**\n * 通用 x/y 图表（如折线、柱状等）数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction xyChartHandler(config, fileDataMap, options) {\n    const { nullHandlingType = 'ignore', nullHandlingModule = nullHandling, filterPlugin = defaultFilterPlugin } = options;\n    const { xAxis, yAxis } = config;\n    let mainData = getDataRows(fileDataMap, xAxis.file);\n    // 应用过滤\n    if (config.filter && config.filter.filters && config.filter.filters.length) {\n        mainData = filterPlugin(mainData, config.filter);\n    }\n    // 去除空行和重复主键（只保留第一次出现的主键）\n    const seenKeys = new Set();\n    mainData = mainData.filter(row => {\n        const key = row[xAxis.field];\n        if (key === undefined || key === null || key === '') return false;\n        if (seenKeys.has(key)) return false;\n        seenKeys.add(key);\n        return true;\n    });\n    const xData = mainData.map(row => row[xAxis.field]);\n    const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n    const usePrimaryKey = hasPrimaryKey(xAxis, yAxis, fileDataMap);\n    let yDataArr = [];\n    if (usePrimaryKey) {\n        // 主键合并，严格按主文件顺序，y文件只查一次，不重复\n        yDataArr = yArr.map(y => {\n            const yFileData = getDataRows(fileDataMap, y.file);\n            const yMap = new Map();\n            for (const row of yFileData) {\n                yMap.set(row[xAxis.field], row);\n            }\n            let arr = mainData.map(row => {\n                const match = yMap.get(row[xAxis.field]);\n                if (!match) return null;\n                const rawVal = match[y.field];\n                const parsedVal = parseFloat(rawVal);\n                return (rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal)) ? null : parsedVal;\n            });\n            arr = handleNulls(nullHandlingType, arr, nullHandlingModule);\n            return arr;\n        });\n    } else {\n        // 索引合并，严格按主文件长度，y文件只取前n行\n        yDataArr = yArr.map(y => {\n            const yFileData = getDataRows(fileDataMap, y.file);\n            let arr = mainData.map((row, idx) => {\n                const yRow = yFileData[idx];\n                if (!yRow) return null;\n                const rawVal = yRow[y.field];\n                const parsedVal = parseFloat(rawVal);\n                return (rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal)) ? null : parsedVal;\n            });\n            arr = handleNulls(nullHandlingType, arr, nullHandlingModule);\n            return arr;\n        });\n    }\n    return { xData, yDataArr, mergeType: usePrimaryKey ? 'primaryKey' : 'rowIndex', seriesData: [] };\n}\n\n/**\n * 饼图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction pieChartHandler(config, fileDataMap, options) {\n    const { filterPlugin = defaultFilterPlugin } = options;\n    let catData = getDataRows(fileDataMap, config.category.file);\n    let valData = getDataRows(fileDataMap, config.value.file);\n    // 应用过滤\n    if (config.filter && config.filter.filters && config.filter.filters.length) {\n        catData = filterPlugin(catData, config.filter);\n        valData = filterPlugin(valData, config.filter);\n    }\n    const len = Math.min(catData.length, valData.length);\n    const result = [];\n    for (let i = 0; i < len; i++) {\n        const name = catData[i][config.category.field];\n        const rawVal = valData[i][config.value.field];\n        const parsedVal = parseFloat(rawVal);\n        const val = (rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal)) ? null : parsedVal;\n        if (name !== undefined && name !== null && name !== '') {\n            result.push({ name, value: val });\n        }\n    }\n    return { xData: [], yDataArr: [], mergeType: 'pie', seriesData: result };\n}\n\n/**\n * K线图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction candlestickChartHandler(config, fileDataMap, options) {\n    const { nullHandlingType = 'ignore', nullHandlingModule = nullHandling, filterPlugin = defaultFilterPlugin } = options;\n    const { time, open, close, high, low, filter } = config;\n    // 提取主文件数据\n    let mainData = getDataRows(fileDataMap, time.file);\n    if (filter && filter.filters && filter.filters.length) {\n        mainData = filterPlugin(mainData, filter);\n    }\n    // 按时间字段排序\n    mainData.sort((a, b) => {\n        if (a[time.field] < b[time.field]) return -1;\n        if (a[time.field] > b[time.field]) return 1;\n        return 0;\n    });\n    // 组装 xData 和 seriesData\n    const xData = mainData.map(row => row[time.field]);\n    const seriesData = mainData.map(row => {\n        const o = parseFloat(row[open.field]);\n        const c = parseFloat(row[close.field]);\n        const h = parseFloat(row[high.field]);\n        const l = parseFloat(row[low.field]);\n        // 缺失值处理\n        const arr = [o, c, l, h].map(v => (v === null || v === undefined || v === '' || Number.isNaN(v)) ? null : v);\n        return handleNulls(nullHandlingType, arr, nullHandlingModule);\n    });\n    return { xData, yDataArr: [seriesData], mergeType: 'candlestick', seriesData };\n}\n\n/**\n * 热力图数据处理器（主键合并，一一对应）\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction heatmapChartHandler(config, fileDataMap, options) {\n    const { xAxis, yAxis, value } = config;\n    // 获取所有数据行\n    const xRows = getDataRows(fileDataMap, xAxis.file);\n    const yRows = getDataRows(fileDataMap, yAxis.file);\n    const valRows = getDataRows(fileDataMap, value.file);\n\n    // 收集所有x、y的取值（类别）\n    const xSet = new Set(xRows.map(row => row[xAxis.field]));\n    const ySet = new Set(yRows.map(row => row[yAxis.field]));\n    const xData = Array.from(xSet);\n    const yData = Array.from(ySet);\n\n    // 构建value映射\n    const valueMap = new Map();\n    valRows.forEach(row => {\n        // 优先用valRows里的x/y字段，否则用xRows/yRows索引补齐\n        const x = row[xAxis.field] !== undefined ? row[xAxis.field] : null;\n        const y = row[yAxis.field] !== undefined ? row[yAxis.field] : null;\n        if (x !== null && y !== null) {\n            const key = `${x}|${y}`;\n            valueMap.set(key, row[value.field]);\n        }\n    });\n\n    // 生成 seriesData，补齐所有 (x, y) 组合\n    const seriesData = [];\n    yData.forEach(y => {\n        xData.forEach(x => {\n            const key = `${x}|${y}`;\n            const v = valueMap.has(key) ? valueMap.get(key) : null;\n            seriesData.push([x, y, v]);\n        });\n    });\n    return { xData, yData, mergeType: 'heatmap', seriesData };\n}\n\n\n/**\n * 雷达图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction radarChartHandler(config, fileDataMap, options) {\n    const { indicator, value, name } = config;\n\n    // 维度配置\n    const indicators = indicator.map(item => {\n        const rows = getDataRows(fileDataMap, item.file);\n        const values = rows.map(row => row[item.field]).filter(v => v !== undefined && v !== null);\n        const max = Math.ceil(Math.max(...values.map(v => Number(v))) * 1.2); // 乘以安全系数\n        return {\n            name: item.field,\n            max: max || 100\n        };\n    });\n\n    // 系列数据\n    const nameRows = getDataRows(fileDataMap, name.file);\n    const seriesData = nameRows.map(row => {\n        const values = value.map(item => row[item.field]);\n        return {\n            name: row[name.field],\n            value: values\n        };\n    });\n\n    // 先封装传输\n    const RadarPack = {\n        indicator: indicators,\n        seriesData_radar: seriesData,\n    }\n    return { xData: [], yData: [], mergeType: 'radar', seriesData: RadarPack };\n}\n\n/**\n * 箱线图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction boxplotChartHandler(config, fileDataMap, options) {\n    debugInput(config, fileDataMap, options);\n}\n\n// ---------------- 图表类型分发器 ----------------\n\nconst chartTypeHandlers = {\n    Line: xyChartHandler,\n    Bar: xyChartHandler,\n    Pie: pieChartHandler,\n    Scatter: xyChartHandler,\n    Candlestick: candlestickChartHandler,\n    Heatmap: heatmapChartHandler,\n    Radar: radarChartHandler,\n    // 其他类型可继续扩展\n};\n\n/**\n * 主入口：合并多文件数据，返回 { xData, yDataArr, mergeType, seriesData }\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {string} [nullHandlingType]\n * @param {Object} [options] - 可选项：filterPlugin, nullHandlingModule\n * @returns {Object}\n */\nexport function mergeChartData(config, fileDataMap, nullHandlingType = 'ignore', options = {}) {\n    validateParams(config, fileDataMap);\n    let chartType = config.type;\n\n    console.log('[mergeChartData] Inferred chart type:', chartType);\n\n    const handler = chartTypeHandlers[chartType] || xyChartHandler;\n\n    console.log('[mergeChartData] Handler:', handler);\n\n    return handler(config, fileDataMap, { ...options, nullHandlingType });\n}\n\n// applyFiltersToRows 已被插件化，见 defaultFilterPlugin\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}