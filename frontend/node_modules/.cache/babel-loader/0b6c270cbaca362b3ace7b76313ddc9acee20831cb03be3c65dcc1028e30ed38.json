{"ast":null,"code":"import { normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    id: \"g-btn\",\n    class: _normalizeClass([\"theme-button\", {\n      active: $setup.isActive\n    }]),\n    onClick: $setup.toggleTheme\n  }, null, 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","id","class","_normalizeClass","active","$setup","isActive","onClick","toggleTheme"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\Common\\ThemeButton.vue"],"sourcesContent":["<!--todo Theme Btn-->\n<template>\n<div\n  id=\"g-btn\"\n  class=\"theme-button\"\n  :class=\"{ active: isActive }\"\n  @click=\"toggleTheme\"\n></div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, watch, onMounted } from 'vue'\n\nconst props = defineProps({\n  modelValue: { type: Boolean, default: undefined },\n  theme: { type: String, default: undefined }\n})\nconst emit = defineEmits(['update:modelValue', 'change'])\n\nconst isActive = ref(false)\n\nfunction getThemeBgColor(theme) {\n  if (theme === 'dark') {\n    return getComputedStyle(document.documentElement).getPropertyValue('--bg-color')?.trim() || '#18181c'\n  } else {\n    return '#f4f6fa'\n  }\n}\n\nfunction playRippleAnimation(e, toTheme) {\n  const btn = e.currentTarget\n  const rect = btn.getBoundingClientRect()\n  const cx = rect.left + rect.width / 2\n  const cy = rect.top + rect.height / 2\n  const vw = Math.max(window.innerWidth, document.documentElement.clientWidth)\n  const vh = Math.max(window.innerHeight, document.documentElement.clientHeight)\n  const maxR = Math.sqrt(Math.max(cx, vw - cx) ** 2 + Math.max(cy, vh - cy) ** 2)\n  const ripple = document.createElement('div')\n  ripple.className = 'theme-ripple-transition'\n  ripple.style.position = 'fixed'\n  ripple.style.left = `${cx - 1}px`\n  ripple.style.top = `${cy - 1}px`\n  ripple.style.width = '2px'\n  ripple.style.height = '2px'\n  ripple.style.borderRadius = '50%'\n  ripple.style.background = getThemeBgColor(toTheme)\n  ripple.style.zIndex = '99999'\n  ripple.style.pointerEvents = 'none'\n  ripple.style.transition = 'transform 1.3s cubic-bezier(.4,0,.2,1), opacity 0.5s 1.1s'\n  ripple.style.transform = 'scale(1)'\n  ripple.style.opacity = '1'\n  document.body.appendChild(ripple)\n  void ripple.offsetWidth\n  ripple.style.transform = `scale(${maxR})`\n  ripple.style.opacity = '1'\n  setTimeout(() => {\n    ripple.style.opacity = '0'\n    setTimeout(() => {\n      document.body.removeChild(ripple)\n    }, 400)\n  }, 1100)\n}\n\nfunction toggleTheme(e) {\n  isActive.value = !isActive.value\n  const theme = isActive.value ? 'dark' : 'light'\n  playRippleAnimation(e, theme)\n  setTimeout(() => {\n    document.documentElement.setAttribute('data-theme', theme)\n    emit('update:modelValue', isActive.value)\n    emit('change', theme)\n  }, 650)\n}\n\nwatch(() => props.modelValue, (val) => {\n  if (typeof val === 'boolean') {\n    isActive.value = val\n    document.documentElement.setAttribute('data-theme', val ? 'dark' : 'light')\n  }\n})\nwatch(() => props.theme, (val) => {\n  if (val === 'dark' || val === 'light') {\n    isActive.value = val === 'dark'\n    document.documentElement.setAttribute('data-theme', val)\n  }\n})\n\nonMounted(() => {\n  if (props.modelValue === undefined && props.theme === undefined) {\n    isActive.value = document.documentElement.getAttribute('data-theme') === 'dark'\n  }\n})\n</script>\n\n<style scoped>\n.theme-button {\n  /* Position */\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 220px;\n  height: 90px;\n  z-index: var(--z-index-theme-button);\n  transform-origin: right bottom;\n  transform: scale(1);\n  transition: transform 0.3s ease;\n  background:\n          radial-gradient(circle at 18% 20px, #fff, #fff 6px, transparent 7px, transparent),\n          radial-gradient(circle at 35% 45px, #fff, #fff 1px, transparent 2px, transparent),\n          radial-gradient(circle at 10% 70px, #fff, #fff 2.5px, transparent 3.5px, transparent),\n          radial-gradient(circle at 25% 15px, #fff, #fff 3px, transparent 4px, transparent),\n          radial-gradient(circle at 15% 50px, #fff, #fff 1.5px, transparent 2.5px, transparent),\n          radial-gradient(circle at 30% 75px, #fff, #fff 5px, transparent 6px, transparent),\n          radial-gradient(circle at 5% 30px, #fff, #fff 0.5px, transparent 1.5px, transparent),\n          radial-gradient(circle at 25% 60px, #fff, #fff 0.5px, transparent 1.5px, transparent),\n          radial-gradient(circle at 7% 35px, #fff, #fff 0.5px, transparent 1.5px, transparent),\n          linear-gradient(90deg, #2b303e, #2b303e 50%, #5a81b4 50%, #5a81b4);\n  background-repeat: no-repeat;\n  background-size: 200% 100%;\n  background-position: 100% 0;\n  border-radius: 90px;\n  box-shadow:\n      0 -3px 4px #999,\n      inset 0 3px 5px #333,\n      0 4px 4px #ffe,\n      inset 0 -3px 5px #ddd;\n  cursor: pointer;\n  overflow: hidden;\n  transition: .5s all;\n}\n\n@media (max-width: 2560px) {\n  .theme-button {\n    transform: scale(0.35);\n    position: fixed;\n    bottom: 93%;\n    right: 20px;\n  }\n}\n@media (max-width: 1300px) {\n  .theme-button {\n    transform: scale(0.35);\n    position: fixed;\n    bottom: 2%;\n    right: 10px;\n  }\n}\n@media (max-width: 576px) {\n  .theme-button {\n    transform: scale(0.3);\n  }\n}\n\n.theme-button::before,\n.theme-button::after {\n  content: \"\";\n  position: absolute;\n  transition: .5s all;\n}\n\n.theme-button::before {\n  width: 75px;\n  height: 75px;\n  border-radius: 50%;\n  background: #e9cb50;\n  inset: 7.5px;\n  box-shadow:\n      0 0 5px #333,\n      inset 2px 2px 3px #f8f4e4,\n      inset -2px -2px 3px #665613;\n  z-index: 1;\n}\n\n.theme-button::after {\n  width: 70px;\n  height: 70px;\n  inset: 10px;\n  border-radius: 50%;\n  box-shadow:\n      10px 60px 0 10px #fff,\n      65px 60px 0 5px #fff,\n      95px 70px 0 10px #fff,\n      135px 45px 0 5px #fff,\n      170px 35px 0 10px #fff,\n      195px -5px 0 10px #fff,\n      -10px 0 0 50px rgba(255, 255, 255, .2),\n      15px 0 0 50px rgba(255, 255, 255, .15),\n      40px 0 0 50px rgba(255, 255, 255, .21),\n      10px 40px 0 10px #abc1d9,\n      70px 35px 0 10px #abc1d9,\n      95px 40px 0 10px #abc1d9,\n      135px 20px 0 10px #abc1d9,\n      155px 15px 0 10px #abc1d9,\n      190px -20px 0 10px #abc1d9;\n}\n\n.theme-button:hover::before {\n  filter: contrast(90%) brightness(110%);\n  scale: 1.05;\n}\n\n.theme-button.active {\n  background-position: 0 0;\n}\n\n.theme-button.active::before {\n  transform: translate(130px);\n  background:\n      radial-gradient(circle at 50% 20px, #939aa5, #939aa5 6.5px, transparent 7px, transparent),\n      radial-gradient(circle at 35% 45px, #939aa5, #939aa5 11.5px, transparent 12px, transparent),\n      radial-gradient(circle at 72% 50px, #939aa5, #939aa5 8.5px, transparent 9px, transparent),\n      radial-gradient(#cbcdda, #cbcdda);\n}\n\n.theme-button.active::after {\n  transform: translate(130px);\n  box-shadow:\n      10px 60px 0 10px transparent,\n      65px 60px 0 5px transparent,\n      95px 70px 0 10px transparent,\n      135px 45px 0 5px transparent,\n      170px 35px 0 10px transparent,\n      195px -5px 0 10px transparent,\n      10px 0 0 50px rgba(255, 255, 255, .2),\n      -15px 0 0 50px rgba(255, 255, 255, .15),\n      -40px 0 0 50px rgba(255, 255, 255, .21),\n      10px 40px 0 10px transparent,\n      70px 35px 0 10px transparent,\n      95px 40px 0 10px transparent,\n      135px 20px 0 10px transparent,\n      155px 15px 0 10px transparent,\n      190px -20px 0 10px transparent;\n}\n\n.theme-ripple-transition {\n  position: fixed;\n  will-change: transform, opacity;\n  pointer-events: none;\n}\n</style>\n"],"mappings":";;uBAEAA,mBAAA,CAKO;IAJLC,EAAE,EAAC,OAAO;IACVC,KAAK,EAJPC,eAAA,EAIQ,cAAc;MAAAC,MAAA,EACFC,MAAA,CAAAC;IAAQ;IACzBC,OAAK,EAAEF,MAAA,CAAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}