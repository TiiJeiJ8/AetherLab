{"ast":null,"code":"import { ref, computed } from 'vue';\nexport default {\n  __name: 'DualActionButton',\n  props: {\n    modelValue: Boolean,\n    // true: auto, false: manual\n    keepActive: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update:modelValue', 'auto', 'apply'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const autoMode = computed({\n      get: () => props.modelValue,\n      set: v => emit('update:modelValue', v)\n    });\n    const isActive = ref(false);\n    function setAutoMode(val) {\n      autoMode.value = val;\n      isActive.value = true;\n      if (val) emit('auto');else emit('apply');\n      if (!props.keepActive) {\n        setTimeout(() => {\n          isActive.value = false;\n        }, 400);\n      }\n    }\n    const indicatorStyle = computed(() => ({\n      left: autoMode.value ? '0%' : '50%',\n      width: '50%'\n    }));\n    const __returned__ = {\n      props,\n      emit,\n      autoMode,\n      isActive,\n      setAutoMode,\n      indicatorStyle,\n      ref,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","props","__props","emit","__emit","autoMode","get","modelValue","set","v","isActive","setAutoMode","val","value","keepActive","setTimeout","indicatorStyle","left","width"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/Common/DualActionButton.vue"],"sourcesContent":["<template>\n<div class=\"dual-action-btn\" :class=\"{ 'active': isActive, 'auto': autoMode }\">\n<button\n    class=\"action-btn left-btn\"\n    :class=\"{ selected: autoMode }\"\n    @click=\"setAutoMode(true)\"\n    :disabled=\"autoMode\"\n>\n    <span class=\"btn-label\">Auto Render</span>\n</button>\n<button\n    class=\"action-btn right-btn\"\n    :class=\"{ selected: !autoMode }\"\n    @click=\"setAutoMode(false)\"\n    :disabled=\"!autoMode\"\n>\n    <span class=\"btn-label\">Apply Config</span>\n</button>\n<transition name=\"slide-indicator\">\n    <div class=\"slide-indicator\" :style=\"indicatorStyle\" />\n</transition>\n</div>\n</template>\n\n<script setup>\nimport { ref, computed, defineEmits, defineProps } from 'vue'\nconst props = defineProps({\n    modelValue: Boolean, // true: auto, false: manual\n    keepActive: { type: Boolean, default: false }\n})\nconst emit = defineEmits(['update:modelValue', 'auto', 'apply'])\n\nconst autoMode = computed({\n    get: () => props.modelValue,\n    set: v => emit('update:modelValue', v)\n})\nconst isActive = ref(false)\n\nfunction setAutoMode (val) {\n  autoMode.value = val\n  isActive.value = true\n  if (val) emit('auto')\n  else emit('apply')\n  if (!props.keepActive) {\n    setTimeout(() => { isActive.value = false }, 400)\n  }\n}\n\nconst indicatorStyle = computed(() => ({\n  left: autoMode.value ? '0%' : '50%',\n  width: '50%'\n}))\n</script>\n\n<style scoped>\n.dual-action-btn {\n  display: flex;\n  position: relative;\n  width: 220px;\n  height: 40px;\n  background: var(--bg-color, #f5f6fa);\n  border-radius: 8px;\n  box-shadow: 0 1px 4px rgba(0,0,0,0.07);\n  overflow: hidden;\n  transition: box-shadow 0.2s;\n}\n.dual-action-btn.active {\n  box-shadow: 0 2px 8px rgba(80, 120, 255, 0.18);\n}\n.action-btn {\n  flex: 1;\n  border: none;\n  background: transparent;\n  font-size: 1em;\n  font-weight: 500;\n  color: #555;\n  cursor: pointer;\n  outline: none;\n  transition: color 0.2s, background 0.2s;\n  z-index: 2;\n  height: 100%;\n}\n.action-btn.selected {\n  color: #2563eb;\n  font-weight: 700;\n  background: rgba(37,99,235,0.08);\n}\n.slide-indicator {\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: 50%;\n  background: linear-gradient(90deg, #2563eb 60%, #60a5fa 100%);\n  border-radius: 8px;\n  z-index: 1;\n  transition: left 0.32s cubic-bezier(.4,1.6,.6,1), background 0.2s;\n  opacity: 0.18;\n}\n.left-btn { border-radius: 8px 0 0 8px; }\n.right-btn { border-radius: 0 8px 8px 0; }\n.btn-label {\n  pointer-events: none;\n}\n</style>\n"],"mappings":"AAyBA,SAASA,GAAG,EAAEC,QAAkC,QAAQ,KAAI;;;;;;;;;;;;;;;;;IAC5D,MAAMC,KAAK,GAAGC,OAAA;IAId,MAAMC,IAAI,GAAGC,MAAA;IAEb,MAAMC,QAAQ,GAAGL,QAAQ,CAAC;MACtBM,GAAG,EAAEA,CAAA,KAAML,KAAK,CAACM,UAAU;MAC3BC,GAAG,EAAEC,CAAC,IAAIN,IAAI,CAAC,mBAAmB,EAAEM,CAAC;IACzC,CAAC;IACD,MAAMC,QAAQ,GAAGX,GAAG,CAAC,KAAK;IAE1B,SAASY,WAAWA,CAAEC,GAAG,EAAE;MACzBP,QAAQ,CAACQ,KAAK,GAAGD,GAAE;MACnBF,QAAQ,CAACG,KAAK,GAAG,IAAG;MACpB,IAAID,GAAG,EAAET,IAAI,CAAC,MAAM,OACfA,IAAI,CAAC,OAAO;MACjB,IAAI,CAACF,KAAK,CAACa,UAAU,EAAE;QACrBC,UAAU,CAAC,MAAM;UAAEL,QAAQ,CAACG,KAAK,GAAG,KAAK;QAAC,CAAC,EAAE,GAAG;MAClD;IACF;IAEA,MAAMG,cAAc,GAAGhB,QAAQ,CAAC,OAAO;MACrCiB,IAAI,EAAEZ,QAAQ,CAACQ,KAAK,GAAG,IAAI,GAAG,KAAK;MACnCK,KAAK,EAAE;IACT,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}