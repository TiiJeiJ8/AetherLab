{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\n// dataMergeUtils.js\n// 多文件数据合并与主键处理工具函数，重构以支持高可扩展性\n\n/* eslint-disable */\n\nimport * as nullHandling from './nullHandling.js';\n\n/**\n * @typedef {Object} ChartConfig\n * @property {string} [type] - 图表类型（如 'pie', 'line', 'bar' 等）\n * @property {Object} [xAxis]\n * @property {Array|Object} [yAxis]\n * @property {Object} [category]\n * @property {Object} [value]\n * @property {Object} [filter]\n */\n\n/**\n * @typedef {Object.<string, Array<Object>>} FileDataMap\n * 文件名到对象数组的映射\n */\n\n/**\n * 判断是否有主键（即所有y轴字段的文件都包含x轴字段）\n * @param {Object} xAxis - x轴配置\n * @param {Array|Object} yAxis - y轴配置\n * @param {FileDataMap} fileDataMap\n * @returns {boolean}\n */\nexport function hasPrimaryKey(xAxis, yAxis, fileDataMap) {\n  if (!xAxis || !xAxis.field) return false;\n  const xField = xAxis.field;\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  return yArr.every(y => {\n    const yFileData = fileDataMap[y.file];\n    return yFileData && yFileData.length > 0 && yFileData[0].hasOwnProperty(xField);\n  });\n}\n\n/**\n * 通用数据过滤器（可插拔）\n * @param {Array} rows\n * @param {Object} filters\n * @returns {Array}\n */\nexport function defaultFilterStrategy(rows, filters) {\n  if (!filters || !filters.filters || !Array.isArray(filters.filters) || filters.filters.length === 0) return rows;\n  const logic = filters.logic || 'AND';\n  const conds = filters.filters || [];\n  if (conds.length === 0) return rows;\n  return rows.filter(row => {\n    const results = conds.map(f => {\n      const val = row[f.field];\n      switch (f.type) {\n        case 'integer':\n          {\n            const num = parseFloat(val);\n            const cmp = parseFloat(f.value);\n            if (f.operator === 'eq') return num === cmp;\n            if (f.operator === 'ne') return num !== cmp;\n            if (f.operator === 'gt') return num > cmp;\n            if (f.operator === 'ge') return num >= cmp;\n            if (f.operator === 'lt') return num < cmp;\n            if (f.operator === 'le') return num <= cmp;\n            return true;\n          }\n        case 'string':\n          {\n            const str = String(val ?? '');\n            const cmp = String(f.value ?? '');\n            if (f.operator === 'eq') return str === cmp;\n            if (f.operator === 'ne') return str !== cmp;\n            if (f.operator === 'contains') return str.includes(cmp);\n            if (f.operator === 'notcontains') return !str.includes(cmp);\n            if (f.operator === 'startsWith') return str.startsWith(cmp);\n            if (f.operator === 'endsWith') return str.endsWith(cmp);\n            return true;\n          }\n        case 'category':\n          {\n            if (f.operator === 'eq') return val === f.value;\n            if (f.operator === 'ne') return val !== f.value;\n            if (f.operator === 'in') return Array.isArray(f.value) ? f.value.includes(val) : false;\n            if (f.operator === 'notin') return Array.isArray(f.value) ? !f.value.includes(val) : false;\n            return true;\n          }\n        case 'boolean':\n          {\n            const boolVal = val === true || val === 'true' || val === 1 || val === '1';\n            const cmp = f.value === true || f.value === 'true' || f.value === 1 || f.value === '1';\n            if (f.operator === 'eq') return boolVal === cmp;\n            if (f.operator === 'ne') return boolVal !== cmp;\n            return true;\n          }\n        case 'date':\n          {\n            const dateVal = new Date(val).getTime();\n            const cmp = new Date(f.value).getTime();\n            if (f.operator === 'eq') return dateVal === cmp;\n            if (f.operator === 'ne') return dateVal !== cmp;\n            if (f.operator === 'before') return dateVal < cmp;\n            if (f.operator === 'after') return dateVal > cmp;\n            return true;\n          }\n        default:\n          return true;\n      }\n    });\n    return logic === 'AND' ? results.every(Boolean) : results.some(Boolean);\n  });\n}\n\n/**\n * 通用缺失值处理器（可插拔）\n * @param {Array} arr\n * @param {string} type\n * @returns {Array}\n */\nexport function applyNullHandling(arr, type) {\n  if (!type || type === 'ignore') return arr;\n  const handler = nullHandling[type] || nullHandling.ignoreNull;\n  return handler(arr);\n}\n\n/**\n * 通用数据提取工具\n */\nexport function extractMainData(config, fileDataMap, filterStrategy = defaultFilterStrategy) {\n  if (!config.xAxis || !config.xAxis.file) return [];\n  let mainData = (fileDataMap[config.xAxis.file] || []).slice(1);\n  if (config.filter && config.filter.filters && config.filter.filters.length) {\n    mainData = filterStrategy(mainData, config.filter);\n  }\n  return mainData;\n}\n\n/**\n * 饼图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction pieChartHandler(config, fileDataMap, options = {}) {\n  const filterStrategy = options.filterStrategy || defaultFilterStrategy;\n  let catData = (fileDataMap[config.category.file] || []).slice(1);\n  let valData = (fileDataMap[config.value.file] || []).slice(1);\n  if (config.filter && config.filter.filters && config.filter.filters.length) {\n    catData = filterStrategy(catData, config.filter);\n    valData = filterStrategy(valData, config.filter);\n  }\n  const len = Math.min(catData.length, valData.length);\n  const result = [];\n  for (let i = 0; i < len; i++) {\n    const name = catData[i][config.category.field];\n    const rawVal = valData[i][config.value.field];\n    const parsedVal = parseFloat(rawVal);\n    const val = rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal) ? null : parsedVal;\n    if (name !== undefined && name !== null && name !== '') {\n      result.push({\n        name,\n        value: val\n      });\n    }\n  }\n  return {\n    xData: [],\n    yDataArr: [],\n    mergeType: 'pie',\n    seriesData: result\n  };\n}\n\n/**\n * 通用折线/柱状图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction xyChartHandler(config, fileDataMap, options = {}) {\n  const filterStrategy = options.filterStrategy || defaultFilterStrategy;\n  const nullHandler = options.nullHandler || applyNullHandling;\n  const mainData = extractMainData(config, fileDataMap, filterStrategy);\n  const xData = mainData.map(row => row[config.xAxis.field]);\n  const yArr = Array.isArray(config.yAxis) ? config.yAxis : [config.yAxis];\n  const usePrimaryKey = hasPrimaryKey(config.xAxis, config.yAxis, fileDataMap);\n  let yDataArr = [];\n  if (usePrimaryKey) {\n    // 主键合并\n    const mainIndexMap = new Map();\n    for (const row of mainData) {\n      mainIndexMap.set(row[config.xAxis.field], row);\n    }\n    yDataArr = yArr.map(y => {\n      const yFileData = (fileDataMap[y.file] || []).slice(1);\n      const yMap = new Map();\n      for (const row of yFileData) {\n        yMap.set(row[config.xAxis.field], row);\n      }\n      let arr = mainData.map(row => {\n        const match = yMap.get(row[config.xAxis.field]);\n        if (!match) return null;\n        const rawVal = match[y.field];\n        const parsedVal = parseFloat(rawVal);\n        return rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal) ? null : parsedVal;\n      });\n      arr = nullHandler(arr, options.nullHandlingType);\n      return arr;\n    });\n  } else {\n    yDataArr = yArr.map(y => {\n      const yFileData = (fileDataMap[y.file] || []).slice(1);\n      let arr = yFileData.filter((row, idx) => mainData[idx]).map(row => {\n        const rawVal = row[y.field];\n        const parsedVal = parseFloat(rawVal);\n        return rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal) ? null : parsedVal;\n      });\n      if (arr.length > xData.length) arr = arr.slice(0, xData.length);\n      while (arr.length < xData.length) arr.push(null);\n      arr = nullHandler(arr, options.nullHandlingType);\n      return arr;\n    });\n  }\n  return {\n    xData,\n    yDataArr,\n    mergeType: usePrimaryKey ? 'primaryKey' : 'rowIndex',\n    seriesData: []\n  };\n}\n\n// 图表类型处理器注册表\nconst chartTypeHandlers = {\n  pie: pieChartHandler,\n  line: xyChartHandler,\n  bar: xyChartHandler\n  // 其他类型可继续扩展\n};\n\n/**\n * 图表数据分发主入口\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options - { filterStrategy, nullHandler, nullHandlingType }\n * @returns {Object}\n */\nexport function mergeChartData(config, fileDataMap, options = {}) {\n  // 参数校验\n  if (!config || typeof config !== 'object') throw new Error('config 必须为对象');\n  if (!fileDataMap || typeof fileDataMap !== 'object') throw new Error('fileDataMap 必须为对象');\n  const type = config.type || inferChartType(config);\n  const handler = chartTypeHandlers[type];\n  if (!handler) throw new Error(`不支持的图表类型: ${type}`);\n  return handler(config, fileDataMap, options);\n}\n\n/**\n * 根据 config 推断图表类型（兼容老数据结构）\n * @param {ChartConfig} config\n * @returns {string}\n */\nfunction inferChartType(config) {\n  if (config.category && config.value) return 'pie';\n  if (config.xAxis && config.yAxis) return 'line'; // 默认折线\n  return 'unknown';\n}\n\n// 导出类型注册表，便于扩展\nexport function registerChartType(type, handler) {\n  chartTypeHandlers[type] = handler;\n}","map":{"version":3,"names":["nullHandling","hasPrimaryKey","xAxis","yAxis","fileDataMap","field","xField","yArr","Array","isArray","every","y","yFileData","file","length","hasOwnProperty","defaultFilterStrategy","rows","filters","logic","conds","filter","row","results","map","f","val","type","num","parseFloat","cmp","value","operator","str","String","includes","startsWith","endsWith","boolVal","dateVal","Date","getTime","Boolean","some","applyNullHandling","arr","handler","ignoreNull","extractMainData","config","filterStrategy","mainData","slice","pieChartHandler","options","catData","category","valData","len","Math","min","result","i","name","rawVal","parsedVal","undefined","Number","isNaN","push","xData","yDataArr","mergeType","seriesData","xyChartHandler","nullHandler","usePrimaryKey","mainIndexMap","Map","set","yMap","match","get","nullHandlingType","idx","chartTypeHandlers","pie","line","bar","mergeChartData","Error","inferChartType","registerChartType"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/utils/dataMergeUtils.js"],"sourcesContent":["\n// dataMergeUtils.js\n// 多文件数据合并与主键处理工具函数，重构以支持高可扩展性\n\n/* eslint-disable */\n\nimport * as nullHandling from './nullHandling.js';\n\n/**\n * @typedef {Object} ChartConfig\n * @property {string} [type] - 图表类型（如 'pie', 'line', 'bar' 等）\n * @property {Object} [xAxis]\n * @property {Array|Object} [yAxis]\n * @property {Object} [category]\n * @property {Object} [value]\n * @property {Object} [filter]\n */\n\n/**\n * @typedef {Object.<string, Array<Object>>} FileDataMap\n * 文件名到对象数组的映射\n */\n\n/**\n * 判断是否有主键（即所有y轴字段的文件都包含x轴字段）\n * @param {Object} xAxis - x轴配置\n * @param {Array|Object} yAxis - y轴配置\n * @param {FileDataMap} fileDataMap\n * @returns {boolean}\n */\nexport function hasPrimaryKey(xAxis, yAxis, fileDataMap) {\n    if (!xAxis || !xAxis.field) return false;\n    const xField = xAxis.field;\n    const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n    return yArr.every(y => {\n        const yFileData = fileDataMap[y.file];\n        return yFileData && yFileData.length > 0 && yFileData[0].hasOwnProperty(xField);\n    });\n}\n\n/**\n * 通用数据过滤器（可插拔）\n * @param {Array} rows\n * @param {Object} filters\n * @returns {Array}\n */\nexport function defaultFilterStrategy(rows, filters) {\n    if (!filters || !filters.filters || !Array.isArray(filters.filters) || filters.filters.length === 0) return rows;\n    const logic = filters.logic || 'AND';\n    const conds = filters.filters || [];\n    if (conds.length === 0) return rows;\n    return rows.filter(row => {\n        const results = conds.map(f => {\n            const val = row[f.field];\n            switch (f.type) {\n                case 'integer': {\n                    const num = parseFloat(val);\n                    const cmp = parseFloat(f.value);\n                    if (f.operator === 'eq') return num === cmp;\n                    if (f.operator === 'ne') return num !== cmp;\n                    if (f.operator === 'gt') return num > cmp;\n                    if (f.operator === 'ge') return num >= cmp;\n                    if (f.operator === 'lt') return num < cmp;\n                    if (f.operator === 'le') return num <= cmp;\n                    return true;\n                }\n                case 'string': {\n                    const str = String(val ?? '');\n                    const cmp = String(f.value ?? '');\n                    if (f.operator === 'eq') return str === cmp;\n                    if (f.operator === 'ne') return str !== cmp;\n                    if (f.operator === 'contains') return str.includes(cmp);\n                    if (f.operator === 'notcontains') return !str.includes(cmp);\n                    if (f.operator === 'startsWith') return str.startsWith(cmp);\n                    if (f.operator === 'endsWith') return str.endsWith(cmp);\n                    return true;\n                }\n                case 'category': {\n                    if (f.operator === 'eq') return val === f.value;\n                    if (f.operator === 'ne') return val !== f.value;\n                    if (f.operator === 'in') return Array.isArray(f.value) ? f.value.includes(val) : false;\n                    if (f.operator === 'notin') return Array.isArray(f.value) ? !f.value.includes(val) : false;\n                    return true;\n                }\n                case 'boolean': {\n                    const boolVal = val === true || val === 'true' || val === 1 || val === '1';\n                    const cmp = f.value === true || f.value === 'true' || f.value === 1 || f.value === '1';\n                    if (f.operator === 'eq') return boolVal === cmp;\n                    if (f.operator === 'ne') return boolVal !== cmp;\n                    return true;\n                }\n                case 'date': {\n                    const dateVal = new Date(val).getTime();\n                    const cmp = new Date(f.value).getTime();\n                    if (f.operator === 'eq') return dateVal === cmp;\n                    if (f.operator === 'ne') return dateVal !== cmp;\n                    if (f.operator === 'before') return dateVal < cmp;\n                    if (f.operator === 'after') return dateVal > cmp;\n                    return true;\n                }\n                default:\n                    return true;\n            }\n        });\n        return logic === 'AND' ? results.every(Boolean) : results.some(Boolean);\n    });\n}\n\n/**\n * 通用缺失值处理器（可插拔）\n * @param {Array} arr\n * @param {string} type\n * @returns {Array}\n */\nexport function applyNullHandling(arr, type) {\n    if (!type || type === 'ignore') return arr;\n    const handler = nullHandling[type] || nullHandling.ignoreNull;\n    return handler(arr);\n}\n\n/**\n * 通用数据提取工具\n */\nexport function extractMainData(config, fileDataMap, filterStrategy = defaultFilterStrategy) {\n    if (!config.xAxis || !config.xAxis.file) return [];\n    let mainData = (fileDataMap[config.xAxis.file] || []).slice(1);\n    if (config.filter && config.filter.filters && config.filter.filters.length) {\n        mainData = filterStrategy(mainData, config.filter);\n    }\n    return mainData;\n}\n\n/**\n * 饼图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction pieChartHandler(config, fileDataMap, options = {}) {\n    const filterStrategy = options.filterStrategy || defaultFilterStrategy;\n    let catData = (fileDataMap[config.category.file] || []).slice(1);\n    let valData = (fileDataMap[config.value.file] || []).slice(1);\n    if (config.filter && config.filter.filters && config.filter.filters.length) {\n        catData = filterStrategy(catData, config.filter);\n        valData = filterStrategy(valData, config.filter);\n    }\n    const len = Math.min(catData.length, valData.length);\n    const result = [];\n    for (let i = 0; i < len; i++) {\n        const name = catData[i][config.category.field];\n        const rawVal = valData[i][config.value.field];\n        const parsedVal = parseFloat(rawVal);\n        const val = (rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal)) ? null : parsedVal;\n        if (name !== undefined && name !== null && name !== '') {\n            result.push({ name, value: val });\n        }\n    }\n    return { xData: [], yDataArr: [], mergeType: 'pie', seriesData: result };\n}\n\n/**\n * 通用折线/柱状图数据处理器\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options\n * @returns {Object}\n */\nfunction xyChartHandler(config, fileDataMap, options = {}) {\n    const filterStrategy = options.filterStrategy || defaultFilterStrategy;\n    const nullHandler = options.nullHandler || applyNullHandling;\n    const mainData = extractMainData(config, fileDataMap, filterStrategy);\n    const xData = mainData.map(row => row[config.xAxis.field]);\n    const yArr = Array.isArray(config.yAxis) ? config.yAxis : [config.yAxis];\n    const usePrimaryKey = hasPrimaryKey(config.xAxis, config.yAxis, fileDataMap);\n    let yDataArr = [];\n    if (usePrimaryKey) {\n        // 主键合并\n        const mainIndexMap = new Map();\n        for (const row of mainData) {\n            mainIndexMap.set(row[config.xAxis.field], row);\n        }\n        yDataArr = yArr.map(y => {\n            const yFileData = (fileDataMap[y.file] || []).slice(1);\n            const yMap = new Map();\n            for (const row of yFileData) {\n                yMap.set(row[config.xAxis.field], row);\n            }\n            let arr = mainData.map(row => {\n                const match = yMap.get(row[config.xAxis.field]);\n                if (!match) return null;\n                const rawVal = match[y.field];\n                const parsedVal = parseFloat(rawVal);\n                return (rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal)) ? null : parsedVal;\n            });\n            arr = nullHandler(arr, options.nullHandlingType);\n            return arr;\n        });\n    } else {\n        yDataArr = yArr.map(y => {\n            const yFileData = (fileDataMap[y.file] || []).slice(1);\n            let arr = yFileData.filter((row, idx) => mainData[idx]).map(row => {\n                const rawVal = row[y.field];\n                const parsedVal = parseFloat(rawVal);\n                return (rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal)) ? null : parsedVal;\n            });\n            if (arr.length > xData.length) arr = arr.slice(0, xData.length);\n            while (arr.length < xData.length) arr.push(null);\n            arr = nullHandler(arr, options.nullHandlingType);\n            return arr;\n        });\n    }\n    return { xData, yDataArr, mergeType: usePrimaryKey ? 'primaryKey' : 'rowIndex', seriesData: [] };\n}\n\n// 图表类型处理器注册表\nconst chartTypeHandlers = {\n    pie: pieChartHandler,\n    line: xyChartHandler,\n    bar: xyChartHandler,\n    // 其他类型可继续扩展\n};\n\n/**\n * 图表数据分发主入口\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {Object} options - { filterStrategy, nullHandler, nullHandlingType }\n * @returns {Object}\n */\nexport function mergeChartData(config, fileDataMap, options = {}) {\n    // 参数校验\n    if (!config || typeof config !== 'object') throw new Error('config 必须为对象');\n    if (!fileDataMap || typeof fileDataMap !== 'object') throw new Error('fileDataMap 必须为对象');\n    const type = config.type || inferChartType(config);\n    const handler = chartTypeHandlers[type];\n    if (!handler) throw new Error(`不支持的图表类型: ${type}`);\n    return handler(config, fileDataMap, options);\n}\n\n/**\n * 根据 config 推断图表类型（兼容老数据结构）\n * @param {ChartConfig} config\n * @returns {string}\n */\nfunction inferChartType(config) {\n    if (config.category && config.value) return 'pie';\n    if (config.xAxis && config.yAxis) return 'line'; // 默认折线\n    return 'unknown';\n}\n\n// 导出类型注册表，便于扩展\nexport function registerChartType(type, handler) {\n    chartTypeHandlers[type] = handler;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}