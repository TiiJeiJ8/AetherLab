{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, renderSlot as _renderSlot, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"virtual-list-outer\",\n    style: _normalizeStyle({\n      height: _ctx.height + 'px',\n      overflow: 'auto',\n      position: 'relative'\n    }),\n    onScroll: _cache[0] || (_cache[0] = (...args) => _ctx.onScroll && _ctx.onScroll(...args)),\n    ref: \"outerRef\"\n  }, [_createElementVNode(\"div\", {\n    style: _normalizeStyle({\n      height: _ctx.totalHeight + 'px',\n      position: 'relative'\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.visibleData, (item, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: _ctx.start + i,\n      style: _normalizeStyle(_ctx.getItemStyle(i))\n    }, [_renderSlot(_ctx.$slots, \"default\", {\n      item: item,\n      index: _ctx.start + i\n    }, undefined, true)], 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))], 4 /* STYLE */)], 36 /* STYLE, NEED_HYDRATION */);\n}","map":{"version":3,"names":["_createElementBlock","class","style","_normalizeStyle","height","_ctx","overflow","position","onScroll","_cache","args","ref","_createElementVNode","totalHeight","_Fragment","_renderList","visibleData","item","i","key","start","getItemStyle","_renderSlot","$slots","index"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\Common\\VirtualList.vue"],"sourcesContent":["<template>\n  <div class=\"virtual-list-outer\" :style=\"{height: height + 'px', overflow: 'auto', position: 'relative'}\" @scroll=\"onScroll\" ref=\"outerRef\">\n    <div :style=\"{height: totalHeight + 'px', position: 'relative'}\">\n      <div v-for=\"(item, i) in visibleData\" :key=\"start + i\" :style=\"getItemStyle(i)\">\n        <slot :item=\"item\" :index=\"start + i\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n/\n\nimport { ref, computed, watch, defineProps } from 'vue'\nconst props = defineProps({\n  data: Array,\n  itemHeight: { type: Number, default: 36 },\n  height: { type: Number, default: 400 },\n  buffer: { type: Number, default: 5 }\n})\nconst outerRef = ref(null)\nconst start = ref(0)\nconst end = ref(0)\nconst visibleCount = computed(() => Math.ceil(props.height / props.itemHeight) + props.buffer)\nconst totalHeight = computed(() => props.data.length * props.itemHeight)\nconst visibleData = computed(() => props.data.slice(start.value, end.value))\nfunction getItemStyle(i) {\n  return {\n    position: 'absolute',\n    top: (start.value + i) * props.itemHeight + 'px',\n    left: 0,\n    right: 0,\n    width: '100%'\n  };\n}\nfunction onScroll(e) {\n  const scrollTop = e.target.scrollTop;\n  start.value = Math.max(0, Math.floor(scrollTop / props.itemHeight) - Math.floor(props.buffer / 2));\n  end.value = Math.min(props.data.length, start.value + visibleCount.value);\n}\nwatch(() => props.data, () => {\n  start.value = 0;\n  end.value = Math.min(props.data.length, visibleCount.value);\n}, { immediate: true });\n</script>\n\n<style scoped>\n.virtual-list-outer {\n  width: 100%;\n}\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAMM;IANDC,KAAK,EAAC,oBAAoB;IAAEC,KAAK,EADxCC,eAAA;MAAAC,MAAA,EACmDC,IAAA,CAAAD,MAAM;MAAAE,QAAA;MAAAC,QAAA;IAAA;IAAmDC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,IAAA,CAAAG,QAAA,IAAAH,IAAA,CAAAG,QAAA,IAAAE,IAAA,CAAQ;IAAEC,GAAG,EAAC;MAC9HC,mBAAA,CAIM;IAJAV,KAAK,EAFfC,eAAA;MAAAC,MAAA,EAE0BC,IAAA,CAAAQ,WAAW;MAAAN,QAAA;IAAA;yBAC/BP,mBAAA,CAEMc,SAAA,QALZC,WAAA,CAG+BV,IAAA,CAAAW,WAAW,EAH1C,CAGmBC,IAAI,EAAEC,CAAC;yBAApBlB,mBAAA,CAEM;MAFiCmB,GAAG,EAAEd,IAAA,CAAAe,KAAK,GAAGF,CAAC;MAAGhB,KAAK,EAHnEC,eAAA,CAGqEE,IAAA,CAAAgB,YAAY,CAACH,CAAC;QAC3EI,WAAA,CAAwCjB,IAAA,CAAAkB,MAAA;MAAjCN,IAAI,EAAEA,IAAI;MAAGO,KAAK,EAAEnB,IAAA,CAAAe,KAAK,GAAGF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}