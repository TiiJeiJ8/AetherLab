{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  width: \"150\",\n  height: \"120\",\n  viewBox: \"0 0 120 80\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  class: \"empty-gauge-svg\"\n};\nconst _hoisted_2 = [\"x2\", \"y2\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"svg\", _hoisted_1, [_createElementVNode(\"g\", null, [_createCommentVNode(\" 仪表盘弧形 \"), _cache[0] || (_cache[0] = _createElementVNode(\"path\", {\n    class: \"gauge-arc\",\n    d: \"M30,60 A30,30 0 0,1 90,60\"\n  }, null, -1 /* HOISTED */)), _createCommentVNode(\" 动态指针 \"), _createElementVNode(\"line\", {\n    class: \"gauge-pointer\",\n    x1: 60,\n    y1: 60,\n    x2: $setup.pointerX,\n    y2: $setup.pointerY\n  }, null, 8 /* PROPS */, _hoisted_2), _createCommentVNode(\" 圆心 \"), _cache[1] || (_cache[1] = _createElementVNode(\"circle\", {\n    cx: \"60\",\n    cy: \"60\",\n    r: \"4\",\n    fill: \"#FFB300\"\n  }, null, -1 /* HOISTED */))])]);\n}","map":{"version":3,"names":["width","height","viewBox","fill","xmlns","class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","d","x1","y1","x2","$setup","pointerX","y2","pointerY","_hoisted_2","cx","cy","r"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\svg\\GaugeChartIcon.vue"],"sourcesContent":["<template>\n<svg width=\"150\" height=\"120\" viewBox=\"0 0 120 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"empty-gauge-svg\">\n    <g>\n        <!-- 仪表盘弧形 -->\n        <path class=\"gauge-arc\" d=\"M30,60 A30,30 0 0,1 90,60\" />\n        <!-- 动态指针 -->\n        <line class=\"gauge-pointer\" :x1=\"60\" :y1=\"60\" :x2=\"pointerX\" :y2=\"pointerY\" />\n        <!-- 圆心 -->\n        <circle cx=\"60\" cy=\"60\" r=\"4\" fill=\"#FFB300\" />\n    </g>\n</svg>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue'\nconst t = ref(0)\nlet animId = null\nconst min = Math.PI, max = 0\nconst pointerAngle = computed(() => min + (max-min)*t.value)\nconst pointerX = computed(() => 60 + 28*Math.cos(pointerAngle.value))\nconst pointerY = computed(() => 60 - 28*Math.sin(pointerAngle.value))\n\n// 动画阶段：0=加速，1=抖动，2=回原点\nlet phase = 0\nlet phaseStart = 0\nlet shakeCount = 0\nconst accelDuration = 700 // ms\nconst shakeDuration = 600 // ms\nconst returnDuration = 900 // ms\nconst shakeTimes = 3\n\nfunction easeOutCubic(x) { return 1 - Math.pow(1 - x, 3) }\nfunction easeInCubic(x) { return x * x * x }\nfunction easeOutElastic(x) {\n  // 弹性抖动\n  const c4 = (2 * Math.PI) / 3\n  return x === 0\n    ? 0\n    : x === 1\n    ? 1\n    : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1\n}\n\nfunction animateGauge(ts) {\n  if (!animateGauge.last) animateGauge.last = ts\n  const elapsed = ts - animateGauge.last + phaseStart\n  if (phase === 0) {\n    // 加速到最大\n    let p = Math.min(elapsed / accelDuration, 1)\n    t.value = easeOutCubic(p)\n    if (p >= 1) {\n      phase = 1; phaseStart = 0; animateGauge.last = ts; shakeCount = 0\n    } else {\n      animId = requestAnimationFrame(animateGauge)\n      return\n    }\n  }\n  if (phase === 1) {\n    // 抖动\n    let p = Math.min(elapsed / shakeDuration, 1)\n    t.value = 1 - 0.08 * Math.sin(p * shakeTimes * Math.PI * 2) * (1 - p)\n    if (p >= 1) {\n      phase = 2; phaseStart = 0; animateGauge.last = ts\n    } else {\n      animId = requestAnimationFrame(animateGauge)\n      return\n    }\n  }\n  if (phase === 2) {\n    // 回原点\n    let p = Math.min(elapsed / returnDuration, 1)\n    t.value = 1 - easeInCubic(p)\n    if (p >= 1) {\n      // 停顿后循环\n      setTimeout(() => {\n        phase = 0; phaseStart = 0; animateGauge.last = undefined; t.value = 0\n        animId = requestAnimationFrame(animateGauge)\n      }, 400)\n      return\n    } else {\n      animId = requestAnimationFrame(animateGauge)\n      return\n    }\n  }\n}\n\nonMounted(() => {\n  t.value = 0; phase = 0; phaseStart = 0; animateGauge.last = undefined\n  animId = requestAnimationFrame(animateGauge)\n})\nonBeforeUnmount(() => { if (animId) cancelAnimationFrame(animId) })\n</script>\n<style scoped>\n.empty-gauge-svg { display: block; margin: 0 auto; animation: floatX 4.2s ease-in-out infinite; }\n.gauge-arc {\n    fill: none;\n    stroke: #A0C4FF;\n    stroke-width: 7;\n    opacity: 0.18;\n}\n.gauge-pointer {\n    stroke: #4F8EF7;\n    stroke-width: 5;\n    stroke-linecap: round;\n    opacity: 0.7;\n    transition: x2 0.32s, y2 0.32s, opacity 0.32s;\n}\n@keyframes floatX {\n    0% { transform: translateY(0) translateX(0); }\n    25% { transform: translateY(-8px) translateX(4px); }\n    50% { transform: translateY(-12px) translateX(-4px); }\n    75% { transform: translateY(-8px) translateX(4px); }\n    100% { transform: translateY(0) translateX(0); }\n}\n</style>\n"],"mappings":";;EACKA,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC,KAAK;EAACC,OAAO,EAAC,YAAY;EAACC,IAAI,EAAC,MAAM;EAACC,KAAK,EAAC,4BAA4B;EAACC,KAAK,EAAC;;mBADxG;;uBACAC,mBAAA,CASM,OATNC,UASM,GARFC,mBAAA,CAOI,YANAC,mBAAA,WAAc,E,0BACdD,mBAAA,CAAwD;IAAlDH,KAAK,EAAC,WAAW;IAACK,CAAC,EAAC;+BAC1BD,mBAAA,UAAa,EACbD,mBAAA,CAA8E;IAAxEH,KAAK,EAAC,eAAe;IAAEM,EAAE,EAAE,EAAE;IAAGC,EAAE,EAAE,EAAE;IAAGC,EAAE,EAAEC,MAAA,CAAAC,QAAQ;IAAGC,EAAE,EAAEF,MAAA,CAAAG;0BAN1EC,UAAA,GAOQT,mBAAA,QAAW,E,0BACXD,mBAAA,CAA+C;IAAvCW,EAAE,EAAC,IAAI;IAACC,EAAE,EAAC,IAAI;IAACC,CAAC,EAAC,GAAG;IAAClB,IAAI,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}