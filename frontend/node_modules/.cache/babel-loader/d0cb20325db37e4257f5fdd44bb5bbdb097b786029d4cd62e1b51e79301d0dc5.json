{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-display\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"empty-tip\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  ref: \"chartRef\",\n  class: \"chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$setup.hasSeries ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"No Charts data\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */))]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","$setup","hasSeries","_hoisted_2","_hoisted_3"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\ChartDisplay.vue"],"sourcesContent":["<template>\n<div class=\"chart-display\">\n    <div v-if=\"!hasSeries\" class=\"empty-tip\">No Charts data</div>\n    <div v-else ref=\"chartRef\" class=\"chart-container\"></div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, watch, onMounted, onBeforeUnmount, computed } from 'vue'\nimport * as echarts from 'echarts'\n\nconst props = defineProps({\n    option: { type: Object, required: true }\n})\n\nconst chartRef = ref(null)\n\nlet chartInstance = null\nconst dpiScale = ref(1)\n\nfunction updateDpiScale() {\n    const w = window.innerWidth\n    if (w >= 3840) dpiScale.value = 2.2 // 4K\n    else if (w >= 2560) dpiScale.value = 1.6 // 2K\n    else if (w >= 1920) dpiScale.value = 1.2 // 1080p\n    else dpiScale.value = 1\n}\n\nonMounted(() => {\n    updateDpiScale()\n    window.addEventListener('resize', updateDpiScale)\n})\nonBeforeUnmount(() => {\n    window.removeEventListener('resize', updateDpiScale)\n})\n\nconst hasSeries = computed(() => {\n    return props.option && Array.isArray(props.option.series) && props.option.series.length > 0\n})\n\nfunction renderChart() {\n    if (!hasSeries.value) return\n    if (!chartInstance && chartRef.value) {\n        chartInstance = echarts.init(chartRef.value)\n    }\n    if (chartInstance && props.option) {\n        // 复制 option，动态调整字体/线宽等\n        const opt = JSON.parse(JSON.stringify(props.option))\n        const scale = dpiScale.value\n        // 标题、图例、坐标轴、系列label等字体缩放\n        if (opt.title) {\n            if (opt.title.textStyle) opt.title.textStyle.fontSize = Math.round((opt.title.textStyle.fontSize||16)*scale)\n            else opt.title.textStyle = { fontSize: Math.round(16*scale) }\n        }\n        if (opt.legend && opt.legend.textStyle) {\n            opt.legend.textStyle.fontSize = Math.round((opt.legend.textStyle.fontSize||14)*scale)\n        }\n        if (opt.xAxis) {\n            const arr = Array.isArray(opt.xAxis) ? opt.xAxis : [opt.xAxis]\n            arr.forEach(ax => {\n                if (ax.axisLabel) ax.axisLabel.fontSize = Math.round((ax.axisLabel.fontSize||12)*scale)\n                if (ax.nameTextStyle) ax.nameTextStyle.fontSize = Math.round((ax.nameTextStyle.fontSize||12)*scale)\n            })\n        }\n        if (opt.yAxis) {\n            const arr = Array.isArray(opt.yAxis) ? opt.yAxis : [opt.yAxis]\n            arr.forEach(ax => {\n                if (ax.axisLabel) ax.axisLabel.fontSize = Math.round((ax.axisLabel.fontSize||12)*scale)\n                if (ax.nameTextStyle) ax.nameTextStyle.fontSize = Math.round((ax.nameTextStyle.fontSize||12)*scale)\n            })\n        }\n        if (opt.series) {\n            const arr = Array.isArray(opt.series) ? opt.series : [opt.series]\n            arr.forEach(s => {\n                if (s.label && s.label.fontSize) s.label.fontSize = Math.round(s.label.fontSize*scale)\n                else if (s.label) s.label.fontSize = Math.round(12*scale)\n                if (s.lineStyle && s.lineStyle.width) s.lineStyle.width = Math.round(s.lineStyle.width*scale)\n            })\n        }\n        chartInstance.setOption(opt, true)\n    }\n}\n\nwatch(() => props.option, renderChart, { deep: true })\nonMounted(renderChart)\nonBeforeUnmount(() => {\n    if (chartInstance) chartInstance.dispose()\n})\n</script>\n\n<style scoped>\n\n.chart-display {\n    width: 100%;\n    height: 100%;\n    min-height: clamp(300px, 60vh, 600px); /* 响应式高度 */\n    background: var(--bg-color, #fff);\n    border-radius: clamp(8px, 2vw, 12px);\n    box-shadow: 0 0 1px 1px var(--text-color);\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: clamp(10px, 2vw, 20px);\n    /* 超大屏下自动放大 */\n    font-size: 1rem;\n}\n\n.chart-container {\n    width: 100% !important;\n    height: 100% !important;\n    min-height: inherit;\n}\n\n.empty-tip {\n    color: #aaa;\n    font-size: clamp(1em, 2vw, 1.2em);\n    text-align: center;\n    letter-spacing: 1px;\n    padding: 20px;\n    user-select: none;\n}\n\n/* 小屏幕适配 */\n@media (max-width: 767px) {\n    .chart-display {\n        height: 100%;      /* 填充父容器 */\n        padding: 8px;\n        border-radius: 8px;\n    }\n\n    .empty-tip {\n        font-size: 0.9em;\n        padding: 10px;\n    }\n}\n</style>\n"],"mappings":";;EACKA,KAAK,EAAC;AAAe;;EAD1BC,GAAA;EAE2BD,KAAK,EAAC;;;EAFjCC,GAAA;EAGgBC,GAAG,EAAC,UAAU;EAACF,KAAK,EAAC;;;uBAFrCG,mBAAA,CAGM,OAHNC,UAGM,G,CAFUC,MAAA,CAAAC,SAAS,I,cAArBH,mBAAA,CAA6D,OAA7DI,UAA6D,EAApB,gBAAc,M,cACvDJ,mBAAA,CAAyD,OAAzDK,UAAyD,+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}