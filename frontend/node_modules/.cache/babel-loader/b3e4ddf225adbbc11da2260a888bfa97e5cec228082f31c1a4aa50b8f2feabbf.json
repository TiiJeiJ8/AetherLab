{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport TopBar from '../components/TopBar.vue';\nimport SideBar from '../components/SideBar.vue';\nimport ChartTypeSelector from '../components/ChartIcon.vue';\nimport ChartDisplay from '../components/ChartDisplay.vue';\nimport ChartHistoryModal from '../components/ChartHistoryModal.vue';\nimport FileUploadModal from '../components/FileUploadModal.vue';\nimport DataPreviewModal from '../components/DataPreviewModal.vue';\nimport FileWorkspace from '../components/FileWorkspace.vue';\nimport DataMappingPanel from '../components/DataMappingPanel.vue';\nimport FileStructureModal from '../components/FileStructureModal.vue';\nimport { getFilePreview } from '../services/FileServices.js';\nimport { ChartDataService, MockFileDataService } from '../services/ChartDataService.js';\nimport { ref, nextTick, computed, onMounted } from 'vue';\n\n// 文件上传相关\n\nexport default {\n  __name: 'ChartVisualizations',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const showFileUpload = ref(false);\n    function UploadFiles() {\n      showFileUpload.value = true;\n    }\n\n    // 数据预览相关\n    const showDataPreview = ref(false);\n    const currentDataFile = ref(null);\n    const previewData = ref([]);\n\n    // 工作区相关\n    const workspaceFiles = ref([]);\n\n    // 文件结构相关\n    const showFileStructure = ref(false);\n    const availableColumns = ref([]);\n\n    // 图表类型选择\n    const selectedChartType = ref('line');\n\n    // 数据映射配置\n    const currentMapping = ref({});\n    const currentFilter = ref({\n      mode: 'all'\n    });\n\n    // 临时数据集\n    const tempDatasets = ref([]);\n\n    // 测试图表绘制\n    const chartOption = ref(null);\n\n    // 图表存储区（可从后端获取）\n    const chartHistory = ref([{\n      title: '销售柱状图',\n      option: {\n        title: {\n          text: '销售柱状图'\n        },\n        tooltip: {},\n        xAxis: {\n          data: ['一季度', '二季度', '三季度', '四季度']\n        },\n        yAxis: {},\n        series: [{\n          type: 'bar',\n          data: [120, 200, 150, 80]\n        }]\n      }\n    }, {\n      title: '折线趋势',\n      option: {\n        title: {\n          text: '折线趋势'\n        },\n        tooltip: {},\n        xAxis: {\n          data: ['1月', '2月', '3月', '4月']\n        },\n        yAxis: {},\n        series: [{\n          type: 'line',\n          data: [30, 50, 80, 65]\n        }]\n      }\n    }, {\n      title: '饼图示例',\n      option: {\n        title: {\n          text: '饼图示例'\n        },\n        tooltip: {},\n        series: [{\n          type: 'pie',\n          radius: '60%',\n          data: [{\n            value: 40,\n            name: 'A类'\n          }, {\n            value: 32,\n            name: 'B类'\n          }, {\n            value: 28,\n            name: 'C类'\n          }]\n        }]\n      }\n    }]);\n    const showHistory = ref(false);\n    function openHistory() {\n      showHistory.value = true;\n    }\n    function previewChart(item) {\n      chartOption.value = null;\n      nextTick(() => {\n        chartOption.value = JSON.parse(JSON.stringify(item.option));\n        showHistory.value = false;\n      });\n    }\n    function deleteChart(idx) {\n      chartHistory.value.splice(idx, 1);\n    }\n\n    // 图表选择\n    function onChartTypeSelect(type) {\n      console.log(`Selected chart type: ${type}`);\n      selectedChartType.value = type;\n\n      // 重新验证当前映射配置\n      if (Object.keys(currentMapping.value).length > 0) {\n        validateAndRenderChart();\n      }\n    }\n\n    // 工作区相关方法\n    function handleWorkspaceUpdate(files) {\n      workspaceFiles.value = [...files];\n      console.log('Workspace updated:', workspaceFiles.value.length, 'files');\n    }\n    function handleWorkspaceRemove(file) {\n      console.log('File removed from workspace:', file.name);\n      // 从工作区数组中移除文件\n      const index = workspaceFiles.value.findIndex(f => f.id === file.id);\n      if (index !== -1) {\n        workspaceFiles.value.splice(index, 1);\n      }\n    }\n    function handleWorkspacePreview(file) {\n      // 预览工作区中的文件\n      console.log('Preview workspace file:', file.name);\n      currentDataFile.value = file;\n\n      // 使用与 FileUploadModal 相同的预览逻辑\n      if (file.previewData) {\n        // 如果文件已经有预览数据，直接使用\n        previewData.value = file.previewData;\n        showDataPreview.value = true;\n      } else {\n        // 否则读取文件内容\n        loadFilePreview(file);\n      }\n    }\n\n    // 加载文件预览数据\n    async function loadFilePreview(file) {\n      try {\n        const previewResult = await getFilePreview(file.id);\n        previewData.value = previewResult.data;\n        showDataPreview.value = true;\n      } catch (error) {\n        console.error('Preview failed:', error);\n        alert('Preview failed: ' + error.message);\n      }\n    }\n    function handleWorkspaceClear() {\n      console.log('Workspace cleared');\n      workspaceFiles.value = [];\n      availableColumns.value = [];\n      currentMapping.value = {};\n      chartOption.value = null;\n    }\n\n    // 显示文件结构\n    function handleShowFileStructure(files) {\n      console.log('Show file structure for', files.length, 'files');\n      showFileStructure.value = true;\n      updateAvailableColumns(files);\n    }\n\n    // 更新可用列\n    function updateAvailableColumns(files) {\n      const columns = [];\n      files.forEach(file => {\n        // 为每个文件生成模拟数据和列结构\n        if (!file.data) {\n          file.data = MockFileDataService.generateMockData(file);\n        }\n        if (file.data && file.data.length > 0) {\n          const firstRow = file.data[0];\n          Object.keys(firstRow).forEach(columnName => {\n            const column = {\n              name: columnName,\n              type: inferDataType(firstRow[columnName]),\n              fileId: file.id,\n              fileName: file.name,\n              samples: file.data.slice(0, 5).map(row => row[columnName])\n            };\n            columns.push(column);\n          });\n        }\n      });\n      availableColumns.value = columns;\n    }\n\n    // 推断数据类型\n    function inferDataType(value) {\n      if (typeof value === 'number') {\n        return 'number';\n      } else if (value instanceof Date || /^\\d{4}-\\d{2}-\\d{2}/.test(value)) {\n        return 'date';\n      } else {\n        return 'string';\n      }\n    }\n\n    // 处理列拖拽\n    function handleColumnDrag(columnData) {\n      console.log('Column dragged:', columnData);\n    }\n\n    // 处理临时数据集创建\n    function handleTempDatasetCreated(datasetInfo) {\n      console.log('Temp dataset created:', datasetInfo);\n      tempDatasets.value.push(datasetInfo);\n    }\n\n    // 处理数据映射变化\n    function handleMappingChanged({\n      mapping,\n      filter\n    }) {\n      console.log('Mapping changed:', mapping, filter);\n      currentMapping.value = mapping;\n      currentFilter.value = filter;\n      validateAndRenderChart();\n    }\n\n    // 验证并渲染图表\n    function validateAndRenderChart() {\n      if (!selectedChartType.value || Object.keys(currentMapping.value).length === 0) {\n        return;\n      }\n      try {\n        const result = ChartDataService.generateChartData(workspaceFiles.value, currentMapping.value, currentFilter.value, selectedChartType.value);\n        if (result.success) {\n          chartOption.value = null;\n          nextTick(() => {\n            chartOption.value = result.data;\n          });\n        } else {\n          console.error('Chart generation failed:', result.error);\n          alert('图表生成失败: ' + result.error);\n        }\n      } catch (error) {\n        console.error('Chart generation error:', error);\n        alert('图表生成错误: ' + error.message);\n      }\n    }\n\n    // 处理保存图表\n    function handleSaveChart() {\n      if (!chartOption.value) {\n        alert('没有可保存的图表');\n        return;\n      }\n      try {\n        const chartHistory = ChartDataService.generateChartHistory(chartOption.value, currentMapping.value, selectedChartType.value);\n\n        // 添加到历史记录\n        chartHistory.value.push(chartHistory);\n\n        // 保存到本地存储\n        saveChartToLocalStorage(chartHistory);\n        alert('图表已保存到历史记录');\n      } catch (error) {\n        console.error('Save chart error:', error);\n        alert('保存图表失败: ' + error.message);\n      }\n    }\n\n    // 保存图表到本地存储\n    function saveChartToLocalStorage(chart) {\n      try {\n        const savedCharts = JSON.parse(localStorage.getItem('savedCharts') || '[]');\n        savedCharts.push(chart);\n        localStorage.setItem('savedCharts', JSON.stringify(savedCharts));\n      } catch (error) {\n        console.error('Save to localStorage failed:', error);\n      }\n    }\n\n    // 从本地存储加载图表\n    function loadChartsFromLocalStorage() {\n      try {\n        const savedCharts = JSON.parse(localStorage.getItem('savedCharts') || '[]');\n        chartHistory.value = [...chartHistory.value, ...savedCharts];\n      } catch (error) {\n        console.error('Load from localStorage failed:', error);\n      }\n    }\n\n    // 组件挂载时加载本地存储的图表\n    onMounted(() => {\n      loadChartsFromLocalStorage();\n    });\n    const __returned__ = {\n      showFileUpload,\n      UploadFiles,\n      showDataPreview,\n      currentDataFile,\n      previewData,\n      workspaceFiles,\n      showFileStructure,\n      availableColumns,\n      selectedChartType,\n      currentMapping,\n      currentFilter,\n      tempDatasets,\n      chartOption,\n      chartHistory,\n      showHistory,\n      openHistory,\n      previewChart,\n      deleteChart,\n      onChartTypeSelect,\n      handleWorkspaceUpdate,\n      handleWorkspaceRemove,\n      handleWorkspacePreview,\n      loadFilePreview,\n      handleWorkspaceClear,\n      handleShowFileStructure,\n      updateAvailableColumns,\n      inferDataType,\n      handleColumnDrag,\n      handleTempDatasetCreated,\n      handleMappingChanged,\n      validateAndRenderChart,\n      handleSaveChart,\n      saveChartToLocalStorage,\n      loadChartsFromLocalStorage,\n      TopBar,\n      SideBar,\n      ChartTypeSelector,\n      ChartDisplay,\n      ChartHistoryModal,\n      FileUploadModal,\n      DataPreviewModal,\n      FileWorkspace,\n      DataMappingPanel,\n      FileStructureModal,\n      get getFilePreview() {\n        return getFilePreview;\n      },\n      get ChartDataService() {\n        return ChartDataService;\n      },\n      get MockFileDataService() {\n        return MockFileDataService;\n      },\n      ref,\n      nextTick,\n      computed,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["TopBar","SideBar","ChartTypeSelector","ChartDisplay","ChartHistoryModal","FileUploadModal","DataPreviewModal","FileWorkspace","DataMappingPanel","FileStructureModal","getFilePreview","ChartDataService","MockFileDataService","ref","nextTick","computed","onMounted","showFileUpload","UploadFiles","value","showDataPreview","currentDataFile","previewData","workspaceFiles","showFileStructure","availableColumns","selectedChartType","currentMapping","currentFilter","mode","tempDatasets","chartOption","chartHistory","title","option","text","tooltip","xAxis","data","yAxis","series","type","radius","name","showHistory","openHistory","previewChart","item","JSON","parse","stringify","deleteChart","idx","splice","onChartTypeSelect","console","log","Object","keys","length","validateAndRenderChart","handleWorkspaceUpdate","files","handleWorkspaceRemove","file","index","findIndex","f","id","handleWorkspacePreview","loadFilePreview","previewResult","error","alert","message","handleWorkspaceClear","handleShowFileStructure","updateAvailableColumns","columns","forEach","generateMockData","firstRow","columnName","column","inferDataType","fileId","fileName","samples","slice","map","row","push","Date","test","handleColumnDrag","columnData","handleTempDatasetCreated","datasetInfo","handleMappingChanged","mapping","filter","result","generateChartData","success","handleSaveChart","generateChartHistory","saveChartToLocalStorage","chart","savedCharts","localStorage","getItem","setItem","loadChartsFromLocalStorage"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/views/ChartVisualizations.vue"],"sourcesContent":["<template>\n<div class=\"py-5\">\n  <TopBar :actions=\"[\n    { type: 'button', label: 'Files', onClick: UploadFiles },\n    { type: 'button', label: 'Chart History', onClick: openHistory},\n    { type: 'button', label: 'Dashboard', },\n    { type: 'button', label: 'Instruction', to: '/under-construction'},\n    { type: 'button', label: 'Back2Home', to: '/'},\n  ]\"/>\n</div>\n\n<!-- 左侧边栏 -->\n<SideBar\nposition=\"left\"\n:collapsedWidth=\"40\"\n:expandedWidth=\"180\">\n  <ChartTypeSelector @select=\"onChartTypeSelect\" />\n</SideBar>\n\n<!-- 右侧边栏 -->\n<SideBar\nposition=\"right\"\n:collapsedWidth=\"40\"\n:expandedWidth=\"400\">\n  <DataMappingPanel\n    :chart-type=\"selectedChartType\"\n    :available-columns=\"availableColumns\"\n    @mapping-changed=\"handleMappingChanged\"\n    @save-chart=\"handleSaveChart\"\n  />\n</SideBar>\n\n<!-- 绘制区 -->\n<div class=\"main-content\">\n  <section class=\"chart-workspace\">\n    <ChartDisplay v-if=\"chartOption\" :option=\"chartOption\" />\n  </section>\n</div>\n\n<!-- 图表存储区 -->\n<ChartHistoryModal\n  :show=\"showHistory\"\n  :chartHistory=\"chartHistory\"\n  @close=\"showHistory = false\"\n  @preview=\"previewChart\"\n  @delete=\"deleteChart\"\n/>\n\n<!-- 文件上传弹窗 -->\n<FileUploadModal\n  v-if=\"showFileUpload\"\n  :show=\"showFileUpload\"\n  :workspaceFiles=\"workspaceFiles\"\n  @close=\"showFileUpload = false\"\n  @workspace-updated=\"handleWorkspaceUpdate\"\n/>\n\n<!-- 数据预览弹窗 -->\n<DataPreviewModal\n  v-if=\"showDataPreview\"\n  :show=\"showDataPreview\"\n  :current-file=\"currentDataFile\"\n  :preview-data=\"previewData\"\n  @close=\"showDataPreview = false\"\n/>\n\n<!-- 文件工作区 -->\n<FileWorkspace\n  :files=\"workspaceFiles\"\n  @remove=\"handleWorkspaceRemove\"\n  @preview=\"handleWorkspacePreview\"\n  @clear=\"handleWorkspaceClear\"\n  @show-structure=\"handleShowFileStructure\"\n/>\n\n<!-- 文件结构浮窗 -->\n<FileStructureModal\n  :show=\"showFileStructure\"\n  :files=\"workspaceFiles\"\n  @close=\"showFileStructure = false\"\n  @column-drag=\"handleColumnDrag\"\n  @temp-dataset-created=\"handleTempDatasetCreated\"\n/>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport TopBar from '../components/TopBar.vue'\nimport SideBar from '../components/SideBar.vue'\nimport ChartTypeSelector from '../components/ChartIcon.vue'\nimport ChartDisplay from '../components/ChartDisplay.vue'\nimport ChartHistoryModal from '../components/ChartHistoryModal.vue'\nimport FileUploadModal from '../components/FileUploadModal.vue'\nimport DataPreviewModal from '../components/DataPreviewModal.vue'\nimport FileWorkspace from '../components/FileWorkspace.vue'\nimport DataMappingPanel from '../components/DataMappingPanel.vue'\nimport FileStructureModal from '../components/FileStructureModal.vue'\nimport { getFilePreview } from '../services/FileServices.js'\nimport { ChartDataService, MockFileDataService } from '../services/ChartDataService.js'\nimport {ref, nextTick, computed, onMounted} from 'vue'\n\n// 文件上传相关\nconst showFileUpload = ref(false)\nfunction UploadFiles() {\n  showFileUpload.value = true\n}\n\n// 数据预览相关\nconst showDataPreview = ref(false)\nconst currentDataFile = ref(null)\nconst previewData = ref([])\n\n// 工作区相关\nconst workspaceFiles = ref([])\n\n// 文件结构相关\nconst showFileStructure = ref(false)\nconst availableColumns = ref([])\n\n// 图表类型选择\nconst selectedChartType = ref('line')\n\n// 数据映射配置\nconst currentMapping = ref({})\nconst currentFilter = ref({ mode: 'all' })\n\n// 临时数据集\nconst tempDatasets = ref([])\n\n// 测试图表绘制\nconst chartOption = ref(null)\n\n// 图表存储区（可从后端获取）\nconst chartHistory = ref([\n  {\n    title: '销售柱状图',\n    option: {\n      title: { text: '销售柱状图' },\n      tooltip: {},\n      xAxis: { data: ['一季度', '二季度', '三季度', '四季度'] },\n      yAxis: {},\n      series: [{ type: 'bar', data: [120, 200, 150, 80] }]\n    }\n  },\n  {\n    title: '折线趋势',\n    option: {\n      title: { text: '折线趋势' },\n      tooltip: {},\n      xAxis: { data: ['1月', '2月', '3月', '4月'] },\n      yAxis: {},\n      series: [{ type: 'line', data: [30, 50, 80, 65] }]\n    }\n  },\n  {\n    title: '饼图示例',\n    option: {\n      title: { text: '饼图示例' },\n      tooltip: {},\n      series: [\n        {\n          type: 'pie',\n          radius: '60%',\n          data: [\n            { value: 40, name: 'A类' },\n            { value: 32, name: 'B类' },\n            { value: 28, name: 'C类' }\n          ]\n        }\n      ]\n    }\n  }\n])\n\nconst showHistory = ref(false)\nfunction openHistory() {\n  showHistory.value = true\n}\nfunction previewChart(item) {\n  chartOption.value = null\n  nextTick(() => {\n    chartOption.value = JSON.parse(JSON.stringify(item.option))\n    showHistory.value = false\n  })\n}\nfunction deleteChart(idx) {\n  chartHistory.value.splice(idx, 1)\n}\n\n// 图表选择\nfunction onChartTypeSelect(type) {\n    console.log(`Selected chart type: ${type}`)\n    selectedChartType.value = type\n    \n    // 重新验证当前映射配置\n    if (Object.keys(currentMapping.value).length > 0) {\n        validateAndRenderChart()\n    }\n}\n\n// 工作区相关方法\nfunction handleWorkspaceUpdate(files) {\n    workspaceFiles.value = [...files]\n    console.log('Workspace updated:', workspaceFiles.value.length, 'files')\n}\n\nfunction handleWorkspaceRemove(file) {\n    console.log('File removed from workspace:', file.name)\n    // 从工作区数组中移除文件\n    const index = workspaceFiles.value.findIndex(f => f.id === file.id)\n    if (index !== -1) {\n        workspaceFiles.value.splice(index, 1)\n    }\n}\n\nfunction handleWorkspacePreview(file) {\n    // 预览工作区中的文件\n    console.log('Preview workspace file:', file.name)\n    currentDataFile.value = file\n    \n    // 使用与 FileUploadModal 相同的预览逻辑\n    if (file.previewData) {\n        // 如果文件已经有预览数据，直接使用\n        previewData.value = file.previewData\n        showDataPreview.value = true\n    } else {\n        // 否则读取文件内容\n        loadFilePreview(file)\n    }\n}\n\n// 加载文件预览数据\nasync function loadFilePreview(file) {\n    try {\n        const previewResult = await getFilePreview(file.id)\n        previewData.value = previewResult.data\n        showDataPreview.value = true\n    } catch (error) {\n        console.error('Preview failed:', error)\n        alert('Preview failed: ' + error.message)\n    }\n}\n\nfunction handleWorkspaceClear() {\n    console.log('Workspace cleared')\n    workspaceFiles.value = []\n    availableColumns.value = []\n    currentMapping.value = {}\n    chartOption.value = null\n}\n\n// 显示文件结构\nfunction handleShowFileStructure(files) {\n    console.log('Show file structure for', files.length, 'files')\n    showFileStructure.value = true\n    updateAvailableColumns(files)\n}\n\n// 更新可用列\nfunction updateAvailableColumns(files) {\n    const columns = []\n    files.forEach(file => {\n        // 为每个文件生成模拟数据和列结构\n        if (!file.data) {\n            file.data = MockFileDataService.generateMockData(file)\n        }\n        \n        if (file.data && file.data.length > 0) {\n            const firstRow = file.data[0]\n            Object.keys(firstRow).forEach(columnName => {\n                const column = {\n                    name: columnName,\n                    type: inferDataType(firstRow[columnName]),\n                    fileId: file.id,\n                    fileName: file.name,\n                    samples: file.data.slice(0, 5).map(row => row[columnName])\n                }\n                columns.push(column)\n            })\n        }\n    })\n    availableColumns.value = columns\n}\n\n// 推断数据类型\nfunction inferDataType(value) {\n    if (typeof value === 'number') {\n        return 'number'\n    } else if (value instanceof Date || /^\\d{4}-\\d{2}-\\d{2}/.test(value)) {\n        return 'date'\n    } else {\n        return 'string'\n    }\n}\n\n// 处理列拖拽\nfunction handleColumnDrag(columnData) {\n    console.log('Column dragged:', columnData)\n}\n\n// 处理临时数据集创建\nfunction handleTempDatasetCreated(datasetInfo) {\n    console.log('Temp dataset created:', datasetInfo)\n    tempDatasets.value.push(datasetInfo)\n}\n\n// 处理数据映射变化\nfunction handleMappingChanged({ mapping, filter }) {\n    console.log('Mapping changed:', mapping, filter)\n    currentMapping.value = mapping\n    currentFilter.value = filter\n    \n    validateAndRenderChart()\n}\n\n// 验证并渲染图表\nfunction validateAndRenderChart() {\n    if (!selectedChartType.value || Object.keys(currentMapping.value).length === 0) {\n        return\n    }\n    \n    try {\n        const result = ChartDataService.generateChartData(\n            workspaceFiles.value,\n            currentMapping.value,\n            currentFilter.value,\n            selectedChartType.value\n        )\n        \n        if (result.success) {\n            chartOption.value = null\n            nextTick(() => {\n                chartOption.value = result.data\n            })\n        } else {\n            console.error('Chart generation failed:', result.error)\n            alert('图表生成失败: ' + result.error)\n        }\n    } catch (error) {\n        console.error('Chart generation error:', error)\n        alert('图表生成错误: ' + error.message)\n    }\n}\n\n// 处理保存图表\nfunction handleSaveChart() {\n    if (!chartOption.value) {\n        alert('没有可保存的图表')\n        return\n    }\n    \n    try {\n        const chartHistory = ChartDataService.generateChartHistory(\n            chartOption.value,\n            currentMapping.value,\n            selectedChartType.value\n        )\n        \n        // 添加到历史记录\n        chartHistory.value.push(chartHistory)\n        \n        // 保存到本地存储\n        saveChartToLocalStorage(chartHistory)\n        \n        alert('图表已保存到历史记录')\n    } catch (error) {\n        console.error('Save chart error:', error)\n        alert('保存图表失败: ' + error.message)\n    }\n}\n\n// 保存图表到本地存储\nfunction saveChartToLocalStorage(chart) {\n    try {\n        const savedCharts = JSON.parse(localStorage.getItem('savedCharts') || '[]')\n        savedCharts.push(chart)\n        localStorage.setItem('savedCharts', JSON.stringify(savedCharts))\n    } catch (error) {\n        console.error('Save to localStorage failed:', error)\n    }\n}\n\n// 从本地存储加载图表\nfunction loadChartsFromLocalStorage() {\n    try {\n        const savedCharts = JSON.parse(localStorage.getItem('savedCharts') || '[]')\n        chartHistory.value = [...chartHistory.value, ...savedCharts]\n    } catch (error) {\n        console.error('Load from localStorage failed:', error)\n    }\n}\n\n// 组件挂载时加载本地存储的图表\nonMounted(() => {\n    loadChartsFromLocalStorage()\n})\n</script>\n\n<style scoped>\n.sideBar-btn {\nbackground: transparent;\nborder: none;\nfont-size: 1.1rem;\nfont-weight: 600;\ncursor: pointer;\ncolor: var(--text-color);\npadding: 6px 14px;\nborder-radius: 8px;\ntransition:\n    background-color 0.3s cubic-bezier(.4,2,.6,1),\n    transform 0.2s cubic-bezier(.4,2,.6,1),\n    box-shadow 0.2s;\ntext-align: center;\ntext-decoration: none;\n}\n.sideBar-btn:hover {\nbackground-color: rgba(136, 133, 133, 0.1);\ntransform: translateY(-2px) scale(1.02);\nbox-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 图表绘制区 */\n.main-content {\ndisplay: flex;\ngap: 32px;\nmargin: 40px 60px 0 220px;\nmin-height: 500px;\n}\n@media (max-width: 767px) {\n  .main-content {\n    margin: 20px 30px 0 80px;\n    gap: 16px;\n    min-height: auto;\n  }\n}\n.chart-workspace {\nflex: 1;\nmin-width: 0;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n}\n\n/* 图表缓存区 */\n.chart-history {\nwidth: 220px;\nbackground: var(--bg-color, #fff);\nborder-radius: 10px;\nbox-shadow: 0 0px 1px var(--text-color);\npadding: 16px;\nflex-shrink: 0;\n}\n.chart-history-item {\npadding: 8px 0;\ncursor: pointer;\nborder-bottom: 1px solid #747272;\ntransition: background 0.2s;\n}\n.chart-history-item:hover {\nbackground: rgba(136, 133, 133, 0.1);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}