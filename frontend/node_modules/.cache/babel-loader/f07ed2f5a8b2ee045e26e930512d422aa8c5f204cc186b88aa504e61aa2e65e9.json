{"ast":null,"code":"import { ref, computed, watch, reactive, nextTick, EmitsOptions } from 'vue';\nimport { chartIcons } from '../../assets/JS/SVG/chartIcons.js';\nimport { chartsTooltipConfig } from '../../assets/JS/Config/ChartsTooltipConfig.js';\nimport { chartTypeConfig } from '../../assets/JS/Config/ChartTypeConfig.js';\nimport AutoRenderToggle from '../Common/AutoRenderToggle.vue';\nimport ChartBasicConfig from './ChartBasicConfig.vue';\nimport { getThemeIcon } from '@/assets/JS/SVG/icons.js';\nimport ChartMappingConfig from './ChartMappingConfig.vue';\nimport ChartFilterConfig from './ChartFilterConfig.vue';\nimport ChartAdvancedConfig from './ChartAdvancedConfig.vue';\n\n// 当前类型的配置\n\nexport default {\n  __name: 'ChartConfigPanel',\n  props: {\n    selectedChartType: {\n      type: String,\n      default: 'line'\n    },\n    currentStructureFile: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['config-change', 'generate-chart'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const currentTypeConfig = computed(() => {\n      // 兼容首字母大写/小写\n      return chartTypeConfig[props.selectedChartType] || chartTypeConfig[props.selectedChartType.charAt(0).toUpperCase() + props.selectedChartType.slice(1)] || {};\n    });\n\n    // Props\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 响应式数据\n    const showDataFilter = ref(false);\n    const showAdvancedConfig = ref(false);\n    const errorMessage = ref('');\n    const tooltipRef = ref(null);\n\n    // 自动渲染开关，默认手动渲染\n    const autoRender = ref(false);\n\n    // 提示框状态\n    const tooltip = reactive({\n      visible: false,\n      type: '',\n      description: '',\n      dataRequirements: [],\n      useCases: [],\n      style: {}\n    });\n    let tooltipTimeout = null;\n\n    // 拖拽状态\n    const isDragOver = ref({\n      xAxis: false,\n      yAxis: false,\n      series: false\n    });\n    const dragError = ref({\n      xAxis: false,\n      yAxis: false,\n      series: false\n    });\n\n    // 图表配置\n    const chartConfig = ref({\n      xAxis: {\n        field: '',\n        type: ''\n      },\n      yAxis: {\n        field: '',\n        type: ''\n      },\n      series: [],\n      title: '',\n      colorScheme: 'default',\n      animation: true,\n      dataRange: 'all',\n      nullHandling: 'ignore'\n    });\n\n    // 需要显示 Null Handling 的图表类型\n    const showNullHandlingTypes = ['Line', 'Lines', 'Scatter', 'Candlestick', 'Radar', 'Boxplot', 'Heatmap', 'Parallel', 'Gauge', 'ThemeRiver', 'PictorialBar'];\n    // 判断当前类型是否需要显示 Null Handling\n    const showNullHandling = computed(() => {\n      const type = props.selectedChartType;\n      if (!type) return false;\n      // 兼容首字母大写/小写\n      const normalized = type.charAt(0).toUpperCase() + type.slice(1).toLowerCase();\n      return showNullHandlingTypes.includes(normalized);\n    });\n\n    // 自动获取当前用于绘图的数据\n    const chartData = computed(() => {\n      if (props.currentStructureFile && Array.isArray(props.currentStructureFile.data)) {\n        return props.currentStructureFile.data;\n      }\n      return [];\n    });\n\n    // 计算属性\n    const isConfigValid = computed(() => {\n      const type = props.selectedChartType?.toLowerCase?.() || '';\n      if (type === 'pie') {\n        // 饼图等只需 series 有效\n        return Array.isArray(chartConfig.value.value) && chartConfig.value.value.length > 0 && chartConfig.value.value[0].field;\n      }\n      // 其他类型：x/y轴都要有\n      const xValid = chartConfig.value.xAxis && chartConfig.value.xAxis.field;\n      const y = chartConfig.value.yAxis;\n      const yValid = Array.isArray(y) ? y.length > 0 : y && y.field;\n      return xValid && yValid;\n    });\n\n    // 监听 chartConfig 变化，自动渲染\n    watch(chartConfig, val => {\n      if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value);\n      }\n      console.log('Current chartConfig:', JSON.parse(JSON.stringify(val)));\n    }, {\n      deep: true\n    });\n\n    // 监听自动渲染开关变化，切换为实时时立即渲染\n    watch(autoRender, val => {\n      if (val && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value);\n      }\n    });\n    function getChartIcon(type) {\n      // 直接使用传入的类型，chartIcons.js 中的键是首字母大写格式\n      return chartIcons[type] || '';\n    }\n    function toggleDataFilter() {\n      showDataFilter.value = !showDataFilter.value;\n    }\n    function toggleAdvancedConfig() {\n      showAdvancedConfig.value = !showAdvancedConfig.value;\n    }\n\n    // 显示提示框\n    function showTooltip(event, type) {\n      // 清除之前的定时器\n      if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout);\n      }\n\n      // 设置1.2秒延迟\n      tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type];\n        if (config) {\n          tooltip.type = type;\n          tooltip.description = config.description;\n          tooltip.dataRequirements = config.dataRequirements;\n          tooltip.useCases = config.useCases;\n          tooltip.visible = true;\n\n          // 在下一个tick中计算位置，确保DOM已更新\n          nextTick(() => {\n            positionTooltip(event);\n          });\n        }\n      }, 1200); // 1.2秒延迟\n    }\n\n    // 隐藏提示框\n    function hideTooltip() {\n      if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout);\n        tooltipTimeout = null;\n      }\n      tooltip.visible = false;\n    }\n\n    // 计算提示框位置，确保不超出屏幕\n    function positionTooltip(event) {\n      if (!tooltipRef.value) return;\n      const tooltipEl = tooltipRef.value;\n      const rect = tooltipEl.getBoundingClientRect();\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight;\n      let left = event.pageX + 10;\n      let top = event.pageY + 10;\n\n      // 防止右边超出屏幕\n      if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10;\n      }\n\n      // 防止底部超出屏幕\n      if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10;\n      }\n\n      // 防止左边超出屏幕\n      if (left < 0) {\n        left = 10;\n      }\n\n      // 防止顶部超出屏幕\n      if (top < 0) {\n        top = 10;\n      }\n      tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n      };\n    }\n\n    // 拖拽处理\n    function handleDragEnter(target) {\n      isDragOver.value[target] = true;\n      dragError.value[target] = false;\n    }\n    function handleDragLeave(target) {\n      isDragOver.value[target] = false;\n    }\n    function handleDragOver(event, target) {\n      event.preventDefault();\n      isDragOver.value[target] = true;\n    }\n    function handleDrop(event, target) {\n      event.preventDefault();\n      isDragOver.value[target] = false;\n      try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'));\n        if (dragData.type === 'column') {\n          const column = dragData.column;\n\n          // 验证数据类型是否适合目标区域\n          if (validateColumnForTarget(column, target)) {\n            mapColumnToTarget(column, target);\n            errorMessage.value = '';\n          } else {\n            dragError.value[target] = true;\n            errorMessage.value = `Column \"${column.name}\" data type is not suitable for ${getTargetName(target)}`;\n            setTimeout(() => {\n              dragError.value[target] = false;\n              errorMessage.value = '';\n            }, 3000);\n          }\n        }\n      } catch (error) {\n        console.error('Drop failed:', error);\n        errorMessage.value = 'Drag and drop failed, please try again';\n      }\n    }\n    function validateColumnForTarget(column, target) {\n      const columnType = column.type;\n      switch (target) {\n        case 'xAxis':\n          // X轴通常接受类别型数据\n          return ['string', 'category', 'date'].includes(columnType);\n        case 'yAxis':\n          // Y轴通常接受数值型数据\n          return ['number', 'integer'].includes(columnType);\n        case 'series':\n          // 系列数据通常接受数值型数据\n          return ['number', 'integer'].includes(columnType);\n        default:\n          return true;\n      }\n    }\n    function mapColumnToTarget(column, target) {\n      switch (target) {\n        case 'xAxis':\n          chartConfig.value.xAxis = {\n            field: column.name,\n            type: column.type\n          };\n          break;\n        case 'yAxis':\n          chartConfig.value.yAxis = {\n            field: column.name,\n            type: column.type\n          };\n          break;\n        case 'series':\n          // 系列可以有多个，但这里简化为单个\n          chartConfig.value.series = [{\n            field: column.name,\n            type: column.type\n          }];\n          break;\n      }\n      emit('config-change', chartConfig.value);\n    }\n    function removeMapping(target) {\n      switch (target) {\n        case 'xAxis':\n          chartConfig.value.xAxis = {\n            field: '',\n            type: ''\n          };\n          break;\n        case 'yAxis':\n          chartConfig.value.yAxis = {\n            field: '',\n            type: ''\n          };\n          break;\n        case 'series':\n          chartConfig.value.series = [];\n          break;\n      }\n      emit('config-change', chartConfig.value);\n    }\n    function removeSeriesMapping(index) {\n      chartConfig.value.series.splice(index, 1);\n      emit('config-change', chartConfig.value);\n    }\n    function getTargetName(target) {\n      const names = {\n        xAxis: 'X Axis',\n        yAxis: 'Y Axis',\n        series: 'Data Series'\n      };\n      return names[target] || target;\n    }\n    function generateChart() {\n      if (!isConfigValid.value) {\n        errorMessage.value = 'Please complete the required data mapping configuration';\n        return;\n      }\n      emit('generate-chart', chartConfig.value);\n    }\n    function resetConfig() {\n      chartConfig.value = {\n        xAxis: {\n          field: '',\n          type: ''\n        },\n        yAxis: {\n          field: '',\n          type: ''\n        },\n        series: [],\n        title: '',\n        colorScheme: 'default',\n        animation: true,\n        dataRange: 'all',\n        nullHandling: 'ignore'\n      };\n      errorMessage.value = '';\n      emit('config-change', chartConfig.value);\n    }\n\n    // 监听图表类型变化\n    watch(() => props.selectedChartType, newType => {\n      // 根据图表类型调整配置\n      if (newType === 'Pie' || newType === 'pie') {\n        // 饼图不需要Y轴\n        chartConfig.value.yAxis = {\n          field: '',\n          type: ''\n        };\n      }\n      // 自动渲染开启时，切换类型后立即触发渲染\n      if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value);\n      }\n    });\n    const __returned__ = {\n      currentTypeConfig,\n      props,\n      emit,\n      showDataFilter,\n      showAdvancedConfig,\n      errorMessage,\n      tooltipRef,\n      autoRender,\n      tooltip,\n      get tooltipTimeout() {\n        return tooltipTimeout;\n      },\n      set tooltipTimeout(v) {\n        tooltipTimeout = v;\n      },\n      isDragOver,\n      dragError,\n      chartConfig,\n      showNullHandlingTypes,\n      showNullHandling,\n      chartData,\n      isConfigValid,\n      getChartIcon,\n      toggleDataFilter,\n      toggleAdvancedConfig,\n      showTooltip,\n      hideTooltip,\n      positionTooltip,\n      handleDragEnter,\n      handleDragLeave,\n      handleDragOver,\n      handleDrop,\n      validateColumnForTarget,\n      mapColumnToTarget,\n      removeMapping,\n      removeSeriesMapping,\n      getTargetName,\n      generateChart,\n      resetConfig,\n      ref,\n      computed,\n      watch,\n      reactive,\n      nextTick,\n      EmitsOptions,\n      get chartIcons() {\n        return chartIcons;\n      },\n      get chartsTooltipConfig() {\n        return chartsTooltipConfig;\n      },\n      get chartTypeConfig() {\n        return chartTypeConfig;\n      },\n      AutoRenderToggle,\n      ChartBasicConfig,\n      get getThemeIcon() {\n        return getThemeIcon;\n      },\n      ChartMappingConfig,\n      ChartFilterConfig,\n      ChartAdvancedConfig\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","reactive","nextTick","EmitsOptions","chartIcons","chartsTooltipConfig","chartTypeConfig","AutoRenderToggle","ChartBasicConfig","getThemeIcon","ChartMappingConfig","ChartFilterConfig","ChartAdvancedConfig","currentTypeConfig","props","selectedChartType","charAt","toUpperCase","slice","__props","emit","__emit","showDataFilter","showAdvancedConfig","errorMessage","tooltipRef","autoRender","tooltip","visible","type","description","dataRequirements","useCases","style","tooltipTimeout","isDragOver","xAxis","yAxis","series","dragError","chartConfig","field","title","colorScheme","animation","dataRange","nullHandling","showNullHandlingTypes","showNullHandling","normalized","toLowerCase","includes","chartData","currentStructureFile","Array","isArray","data","isConfigValid","value","length","xValid","y","yValid","val","console","log","JSON","parse","stringify","deep","getChartIcon","toggleDataFilter","toggleAdvancedConfig","showTooltip","event","clearTimeout","setTimeout","config","positionTooltip","hideTooltip","tooltipEl","rect","getBoundingClientRect","viewportWidth","window","innerWidth","viewportHeight","innerHeight","left","pageX","top","pageY","width","height","position","zIndex","handleDragEnter","target","handleDragLeave","handleDragOver","preventDefault","handleDrop","dragData","dataTransfer","getData","column","validateColumnForTarget","mapColumnToTarget","name","getTargetName","error","columnType","removeMapping","removeSeriesMapping","index","splice","names","generateChart","resetConfig","newType"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/Chart/ChartConfigPanel.vue"],"sourcesContent":["<template>\n<div class=\"chart-config-panel\">\n    <!-- 右侧边栏总标题 -->\n    <div class=\"panel-header-CCP\" style=\"position: relative; display: flex; align-items: center; justify-content: space-between;\">\n        <h3 style=\"margin: 0;\">\n            Chart Configuration\n        </h3>\n        <!-- 图表类型及相关提示 -->\n        <div\n            class=\"chart-type-tag\"\n            @mouseenter=\"showTooltip($event, props.selectedChartType)\"\n            @mouseleave=\"hideTooltip\"\n            style=\"position: relative; max-width: 50%; white-space: normal; word-break: break-all; text-align: right; right: 0; margin-right: 3%;\"\n        >\n            <span class=\"chart-type-icon\" v-html=\"getChartIcon(selectedChartType)\"></span>\n            <span class=\"chart-type-name\">{{ selectedChartType }}</span>\n        </div>\n    </div>\n\n    <!-- 动态数据映射配置区域 -->\n    <div class=\"mapping-section-toggle-wrapper\">\n        <ChartMappingConfig\n            v-if=\"currentTypeConfig.mapping\"\n            :mappingConfig=\"currentTypeConfig.mapping\"\n            v-model=\"chartConfig\"\n        >\n            <template #title-append>\n            <!-- 自动渲染开关 -->\n            <AutoRenderToggle v-model=\"autoRender\" />\n            </template>\n        </ChartMappingConfig>\n    </div>\n\n    <!-- 基础配置区域：所有图表通用配置 -->\n    <ChartBasicConfig v-model=\"chartConfig\" :show-null-handling=\"showNullHandling\" :chart-data=\"chartData\" />\n\n    <!-- 动态数据过滤配置区域 -->\n    <ChartFilterConfig\n        v-if=\"currentTypeConfig.filter && currentTypeConfig.filter.length\"\n        :filterConfig=\"currentTypeConfig.filter\"\n        v-model=\"chartConfig\"\n    />\n\n    <!-- 动态高级配置区域 -->\n    <ChartAdvancedConfig\n        v-if=\"currentTypeConfig.advanced && currentTypeConfig.advanced.length\"\n        :advancedConfig=\"currentTypeConfig.advanced\"\n        v-model=\"chartConfig\"\n    />\n\n    <!-- 操作按钮 -->\n    <div class=\"action-section\">\n        <button\n        class=\"apply-btn\"\n        :disabled=\"autoRender || !isConfigValid\"\n        @click=\"generateChart\"\n        >\n        Apply Configuration\n        </button>\n        <button class=\"reset-btn\" @click=\"resetConfig\">\n        Reset Configuration\n        </button>\n    </div>\n\n    <!-- 错误提示 -->\n    <div v-if=\"errorMessage\" class=\"error-message\">\n        <div class=\"error-text\">{{ errorMessage }}</div>\n    </div>\n\n    <!-- 提示框 -->\n    <div\n        v-if=\"tooltip.visible\"\n        class=\"chart-tooltip\"\n        :style=\"tooltip.style\"\n        ref=\"tooltipRef\"\n    >\n        <div class=\"tooltip-header\">\n            <span class=\"tooltip-title\">{{ tooltip.type }}</span>\n            <span class=\"tooltip-description\">{{ tooltip.description }}</span>\n        </div>\n        <div class=\"tooltip-section\">\n            <h4>Data Requirements</h4>\n            <div class=\"tooltip-tags\">\n                <span\n                    v-for=\"requirement in tooltip.dataRequirements\"\n                    :key=\"requirement\"\n                    class=\"tooltip-tag data-tag\"\n                >\n                    {{ requirement }}\n                </span>\n            </div>\n        </div>\n        <div class=\"tooltip-section\">\n            <h4>Use Cases</h4>\n            <div class=\"tooltip-tags\">\n                <span\n                    v-for=\"useCase in tooltip.useCases\"\n                    :key=\"useCase\"\n                    class=\"tooltip-tag use-case-tag\"\n                >\n                    {{ useCase }}\n                </span>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch, reactive, nextTick, EmitsOptions } from 'vue'\nimport { chartIcons } from '../../assets/JS/SVG/chartIcons.js'\nimport { chartsTooltipConfig } from '../../assets/JS/Config/ChartsTooltipConfig.js'\nimport { chartTypeConfig } from '../../assets/JS/Config/ChartTypeConfig.js'\nimport AutoRenderToggle from '../Common/AutoRenderToggle.vue'\nimport ChartBasicConfig from './ChartBasicConfig.vue'\nimport { getThemeIcon } from '@/assets/JS/SVG/icons.js'\nimport ChartMappingConfig from './ChartMappingConfig.vue'\nimport ChartFilterConfig from './ChartFilterConfig.vue'\nimport ChartAdvancedConfig from './ChartAdvancedConfig.vue'\n\n// 当前类型的配置\nconst currentTypeConfig = computed(() => {\n  // 兼容首字母大写/小写\n    return chartTypeConfig[props.selectedChartType] || chartTypeConfig[props.selectedChartType.charAt(0).toUpperCase() + props.selectedChartType.slice(1)] || {}\n})\n\n// Props\nconst props = defineProps({\n    selectedChartType: {\n        type: String,\n        default: 'line'\n    },\n    currentStructureFile: {\n        type: Object,\n        default: null\n    }\n})\n\n// Emits\nconst emit = defineEmits(['config-change', 'generate-chart'])\n\n// 响应式数据\nconst showDataFilter = ref(false)\nconst showAdvancedConfig = ref(false)\nconst errorMessage = ref('')\nconst tooltipRef = ref(null)\n\n// 自动渲染开关，默认手动渲染\nconst autoRender = ref(false)\n\n// 提示框状态\nconst tooltip = reactive({\n    visible: false,\n    type: '',\n    description: '',\n    dataRequirements: [],\n    useCases: [],\n    style: {}\n})\n\nlet tooltipTimeout = null\n\n// 拖拽状态\nconst isDragOver = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\nconst dragError = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\n// 图表配置\nconst chartConfig = ref({\n    xAxis: {\n        field: '',\n        type: ''\n    },\n    yAxis: {\n        field: '',\n        type: ''\n    },\n    series: [],\n    title: '',\n    colorScheme: 'default',\n    animation: true,\n    dataRange: 'all',\n    nullHandling: 'ignore'\n})\n\n// 需要显示 Null Handling 的图表类型\nconst showNullHandlingTypes = [\n    'Line', 'Lines', 'Scatter', 'Candlestick', 'Radar', 'Boxplot', 'Heatmap',\n    'Parallel', 'Gauge', 'ThemeRiver', 'PictorialBar'\n]\n// 判断当前类型是否需要显示 Null Handling\nconst showNullHandling = computed(() => {\n    const type = props.selectedChartType\n    if (!type) return false\n    // 兼容首字母大写/小写\n    const normalized = type.charAt(0).toUpperCase() + type.slice(1).toLowerCase()\n    return showNullHandlingTypes.includes(normalized)\n})\n\n// 自动获取当前用于绘图的数据\nconst chartData = computed(() => {\n    if (props.currentStructureFile && Array.isArray(props.currentStructureFile.data)) {\n        return props.currentStructureFile.data\n    }\n    return []\n})\n\n// 计算属性\nconst isConfigValid = computed(() => {\n    const type = props.selectedChartType?.toLowerCase?.() || ''\n    if (type === 'pie') {\n        // 饼图等只需 series 有效\n        return Array.isArray(chartConfig.value.value) && chartConfig.value.value.length > 0 && chartConfig.value.value[0].field\n    }\n    // 其他类型：x/y轴都要有\n    const xValid = chartConfig.value.xAxis && chartConfig.value.xAxis.field;\n    const y = chartConfig.value.yAxis;\n    const yValid = Array.isArray(y) ? y.length > 0 : (y && y.field);\n    return xValid && yValid;\n})\n\n// 监听 chartConfig 变化，自动渲染\nwatch(chartConfig, (val) => {\n    if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n    console.log('Current chartConfig:', JSON.parse(JSON.stringify(val)))\n}, { deep: true })\n\n// 监听自动渲染开关变化，切换为实时时立即渲染\nwatch(autoRender, (val) => {\n    if (val && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n})\n\nfunction getChartIcon (type) {\n    // 直接使用传入的类型，chartIcons.js 中的键是首字母大写格式\n    return chartIcons[type] || ''\n}\n\nfunction toggleDataFilter() {\n    showDataFilter.value = !showDataFilter.value\n}\n\nfunction toggleAdvancedConfig() {\n    showAdvancedConfig.value = !showAdvancedConfig.value\n}\n\n// 显示提示框\nfunction showTooltip(event, type) {\n    // 清除之前的定时器\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n    }\n    \n    // 设置1.2秒延迟\n    tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type]\n        if (config) {\n            tooltip.type = type\n            tooltip.description = config.description\n            tooltip.dataRequirements = config.dataRequirements\n            tooltip.useCases = config.useCases\n            tooltip.visible = true\n            \n            // 在下一个tick中计算位置，确保DOM已更新\n            nextTick(() => {\n                positionTooltip(event)\n            })\n        }\n    }, 1200) // 1.2秒延迟\n}\n\n// 隐藏提示框\nfunction hideTooltip() {\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n        tooltipTimeout = null\n    }\n    tooltip.visible = false\n}\n\n// 计算提示框位置，确保不超出屏幕\nfunction positionTooltip(event) {\n    if (!tooltipRef.value) return\n    \n    const tooltipEl = tooltipRef.value\n    const rect = tooltipEl.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    \n    let left = event.pageX + 10\n    let top = event.pageY + 10\n    \n    // 防止右边超出屏幕\n    if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10\n    }\n    \n    // 防止底部超出屏幕\n    if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10\n    }\n    \n    // 防止左边超出屏幕\n    if (left < 0) {\n        left = 10\n    }\n    \n    // 防止顶部超出屏幕\n    if (top < 0) {\n        top = 10\n    }\n    \n    tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n    }\n}\n\n// 拖拽处理\nfunction handleDragEnter (target) {\n    isDragOver.value[target] = true\n    dragError.value[target] = false\n    }\n\nfunction handleDragLeave (target) {\n    isDragOver.value[target] = false\n}\n\nfunction handleDragOver (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = true\n}\n\nfunction handleDrop (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = false\n\n    try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'))\n\n        if (dragData.type === 'column') {\n        const column = dragData.column\n\n        // 验证数据类型是否适合目标区域\n        if (validateColumnForTarget(column, target)) {\n            mapColumnToTarget(column, target)\n            errorMessage.value = ''\n        } else {\n            dragError.value[target] = true\n            errorMessage.value = `Column \"${column.name}\" data type is not suitable for ${getTargetName(target)}`\n            setTimeout(() => {\n            dragError.value[target] = false\n            errorMessage.value = ''\n            }, 3000)\n        }\n        }\n    } catch (error) {\n        console.error('Drop failed:', error)\n        errorMessage.value = 'Drag and drop failed, please try again'\n    }\n}\n\nfunction validateColumnForTarget (column, target) {\n    const columnType = column.type\n\n    switch (target) {\n        case 'xAxis':\n        // X轴通常接受类别型数据\n        return ['string', 'category', 'date'].includes(columnType)\n        case 'yAxis':\n        // Y轴通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        case 'series':\n        // 系列数据通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        default:\n        return true\n    }\n}\n\nfunction mapColumnToTarget (column, target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'series':\n        // 系列可以有多个，但这里简化为单个\n        chartConfig.value.series = [{\n            field: column.name,\n            type: column.type\n        }]\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeMapping (target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = { field: '', type: '' }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = { field: '', type: '' }\n        break\n        case 'series':\n        chartConfig.value.series = []\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeSeriesMapping (index) {\n    chartConfig.value.series.splice(index, 1)\n    emit('config-change', chartConfig.value)\n}\n\nfunction getTargetName (target) {\n    const names = {\n        xAxis: 'X Axis',\n        yAxis: 'Y Axis',\n        series: 'Data Series'\n    }\n    return names[target] || target\n}\n\nfunction generateChart () {\n    if (!isConfigValid.value) {\n        errorMessage.value = 'Please complete the required data mapping configuration'\n        return\n    }\n\n    emit('generate-chart', chartConfig.value)\n}\n\nfunction resetConfig () {\n    chartConfig.value = {\n        xAxis: { field: '', type: '' },\n        yAxis: { field: '', type: '' },\n        series: [],\n        title: '',\n        colorScheme: 'default',\n        animation: true,\n        dataRange: 'all',\n        nullHandling: 'ignore'\n    }\n\n    errorMessage.value = ''\n    emit('config-change', chartConfig.value)\n}\n\n// 监听图表类型变化\nwatch(() => props.selectedChartType, (newType) => {\n    // 根据图表类型调整配置\n    if (newType === 'Pie' || newType === 'pie') {\n        // 饼图不需要Y轴\n        chartConfig.value.yAxis = { field: '', type: '' }\n    }\n    // 自动渲染开启时，切换类型后立即触发渲染\n    if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n})\n</script>\n\n<style scoped>\n\n@import '../../assets/CSS/ChartConfigPanel.css';\n\n</style>\n"],"mappings":"AA8GA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,KAAI;AAC3E,SAASC,UAAU,QAAQ,mCAAkC;AAC7D,SAASC,mBAAmB,QAAQ,+CAA8C;AAClF,SAASC,eAAe,QAAQ,2CAA0C;AAC1E,OAAOC,gBAAgB,MAAM,gCAA+B;AAC5D,OAAOC,gBAAgB,MAAM,wBAAuB;AACpD,SAASC,YAAY,QAAQ,0BAAyB;AACtD,OAAOC,kBAAkB,MAAM,0BAAyB;AACxD,OAAOC,iBAAiB,MAAM,yBAAwB;AACtD,OAAOC,mBAAmB,MAAM,2BAA0B;;AAE1D;;;;;;;;;;;;;;;;;;;;;IAZA;IAaA,MAAMC,iBAAiB,GAAGd,QAAQ,CAAC,MAAM;MACvC;MACE,OAAOO,eAAe,CAACQ,KAAK,CAACC,iBAAiB,CAAC,IAAIT,eAAe,CAACQ,KAAK,CAACC,iBAAiB,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGH,KAAK,CAACC,iBAAiB,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC/J,CAAC;;IAED;IACA,MAAMJ,KAAK,GAAGK,OAAA;;IAWd;IACA,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,cAAc,GAAGxB,GAAG,CAAC,KAAK;IAChC,MAAMyB,kBAAkB,GAAGzB,GAAG,CAAC,KAAK;IACpC,MAAM0B,YAAY,GAAG1B,GAAG,CAAC,EAAE;IAC3B,MAAM2B,UAAU,GAAG3B,GAAG,CAAC,IAAI;;IAE3B;IACA,MAAM4B,UAAU,GAAG5B,GAAG,CAAC,KAAK;;IAE5B;IACA,MAAM6B,OAAO,GAAG1B,QAAQ,CAAC;MACrB2B,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,gBAAgB,EAAE,EAAE;MACpBC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,CAAC;IACZ,CAAC;IAED,IAAIC,cAAc,GAAG,IAAG;;IAExB;IACA,MAAMC,UAAU,GAAGrC,GAAG,CAAC;MACnBsC,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE,KAAK;MACZC,MAAM,EAAE;IACZ,CAAC;IAED,MAAMC,SAAS,GAAGzC,GAAG,CAAC;MAClBsC,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE,KAAK;MACZC,MAAM,EAAE;IACZ,CAAC;;IAED;IACA,MAAME,WAAW,GAAG1C,GAAG,CAAC;MACpBsC,KAAK,EAAE;QACHK,KAAK,EAAE,EAAE;QACTZ,IAAI,EAAE;MACV,CAAC;MACDQ,KAAK,EAAE;QACHI,KAAK,EAAE,EAAE;QACTZ,IAAI,EAAE;MACV,CAAC;MACDS,MAAM,EAAE,EAAE;MACVI,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,SAAS;MACtBC,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAE;IAClB,CAAC;;IAED;IACA,MAAMC,qBAAqB,GAAG,CAC1B,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EACxE,UAAU,EAAE,OAAO,EAAE,YAAY,EAAE,cAAa,CACpD;IACA;IACA,MAAMC,gBAAgB,GAAGjD,QAAQ,CAAC,MAAM;MACpC,MAAM8B,IAAI,GAAGf,KAAK,CAACC,iBAAgB;MACnC,IAAI,CAACc,IAAI,EAAE,OAAO,KAAI;MACtB;MACA,MAAMoB,UAAU,GAAGpB,IAAI,CAACb,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGY,IAAI,CAACX,KAAK,CAAC,CAAC,CAAC,CAACgC,WAAW,CAAC;MAC5E,OAAOH,qBAAqB,CAACI,QAAQ,CAACF,UAAU;IACpD,CAAC;;IAED;IACA,MAAMG,SAAS,GAAGrD,QAAQ,CAAC,MAAM;MAC7B,IAAIe,KAAK,CAACuC,oBAAoB,IAAIC,KAAK,CAACC,OAAO,CAACzC,KAAK,CAACuC,oBAAoB,CAACG,IAAI,CAAC,EAAE;QAC9E,OAAO1C,KAAK,CAACuC,oBAAoB,CAACG,IAAG;MACzC;MACA,OAAO,EAAC;IACZ,CAAC;;IAED;IACA,MAAMC,aAAa,GAAG1D,QAAQ,CAAC,MAAM;MACjC,MAAM8B,IAAI,GAAGf,KAAK,CAACC,iBAAiB,EAAEmC,WAAW,GAAG,CAAC,IAAI,EAAC;MAC1D,IAAIrB,IAAI,KAAK,KAAK,EAAE;QAChB;QACA,OAAOyB,KAAK,CAACC,OAAO,CAACf,WAAW,CAACkB,KAAK,CAACA,KAAK,CAAC,IAAIlB,WAAW,CAACkB,KAAK,CAACA,KAAK,CAACC,MAAM,GAAG,CAAC,IAAInB,WAAW,CAACkB,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC,CAACjB,KAAI;MAC1H;MACA;MACA,MAAMmB,MAAM,GAAGpB,WAAW,CAACkB,KAAK,CAACtB,KAAK,IAAII,WAAW,CAACkB,KAAK,CAACtB,KAAK,CAACK,KAAK;MACvE,MAAMoB,CAAC,GAAGrB,WAAW,CAACkB,KAAK,CAACrB,KAAK;MACjC,MAAMyB,MAAM,GAAGR,KAAK,CAACC,OAAO,CAACM,CAAC,CAAC,GAAGA,CAAC,CAACF,MAAM,GAAG,CAAC,GAAIE,CAAC,IAAIA,CAAC,CAACpB,KAAM;MAC/D,OAAOmB,MAAM,IAAIE,MAAM;IAC3B,CAAC;;IAED;IACA9D,KAAK,CAACwC,WAAW,EAAGuB,GAAG,IAAK;MACxB,IAAIrC,UAAU,CAACgC,KAAK,IAAID,aAAa,CAACC,KAAK,EAAE;QACzCtC,IAAI,CAAC,gBAAgB,EAAEoB,WAAW,CAACkB,KAAK;MAC5C;MACAM,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACL,GAAG,CAAC,CAAC;IACvE,CAAC,EAAE;MAAEM,IAAI,EAAE;IAAK,CAAC;;IAEjB;IACArE,KAAK,CAAC0B,UAAU,EAAGqC,GAAG,IAAK;MACvB,IAAIA,GAAG,IAAIN,aAAa,CAACC,KAAK,EAAE;QAC5BtC,IAAI,CAAC,gBAAgB,EAAEoB,WAAW,CAACkB,KAAK;MAC5C;IACJ,CAAC;IAED,SAASY,YAAYA,CAAEzC,IAAI,EAAE;MACzB;MACA,OAAOzB,UAAU,CAACyB,IAAI,CAAC,IAAI,EAAC;IAChC;IAEA,SAAS0C,gBAAgBA,CAAA,EAAG;MACxBjD,cAAc,CAACoC,KAAK,GAAG,CAACpC,cAAc,CAACoC,KAAI;IAC/C;IAEA,SAASc,oBAAoBA,CAAA,EAAG;MAC5BjD,kBAAkB,CAACmC,KAAK,GAAG,CAACnC,kBAAkB,CAACmC,KAAI;IACvD;;IAEA;IACA,SAASe,WAAWA,CAACC,KAAK,EAAE7C,IAAI,EAAE;MAC9B;MACA,IAAIK,cAAc,EAAE;QAChByC,YAAY,CAACzC,cAAc;MAC/B;;MAEA;MACAA,cAAc,GAAG0C,UAAU,CAAC,MAAM;QAC9B,MAAMC,MAAM,GAAGxE,mBAAmB,CAACwB,IAAI;QACvC,IAAIgD,MAAM,EAAE;UACRlD,OAAO,CAACE,IAAI,GAAGA,IAAG;UAClBF,OAAO,CAACG,WAAW,GAAG+C,MAAM,CAAC/C,WAAU;UACvCH,OAAO,CAACI,gBAAgB,GAAG8C,MAAM,CAAC9C,gBAAe;UACjDJ,OAAO,CAACK,QAAQ,GAAG6C,MAAM,CAAC7C,QAAO;UACjCL,OAAO,CAACC,OAAO,GAAG,IAAG;;UAErB;UACA1B,QAAQ,CAAC,MAAM;YACX4E,eAAe,CAACJ,KAAK;UACzB,CAAC;QACL;MACJ,CAAC,EAAE,IAAI,CAAC,EAAC;IACb;;IAEA;IACA,SAASK,WAAWA,CAAA,EAAG;MACnB,IAAI7C,cAAc,EAAE;QAChByC,YAAY,CAACzC,cAAc;QAC3BA,cAAc,GAAG,IAAG;MACxB;MACAP,OAAO,CAACC,OAAO,GAAG,KAAI;IAC1B;;IAEA;IACA,SAASkD,eAAeA,CAACJ,KAAK,EAAE;MAC5B,IAAI,CAACjD,UAAU,CAACiC,KAAK,EAAE;MAEvB,MAAMsB,SAAS,GAAGvD,UAAU,CAACiC,KAAI;MACjC,MAAMuB,IAAI,GAAGD,SAAS,CAACE,qBAAqB,CAAC;MAC7C,MAAMC,aAAa,GAAGC,MAAM,CAACC,UAAS;MACtC,MAAMC,cAAc,GAAGF,MAAM,CAACG,WAAU;MAExC,IAAIC,IAAI,GAAGd,KAAK,CAACe,KAAK,GAAG,EAAC;MAC1B,IAAIC,GAAG,GAAGhB,KAAK,CAACiB,KAAK,GAAG,EAAC;;MAEzB;MACA,IAAIH,IAAI,GAAGP,IAAI,CAACW,KAAK,GAAGT,aAAa,EAAE;QACnCK,IAAI,GAAGd,KAAK,CAACe,KAAK,GAAGR,IAAI,CAACW,KAAK,GAAG,EAAC;MACvC;;MAEA;MACA,IAAIF,GAAG,GAAGT,IAAI,CAACY,MAAM,GAAGP,cAAc,EAAE;QACpCI,GAAG,GAAGhB,KAAK,CAACiB,KAAK,GAAGV,IAAI,CAACY,MAAM,GAAG,EAAC;MACvC;;MAEA;MACA,IAAIL,IAAI,GAAG,CAAC,EAAE;QACVA,IAAI,GAAG,EAAC;MACZ;;MAEA;MACA,IAAIE,GAAG,GAAG,CAAC,EAAE;QACTA,GAAG,GAAG,EAAC;MACX;MAEA/D,OAAO,CAACM,KAAK,GAAG;QACZuD,IAAI,EAAE,GAAGA,IAAI,IAAI;QACjBE,GAAG,EAAE,GAAGA,GAAG,IAAI;QACfI,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE;MACZ;IACJ;;IAEA;IACA,SAASC,eAAeA,CAAEC,MAAM,EAAE;MAC9B9D,UAAU,CAACuB,KAAK,CAACuC,MAAM,CAAC,GAAG,IAAG;MAC9B1D,SAAS,CAACmB,KAAK,CAACuC,MAAM,CAAC,GAAG,KAAI;IAC9B;IAEJ,SAASC,eAAeA,CAAED,MAAM,EAAE;MAC9B9D,UAAU,CAACuB,KAAK,CAACuC,MAAM,CAAC,GAAG,KAAI;IACnC;IAEA,SAASE,cAAcA,CAAEzB,KAAK,EAAEuB,MAAM,EAAE;MACpCvB,KAAK,CAAC0B,cAAc,CAAC;MACrBjE,UAAU,CAACuB,KAAK,CAACuC,MAAM,CAAC,GAAG,IAAG;IAClC;IAEA,SAASI,UAAUA,CAAE3B,KAAK,EAAEuB,MAAM,EAAE;MAChCvB,KAAK,CAAC0B,cAAc,CAAC;MACrBjE,UAAU,CAACuB,KAAK,CAACuC,MAAM,CAAC,GAAG,KAAI;MAE/B,IAAI;QACA,MAAMK,QAAQ,GAAGpC,IAAI,CAACC,KAAK,CAACO,KAAK,CAAC6B,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;QAEpE,IAAIF,QAAQ,CAACzE,IAAI,KAAK,QAAQ,EAAE;UAChC,MAAM4E,MAAM,GAAGH,QAAQ,CAACG,MAAK;;UAE7B;UACA,IAAIC,uBAAuB,CAACD,MAAM,EAAER,MAAM,CAAC,EAAE;YACzCU,iBAAiB,CAACF,MAAM,EAAER,MAAM;YAChCzE,YAAY,CAACkC,KAAK,GAAG,EAAC;UAC1B,CAAC,MAAM;YACHnB,SAAS,CAACmB,KAAK,CAACuC,MAAM,CAAC,GAAG,IAAG;YAC7BzE,YAAY,CAACkC,KAAK,GAAG,WAAW+C,MAAM,CAACG,IAAI,mCAAmCC,aAAa,CAACZ,MAAM,CAAC,EAAC;YACpGrB,UAAU,CAAC,MAAM;cACjBrC,SAAS,CAACmB,KAAK,CAACuC,MAAM,CAAC,GAAG,KAAI;cAC9BzE,YAAY,CAACkC,KAAK,GAAG,EAAC;YACtB,CAAC,EAAE,IAAI;UACX;QACA;MACJ,CAAC,CAAC,OAAOoD,KAAK,EAAE;QACZ9C,OAAO,CAAC8C,KAAK,CAAC,cAAc,EAAEA,KAAK;QACnCtF,YAAY,CAACkC,KAAK,GAAG,wCAAuC;MAChE;IACJ;IAEA,SAASgD,uBAAuBA,CAAED,MAAM,EAAER,MAAM,EAAE;MAC9C,MAAMc,UAAU,GAAGN,MAAM,CAAC5E,IAAG;MAE7B,QAAQoE,MAAM;QACV,KAAK,OAAO;UACZ;UACA,OAAO,CAAC,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC9C,QAAQ,CAAC4D,UAAU;QACzD,KAAK,OAAO;UACZ;UACA,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC5D,QAAQ,CAAC4D,UAAU;QAChD,KAAK,QAAQ;UACb;UACA,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC5D,QAAQ,CAAC4D,UAAU;QAChD;UACA,OAAO,IAAG;MACd;IACJ;IAEA,SAASJ,iBAAiBA,CAAEF,MAAM,EAAER,MAAM,EAAE;MACxC,QAAQA,MAAM;QACV,KAAK,OAAO;UACZzD,WAAW,CAACkB,KAAK,CAACtB,KAAK,GAAG;YACtBK,KAAK,EAAEgE,MAAM,CAACG,IAAI;YAClB/E,IAAI,EAAE4E,MAAM,CAAC5E;UACjB;UACA;QACA,KAAK,OAAO;UACZW,WAAW,CAACkB,KAAK,CAACrB,KAAK,GAAG;YACtBI,KAAK,EAAEgE,MAAM,CAACG,IAAI;YAClB/E,IAAI,EAAE4E,MAAM,CAAC5E;UACjB;UACA;QACA,KAAK,QAAQ;UACb;UACAW,WAAW,CAACkB,KAAK,CAACpB,MAAM,GAAG,CAAC;YACxBG,KAAK,EAAEgE,MAAM,CAACG,IAAI;YAClB/E,IAAI,EAAE4E,MAAM,CAAC5E;UACjB,CAAC;UACD;MACJ;MAEAT,IAAI,CAAC,eAAe,EAAEoB,WAAW,CAACkB,KAAK;IAC3C;IAEA,SAASsD,aAAaA,CAAEf,MAAM,EAAE;MAC5B,QAAQA,MAAM;QACV,KAAK,OAAO;UACZzD,WAAW,CAACkB,KAAK,CAACtB,KAAK,GAAG;YAAEK,KAAK,EAAE,EAAE;YAAEZ,IAAI,EAAE;UAAG;UAChD;QACA,KAAK,OAAO;UACZW,WAAW,CAACkB,KAAK,CAACrB,KAAK,GAAG;YAAEI,KAAK,EAAE,EAAE;YAAEZ,IAAI,EAAE;UAAG;UAChD;QACA,KAAK,QAAQ;UACbW,WAAW,CAACkB,KAAK,CAACpB,MAAM,GAAG,EAAC;UAC5B;MACJ;MAEAlB,IAAI,CAAC,eAAe,EAAEoB,WAAW,CAACkB,KAAK;IAC3C;IAEA,SAASuD,mBAAmBA,CAAEC,KAAK,EAAE;MACjC1E,WAAW,CAACkB,KAAK,CAACpB,MAAM,CAAC6E,MAAM,CAACD,KAAK,EAAE,CAAC;MACxC9F,IAAI,CAAC,eAAe,EAAEoB,WAAW,CAACkB,KAAK;IAC3C;IAEA,SAASmD,aAAaA,CAAEZ,MAAM,EAAE;MAC5B,MAAMmB,KAAK,GAAG;QACVhF,KAAK,EAAE,QAAQ;QACfC,KAAK,EAAE,QAAQ;QACfC,MAAM,EAAE;MACZ;MACA,OAAO8E,KAAK,CAACnB,MAAM,CAAC,IAAIA,MAAK;IACjC;IAEA,SAASoB,aAAaA,CAAA,EAAI;MACtB,IAAI,CAAC5D,aAAa,CAACC,KAAK,EAAE;QACtBlC,YAAY,CAACkC,KAAK,GAAG,yDAAwD;QAC7E;MACJ;MAEAtC,IAAI,CAAC,gBAAgB,EAAEoB,WAAW,CAACkB,KAAK;IAC5C;IAEA,SAAS4D,WAAWA,CAAA,EAAI;MACpB9E,WAAW,CAACkB,KAAK,GAAG;QAChBtB,KAAK,EAAE;UAAEK,KAAK,EAAE,EAAE;UAAEZ,IAAI,EAAE;QAAG,CAAC;QAC9BQ,KAAK,EAAE;UAAEI,KAAK,EAAE,EAAE;UAAEZ,IAAI,EAAE;QAAG,CAAC;QAC9BS,MAAM,EAAE,EAAE;QACVI,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,SAAS;QACtBC,SAAS,EAAE,IAAI;QACfC,SAAS,EAAE,KAAK;QAChBC,YAAY,EAAE;MAClB;MAEAtB,YAAY,CAACkC,KAAK,GAAG,EAAC;MACtBtC,IAAI,CAAC,eAAe,EAAEoB,WAAW,CAACkB,KAAK;IAC3C;;IAEA;IACA1D,KAAK,CAAC,MAAMc,KAAK,CAACC,iBAAiB,EAAGwG,OAAO,IAAK;MAC9C;MACA,IAAIA,OAAO,KAAK,KAAK,IAAIA,OAAO,KAAK,KAAK,EAAE;QACxC;QACA/E,WAAW,CAACkB,KAAK,CAACrB,KAAK,GAAG;UAAEI,KAAK,EAAE,EAAE;UAAEZ,IAAI,EAAE;QAAG;MACpD;MACA;MACA,IAAIH,UAAU,CAACgC,KAAK,IAAID,aAAa,CAACC,KAAK,EAAE;QACzCtC,IAAI,CAAC,gBAAgB,EAAEoB,WAAW,CAACkB,KAAK;MAC5C;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}