{"ast":null,"code":"/**\n * 文件相关工具函数\n */\n\n// 格式化文件大小\nexport function formatFileSize(bytes) {\n  if (!bytes || bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n// 获取文件状态文本\nexport function getStatusText(status) {\n  const statusMap = {\n    'local': '本地缓存',\n    'uploading': '上传中',\n    'uploaded': '已上传',\n    'error': '出错'\n  };\n  return statusMap[status] || '未知';\n}\n\n// 获取文件状态图标\nexport function getStatusIcon(status) {\n  const iconMap = {\n    'local': '💾',\n    'uploading': '⏳',\n    'uploaded': '✅',\n    'error': '❌'\n  };\n  return iconMap[status] || '❓';\n}\n\n// 验证文件格式\nexport function isValidFileType(filename) {\n  const ext = filename.split('.').pop().toLowerCase();\n  return ['csv', 'xlsx', 'xls'].includes(ext);\n}","map":{"version":3,"names":["formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","getStatusText","status","statusMap","getStatusIcon","iconMap","isValidFileType","filename","ext","split","pop","toLowerCase","includes"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/utils/fileUtils.js"],"sourcesContent":["/**\n * 文件相关工具函数\n */\n\n// 格式化文件大小\nexport function formatFileSize(bytes) {\n    if (!bytes || bytes === 0) return '0 Bytes'\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\n// 获取文件状态文本\nexport function getStatusText(status) {\n    const statusMap = {\n        'local': '本地缓存',\n        'uploading': '上传中',\n        'uploaded': '已上传',\n        'error': '出错'\n    }\n    return statusMap[status] || '未知'\n}\n\n// 获取文件状态图标\nexport function getStatusIcon(status) {\n    const iconMap = {\n        'local': '💾',\n        'uploading': '⏳',\n        'uploaded': '✅',\n        'error': '❌'\n    }\n    return iconMap[status] || '❓'\n}\n\n// 验证文件格式\nexport function isValidFileType(filename) {\n    const ext = filename.split('.').pop().toLowerCase()\n    return ['csv', 'xlsx', 'xls'].includes(ext)\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA,OAAO,SAASA,cAAcA,CAACC,KAAK,EAAE;EAClC,IAAI,CAACA,KAAK,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAO,SAAS;EAC3C,MAAMC,CAAC,GAAG,IAAI;EACd,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EACzC,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACN,KAAK,CAAC,GAAGI,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC,CAAC;EACnD,OAAOM,UAAU,CAAC,CAACP,KAAK,GAAGI,IAAI,CAACI,GAAG,CAACP,CAAC,EAAEE,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGP,KAAK,CAACC,CAAC,CAAC;AAC3E;;AAEA;AACA,OAAO,SAASO,aAAaA,CAACC,MAAM,EAAE;EAClC,MAAMC,SAAS,GAAG;IACd,OAAO,EAAE,MAAM;IACf,WAAW,EAAE,KAAK;IAClB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE;EACb,CAAC;EACD,OAAOA,SAAS,CAACD,MAAM,CAAC,IAAI,IAAI;AACpC;;AAEA;AACA,OAAO,SAASE,aAAaA,CAACF,MAAM,EAAE;EAClC,MAAMG,OAAO,GAAG;IACZ,OAAO,EAAE,IAAI;IACb,WAAW,EAAE,GAAG;IAChB,UAAU,EAAE,GAAG;IACf,OAAO,EAAE;EACb,CAAC;EACD,OAAOA,OAAO,CAACH,MAAM,CAAC,IAAI,GAAG;AACjC;;AAEA;AACA,OAAO,SAASI,eAAeA,CAACC,QAAQ,EAAE;EACtC,MAAMC,GAAG,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnD,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAACC,QAAQ,CAACJ,GAAG,CAAC;AAC/C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}