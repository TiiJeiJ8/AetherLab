{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-type-panel\"\n};\nconst _hoisted_2 = [\"innerHTML\", \"onClick\", \"onMouseenter\"];\nconst _hoisted_3 = {\n  class: \"tooltip-header\"\n};\nconst _hoisted_4 = {\n  class: \"tooltip-title\"\n};\nconst _hoisted_5 = {\n  class: \"tooltip-description\"\n};\nconst _hoisted_6 = {\n  class: \"tooltip-section\"\n};\nconst _hoisted_7 = {\n  class: \"tooltip-tags\"\n};\nconst _hoisted_8 = {\n  class: \"tooltip-section\"\n};\nconst _hoisted_9 = {\n  class: \"tooltip-tags\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.types.slice(1), type => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: type,\n      class: _normalizeClass([\"sideBar-btn\", {\n        'selected': $setup.selectedType === type\n      }]),\n      innerHTML: $setup.renderButton(type),\n      onClick: $event => $setup.handleClick(type),\n      onMouseenter: $event => $setup.showTooltip($event, type),\n      onMouseleave: $setup.hideTooltip\n    }, null, 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 提示框 \"), $setup.tooltip.visible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"chart-tooltip\",\n    style: _normalizeStyle($setup.tooltip.style),\n    ref: \"tooltipRef\"\n  }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString($setup.tooltip.type), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_5, _toDisplayString($setup.tooltip.description), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_cache[0] || (_cache[0] = _createElementVNode(\"h4\", null, \"Data Requirements\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tooltip.dataRequirements, requirement => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: requirement,\n      class: \"tooltip-tag data-tag\"\n    }, _toDisplayString(requirement), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_8, [_cache[1] || (_cache[1] = _createElementVNode(\"h4\", null, \"Use Cases\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tooltip.useCases, useCase => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: useCase,\n      class: \"tooltip-tag use-case-tag\"\n    }, _toDisplayString(useCase), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$props","types","slice","type","key","_normalizeClass","$setup","selectedType","innerHTML","renderButton","onClick","$event","handleClick","onMouseenter","showTooltip","onMouseleave","hideTooltip","_hoisted_2","_createCommentVNode","tooltip","visible","style","_normalizeStyle","ref","_createElementVNode","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","description","_hoisted_6","_hoisted_7","dataRequirements","requirement","_hoisted_8","_hoisted_9","useCases","useCase"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\Chart\\ChartIcon.vue"],"sourcesContent":["<template>\n    <div class=\"chart-type-panel\">\n        <button\n        v-for=\"type in types.slice(1)\"\n        :key=\"type\"\n        class=\"sideBar-btn\"\n        :class=\"{ 'selected': selectedType === type }\"\n        v-html=\"renderButton(type)\"\n        @click=\"handleClick(type)\"\n        @mouseenter=\"showTooltip($event, type)\"\n        @mouseleave=\"hideTooltip\"\n        ></button>\n        <!-- 提示框 -->\n        <div\n            v-if=\"tooltip.visible\"\n            class=\"chart-tooltip\"\n            :style=\"tooltip.style\"\n            ref=\"tooltipRef\"\n        >\n            <div class=\"tooltip-header\">\n                <span class=\"tooltip-title\">{{ tooltip.type }}</span>\n                <span class=\"tooltip-description\">{{ tooltip.description }}</span>\n            </div>\n            <div class=\"tooltip-section\">\n                <h4>Data Requirements</h4>\n                <div class=\"tooltip-tags\">\n                    <span\n                        v-for=\"requirement in tooltip.dataRequirements\"\n                        :key=\"requirement\"\n                        class=\"tooltip-tag data-tag\"\n                    >\n                        {{ requirement }}\n                    </span>\n                </div>\n            </div>\n            <div class=\"tooltip-section\">\n                <h4>Use Cases</h4>\n                <div class=\"tooltip-tags\">\n                    <span\n                        v-for=\"useCase in tooltip.useCases\"\n                        :key=\"useCase\"\n                        class=\"tooltip-tag use-case-tag\"\n                    >\n                        {{ useCase }}\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script setup>\n/* eslint-disable */\nimport { chartTypes, chartIcons } from '../../assets/JS/SVG/chartIcons.js'\nimport { chartsTooltipConfig } from '../../assets/JS/Config/ChartsTooltipConfig.js'\nimport { watch, ref, reactive, nextTick } from 'vue'\n\n\n/**\n * Props\n * @prop {Array} types - 可选图表类型数组，默认全部类型\n * @prop {String} modelValue - 当前选中类型（v-model）\n *\n * Emits\n * @event select - 选中类型时触发，参数为类型字符串\n * @event update:modelValue - v-model 双向绑定\n */\nconst props = defineProps({\n    types: {\n        type: Array,\n        default: () => chartTypes\n    },\n    modelValue: {\n        type: String,\n        default: ''\n    }\n})\n\nconst emit = defineEmits(['select', 'update:modelValue'])\n\nconst selectedType = ref(props.modelValue)\nconst tooltipRef = ref(null)\n\n// 提示框状态\nconst tooltip = reactive({\n    visible: false,\n    type: '',\n    description: '',\n    dataRequirements: [],\n    useCases: [],\n    style: {}\n})\n\nlet tooltipTimeout = null\n\nfunction renderButton(type) {\n    const icon = chartIcons[type] || ''\n    return `${icon}<span class=\"label\">${type}</span>`\n}\n\nfunction handleClick(type) {\n    selectedType.value = type\n    emit('select', type)\n    emit('update:modelValue', type)\n}\n\n// 显示提示框\nfunction showTooltip(event, type) {\n    // 清除之前的定时器\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n    }\n    \n    // 设置1秒延迟\n    tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type]\n        if (config) {\n            tooltip.type = type\n            tooltip.description = config.description\n            tooltip.dataRequirements = config.dataRequirements\n            tooltip.useCases = config.useCases\n            tooltip.visible = true\n            \n            // 在下一个tick中计算位置，确保DOM已更新\n            nextTick(() => {\n                positionTooltip(event)\n            })\n        }\n    }, 1200) // 1.2秒延迟\n}\n\n// 隐藏提示框\nfunction hideTooltip() {\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n        tooltipTimeout = null\n    }\n    tooltip.visible = false\n}\n\n// 计算提示框位置，确保不超出屏幕\nfunction positionTooltip(event) {\n    if (!tooltipRef.value) return\n    \n    const tooltipEl = tooltipRef.value\n    const rect = tooltipEl.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    \n    let left = event.pageX + 10\n    let top = event.pageY + 10\n    \n    // 防止右边超出屏幕\n    if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10\n    }\n    \n    // 防止底部超出屏幕\n    if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10\n    }\n    \n    // 防止左边超出屏幕\n    if (left < 0) {\n        left = 10\n    }\n    \n    // 防止顶部超出屏幕\n    if (top < 0) {\n        top = 10\n    }\n    \n    tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n    }\n}\n\nwatch(() => props.modelValue, (newValue) => {\n    selectedType.value = newValue\n})\n</script>\n\n<style scoped>\n.chart-type-panel {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n.sideBar-btn {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    background: transparent;\n    border: none;\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    color: var(--text-color);\n    padding: 6px 14px;\n    border-radius: 8px;\n    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s;\n    position: relative;\n    overflow: hidden;\n}\n.sideBar-btn::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition: left 0.6s;\n}\n.sideBar-btn:hover {\n    background-color: rgba(136, 133, 133, 0.1);\n    transform: translateY(-2px) scale(1.02);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 选中状态的样式 */\n.sideBar-btn.selected {\n    background: linear-gradient(135deg, #686868, #4d4d4e);\n    color: white;\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(158, 159, 159, 0.112);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.sideBar-btn.selected::before {\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\n}\n\n.sideBar-btn.selected:hover {\n    background: linear-gradient(135deg, #3a3a3a, #4f4f4f);\n    transform: translateY(-3px) scale(1.05);\n    box-shadow: 0 6px 16px rgba(159, 159, 159, 0.18);\n}\n\n.sideBar-btn.selected:hover::before {\n    left: 100%;\n}\n\n/* 点击动画 */\n.sideBar-btn:active {\n    transform: translateY(0) scale(0.98);\n    transition: all 0.1s ease;\n}\n\n.sideBar-btn.selected:active {\n    transform: translateY(-1px) scale(0.98);\n}\n.sideBar-btn svg {\n    fill: currentColor;\n    transition: all 0.3s ease;\n}\n.sideBar-btn.selected svg {\n    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));\n}\n.label {\n    white-space: nowrap;\n    transition: all 0.3s ease;\n}\n\n.sideBar-btn.selected .label {\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n/* 选中状态的动画效果 */\n@keyframes selectedShine {\n    0% {\n        background-position: -100% 0;\n    }\n    100% {\n        background-position: 100% 0;\n    }\n}\n\n.sideBar-btn.selected:hover .chart-icon-svg {\n    transform: scale(1.1);\n    filter: drop-shadow(0 2px 6px rgba(0, 0, 0, 0.3));\n}\n\n.sideBar-btn.selected:hover .label {\n    transform: translateX(2px);\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n}\n\n/* 提示框样式 */\n.chart-tooltip {\n    background: var(--bg-color);\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    border-radius: 8px;\n    padding: 16px;\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);\n    max-width: 320px;\n    min-width: 280px;\n    font-size: 14px;\n    line-height: 1.4;\n    backdrop-filter: blur(10px);\n    animation: tooltipFadeIn 0.2s ease-out;\n}\n\n/* 深色模式下的提示框样式 */\n@media (prefers-color-scheme: dark) {\n    .chart-tooltip {\n        border-color: rgba(255, 255, 255, 0.1);\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);\n    }\n}\n\n.tooltip-header {\n    margin-bottom: 12px;\n    border-bottom: 1px solid rgba(128, 128, 128, 0.2);\n    padding-bottom: 8px;\n}\n\n.tooltip-title {\n    font-weight: 600;\n    font-size: 16px;\n    color: var(--text-color);\n    display: block;\n    margin-bottom: 4px;\n}\n\n.tooltip-description {\n    color: var(--text-color);\n    opacity: 0.8;\n    font-size: 13px;\n    font-style: italic;\n}\n\n.tooltip-section {\n    margin-bottom: 12px;\n}\n\n.tooltip-section:last-child {\n    margin-bottom: 0;\n}\n\n.tooltip-section h4 {\n    margin: 0 0 8px 0;\n    font-size: 13px;\n    font-weight: 600;\n    color: var(--text-color);\n    opacity: 0.9;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n}\n\n.tooltip-tags {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 6px;\n}\n\n.tooltip-tag {\n    display: inline-block;\n    padding: 4px 8px;\n    border-radius: 4px;\n    font-size: 11px;\n    font-weight: 500;\n    line-height: 1.2;\n    text-align: center;\n    white-space: nowrap;\n    transition: all 0.2s ease;\n}\n\n.data-tag {\n    background: linear-gradient(135deg, #e3f2fd, #bbdefb);\n    color: #1565c0;\n    border: 1px solid #90caf9;\n}\n\n.use-case-tag {\n    background: linear-gradient(135deg, #f3e5f5, #e1bee7);\n    color: #7b1fa2;\n    border: 1px solid #ce93d8;\n}\n\n/* 深色模式下的标签样式 */\n[data-theme=\"dark\"] .data-tag {\n    background: linear-gradient(135deg, #1e3a8a, #3b82f6);\n    color: #dbeafe;\n    border-color: #60a5fa;\n}\n\n[data-theme=\"dark\"] .use-case-tag {\n    background: linear-gradient(135deg, #581c87, #9333ea);\n    color: #f3e8ff;\n    border-color: #c084fc;\n}\n\n\n.tooltip-tag:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n/* 提示框淡入动画 */\n@keyframes tooltipFadeIn {\n    from {\n        opacity: 0;\n        transform: translateY(-10px) scale(0.95);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0) scale(1);\n    }\n}\n</style>\n\n<style>\n.chart-icon-svg {\n    width: 1.6em;\n    height: 1.6em;\n    min-width: 24px;\n    min-height: 24px;\n    max-width: 32px;\n    max-height: 32px;\n    color: var(--text-color);\n    fill: currentColor;\n    vertical-align: middle;\n    display: inline-block;\n    transition: all 0.3s ease;\n}\n\n.sideBar-btn.selected .chart-icon-svg {\n    color: white;\n}\n</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAkB;mBADjC;;EAmBiBA,KAAK,EAAC;AAAgB;;EACjBA,KAAK,EAAC;AAAe;;EACrBA,KAAK,EAAC;AAAqB;;EAEhCA,KAAK,EAAC;AAAiB;;EAEnBA,KAAK,EAAC;AAAc;;EAUxBA,KAAK,EAAC;AAAiB;;EAEnBA,KAAK,EAAC;AAAc;;uBApCrCC,mBAAA,CA+CM,OA/CNC,UA+CM,I,kBA9CFD,mBAAA,CASUE,SAAA,QAXlBC,WAAA,CAGuBC,MAAA,CAAAC,KAAK,CAACC,KAAK,KAAnBC,IAAI;yBADXP,mBAAA,CASU;MAPTQ,GAAG,EAAED,IAAI;MACVR,KAAK,EALbU,eAAA,EAKc,aAAa;QAAA,YACGC,MAAA,CAAAC,YAAY,KAAKJ;MAAI;MAC3CK,SAA2B,EAAnBF,MAAA,CAAAG,YAAY,CAACN,IAAI;MACxBO,OAAK,EAAAC,MAAA,IAAEL,MAAA,CAAAM,WAAW,CAACT,IAAI;MACvBU,YAAU,EAAAF,MAAA,IAAEL,MAAA,CAAAQ,WAAW,CAACH,MAAM,EAAER,IAAI;MACpCY,YAAU,EAAET,MAAA,CAAAU;oDAVrBC,UAAA;kCAYQC,mBAAA,SAAY,EAEFZ,MAAA,CAAAa,OAAO,CAACC,OAAO,I,cADzBxB,mBAAA,CAkCM;IA/CdQ,GAAA;IAeYT,KAAK,EAAC,eAAe;IACpB0B,KAAK,EAhBlBC,eAAA,CAgBoBhB,MAAA,CAAAa,OAAO,CAACE,KAAK;IACrBE,GAAG,EAAC;MAEJC,mBAAA,CAGM,OAHNC,UAGM,GAFFD,mBAAA,CAAqD,QAArDE,UAAqD,EAAAC,gBAAA,CAAtBrB,MAAA,CAAAa,OAAO,CAAChB,IAAI,kBAC3CqB,mBAAA,CAAkE,QAAlEI,UAAkE,EAAAD,gBAAA,CAA7BrB,MAAA,CAAAa,OAAO,CAACU,WAAW,iB,GAE5DL,mBAAA,CAWM,OAXNM,UAWM,G,0BAVFN,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAQM,OARNO,UAQM,I,kBAPFnC,mBAAA,CAMOE,SAAA,QAhC3BC,WAAA,CA2B8CO,MAAA,CAAAa,OAAO,CAACa,gBAAgB,EAAvCC,WAAW;yBADtBrC,mBAAA,CAMO;MAJFQ,GAAG,EAAE6B,WAAW;MACjBtC,KAAK,EAAC;wBAEHsC,WAAW;sCAI1BT,mBAAA,CAWM,OAXNU,UAWM,G,0BAVFV,mBAAA,CAAkB,YAAd,WAAS,sBACbA,mBAAA,CAQM,OARNW,UAQM,I,kBAPFvC,mBAAA,CAMOE,SAAA,QA5C3BC,WAAA,CAuC0CO,MAAA,CAAAa,OAAO,CAACiB,QAAQ,EAA3BC,OAAO;yBADlBzC,mBAAA,CAMO;MAJFQ,GAAG,EAAEiC,OAAO;MACb1C,KAAK,EAAC;wBAEH0C,OAAO;yDA3ClCnB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}