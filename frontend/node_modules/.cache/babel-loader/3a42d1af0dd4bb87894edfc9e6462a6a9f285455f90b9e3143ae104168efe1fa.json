{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, computed } from 'vue';\n\n// 不同图表类型的配置映射\nconst chartConfigMap = {\n  line: [{\n    key: 'xAxis',\n    title: 'X Axis',\n    required: true,\n    maxItems: 1\n  }, {\n    key: 'yAxis',\n    title: 'Y Axis',\n    required: true,\n    maxItems: 5\n  }, {\n    key: 'series',\n    title: 'Series',\n    required: false,\n    maxItems: 10\n  }],\n  bar: [{\n    key: 'xAxis',\n    title: 'X Axis',\n    required: true,\n    maxItems: 1\n  }, {\n    key: 'yAxis',\n    title: 'Y Axis',\n    required: true,\n    maxItems: 5\n  }, {\n    key: 'series',\n    title: 'Series',\n    required: false,\n    maxItems: 10\n  }],\n  pie: [{\n    key: 'name',\n    title: 'Name',\n    required: true,\n    maxItems: 1\n  }, {\n    key: 'value',\n    title: 'Value',\n    required: true,\n    maxItems: 1\n  }],\n  scatter: [{\n    key: 'xAxis',\n    title: 'X Axis',\n    required: true,\n    maxItems: 1\n  }, {\n    key: 'yAxis',\n    title: 'Y Axis',\n    required: true,\n    maxItems: 1\n  }, {\n    key: 'size',\n    title: 'Size',\n    required: false,\n    maxItems: 1\n  }, {\n    key: 'series',\n    title: 'Series',\n    required: false,\n    maxItems: 5\n  }],\n  radar: [{\n    key: 'indicator',\n    title: 'Indicators',\n    required: true,\n    maxItems: 10\n  }, {\n    key: 'series',\n    title: 'Series',\n    required: false,\n    maxItems: 5\n  }],\n  heatmap: [{\n    key: 'xAxis',\n    title: 'X Axis',\n    required: true,\n    maxItems: 1\n  }, {\n    key: 'yAxis',\n    title: 'Y Axis',\n    required: true,\n    maxItems: 1\n  }, {\n    key: 'value',\n    title: 'Value',\n    required: true,\n    maxItems: 1\n  }],\n  funnel: [{\n    key: 'name',\n    title: 'Name',\n    required: true,\n    maxItems: 1\n  }, {\n    key: 'value',\n    title: 'Value',\n    required: true,\n    maxItems: 1\n  }],\n  gauge: [{\n    key: 'value',\n    title: 'Value',\n    required: true,\n    maxItems: 1\n  }, {\n    key: 'name',\n    title: 'Name',\n    required: false,\n    maxItems: 1\n  }],\n  sunburst: [{\n    key: 'name',\n    title: 'Name',\n    required: true,\n    maxItems: 1\n  }, {\n    key: 'value',\n    title: 'Value',\n    required: true,\n    maxItems: 1\n  }, {\n    key: 'parent',\n    title: 'Parent',\n    required: false,\n    maxItems: 1\n  }],\n  treemap: [{\n    key: 'name',\n    title: 'Name',\n    required: true,\n    maxItems: 1\n  }, {\n    key: 'value',\n    title: 'Value',\n    required: true,\n    maxItems: 1\n  }, {\n    key: 'parent',\n    title: 'Parent',\n    required: false,\n    maxItems: 1\n  }]\n};\nexport function useChartMapping(chartTypeRef) {\n  const mappedData = ref({});\n\n  // 根据图表类型获取配置\n  const chartConfigs = computed(() => {\n    const chartType = typeof chartTypeRef === 'string' ? chartTypeRef : chartTypeRef.value;\n    const configs = chartConfigMap[chartType] || chartConfigMap.line;\n\n    // 初始化mappedData\n    configs.forEach(config => {\n      if (!mappedData.value[config.key]) {\n        mappedData.value[config.key] = [];\n      }\n    });\n    return configs;\n  });\n\n  // 添加映射\n  function addMapping(configKey, columnData) {\n    const config = chartConfigs.value.find(c => c.key === configKey);\n    if (!config) return;\n    const currentMappings = mappedData.value[configKey] || [];\n\n    // 检查是否已存在相同的映射\n    const existingIndex = currentMappings.findIndex(item => item.fileId === columnData.fileId && item.columnName === columnData.columnName);\n    if (existingIndex > -1) {\n      // 如果已存在，更新位置\n      currentMappings.splice(existingIndex, 1);\n    }\n\n    // 检查最大项目数限制\n    if (config.maxItems && currentMappings.length >= config.maxItems) {\n      // 移除最旧的项目\n      currentMappings.shift();\n    }\n\n    // 添加新的映射\n    currentMappings.push({\n      ...columnData,\n      id: `${columnData.fileId}_${columnData.columnName}_${Date.now()}`\n    });\n    mappedData.value[configKey] = currentMappings;\n  }\n\n  // 移除映射\n  function removeMapping(configKey, index) {\n    if (mappedData.value[configKey]) {\n      mappedData.value[configKey].splice(index, 1);\n    }\n  }\n\n  // 清空所有映射\n  function clearAllMappings() {\n    Object.keys(mappedData.value).forEach(key => {\n      mappedData.value[key] = [];\n    });\n  }\n\n  // 生成图表配置\n  function generateChartOption(data) {\n    const chartType = typeof chartTypeRef === 'string' ? chartTypeRef : chartTypeRef.value;\n    const option = {\n      title: {\n        text: `${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left'\n      }\n    };\n\n    // 根据不同图表类型生成配置\n    switch (chartType) {\n      case 'line':\n      case 'bar':\n        return generateLineBarOption(option, data, chartType);\n      case 'pie':\n        return generatePieOption(option, data);\n      case 'scatter':\n        return generateScatterOption(option, data);\n      case 'radar':\n        return generateRadarOption(option, data);\n      case 'heatmap':\n        return generateHeatmapOption(option, data);\n      case 'funnel':\n        return generateFunnelOption(option, data);\n      case 'gauge':\n        return generateGaugeOption(option, data);\n      case 'sunburst':\n        return generateSunburstOption(option, data);\n      case 'treemap':\n        return generateTreemapOption(option, data);\n      default:\n        return generateLineBarOption(option, data, chartType);\n    }\n  }\n\n  // 生成线图/柱状图配置\n  function generateLineBarOption(baseOption, data, chartType) {\n    const xAxisMapping = mappedData.value.xAxis?.[0];\n    const yAxisMappings = mappedData.value.yAxis || [];\n    const seriesMapping = mappedData.value.series?.[0];\n    if (!xAxisMapping || yAxisMappings.length === 0) {\n      return {\n        ...baseOption,\n        series: []\n      };\n    }\n\n    // 提取X轴数据\n    const xAxisData = [...new Set(data.map(row => row[xAxisMapping.columnName]))];\n\n    // 生成系列数据\n    const series = yAxisMappings.map(yMapping => {\n      const seriesData = xAxisData.map(xValue => {\n        const matchingRows = data.filter(row => row[xAxisMapping.columnName] === xValue);\n        if (matchingRows.length === 0) return 0;\n\n        // 如果有系列分组\n        if (seriesMapping) {\n          const seriesValue = matchingRows[0][seriesMapping.columnName];\n          const filteredRows = matchingRows.filter(row => row[seriesMapping.columnName] === seriesValue);\n          return filteredRows.length > 0 ? filteredRows[0][yMapping.columnName] || 0 : 0;\n        }\n\n        // 聚合数据（取平均值）\n        const sum = matchingRows.reduce((acc, row) => acc + (parseFloat(row[yMapping.columnName]) || 0), 0);\n        return sum / matchingRows.length;\n      });\n      return {\n        name: yMapping.columnName,\n        type: chartType || 'line',\n        data: seriesData,\n        smooth: chartType === 'line'\n      };\n    });\n    return {\n      ...baseOption,\n      xAxis: {\n        type: 'category',\n        data: xAxisData\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series\n    };\n  }\n\n  // 生成饼图配置\n  function generatePieOption(baseOption, data) {\n    const nameMapping = mappedData.value.name?.[0];\n    const valueMapping = mappedData.value.value?.[0];\n    if (!nameMapping || !valueMapping) {\n      return {\n        ...baseOption,\n        series: []\n      };\n    }\n\n    // 聚合数据\n    const aggregatedData = {};\n    data.forEach(row => {\n      const name = row[nameMapping.columnName];\n      const value = parseFloat(row[valueMapping.columnName]) || 0;\n      if (aggregatedData[name]) {\n        aggregatedData[name] += value;\n      } else {\n        aggregatedData[name] = value;\n      }\n    });\n    const pieData = Object.entries(aggregatedData).map(([name, value]) => ({\n      name,\n      value\n    }));\n    return {\n      ...baseOption,\n      series: [{\n        type: 'pie',\n        radius: '60%',\n        data: pieData,\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }]\n    };\n  }\n\n  // 生成散点图配置\n  function generateScatterOption(baseOption, data) {\n    const xAxisMapping = mappedData.value.xAxis?.[0];\n    const yAxisMapping = mappedData.value.yAxis?.[0];\n    const sizeMapping = mappedData.value.size?.[0];\n    const seriesMapping = mappedData.value.series?.[0];\n    if (!xAxisMapping || !yAxisMapping) {\n      return {\n        ...baseOption,\n        series: []\n      };\n    }\n\n    // 生成散点数据\n    const scatterData = data.map(row => {\n      const point = [parseFloat(row[xAxisMapping.columnName]) || 0, parseFloat(row[yAxisMapping.columnName]) || 0];\n      if (sizeMapping) {\n        point.push(parseFloat(row[sizeMapping.columnName]) || 1);\n      }\n      return point;\n    });\n\n    // 如果有系列分组\n    let series = [];\n    if (seriesMapping) {\n      const seriesGroups = {};\n      data.forEach((row, index) => {\n        const seriesValue = row[seriesMapping.columnName];\n        if (!seriesGroups[seriesValue]) {\n          seriesGroups[seriesValue] = [];\n        }\n        seriesGroups[seriesValue].push(scatterData[index]);\n      });\n      series = Object.entries(seriesGroups).map(([name, data]) => ({\n        name,\n        type: 'scatter',\n        data\n      }));\n    } else {\n      series = [{\n        type: 'scatter',\n        data: scatterData\n      }];\n    }\n    return {\n      ...baseOption,\n      xAxis: {\n        type: 'value',\n        name: xAxisMapping.columnName\n      },\n      yAxis: {\n        type: 'value',\n        name: yAxisMapping.columnName\n      },\n      series\n    };\n  }\n\n  // 生成雷达图配置\n  function generateRadarOption(baseOption, data) {\n    const indicatorMappings = mappedData.value.indicator || [];\n    const seriesMapping = mappedData.value.series?.[0];\n    if (indicatorMappings.length === 0) {\n      return {\n        ...baseOption,\n        series: []\n      };\n    }\n\n    // 生成雷达图指标\n    const indicator = indicatorMappings.map(mapping => ({\n      name: mapping.columnName,\n      max: Math.max(...data.map(row => parseFloat(row[mapping.columnName]) || 0))\n    }));\n\n    // 生成雷达图数据\n    let radarData = [];\n    if (seriesMapping) {\n      const seriesGroups = {};\n      data.forEach(row => {\n        const seriesValue = row[seriesMapping.columnName];\n        if (!seriesGroups[seriesValue]) {\n          seriesGroups[seriesValue] = [];\n        }\n        seriesGroups[seriesValue].push(row);\n      });\n      radarData = Object.entries(seriesGroups).map(([name, rows]) => {\n        const avgValues = indicatorMappings.map(mapping => {\n          const sum = rows.reduce((acc, row) => acc + (parseFloat(row[mapping.columnName]) || 0), 0);\n          return sum / rows.length;\n        });\n        return {\n          name,\n          value: avgValues\n        };\n      });\n    } else {\n      // 计算平均值\n      const avgValues = indicatorMappings.map(mapping => {\n        const sum = data.reduce((acc, row) => acc + (parseFloat(row[mapping.columnName]) || 0), 0);\n        return sum / data.length;\n      });\n      radarData = [{\n        name: 'Average',\n        value: avgValues\n      }];\n    }\n    return {\n      ...baseOption,\n      radar: {\n        indicator\n      },\n      series: [{\n        type: 'radar',\n        data: radarData\n      }]\n    };\n  }\n\n  // 生成热力图配置\n  function generateHeatmapOption(baseOption, data) {\n    const xAxisMapping = mappedData.value.xAxis?.[0];\n    const yAxisMapping = mappedData.value.yAxis?.[0];\n    const valueMapping = mappedData.value.value?.[0];\n    if (!xAxisMapping || !yAxisMapping || !valueMapping) {\n      return {\n        ...baseOption,\n        series: []\n      };\n    }\n\n    // 获取唯一的X和Y值\n    const xAxisData = [...new Set(data.map(row => row[xAxisMapping.columnName]))];\n    const yAxisData = [...new Set(data.map(row => row[yAxisMapping.columnName]))];\n\n    // 生成热力图数据\n    const heatmapData = [];\n    xAxisData.forEach((xValue, xIndex) => {\n      yAxisData.forEach((yValue, yIndex) => {\n        const matchingRow = data.find(row => row[xAxisMapping.columnName] === xValue && row[yAxisMapping.columnName] === yValue);\n        if (matchingRow) {\n          heatmapData.push([xIndex, yIndex, parseFloat(matchingRow[valueMapping.columnName]) || 0]);\n        }\n      });\n    });\n    return {\n      ...baseOption,\n      grid: {\n        height: '50%',\n        top: '10%'\n      },\n      xAxis: {\n        type: 'category',\n        data: xAxisData,\n        splitArea: {\n          show: true\n        }\n      },\n      yAxis: {\n        type: 'category',\n        data: yAxisData,\n        splitArea: {\n          show: true\n        }\n      },\n      visualMap: {\n        min: 0,\n        max: Math.max(...heatmapData.map(item => item[2])),\n        calculable: true,\n        orient: 'horizontal',\n        left: 'center',\n        bottom: '15%'\n      },\n      series: [{\n        type: 'heatmap',\n        data: heatmapData,\n        label: {\n          show: true\n        },\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }]\n    };\n  }\n\n  // 生成漏斗图配置\n  function generateFunnelOption(baseOption, data) {\n    const nameMapping = mappedData.value.name?.[0];\n    const valueMapping = mappedData.value.value?.[0];\n    if (!nameMapping || !valueMapping) {\n      return {\n        ...baseOption,\n        series: []\n      };\n    }\n\n    // 聚合并排序数据\n    const aggregatedData = {};\n    data.forEach(row => {\n      const name = row[nameMapping.columnName];\n      const value = parseFloat(row[valueMapping.columnName]) || 0;\n      if (aggregatedData[name]) {\n        aggregatedData[name] += value;\n      } else {\n        aggregatedData[name] = value;\n      }\n    });\n    const funnelData = Object.entries(aggregatedData).map(([name, value]) => ({\n      name,\n      value\n    })).sort((a, b) => b.value - a.value);\n    return {\n      ...baseOption,\n      series: [{\n        type: 'funnel',\n        left: '10%',\n        top: 60,\n        bottom: 60,\n        width: '80%',\n        minSize: '0%',\n        maxSize: '100%',\n        sort: 'descending',\n        gap: 2,\n        label: {\n          show: true,\n          position: 'inside'\n        },\n        labelLine: {\n          length: 10,\n          lineStyle: {\n            width: 1,\n            type: 'solid'\n          }\n        },\n        itemStyle: {\n          borderColor: '#fff',\n          borderWidth: 1\n        },\n        emphasis: {\n          label: {\n            fontSize: 20\n          }\n        },\n        data: funnelData\n      }]\n    };\n  }\n\n  // 生成仪表盘配置\n  function generateGaugeOption(baseOption, data) {\n    const valueMapping = mappedData.value.value?.[0];\n    const nameMapping = mappedData.value.name?.[0];\n    if (!valueMapping) {\n      return {\n        ...baseOption,\n        series: []\n      };\n    }\n\n    // 计算平均值\n    const avgValue = data.reduce((acc, row) => acc + (parseFloat(row[valueMapping.columnName]) || 0), 0) / data.length;\n    const maxValue = Math.max(...data.map(row => parseFloat(row[valueMapping.columnName]) || 0));\n    const gaugeName = nameMapping ? data[0][nameMapping.columnName] || valueMapping.columnName : valueMapping.columnName;\n    return {\n      ...baseOption,\n      series: [{\n        name: gaugeName,\n        type: 'gauge',\n        max: maxValue,\n        detail: {\n          formatter: '{value}%'\n        },\n        data: [{\n          value: avgValue,\n          name: gaugeName\n        }]\n      }]\n    };\n  }\n\n  // 生成旭日图配置\n  function generateSunburstOption(baseOption, data) {\n    const nameMapping = mappedData.value.name?.[0];\n    const valueMapping = mappedData.value.value?.[0];\n    const parentMapping = mappedData.value.parent?.[0];\n    if (!nameMapping || !valueMapping) {\n      return {\n        ...baseOption,\n        series: []\n      };\n    }\n\n    // 构建层级数据\n    const hierarchicalData = buildHierarchicalData(data, nameMapping, valueMapping, parentMapping);\n    return {\n      ...baseOption,\n      series: [{\n        type: 'sunburst',\n        data: hierarchicalData,\n        radius: [0, '90%'],\n        itemStyle: {\n          borderRadius: 7,\n          borderWidth: 2\n        },\n        label: {\n          show: false\n        }\n      }]\n    };\n  }\n\n  // 生成矩形树图配置\n  function generateTreemapOption(baseOption, data) {\n    const nameMapping = mappedData.value.name?.[0];\n    const valueMapping = mappedData.value.value?.[0];\n    const parentMapping = mappedData.value.parent?.[0];\n    if (!nameMapping || !valueMapping) {\n      return {\n        ...baseOption,\n        series: []\n      };\n    }\n\n    // 构建层级数据\n    const hierarchicalData = buildHierarchicalData(data, nameMapping, valueMapping, parentMapping);\n    return {\n      ...baseOption,\n      series: [{\n        type: 'treemap',\n        data: hierarchicalData,\n        leafDepth: 1,\n        label: {\n          show: true,\n          formatter: '{b}'\n        },\n        itemStyle: {\n          borderColor: '#fff'\n        }\n      }]\n    };\n  }\n\n  // 构建层级数据的辅助函数\n  function buildHierarchicalData(data, nameMapping, valueMapping, parentMapping) {\n    if (!parentMapping) {\n      // 没有父级映射，直接返回平铺数据\n      return data.map(row => ({\n        name: row[nameMapping.columnName],\n        value: parseFloat(row[valueMapping.columnName]) || 0\n      }));\n    }\n\n    // 构建层级结构\n    const nodeMap = new Map();\n    const roots = [];\n    data.forEach(row => {\n      const name = row[nameMapping.columnName];\n      const value = parseFloat(row[valueMapping.columnName]) || 0;\n      const parent = row[parentMapping.columnName];\n      const node = {\n        name,\n        value,\n        parent,\n        children: []\n      };\n      nodeMap.set(name, node);\n      if (!parent || parent === '' || parent === null) {\n        roots.push(node);\n      }\n    });\n\n    // 建立父子关系\n    nodeMap.forEach(node => {\n      if (node.parent && nodeMap.has(node.parent)) {\n        const parentNode = nodeMap.get(node.parent);\n        parentNode.children.push(node);\n      }\n    });\n\n    // 转换为ECharts格式\n    function convertToEChartsFormat(nodes) {\n      return nodes.map(node => ({\n        name: node.name,\n        value: node.value,\n        children: node.children.length > 0 ? convertToEChartsFormat(node.children) : undefined\n      }));\n    }\n    return convertToEChartsFormat(roots);\n  }\n  return {\n    chartConfigs,\n    mappedData,\n    addMapping,\n    removeMapping,\n    clearAllMappings,\n    generateChartOption\n  };\n}","map":{"version":3,"names":["ref","computed","chartConfigMap","line","key","title","required","maxItems","bar","pie","scatter","radar","heatmap","funnel","gauge","sunburst","treemap","useChartMapping","chartTypeRef","mappedData","chartConfigs","chartType","value","configs","forEach","config","addMapping","configKey","columnData","find","c","currentMappings","existingIndex","findIndex","item","fileId","columnName","splice","length","shift","push","id","Date","now","removeMapping","index","clearAllMappings","Object","keys","generateChartOption","data","option","text","charAt","toUpperCase","slice","left","tooltip","trigger","legend","orient","generateLineBarOption","generatePieOption","generateScatterOption","generateRadarOption","generateHeatmapOption","generateFunnelOption","generateGaugeOption","generateSunburstOption","generateTreemapOption","baseOption","xAxisMapping","xAxis","yAxisMappings","yAxis","seriesMapping","series","xAxisData","Set","map","row","yMapping","seriesData","xValue","matchingRows","filter","seriesValue","filteredRows","sum","reduce","acc","parseFloat","name","type","smooth","nameMapping","valueMapping","aggregatedData","pieData","entries","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","yAxisMapping","sizeMapping","size","scatterData","point","seriesGroups","indicatorMappings","indicator","mapping","max","Math","radarData","rows","avgValues","yAxisData","heatmapData","xIndex","yValue","yIndex","matchingRow","grid","height","top","splitArea","show","visualMap","min","calculable","bottom","label","funnelData","sort","a","b","width","minSize","maxSize","gap","position","labelLine","lineStyle","borderColor","borderWidth","fontSize","avgValue","maxValue","gaugeName","detail","formatter","parentMapping","parent","hierarchicalData","buildHierarchicalData","borderRadius","leafDepth","nodeMap","Map","roots","node","children","set","has","parentNode","get","convertToEChartsFormat","nodes","undefined"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/composables/useChartMapping.js"],"sourcesContent":["import { ref, computed } from 'vue'\n\n// 不同图表类型的配置映射\nconst chartConfigMap = {\n  line: [\n    { key: 'xAxis', title: 'X Axis', required: true, maxItems: 1 },\n    { key: 'yAxis', title: 'Y Axis', required: true, maxItems: 5 },\n    { key: 'series', title: 'Series', required: false, maxItems: 10 }\n  ],\n  bar: [\n    { key: 'xAxis', title: 'X Axis', required: true, maxItems: 1 },\n    { key: 'yAxis', title: 'Y Axis', required: true, maxItems: 5 },\n    { key: 'series', title: 'Series', required: false, maxItems: 10 }\n  ],\n  pie: [\n    { key: 'name', title: 'Name', required: true, maxItems: 1 },\n    { key: 'value', title: 'Value', required: true, maxItems: 1 }\n  ],\n  scatter: [\n    { key: 'xAxis', title: 'X Axis', required: true, maxItems: 1 },\n    { key: 'yAxis', title: 'Y Axis', required: true, maxItems: 1 },\n    { key: 'size', title: 'Size', required: false, maxItems: 1 },\n    { key: 'series', title: 'Series', required: false, maxItems: 5 }\n  ],\n  radar: [\n    { key: 'indicator', title: 'Indicators', required: true, maxItems: 10 },\n    { key: 'series', title: 'Series', required: false, maxItems: 5 }\n  ],\n  heatmap: [\n    { key: 'xAxis', title: 'X Axis', required: true, maxItems: 1 },\n    { key: 'yAxis', title: 'Y Axis', required: true, maxItems: 1 },\n    { key: 'value', title: 'Value', required: true, maxItems: 1 }\n  ],\n  funnel: [\n    { key: 'name', title: 'Name', required: true, maxItems: 1 },\n    { key: 'value', title: 'Value', required: true, maxItems: 1 }\n  ],\n  gauge: [\n    { key: 'value', title: 'Value', required: true, maxItems: 1 },\n    { key: 'name', title: 'Name', required: false, maxItems: 1 }\n  ],\n  sunburst: [\n    { key: 'name', title: 'Name', required: true, maxItems: 1 },\n    { key: 'value', title: 'Value', required: true, maxItems: 1 },\n    { key: 'parent', title: 'Parent', required: false, maxItems: 1 }\n  ],\n  treemap: [\n    { key: 'name', title: 'Name', required: true, maxItems: 1 },\n    { key: 'value', title: 'Value', required: true, maxItems: 1 },\n    { key: 'parent', title: 'Parent', required: false, maxItems: 1 }\n  ]\n}\n\nexport function useChartMapping (chartTypeRef) {\n  const mappedData = ref({})\n\n  // 根据图表类型获取配置\n  const chartConfigs = computed(() => {\n    const chartType = typeof chartTypeRef === 'string' ? chartTypeRef : chartTypeRef.value\n    const configs = chartConfigMap[chartType] || chartConfigMap.line\n\n    // 初始化mappedData\n    configs.forEach(config => {\n      if (!mappedData.value[config.key]) {\n        mappedData.value[config.key] = []\n      }\n    })\n\n    return configs\n  })\n\n  // 添加映射\n  function addMapping (configKey, columnData) {\n    const config = chartConfigs.value.find(c => c.key === configKey)\n    if (!config) return\n\n    const currentMappings = mappedData.value[configKey] || []\n\n    // 检查是否已存在相同的映射\n    const existingIndex = currentMappings.findIndex(\n      item => item.fileId === columnData.fileId && item.columnName === columnData.columnName\n    )\n\n    if (existingIndex > -1) {\n      // 如果已存在，更新位置\n      currentMappings.splice(existingIndex, 1)\n    }\n\n    // 检查最大项目数限制\n    if (config.maxItems && currentMappings.length >= config.maxItems) {\n      // 移除最旧的项目\n      currentMappings.shift()\n    }\n\n    // 添加新的映射\n    currentMappings.push({\n      ...columnData,\n      id: `${columnData.fileId}_${columnData.columnName}_${Date.now()}`\n    })\n\n    mappedData.value[configKey] = currentMappings\n  }\n\n  // 移除映射\n  function removeMapping (configKey, index) {\n    if (mappedData.value[configKey]) {\n      mappedData.value[configKey].splice(index, 1)\n    }\n  }\n\n  // 清空所有映射\n  function clearAllMappings () {\n    Object.keys(mappedData.value).forEach(key => {\n      mappedData.value[key] = []\n    })\n  }\n\n  // 生成图表配置\n  function generateChartOption (data) {\n    const chartType = typeof chartTypeRef === 'string' ? chartTypeRef : chartTypeRef.value\n    const option = {\n      title: {\n        text: `${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`,\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left'\n      }\n    }\n\n    // 根据不同图表类型生成配置\n    switch (chartType) {\n      case 'line':\n      case 'bar':\n        return generateLineBarOption(option, data, chartType)\n      case 'pie':\n        return generatePieOption(option, data)\n      case 'scatter':\n        return generateScatterOption(option, data)\n      case 'radar':\n        return generateRadarOption(option, data)\n      case 'heatmap':\n        return generateHeatmapOption(option, data)\n      case 'funnel':\n        return generateFunnelOption(option, data)\n      case 'gauge':\n        return generateGaugeOption(option, data)\n      case 'sunburst':\n        return generateSunburstOption(option, data)\n      case 'treemap':\n        return generateTreemapOption(option, data)\n      default:\n        return generateLineBarOption(option, data, chartType)\n    }\n  }\n\n  // 生成线图/柱状图配置\n  function generateLineBarOption (baseOption, data, chartType) {\n    const xAxisMapping = mappedData.value.xAxis?.[0]\n    const yAxisMappings = mappedData.value.yAxis || []\n    const seriesMapping = mappedData.value.series?.[0]\n\n    if (!xAxisMapping || yAxisMappings.length === 0) {\n      return { ...baseOption, series: [] }\n    }\n\n    // 提取X轴数据\n    const xAxisData = [...new Set(data.map(row => row[xAxisMapping.columnName]))]\n\n    // 生成系列数据\n    const series = yAxisMappings.map(yMapping => {\n      const seriesData = xAxisData.map(xValue => {\n        const matchingRows = data.filter(row => row[xAxisMapping.columnName] === xValue)\n        if (matchingRows.length === 0) return 0\n\n        // 如果有系列分组\n        if (seriesMapping) {\n          const seriesValue = matchingRows[0][seriesMapping.columnName]\n          const filteredRows = matchingRows.filter(row => row[seriesMapping.columnName] === seriesValue)\n          return filteredRows.length > 0 ? (filteredRows[0][yMapping.columnName] || 0) : 0\n        }\n\n        // 聚合数据（取平均值）\n        const sum = matchingRows.reduce((acc, row) => acc + (parseFloat(row[yMapping.columnName]) || 0), 0)\n        return sum / matchingRows.length\n      })\n\n      return {\n        name: yMapping.columnName,\n        type: chartType || 'line',\n        data: seriesData,\n        smooth: chartType === 'line'\n      }\n    })\n\n    return {\n      ...baseOption,\n      xAxis: {\n        type: 'category',\n        data: xAxisData\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series\n    }\n  }\n\n  // 生成饼图配置\n  function generatePieOption (baseOption, data) {\n    const nameMapping = mappedData.value.name?.[0]\n    const valueMapping = mappedData.value.value?.[0]\n\n    if (!nameMapping || !valueMapping) {\n      return { ...baseOption, series: [] }\n    }\n\n    // 聚合数据\n    const aggregatedData = {}\n    data.forEach(row => {\n      const name = row[nameMapping.columnName]\n      const value = parseFloat(row[valueMapping.columnName]) || 0\n\n      if (aggregatedData[name]) {\n        aggregatedData[name] += value\n      } else {\n        aggregatedData[name] = value\n      }\n    })\n\n    const pieData = Object.entries(aggregatedData).map(([name, value]) => ({\n      name,\n      value\n    }))\n\n    return {\n      ...baseOption,\n      series: [{\n        type: 'pie',\n        radius: '60%',\n        data: pieData,\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }]\n    }\n  }\n\n  // 生成散点图配置\n  function generateScatterOption (baseOption, data) {\n    const xAxisMapping = mappedData.value.xAxis?.[0]\n    const yAxisMapping = mappedData.value.yAxis?.[0]\n    const sizeMapping = mappedData.value.size?.[0]\n    const seriesMapping = mappedData.value.series?.[0]\n\n    if (!xAxisMapping || !yAxisMapping) {\n      return { ...baseOption, series: [] }\n    }\n\n    // 生成散点数据\n    const scatterData = data.map(row => {\n      const point = [\n        parseFloat(row[xAxisMapping.columnName]) || 0,\n        parseFloat(row[yAxisMapping.columnName]) || 0\n      ]\n\n      if (sizeMapping) {\n        point.push(parseFloat(row[sizeMapping.columnName]) || 1)\n      }\n\n      return point\n    })\n\n    // 如果有系列分组\n    let series = []\n    if (seriesMapping) {\n      const seriesGroups = {}\n      data.forEach((row, index) => {\n        const seriesValue = row[seriesMapping.columnName]\n        if (!seriesGroups[seriesValue]) {\n          seriesGroups[seriesValue] = []\n        }\n        seriesGroups[seriesValue].push(scatterData[index])\n      })\n\n      series = Object.entries(seriesGroups).map(([name, data]) => ({\n        name,\n        type: 'scatter',\n        data\n      }))\n    } else {\n      series = [{\n        type: 'scatter',\n        data: scatterData\n      }]\n    }\n\n    return {\n      ...baseOption,\n      xAxis: {\n        type: 'value',\n        name: xAxisMapping.columnName\n      },\n      yAxis: {\n        type: 'value',\n        name: yAxisMapping.columnName\n      },\n      series\n    }\n  }\n\n  // 生成雷达图配置\n  function generateRadarOption (baseOption, data) {\n    const indicatorMappings = mappedData.value.indicator || []\n    const seriesMapping = mappedData.value.series?.[0]\n\n    if (indicatorMappings.length === 0) {\n      return { ...baseOption, series: [] }\n    }\n\n    // 生成雷达图指标\n    const indicator = indicatorMappings.map(mapping => ({\n      name: mapping.columnName,\n      max: Math.max(...data.map(row => parseFloat(row[mapping.columnName]) || 0))\n    }))\n\n    // 生成雷达图数据\n    let radarData = []\n    if (seriesMapping) {\n      const seriesGroups = {}\n      data.forEach(row => {\n        const seriesValue = row[seriesMapping.columnName]\n        if (!seriesGroups[seriesValue]) {\n          seriesGroups[seriesValue] = []\n        }\n        seriesGroups[seriesValue].push(row)\n      })\n\n      radarData = Object.entries(seriesGroups).map(([name, rows]) => {\n        const avgValues = indicatorMappings.map(mapping => {\n          const sum = rows.reduce((acc, row) => acc + (parseFloat(row[mapping.columnName]) || 0), 0)\n          return sum / rows.length\n        })\n\n        return {\n          name,\n          value: avgValues\n        }\n      })\n    } else {\n      // 计算平均值\n      const avgValues = indicatorMappings.map(mapping => {\n        const sum = data.reduce((acc, row) => acc + (parseFloat(row[mapping.columnName]) || 0), 0)\n        return sum / data.length\n      })\n\n      radarData = [{\n        name: 'Average',\n        value: avgValues\n      }]\n    }\n\n    return {\n      ...baseOption,\n      radar: {\n        indicator\n      },\n      series: [{\n        type: 'radar',\n        data: radarData\n      }]\n    }\n  }\n\n  // 生成热力图配置\n  function generateHeatmapOption (baseOption, data) {\n    const xAxisMapping = mappedData.value.xAxis?.[0]\n    const yAxisMapping = mappedData.value.yAxis?.[0]\n    const valueMapping = mappedData.value.value?.[0]\n\n    if (!xAxisMapping || !yAxisMapping || !valueMapping) {\n      return { ...baseOption, series: [] }\n    }\n\n    // 获取唯一的X和Y值\n    const xAxisData = [...new Set(data.map(row => row[xAxisMapping.columnName]))]\n    const yAxisData = [...new Set(data.map(row => row[yAxisMapping.columnName]))]\n\n    // 生成热力图数据\n    const heatmapData = []\n    xAxisData.forEach((xValue, xIndex) => {\n      yAxisData.forEach((yValue, yIndex) => {\n        const matchingRow = data.find(row =>\n          row[xAxisMapping.columnName] === xValue &&\n          row[yAxisMapping.columnName] === yValue\n        )\n\n        if (matchingRow) {\n          heatmapData.push([xIndex, yIndex, parseFloat(matchingRow[valueMapping.columnName]) || 0])\n        }\n      })\n    })\n\n    return {\n      ...baseOption,\n      grid: {\n        height: '50%',\n        top: '10%'\n      },\n      xAxis: {\n        type: 'category',\n        data: xAxisData,\n        splitArea: {\n          show: true\n        }\n      },\n      yAxis: {\n        type: 'category',\n        data: yAxisData,\n        splitArea: {\n          show: true\n        }\n      },\n      visualMap: {\n        min: 0,\n        max: Math.max(...heatmapData.map(item => item[2])),\n        calculable: true,\n        orient: 'horizontal',\n        left: 'center',\n        bottom: '15%'\n      },\n      series: [{\n        type: 'heatmap',\n        data: heatmapData,\n        label: {\n          show: true\n        },\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }]\n    }\n  }\n\n  // 生成漏斗图配置\n  function generateFunnelOption (baseOption, data) {\n    const nameMapping = mappedData.value.name?.[0]\n    const valueMapping = mappedData.value.value?.[0]\n\n    if (!nameMapping || !valueMapping) {\n      return { ...baseOption, series: [] }\n    }\n\n    // 聚合并排序数据\n    const aggregatedData = {}\n    data.forEach(row => {\n      const name = row[nameMapping.columnName]\n      const value = parseFloat(row[valueMapping.columnName]) || 0\n\n      if (aggregatedData[name]) {\n        aggregatedData[name] += value\n      } else {\n        aggregatedData[name] = value\n      }\n    })\n\n    const funnelData = Object.entries(aggregatedData)\n      .map(([name, value]) => ({ name, value }))\n      .sort((a, b) => b.value - a.value)\n\n    return {\n      ...baseOption,\n      series: [{\n        type: 'funnel',\n        left: '10%',\n        top: 60,\n        bottom: 60,\n        width: '80%',\n        minSize: '0%',\n        maxSize: '100%',\n        sort: 'descending',\n        gap: 2,\n        label: {\n          show: true,\n          position: 'inside'\n        },\n        labelLine: {\n          length: 10,\n          lineStyle: {\n            width: 1,\n            type: 'solid'\n          }\n        },\n        itemStyle: {\n          borderColor: '#fff',\n          borderWidth: 1\n        },\n        emphasis: {\n          label: {\n            fontSize: 20\n          }\n        },\n        data: funnelData\n      }]\n    }\n  }\n\n  // 生成仪表盘配置\n  function generateGaugeOption (baseOption, data) {\n    const valueMapping = mappedData.value.value?.[0]\n    const nameMapping = mappedData.value.name?.[0]\n\n    if (!valueMapping) {\n      return { ...baseOption, series: [] }\n    }\n\n    // 计算平均值\n    const avgValue = data.reduce((acc, row) => acc + (parseFloat(row[valueMapping.columnName]) || 0), 0) / data.length\n    const maxValue = Math.max(...data.map(row => parseFloat(row[valueMapping.columnName]) || 0))\n\n    const gaugeName = nameMapping\n      ? data[0][nameMapping.columnName] || valueMapping.columnName\n      : valueMapping.columnName\n\n    return {\n      ...baseOption,\n      series: [{\n        name: gaugeName,\n        type: 'gauge',\n        max: maxValue,\n        detail: {\n          formatter: '{value}%'\n        },\n        data: [{\n          value: avgValue,\n          name: gaugeName\n        }]\n      }]\n    }\n  }\n\n  // 生成旭日图配置\n  function generateSunburstOption (baseOption, data) {\n    const nameMapping = mappedData.value.name?.[0]\n    const valueMapping = mappedData.value.value?.[0]\n    const parentMapping = mappedData.value.parent?.[0]\n\n    if (!nameMapping || !valueMapping) {\n      return { ...baseOption, series: [] }\n    }\n\n    // 构建层级数据\n    const hierarchicalData = buildHierarchicalData(data, nameMapping, valueMapping, parentMapping)\n\n    return {\n      ...baseOption,\n      series: [{\n        type: 'sunburst',\n        data: hierarchicalData,\n        radius: [0, '90%'],\n        itemStyle: {\n          borderRadius: 7,\n          borderWidth: 2\n        },\n        label: {\n          show: false\n        }\n      }]\n    }\n  }\n\n  // 生成矩形树图配置\n  function generateTreemapOption (baseOption, data) {\n    const nameMapping = mappedData.value.name?.[0]\n    const valueMapping = mappedData.value.value?.[0]\n    const parentMapping = mappedData.value.parent?.[0]\n\n    if (!nameMapping || !valueMapping) {\n      return { ...baseOption, series: [] }\n    }\n\n    // 构建层级数据\n    const hierarchicalData = buildHierarchicalData(data, nameMapping, valueMapping, parentMapping)\n\n    return {\n      ...baseOption,\n      series: [{\n        type: 'treemap',\n        data: hierarchicalData,\n        leafDepth: 1,\n        label: {\n          show: true,\n          formatter: '{b}'\n        },\n        itemStyle: {\n          borderColor: '#fff'\n        }\n      }]\n    }\n  }\n\n  // 构建层级数据的辅助函数\n  function buildHierarchicalData (data, nameMapping, valueMapping, parentMapping) {\n    if (!parentMapping) {\n      // 没有父级映射，直接返回平铺数据\n      return data.map(row => ({\n        name: row[nameMapping.columnName],\n        value: parseFloat(row[valueMapping.columnName]) || 0\n      }))\n    }\n\n    // 构建层级结构\n    const nodeMap = new Map()\n    const roots = []\n\n    data.forEach(row => {\n      const name = row[nameMapping.columnName]\n      const value = parseFloat(row[valueMapping.columnName]) || 0\n      const parent = row[parentMapping.columnName]\n\n      const node = {\n        name,\n        value,\n        parent,\n        children: []\n      }\n\n      nodeMap.set(name, node)\n\n      if (!parent || parent === '' || parent === null) {\n        roots.push(node)\n      }\n    })\n\n    // 建立父子关系\n    nodeMap.forEach(node => {\n      if (node.parent && nodeMap.has(node.parent)) {\n        const parentNode = nodeMap.get(node.parent)\n        parentNode.children.push(node)\n      }\n    })\n\n    // 转换为ECharts格式\n    function convertToEChartsFormat (nodes) {\n      return nodes.map(node => ({\n        name: node.name,\n        value: node.value,\n        children: node.children.length > 0 ? convertToEChartsFormat(node.children) : undefined\n      }))\n    }\n\n    return convertToEChartsFormat(roots)\n  }\n\n  return {\n    chartConfigs,\n    mappedData,\n    addMapping,\n    removeMapping,\n    clearAllMappings,\n    generateChartOption\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}