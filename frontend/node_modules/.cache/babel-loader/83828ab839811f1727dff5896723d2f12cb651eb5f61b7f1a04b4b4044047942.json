{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.flat-map.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n/* eslint-disable */\n\n/**\n * 漏斗图高级配置项：\n * 副标题 subtext\n * 图例布局 legendOrient\n * 数据排序 sort\n * 标签位置 labelPosition\n * 标签字体大小 labelFontSize\n * 标签字体粗细 labelFontWeight\n * 标签引导线长度 labelLineLength\n */\n\n// 漏斗图配置生成器\nexport default function funnelOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}, compareMode = false) {\n  let legendOrient = config.orient || 'horizontal';\n  let series = [];\n  let legendData = [];\n  if (compareMode && Array.isArray(seriesData[0])) {\n    // seriesData: [ [组1数据], [组2数据], ... ]\n    const defaultSeriesConfigs = [{\n      name: 'Funnel',\n      left: '5%',\n      top: '50%',\n      funnelAlign: 'right',\n      sort: 'descending'\n    }, {\n      name: 'Pyramid',\n      left: '5%',\n      top: '5%',\n      funnelAlign: 'right',\n      sort: 'ascending'\n    }, {\n      name: 'Funnel',\n      left: '55%',\n      top: '5%',\n      funnelAlign: 'left',\n      sort: 'descending'\n    }, {\n      name: 'Pyramid',\n      left: '55%',\n      top: '50%',\n      funnelAlign: 'left',\n      sort: 'ascending'\n    }];\n    series = seriesData.map((dataArr, idx) => ({\n      name: defaultSeriesConfigs[idx]?.name || `Funnel${idx + 1}`,\n      type: 'funnel',\n      width: '40%',\n      height: '45%',\n      left: defaultSeriesConfigs[idx]?.left || '5%',\n      top: defaultSeriesConfigs[idx]?.top || '5%',\n      funnelAlign: defaultSeriesConfigs[idx]?.funnelAlign || 'right',\n      sort: defaultSeriesConfigs[idx]?.sort || 'descending',\n      label: {\n        show: true,\n        position: config.labelPosition || 'inside',\n        fontSize: config.labelFontSize || 12,\n        fontWeight: config.labelFontWeight || 'normal'\n      },\n      labelLine: {\n        length: config.labelLineLength || 10\n      },\n      emphasis: {\n        label: {\n          fontSize: 20\n        }\n      },\n      data: dataArr\n    }));\n    legendData = Array.from(new Set(series.flatMap(s => s.data.map(d => d.name))));\n  } else {\n    // 普通模式\n    series = [{\n      name: 'Funnel',\n      type: 'funnel',\n      sort: config.sort || 'descending',\n      label: {\n        show: true,\n        position: config.labelPosition || 'inside',\n        fontSize: config.labelFontSize || 12,\n        fontWeight: config.labelFontWeight || 'normal'\n      },\n      labelLine: {\n        length: config.labelLineLength || 10\n      },\n      emphasis: {\n        label: {\n          fontSize: 20\n        }\n      },\n      data: seriesData\n    }];\n    legendData = seriesData ? seriesData.map(item => item.name) : [];\n  }\n  return {\n    title: {\n      text: config.title || 'Chart of Funnel',\n      subtext: config.subtext || '',\n      left: 'center',\n      top: 'top',\n      textStyle: {\n        fontSize: 16,\n        fontWeight: 'bold'\n      },\n      subtextStyle: {\n        fontSize: 12\n      }\n    },\n    legend: {\n      type: 'scroll',\n      orient: legendOrient,\n      show: config.legendVisible !== false,\n      top: config.legendPosition || 'bottom',\n      data: legendData\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b} : {c} ({d}%)'\n    },\n    toolbox: {\n      show: true,\n      feature: {\n        restore: {\n          show: true\n        },\n        saveAsImage: {\n          show: true\n        }\n      }\n    },\n    series\n  };\n}","map":{"version":3,"names":["funnelOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","compareMode","legendOrient","orient","series","legendData","Array","isArray","defaultSeriesConfigs","name","left","top","funnelAlign","sort","map","dataArr","idx","type","width","height","label","show","position","labelPosition","fontSize","labelFontSize","fontWeight","labelFontWeight","labelLine","length","labelLineLength","emphasis","data","from","Set","flatMap","s","d","item","title","text","subtext","textStyle","subtextStyle","legend","legendVisible","legendPosition","tooltip","trigger","formatter","toolbox","feature","restore","saveAsImage"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/chartOptions/funnel.js"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 漏斗图高级配置项：\n * 副标题 subtext\n * 图例布局 legendOrient\n * 数据排序 sort\n * 标签位置 labelPosition\n * 标签字体大小 labelFontSize\n * 标签字体粗细 labelFontWeight\n * 标签引导线长度 labelLineLength\n */\n\n// 漏斗图配置生成器\nexport default function funnelOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}, compareMode = false) {\n    let legendOrient = config.orient || 'horizontal';\n    let series = [];\n    let legendData = [];\n\n    if (compareMode && Array.isArray(seriesData[0])) {\n        // seriesData: [ [组1数据], [组2数据], ... ]\n        const defaultSeriesConfigs = [\n            { name: 'Funnel', left: '5%', top: '50%', funnelAlign: 'right', sort: 'descending' },\n            { name: 'Pyramid', left: '5%', top: '5%', funnelAlign: 'right', sort: 'ascending' },\n            { name: 'Funnel', left: '55%', top: '5%', funnelAlign: 'left', sort: 'descending' },\n            { name: 'Pyramid', left: '55%', top: '50%', funnelAlign: 'left', sort: 'ascending' }\n        ];\n        series = seriesData.map((dataArr, idx) => ({\n            name: defaultSeriesConfigs[idx]?.name || `Funnel${idx + 1}`,\n            type: 'funnel',\n            width: '40%',\n            height: '45%',\n            left: defaultSeriesConfigs[idx]?.left || '5%',\n            top: defaultSeriesConfigs[idx]?.top || '5%',\n            funnelAlign: defaultSeriesConfigs[idx]?.funnelAlign || 'right',\n            sort: defaultSeriesConfigs[idx]?.sort || 'descending',\n            label: {\n                show: true,\n                position: config.labelPosition || 'inside',\n                fontSize: config.labelFontSize || 12,\n                fontWeight: config.labelFontWeight || 'normal',\n            },\n            labelLine: {\n                length: config.labelLineLength || 10,\n            },\n            emphasis: {\n                label: {\n                    fontSize: 20\n                }\n            },\n            data: dataArr\n        }));\n        legendData = Array.from(new Set(series.flatMap(s => s.data.map(d => d.name))));\n    } else {\n        // 普通模式\n        series = [\n            {\n                name: 'Funnel',\n                type: 'funnel',\n                sort: config.sort || 'descending',\n                label: {\n                    show: true,\n                    position: config.labelPosition || 'inside',\n                    fontSize: config.labelFontSize || 12,\n                    fontWeight: config.labelFontWeight || 'normal',\n                },\n                labelLine: {\n                    length: config.labelLineLength || 10,\n                },\n                emphasis: {\n                    label: {\n                        fontSize: 20\n                    }\n                },\n                data: seriesData\n            }\n        ];\n        legendData = seriesData ? seriesData.map(item => item.name) : [];\n    }\n\n    return {\n        title: {\n            text: config.title || 'Chart of Funnel',\n            subtext: config.subtext || '',\n            left: 'center',\n            top: 'top',\n            textStyle: {\n                fontSize: 16,\n                fontWeight: 'bold',\n            },\n            subtextStyle: {\n                fontSize: 12,\n            },\n        },\n        legend: {\n            type: 'scroll',\n            orient: legendOrient,\n            show: config.legendVisible !== false,\n            top: config.legendPosition || 'bottom',\n            data: legendData,\n        },\n        tooltip: {\n            trigger: 'item',\n            formatter: '{a} <br/>{b} : {c} ({d}%)'\n        },\n        toolbox: {\n            show: true,\n            feature: {\n                restore: { show: true },\n                saveAsImage: { show: true },\n            }\n        },\n        series\n    };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}