{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { ref, computed, watch, reactive, nextTick } from 'vue';\nimport { chartIcons } from '../assets/JS/SVG/chartIcons.js';\nimport { chartsTooltipConfig } from '../assets/JS/Config/ChartsTooltipConfig.js';\nimport { chartMappingConfig } from '../assets/JS/Config/chartMappingConfig.js';\n// 当前图表类型的过滤配置\nimport { watchEffect } from 'vue';\nexport default {\n  __name: 'ChartConfigPanel',\n  props: {\n    selectedChartType: {\n      type: String,\n      default: 'line'\n    },\n    currentFile: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['config-change', 'generate-chart'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const currentFilterConfig = computed(() => {\n      const type = props.selectedChartType.charAt(0).toUpperCase() + props.selectedChartType.slice(1);\n      return chartMappingConfig[type] && chartMappingConfig[type].filter ? chartMappingConfig[type].filter : [];\n    });\n\n    // Props\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 响应式数据\n    const showDataFilter = ref(false);\n    const showAdvancedConfig = ref(false);\n    const errorMessage = ref('');\n    const tooltipRef = ref(null);\n\n    // 提示框状态\n    const tooltip = reactive({\n      visible: false,\n      type: '',\n      description: '',\n      dataRequirements: [],\n      useCases: [],\n      style: {}\n    });\n    let tooltipTimeout = null;\n\n    // 拖拽状态\n    const isDragOver = ref({\n      xAxis: false,\n      yAxis: false,\n      series: false\n    });\n    const dragError = ref({\n      xAxis: false,\n      yAxis: false,\n      series: false\n    });\n\n    // 图表配置\n    const chartConfig = ref({});\n\n    // 根据当前图表类型动态初始化 chartConfig 结构\n    function initChartConfigByType(type) {\n      const config = {};\n      const mapping = chartMappingConfig[type] && chartMappingConfig[type].mapping ? chartMappingConfig[type].mapping : [];\n      mapping.forEach(item => {\n        if (item.multiple) {\n          config[item.key] = [];\n        } else {\n          config[item.key] = {\n            field: '',\n            type: ''\n          };\n        }\n      });\n      // 高级配置\n      const advanced = chartMappingConfig[type] && chartMappingConfig[type].advanced ? chartMappingConfig[type].advanced : [];\n      advanced.forEach(item => {\n        if (item.type === 'checkbox') {\n          config[item.key] = true;\n        } else if (item.type === 'select') {\n          config[item.key] = item.options[0] || '';\n        } else {\n          config[item.key] = '';\n        }\n      });\n      // 过滤配置\n      const filter = chartMappingConfig[type] && chartMappingConfig[type].filter ? chartMappingConfig[type].filter : [];\n      filter.forEach(item => {\n        if (item.type === 'checkbox') {\n          config[item.key] = false;\n        } else if (item.type === 'select') {\n          config[item.key] = item.options[0] || '';\n        } else {\n          config[item.key] = '';\n        }\n      });\n      return config;\n    }\n\n    // 监听图表类型变化，动态重置 chartConfig\n    watchEffect(() => {\n      const type = props.selectedChartType.charAt(0).toUpperCase() + props.selectedChartType.slice(1);\n      chartConfig.value = initChartConfigByType(type);\n      errorMessage.value = '';\n      emit('config-change', chartConfig.value);\n    });\n\n    // 计算属性\n    const isConfigValid = computed(() => {\n      // 至少有一个必填映射项被填充即可\n      if (!currentMappingConfig.value.length) return false;\n      return currentMappingConfig.value.every(item => {\n        if (!item.required) return true;\n        if (item.multiple) {\n          return Array.isArray(chartConfig.value[item.key]) && chartConfig.value[item.key].length > 0;\n        } else {\n          return chartConfig.value[item.key] && typeof chartConfig.value[item.key] === 'object' && 'field' in chartConfig.value[item.key] && chartConfig.value[item.key].field;\n        }\n      });\n    });\n    function getMappingFilled(item) {\n      if (item.multiple) {\n        return Array.isArray(chartConfig.value[item.key]) && chartConfig.value[item.key].length > 0;\n      } else {\n        return chartConfig.value[item.key] && typeof chartConfig.value[item.key] === 'object' && 'field' in chartConfig.value[item.key] && chartConfig.value[item.key].field;\n      }\n    }\n    function getChartIcon(type) {\n      // 直接使用传入的类型，chartIcons.js 中的键是首字母大写格式\n      return chartIcons[type] || '';\n    }\n    function toggleDataFilter() {\n      showDataFilter.value = !showDataFilter.value;\n    }\n    function toggleAdvancedConfig() {\n      showAdvancedConfig.value = !showAdvancedConfig.value;\n    }\n\n    // 显示提示框\n    function showTooltip(event, type) {\n      // 清除之前的定时器\n      if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout);\n      }\n\n      // 设置1.2秒延迟\n      tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type];\n        if (config) {\n          tooltip.type = type;\n          tooltip.description = config.description;\n          tooltip.dataRequirements = config.dataRequirements;\n          tooltip.useCases = config.useCases;\n          tooltip.visible = true;\n\n          // 在下一个tick中计算位置，确保DOM已更新\n          nextTick(() => {\n            positionTooltip(event);\n          });\n        }\n      }, 1200); // 1.2秒延迟\n    }\n\n    // 隐藏提示框\n    function hideTooltip() {\n      if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout);\n        tooltipTimeout = null;\n      }\n      tooltip.visible = false;\n    }\n\n    // 计算提示框位置，确保不超出屏幕\n    function positionTooltip(event) {\n      if (!tooltipRef.value) return;\n      const tooltipEl = tooltipRef.value;\n      const rect = tooltipEl.getBoundingClientRect();\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight;\n      let left = event.pageX + 10;\n      let top = event.pageY + 10;\n\n      // 防止右边超出屏幕\n      if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10;\n      }\n\n      // 防止底部超出屏幕\n      if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10;\n      }\n\n      // 防止左边超出屏幕\n      if (left < 0) {\n        left = 10;\n      }\n\n      // 防止顶部超出屏幕\n      if (top < 0) {\n        top = 10;\n      }\n      tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n      };\n    }\n\n    // 拖拽处理\n    function handleDragEnter(target) {\n      isDragOver.value[target] = true;\n      dragError.value[target] = false;\n    }\n    function handleDragLeave(target) {\n      isDragOver.value[target] = false;\n    }\n    function handleDragOver(event, target) {\n      event.preventDefault();\n      isDragOver.value[target] = true;\n    }\n    function handleDrop(event, target) {\n      event.preventDefault();\n      isDragOver.value[target] = false;\n      try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'));\n        if (dragData.type === 'column') {\n          const column = dragData.column;\n\n          // 验证数据类型是否适合目标区域\n          if (validateColumnForTarget(column, target)) {\n            mapColumnToTarget(column, target);\n            errorMessage.value = '';\n          } else {\n            dragError.value[target] = true;\n            errorMessage.value = `Column \"${column.name}\" data type is not suitable for ${getTargetName(target)}`;\n            setTimeout(() => {\n              dragError.value[target] = false;\n              errorMessage.value = '';\n            }, 3000);\n          }\n        }\n      } catch (error) {\n        console.error('Drop failed:', error);\n        errorMessage.value = 'Drag and drop failed, please try again';\n      }\n    }\n    function validateColumnForTarget(column, target) {\n      const columnType = column.type;\n      switch (target) {\n        case 'xAxis':\n          // X轴通常接受类别型数据\n          return ['string', 'category', 'date'].includes(columnType);\n        case 'yAxis':\n          // Y轴通常接受数值型数据\n          return ['number', 'integer'].includes(columnType);\n        case 'series':\n          // 系列数据通常接受数值型数据\n          return ['number', 'integer'].includes(columnType);\n        default:\n          return true;\n      }\n    }\n    function mapColumnToTarget(column, target) {\n      switch (target) {\n        case 'xAxis':\n          chartConfig.value.xAxis = {\n            field: column.name,\n            type: column.type\n          };\n          break;\n        case 'yAxis':\n          chartConfig.value.yAxis = {\n            field: column.name,\n            type: column.type\n          };\n          break;\n        case 'series':\n          // 系列可以有多个，但这里简化为单个\n          chartConfig.value.series = [{\n            field: column.name,\n            type: column.type\n          }];\n          break;\n      }\n      emit('config-change', chartConfig.value);\n    }\n    function removeMapping(target) {\n      switch (target) {\n        case 'xAxis':\n          chartConfig.value.xAxis = {\n            field: '',\n            type: ''\n          };\n          break;\n        case 'yAxis':\n          chartConfig.value.yAxis = {\n            field: '',\n            type: ''\n          };\n          break;\n        case 'series':\n          chartConfig.value.series = [];\n          break;\n      }\n      emit('config-change', chartConfig.value);\n    }\n    function removeSeriesMapping(index) {\n      chartConfig.value.series.splice(index, 1);\n      emit('config-change', chartConfig.value);\n    }\n    function getTargetName(target) {\n      const names = {\n        xAxis: 'X Axis',\n        yAxis: 'Y Axis',\n        series: 'Data Series'\n      };\n      return names[target] || target;\n    }\n    function generateChart() {\n      if (!isConfigValid.value) {\n        errorMessage.value = 'Please complete the required data mapping configuration';\n        return;\n      }\n      emit('generate-chart', chartConfig.value);\n    }\n    function resetConfig() {\n      chartConfig.value = {\n        xAxis: {\n          field: '',\n          type: ''\n        },\n        yAxis: {\n          field: '',\n          type: ''\n        },\n        series: [],\n        title: '',\n        colorScheme: 'default',\n        animation: true,\n        dataRange: 'all',\n        nullHandling: 'ignore'\n      };\n      errorMessage.value = '';\n      emit('config-change', chartConfig.value);\n    }\n\n    // 监听图表类型变化\n    watch(() => props.selectedChartType, newType => {\n      // 根据图表类型调整配置\n      if (newType === 'Pie' || newType === 'pie') {\n        // 饼图不需要Y轴\n        chartConfig.value.yAxis = {\n          field: '',\n          type: ''\n        };\n      }\n    });\n    const __returned__ = {\n      currentFilterConfig,\n      props,\n      emit,\n      showDataFilter,\n      showAdvancedConfig,\n      errorMessage,\n      tooltipRef,\n      tooltip,\n      get tooltipTimeout() {\n        return tooltipTimeout;\n      },\n      set tooltipTimeout(v) {\n        tooltipTimeout = v;\n      },\n      isDragOver,\n      dragError,\n      chartConfig,\n      initChartConfigByType,\n      isConfigValid,\n      getMappingFilled,\n      getChartIcon,\n      toggleDataFilter,\n      toggleAdvancedConfig,\n      showTooltip,\n      hideTooltip,\n      positionTooltip,\n      handleDragEnter,\n      handleDragLeave,\n      handleDragOver,\n      handleDrop,\n      validateColumnForTarget,\n      mapColumnToTarget,\n      removeMapping,\n      removeSeriesMapping,\n      getTargetName,\n      generateChart,\n      resetConfig,\n      ref,\n      computed,\n      watch,\n      reactive,\n      nextTick,\n      get chartIcons() {\n        return chartIcons;\n      },\n      get chartsTooltipConfig() {\n        return chartsTooltipConfig;\n      },\n      get chartMappingConfig() {\n        return chartMappingConfig;\n      },\n      watchEffect\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","reactive","nextTick","chartIcons","chartsTooltipConfig","chartMappingConfig","watchEffect","currentFilterConfig","type","props","selectedChartType","charAt","toUpperCase","slice","filter","__props","emit","__emit","showDataFilter","showAdvancedConfig","errorMessage","tooltipRef","tooltip","visible","description","dataRequirements","useCases","style","tooltipTimeout","isDragOver","xAxis","yAxis","series","dragError","chartConfig","initChartConfigByType","config","mapping","forEach","item","multiple","key","field","advanced","options","value","isConfigValid","currentMappingConfig","length","every","required","Array","isArray","getMappingFilled","getChartIcon","toggleDataFilter","toggleAdvancedConfig","showTooltip","event","clearTimeout","setTimeout","positionTooltip","hideTooltip","tooltipEl","rect","getBoundingClientRect","viewportWidth","window","innerWidth","viewportHeight","innerHeight","left","pageX","top","pageY","width","height","position","zIndex","handleDragEnter","target","handleDragLeave","handleDragOver","preventDefault","handleDrop","dragData","JSON","parse","dataTransfer","getData","column","validateColumnForTarget","mapColumnToTarget","name","getTargetName","error","console","columnType","includes","removeMapping","removeSeriesMapping","index","splice","names","generateChart","resetConfig","title","colorScheme","animation","dataRange","nullHandling","newType"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/ChartConfigPanel.vue"],"sourcesContent":["<template>\n<div class=\"chart-config-panel\">\n<!-- 右侧边栏总标题 -->\n<div class=\"panel-header-CCP\">\n    <h3>Chart Configuration</h3>\n</div>\n\n<!-- 数据映射配置区域 -->\n<div class=\"mapping-section\">\n    <div class=\"mapping-section-header\">\n    <h4>Data Mapping</h4>\n    <div class=\"chart-type-tag\"\n            @mouseenter=\"showTooltip($event, selectedChartType)\"\n            @mouseleave=\"hideTooltip\">\n        <span class=\"chart-type-icon\" v-html=\"getChartIcon(selectedChartType)\"></span>\n        <span class=\"chart-type-name\">{{ selectedChartType }}</span>\n    </div>\n    </div>\n\n    <div v-for=\"item in currentMappingConfig\" :key=\"item.key\" class=\"mapping-item\">\n      <div class=\"mapping-item-header\">\n        <label class=\"mapping-label\">\n          {{ item.label }}\n          <span v-if=\"item.required\" class=\"required-star\">*</span>\n        </label>\n        <div class=\"mapping-type-tag\">{{ Array.isArray(item.type) ? item.type.join(', ') : item.type }}</div>\n      </div>\n      <div\n        class=\"drop-zone\"\n        :class=\"{\n          'drop-zone-active': isDragOver[item.key],\n          'drop-zone-filled': getMappingFilled(item),\n          'drop-zone-error': dragError[item.key]\n        }\"\n        @drop=\"handleDrop($event, item.key)\"\n        @dragover.prevent=\"handleDragOver($event, item.key)\"\n        @dragenter.prevent=\"handleDragEnter(item.key)\"\n        @dragleave.prevent=\"handleDragLeave(item.key)\"\n      >\n        <div v-if=\"!getMappingFilled(item)\" class=\"drop-placeholder\">\n          <div class=\"drop-icon\">↓</div>\n          <span class=\"drop-text\">Drag column here</span>\n        </div>\n        <div v-else>\n          <div v-if=\"item.multiple\" class=\"mapped-series\">\n            <div\n              v-for=\"(serie, index) in chartConfig[item.key]\"\n              :key=\"index\"\n              class=\"mapped-field\"\n            >\n              <div class=\"field-info\">\n                <span class=\"field-name\">{{ serie.field }}</span>\n                <span class=\"field-type\">{{ serie.type }}</span>\n              </div>\n              <button class=\"remove-btn\" @click=\"removeSeriesMapping(index, item.key)\">×</button>\n            </div>\n          </div>\n          <div v-else-if=\"chartConfig[item.key] && chartConfig[item.key].field !== undefined\" class=\"mapped-field\">\n            <div class=\"field-info\">\n              <span class=\"field-name\">{{ chartConfig[item.key].field }}</span>\n              <span class=\"field-type\">{{ chartConfig[item.key].type }}</span>\n            </div>\n            <button class=\"remove-btn\" @click=\"removeMapping(item.key)\">×</button>\n          </div>\n          <div v-else class=\"mapped-field empty\"></div>\n        </div>\n      </div>\n    </div>\n</div>\n\n<!-- 数据过滤 -->\n<div class=\"filter-section\">\n    <div class=\"section-header\" @click=\"toggleDataFilter\">\n    <h4>Data Filtering</h4>\n    <div class=\"toggle-icon\" :class=\"{ 'toggle-open': showDataFilter }\">▼</div>\n    </div>\n    <div v-if=\"showDataFilter\" class=\"section-content\">\n      <div\n        v-for=\"item in currentFilterConfig\"\n        :key=\"item.key\"\n        class=\"filter-item\"\n      >\n        <label>{{ item.label }}</label>\n        <select v-if=\"item.type === 'select'\" v-model=\"chartConfig[item.key]\">\n          <option v-for=\"opt in item.options\" :key=\"opt\" :value=\"opt\">{{ opt }}</option>\n        </select>\n        <input v-else-if=\"item.type === 'text'\" type=\"text\" v-model=\"chartConfig[item.key]\" :placeholder=\"item.placeholder || ''\">\n        <input v-else-if=\"item.type === 'checkbox'\" type=\"checkbox\" v-model=\"chartConfig[item.key]\">\n      </div>\n    </div>\n</div>\n\n<!-- 高级配置 -->\n<div class=\"advanced-section\">\n    <div class=\"section-header\" @click=\"toggleAdvancedConfig\">\n    <h4>Advanced Settings</h4>\n    <div class=\"toggle-icon\" :class=\"{ 'toggle-open': showAdvancedConfig }\">▼</div>\n    </div>\n    <div v-if=\"showAdvancedConfig\" class=\"section-content\">\n    <div class=\"config-item\">\n        <label>Chart Title</label>\n        <input type=\"text\" v-model=\"chartConfig.title\" placeholder=\"Enter chart title\">\n    </div>\n    <div class=\"config-item\">\n        <label>Color Theme</label>\n        <select v-model=\"chartConfig.colorScheme\">\n        <option value=\"default\">Default</option>\n        <option value=\"blue\">Blue</option>\n        <option value=\"green\">Green</option>\n        <option value=\"warm\">Warm</option>\n        <option value=\"cool\">Cool</option>\n        </select>\n    </div>\n    <div class=\"config-item\">\n        <label>Animation</label>\n        <input type=\"checkbox\" v-model=\"chartConfig.animation\">\n    </div>\n    </div>\n</div>\n\n<!-- 操作按钮 -->\n<div class=\"action-section\">\n    <button\n    class=\"apply-btn\"\n    :disabled=\"!isConfigValid\"\n    @click=\"generateChart\"\n    >\n    Apply Configuration\n    </button>\n    <button class=\"reset-btn\" @click=\"resetConfig\">\n    Reset Configuration\n    </button>\n</div>\n\n<!-- 错误提示 -->\n<div v-if=\"errorMessage\" class=\"error-message\">\n    <div class=\"error-text\">{{ errorMessage }}</div>\n</div>\n\n<!-- 提示框 -->\n<div\n    v-if=\"tooltip.visible\"\n    class=\"chart-tooltip\"\n    :style=\"tooltip.style\"\n    ref=\"tooltipRef\"\n>\n    <div class=\"tooltip-header\">\n        <span class=\"tooltip-title\">{{ tooltip.type }}</span>\n        <span class=\"tooltip-description\">{{ tooltip.description }}</span>\n    </div>\n    <div class=\"tooltip-section\">\n        <h4>Data Requirements</h4>\n        <div class=\"tooltip-tags\">\n            <span\n                v-for=\"requirement in tooltip.dataRequirements\"\n                :key=\"requirement\"\n                class=\"tooltip-tag data-tag\"\n            >\n                {{ requirement }}\n            </span>\n        </div>\n    </div>\n    <div class=\"tooltip-section\">\n        <h4>Use Cases</h4>\n        <div class=\"tooltip-tags\">\n            <span\n                v-for=\"useCase in tooltip.useCases\"\n                :key=\"useCase\"\n                class=\"tooltip-tag use-case-tag\"\n            >\n                {{ useCase }}\n            </span>\n        </div>\n    </div>\n</div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch, reactive, nextTick } from 'vue'\nimport { chartIcons } from '../assets/JS/SVG/chartIcons.js'\nimport { chartsTooltipConfig } from '../assets/JS/Config/ChartsTooltipConfig.js'\nimport { chartMappingConfig } from '../assets/JS/Config/chartMappingConfig.js'\n// 当前图表类型的过滤配置\nconst currentFilterConfig = computed(() => {\n  const type = props.selectedChartType.charAt(0).toUpperCase() + props.selectedChartType.slice(1)\n  return (chartMappingConfig[type] && chartMappingConfig[type].filter) ? chartMappingConfig[type].filter : []\n})\n\n// Props\nconst props = defineProps({\n    selectedChartType: {\n        type: String,\n        default: 'line'\n    },\n    currentFile: {\n        type: Object,\n        default: null\n    }\n})\n\n// Emits\nconst emit = defineEmits(['config-change', 'generate-chart'])\n\n// 响应式数据\nconst showDataFilter = ref(false)\nconst showAdvancedConfig = ref(false)\nconst errorMessage = ref('')\nconst tooltipRef = ref(null)\n\n// 提示框状态\nconst tooltip = reactive({\n    visible: false,\n    type: '',\n    description: '',\n    dataRequirements: [],\n    useCases: [],\n    style: {}\n})\n\nlet tooltipTimeout = null\n\n// 拖拽状态\nconst isDragOver = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\nconst dragError = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\n// 图表配置\nimport { watchEffect } from 'vue'\nconst chartConfig = ref({})\n\n// 根据当前图表类型动态初始化 chartConfig 结构\nfunction initChartConfigByType(type) {\n  const config = {}\n  const mapping = (chartMappingConfig[type] && chartMappingConfig[type].mapping) ? chartMappingConfig[type].mapping : []\n  mapping.forEach(item => {\n    if (item.multiple) {\n      config[item.key] = []\n    } else {\n      config[item.key] = { field: '', type: '' }\n    }\n  })\n  // 高级配置\n  const advanced = (chartMappingConfig[type] && chartMappingConfig[type].advanced) ? chartMappingConfig[type].advanced : []\n  advanced.forEach(item => {\n    if (item.type === 'checkbox') {\n      config[item.key] = true\n    } else if (item.type === 'select') {\n      config[item.key] = item.options[0] || ''\n    } else {\n      config[item.key] = ''\n    }\n  })\n  // 过滤配置\n  const filter = (chartMappingConfig[type] && chartMappingConfig[type].filter) ? chartMappingConfig[type].filter : []\n  filter.forEach(item => {\n    if (item.type === 'checkbox') {\n      config[item.key] = false\n    } else if (item.type === 'select') {\n      config[item.key] = item.options[0] || ''\n    } else {\n      config[item.key] = ''\n    }\n  })\n  return config\n}\n\n// 监听图表类型变化，动态重置 chartConfig\nwatchEffect(() => {\n  const type = props.selectedChartType.charAt(0).toUpperCase() + props.selectedChartType.slice(1)\n  chartConfig.value = initChartConfigByType(type)\n  errorMessage.value = ''\n  emit('config-change', chartConfig.value)\n})\n\n\n// 计算属性\nconst isConfigValid = computed(() => {\n  // 至少有一个必填映射项被填充即可\n  if (!currentMappingConfig.value.length) return false\n  return currentMappingConfig.value.every(item => {\n    if (!item.required) return true\n    if (item.multiple) {\n      return Array.isArray(chartConfig.value[item.key]) && chartConfig.value[item.key].length > 0\n    } else {\n      return chartConfig.value[item.key] && typeof chartConfig.value[item.key] === 'object' && 'field' in chartConfig.value[item.key] && chartConfig.value[item.key].field\n    }\n  })\n})\n\nfunction getMappingFilled(item) {\n  if (item.multiple) {\n    return Array.isArray(chartConfig.value[item.key]) && chartConfig.value[item.key].length > 0\n  } else {\n    return chartConfig.value[item.key] && typeof chartConfig.value[item.key] === 'object' && 'field' in chartConfig.value[item.key] && chartConfig.value[item.key].field\n  }\n}\n\nfunction getChartIcon (type) {\n    // 直接使用传入的类型，chartIcons.js 中的键是首字母大写格式\n    return chartIcons[type] || ''\n}\n\nfunction toggleDataFilter() {\n    showDataFilter.value = !showDataFilter.value\n}\n\nfunction toggleAdvancedConfig() {\n    showAdvancedConfig.value = !showAdvancedConfig.value\n}\n\n// 显示提示框\nfunction showTooltip(event, type) {\n    // 清除之前的定时器\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n    }\n    \n    // 设置1.2秒延迟\n    tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type]\n        if (config) {\n            tooltip.type = type\n            tooltip.description = config.description\n            tooltip.dataRequirements = config.dataRequirements\n            tooltip.useCases = config.useCases\n            tooltip.visible = true\n            \n            // 在下一个tick中计算位置，确保DOM已更新\n            nextTick(() => {\n                positionTooltip(event)\n            })\n        }\n    }, 1200) // 1.2秒延迟\n}\n\n// 隐藏提示框\nfunction hideTooltip() {\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n        tooltipTimeout = null\n    }\n    tooltip.visible = false\n}\n\n// 计算提示框位置，确保不超出屏幕\nfunction positionTooltip(event) {\n    if (!tooltipRef.value) return\n    \n    const tooltipEl = tooltipRef.value\n    const rect = tooltipEl.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    \n    let left = event.pageX + 10\n    let top = event.pageY + 10\n    \n    // 防止右边超出屏幕\n    if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10\n    }\n    \n    // 防止底部超出屏幕\n    if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10\n    }\n    \n    // 防止左边超出屏幕\n    if (left < 0) {\n        left = 10\n    }\n    \n    // 防止顶部超出屏幕\n    if (top < 0) {\n        top = 10\n    }\n    \n    tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n    }\n}\n\n// 拖拽处理\nfunction handleDragEnter (target) {\n    isDragOver.value[target] = true\n    dragError.value[target] = false\n    }\n\nfunction handleDragLeave (target) {\n    isDragOver.value[target] = false\n}\n\nfunction handleDragOver (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = true\n}\n\nfunction handleDrop (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = false\n\n    try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'))\n\n        if (dragData.type === 'column') {\n        const column = dragData.column\n\n        // 验证数据类型是否适合目标区域\n        if (validateColumnForTarget(column, target)) {\n            mapColumnToTarget(column, target)\n            errorMessage.value = ''\n        } else {\n            dragError.value[target] = true\n            errorMessage.value = `Column \"${column.name}\" data type is not suitable for ${getTargetName(target)}`\n            setTimeout(() => {\n            dragError.value[target] = false\n            errorMessage.value = ''\n            }, 3000)\n        }\n        }\n    } catch (error) {\n        console.error('Drop failed:', error)\n        errorMessage.value = 'Drag and drop failed, please try again'\n    }\n}\n\nfunction validateColumnForTarget (column, target) {\n    const columnType = column.type\n\n    switch (target) {\n        case 'xAxis':\n        // X轴通常接受类别型数据\n        return ['string', 'category', 'date'].includes(columnType)\n        case 'yAxis':\n        // Y轴通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        case 'series':\n        // 系列数据通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        default:\n        return true\n    }\n}\n\nfunction mapColumnToTarget (column, target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'series':\n        // 系列可以有多个，但这里简化为单个\n        chartConfig.value.series = [{\n            field: column.name,\n            type: column.type\n        }]\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeMapping (target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = { field: '', type: '' }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = { field: '', type: '' }\n        break\n        case 'series':\n        chartConfig.value.series = []\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeSeriesMapping (index) {\n    chartConfig.value.series.splice(index, 1)\n    emit('config-change', chartConfig.value)\n}\n\nfunction getTargetName (target) {\n    const names = {\n        xAxis: 'X Axis',\n        yAxis: 'Y Axis',\n        series: 'Data Series'\n    }\n    return names[target] || target\n}\n\nfunction generateChart () {\n    if (!isConfigValid.value) {\n        errorMessage.value = 'Please complete the required data mapping configuration'\n        return\n    }\n\n    emit('generate-chart', chartConfig.value)\n}\n\nfunction resetConfig () {\n    chartConfig.value = {\n        xAxis: { field: '', type: '' },\n        yAxis: { field: '', type: '' },\n        series: [],\n        title: '',\n        colorScheme: 'default',\n        animation: true,\n        dataRange: 'all',\n        nullHandling: 'ignore'\n    }\n\n    errorMessage.value = ''\n    emit('config-change', chartConfig.value)\n}\n\n// 监听图表类型变化\nwatch(() => props.selectedChartType, (newType) => {\n    // 根据图表类型调整配置\n    if (newType === 'Pie' || newType === 'pie') {\n        // 饼图不需要Y轴\n        chartConfig.value.yAxis = { field: '', type: '' }\n    }\n})\n</script>\n\n<style scoped>\n\n@import '../assets/CSS/ChartConfigPanel.css';\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}