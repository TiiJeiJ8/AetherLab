{"ast":null,"code":"import { ref, watch, onMounted, onBeforeUnmount, computed, nextTick } from 'vue';\nimport * as echarts from 'echarts';\nexport default {\n  __name: 'ChartDisplay',\n  props: {\n    option: {\n      type: Object,\n      required: true\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    theme: {\n      type: String,\n      default: 'default'\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['ready', 'click', 'dblclick'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    /* eslint-disable */\n    const props = __props;\n    const emit = __emit;\n    const chartRef = ref(null);\n    let chartInstance = null;\n    let resizeObserver = null;\n    const hasSeries = computed(() => {\n      return props.option && Array.isArray(props.option.series) && props.option.series.length > 0;\n    });\n    const chartTheme = computed(() => {\n      return props.theme === 'dark' ? 'dark' : null;\n    });\n    function initChart() {\n      if (chartRef.value && !chartInstance) {\n        chartInstance = echarts.init(chartRef.value, chartTheme.value);\n\n        // 绑定事件\n        chartInstance.on('click', params => {\n          emit('click', params);\n        });\n        chartInstance.on('dblclick', params => {\n          emit('dblclick', params);\n        });\n\n        // 设置图表就绪\n        nextTick(() => {\n          emit('ready', chartInstance);\n        });\n\n        // 设置自动调整大小\n        if (props.autoResize) {\n          setupResize();\n        }\n      }\n    }\n    function renderChart() {\n      if (!hasSeries.value) return;\n      if (!chartInstance) {\n        initChart();\n      }\n      if (chartInstance && props.option) {\n        // 显示加载状态\n        if (props.loading) {\n          chartInstance.showLoading('default', {\n            text: 'Loading...',\n            color: '#5470c6',\n            textColor: '#333',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n          });\n        } else {\n          chartInstance.hideLoading();\n        }\n\n        // 设置图表选项\n        chartInstance.setOption(props.option, true);\n      }\n    }\n    function setupResize() {\n      if (!window.ResizeObserver) {\n        // 降级方案\n        window.addEventListener('resize', handleResize);\n        return;\n      }\n      resizeObserver = new ResizeObserver(handleResize);\n      resizeObserver.observe(chartRef.value);\n    }\n    function handleResize() {\n      if (chartInstance) {\n        chartInstance.resize();\n      }\n    }\n    function dispose() {\n      if (chartInstance) {\n        chartInstance.dispose();\n        chartInstance = null;\n      }\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n        resizeObserver = null;\n      }\n      if (window.ResizeObserver) {\n        window.removeEventListener('resize', handleResize);\n      }\n    }\n\n    // 导出方法供外部使用\n    function getChartInstance() {\n      return chartInstance;\n    }\n    function resize() {\n      handleResize();\n    }\n    function exportChart(type = 'png') {\n      if (chartInstance) {\n        return chartInstance.getDataURL({\n          type: type,\n          pixelRatio: 2,\n          backgroundColor: '#fff'\n        });\n      }\n      return null;\n    }\n\n    // 响应式处理\n    watch(() => props.option, renderChart, {\n      deep: true\n    });\n    watch(() => props.theme, () => {\n      if (chartInstance) {\n        dispose();\n        nextTick(() => {\n          initChart();\n          renderChart();\n        });\n      }\n    });\n    watch(() => props.loading, renderChart);\n    onMounted(() => {\n      nextTick(() => {\n        initChart();\n        renderChart();\n      });\n    });\n    onBeforeUnmount(() => {\n      dispose();\n    });\n\n    // 向外暴露方法\n    __expose({\n      getChartInstance,\n      resize,\n      exportChart\n    });\n    const __returned__ = {\n      props,\n      emit,\n      chartRef,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      get resizeObserver() {\n        return resizeObserver;\n      },\n      set resizeObserver(v) {\n        resizeObserver = v;\n      },\n      hasSeries,\n      chartTheme,\n      initChart,\n      renderChart,\n      setupResize,\n      handleResize,\n      dispose,\n      getChartInstance,\n      resize,\n      exportChart,\n      ref,\n      watch,\n      onMounted,\n      onBeforeUnmount,\n      computed,\n      nextTick,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","onBeforeUnmount","computed","nextTick","echarts","props","__props","emit","__emit","chartRef","chartInstance","resizeObserver","hasSeries","option","Array","isArray","series","length","chartTheme","theme","initChart","value","init","on","params","autoResize","setupResize","renderChart","loading","showLoading","text","color","textColor","maskColor","zlevel","hideLoading","setOption","window","ResizeObserver","addEventListener","handleResize","observe","resize","dispose","disconnect","removeEventListener","getChartInstance","exportChart","type","getDataURL","pixelRatio","backgroundColor","deep","__expose"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/ChartDisplay.vue"],"sourcesContent":["<template>\n<div class=\"chart-display\">\n    <div v-if=\"!hasSeries\" class=\"empty-tip\">No Charts data</div>\n    <div v-else ref=\"chartRef\" class=\"chart-container\"></div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, watch, onMounted, onBeforeUnmount, computed, nextTick } from 'vue'\nimport * as echarts from 'echarts'\n\nconst props = defineProps({\n    option: { type: Object, required: true },\n    autoResize: { type: Boolean, default: true },\n    theme: { type: String, default: 'default' },\n    loading: { type: Boolean, default: false }\n})\n\nconst emit = defineEmits(['ready', 'click', 'dblclick'])\n\nconst chartRef = ref(null)\nlet chartInstance = null\nlet resizeObserver = null\n\nconst hasSeries = computed(() => {\n    return props.option && Array.isArray(props.option.series) && props.option.series.length > 0\n})\n\nconst chartTheme = computed(() => {\n    return props.theme === 'dark' ? 'dark' : null\n})\n\nfunction initChart() {\n    if (chartRef.value && !chartInstance) {\n        chartInstance = echarts.init(chartRef.value, chartTheme.value)\n        \n        // 绑定事件\n        chartInstance.on('click', (params) => {\n            emit('click', params)\n        })\n        \n        chartInstance.on('dblclick', (params) => {\n            emit('dblclick', params)\n        })\n        \n        // 设置图表就绪\n        nextTick(() => {\n            emit('ready', chartInstance)\n        })\n        \n        // 设置自动调整大小\n        if (props.autoResize) {\n            setupResize()\n        }\n    }\n}\n\nfunction renderChart() {\n    if (!hasSeries.value) return\n    \n    if (!chartInstance) {\n        initChart()\n    }\n    \n    if (chartInstance && props.option) {\n        // 显示加载状态\n        if (props.loading) {\n            chartInstance.showLoading('default', {\n                text: 'Loading...',\n                color: '#5470c6',\n                textColor: '#333',\n                maskColor: 'rgba(255, 255, 255, 0.8)',\n                zlevel: 0\n            })\n        } else {\n            chartInstance.hideLoading()\n        }\n        \n        // 设置图表选项\n        chartInstance.setOption(props.option, true)\n    }\n}\n\nfunction setupResize() {\n    if (!window.ResizeObserver) {\n        // 降级方案\n        window.addEventListener('resize', handleResize)\n        return\n    }\n    \n    resizeObserver = new ResizeObserver(handleResize)\n    resizeObserver.observe(chartRef.value)\n}\n\nfunction handleResize() {\n    if (chartInstance) {\n        chartInstance.resize()\n    }\n}\n\nfunction dispose() {\n    if (chartInstance) {\n        chartInstance.dispose()\n        chartInstance = null\n    }\n    \n    if (resizeObserver) {\n        resizeObserver.disconnect()\n        resizeObserver = null\n    }\n    \n    if (window.ResizeObserver) {\n        window.removeEventListener('resize', handleResize)\n    }\n}\n\n// 导出方法供外部使用\nfunction getChartInstance() {\n    return chartInstance\n}\n\nfunction resize() {\n    handleResize()\n}\n\nfunction exportChart(type = 'png') {\n    if (chartInstance) {\n        return chartInstance.getDataURL({\n            type: type,\n            pixelRatio: 2,\n            backgroundColor: '#fff'\n        })\n    }\n    return null\n}\n\n// 响应式处理\nwatch(() => props.option, renderChart, { deep: true })\nwatch(() => props.theme, () => {\n    if (chartInstance) {\n        dispose()\n        nextTick(() => {\n            initChart()\n            renderChart()\n        })\n    }\n})\nwatch(() => props.loading, renderChart)\n\nonMounted(() => {\n    nextTick(() => {\n        initChart()\n        renderChart()\n    })\n})\n\nonBeforeUnmount(() => {\n    dispose()\n})\n\n// 向外暴露方法\ndefineExpose({\n    getChartInstance,\n    resize,\n    exportChart\n})\n</script>\n\n<style scoped>\n.chart-display {\n    width: 100%;\n    height: 100%;\n    min-height: clamp(300px, 60vh, 600px); /* 响应式高度 */\n    background: var(--bg-color, #fff);\n    border-radius: clamp(8px, 2vw, 12px);\n    box-shadow: 0 0 1px var(--text-color);\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: clamp(10px, 2vw, 20px);\n}\n\n.chart-container {\n    width: 100% !important; /* 覆盖 inline style */\n    height: 100% !important;\n    min-height: inherit;\n}\n\n.empty-tip {\n    color: #aaa;\n    font-size: clamp(1em, 2vw, 1.2em);\n    text-align: center;\n    letter-spacing: 1px;\n    padding: 20px;\n    user-select: none;\n}\n\n/* 小屏幕适配 */\n@media (max-width: 767px) {\n    .chart-display {\n        height: 100%;      /* 填充父容器 */\n        padding: 8px;\n        border-radius: 8px;\n    }\n\n    .empty-tip {\n        font-size: 0.9em;\n        padding: 10px;\n    }\n}\n</style>\n"],"mappings":"AASA,SAASA,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAEC,eAAe,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,KAAI;AAC/E,OAAO,KAAKC,OAAO,MAAM,SAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;IAFjC;IAIA,MAAMC,KAAK,GAAGC,OAAA;IAOd,MAAMC,IAAI,GAAGC,MAAA;IAEb,MAAMC,QAAQ,GAAGX,GAAG,CAAC,IAAI;IACzB,IAAIY,aAAa,GAAG,IAAG;IACvB,IAAIC,cAAc,GAAG,IAAG;IAExB,MAAMC,SAAS,GAAGV,QAAQ,CAAC,MAAM;MAC7B,OAAOG,KAAK,CAACQ,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACV,KAAK,CAACQ,MAAM,CAACG,MAAM,CAAC,IAAIX,KAAK,CAACQ,MAAM,CAACG,MAAM,CAACC,MAAM,GAAG;IAC9F,CAAC;IAED,MAAMC,UAAU,GAAGhB,QAAQ,CAAC,MAAM;MAC9B,OAAOG,KAAK,CAACc,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,IAAG;IAChD,CAAC;IAED,SAASC,SAASA,CAAA,EAAG;MACjB,IAAIX,QAAQ,CAACY,KAAK,IAAI,CAACX,aAAa,EAAE;QAClCA,aAAa,GAAGN,OAAO,CAACkB,IAAI,CAACb,QAAQ,CAACY,KAAK,EAAEH,UAAU,CAACG,KAAK;;QAE7D;QACAX,aAAa,CAACa,EAAE,CAAC,OAAO,EAAGC,MAAM,IAAK;UAClCjB,IAAI,CAAC,OAAO,EAAEiB,MAAM;QACxB,CAAC;QAEDd,aAAa,CAACa,EAAE,CAAC,UAAU,EAAGC,MAAM,IAAK;UACrCjB,IAAI,CAAC,UAAU,EAAEiB,MAAM;QAC3B,CAAC;;QAED;QACArB,QAAQ,CAAC,MAAM;UACXI,IAAI,CAAC,OAAO,EAAEG,aAAa;QAC/B,CAAC;;QAED;QACA,IAAIL,KAAK,CAACoB,UAAU,EAAE;UAClBC,WAAW,CAAC;QAChB;MACJ;IACJ;IAEA,SAASC,WAAWA,CAAA,EAAG;MACnB,IAAI,CAACf,SAAS,CAACS,KAAK,EAAE;MAEtB,IAAI,CAACX,aAAa,EAAE;QAChBU,SAAS,CAAC;MACd;MAEA,IAAIV,aAAa,IAAIL,KAAK,CAACQ,MAAM,EAAE;QAC/B;QACA,IAAIR,KAAK,CAACuB,OAAO,EAAE;UACflB,aAAa,CAACmB,WAAW,CAAC,SAAS,EAAE;YACjCC,IAAI,EAAE,YAAY;YAClBC,KAAK,EAAE,SAAS;YAChBC,SAAS,EAAE,MAAM;YACjBC,SAAS,EAAE,0BAA0B;YACrCC,MAAM,EAAE;UACZ,CAAC;QACL,CAAC,MAAM;UACHxB,aAAa,CAACyB,WAAW,CAAC;QAC9B;;QAEA;QACAzB,aAAa,CAAC0B,SAAS,CAAC/B,KAAK,CAACQ,MAAM,EAAE,IAAI;MAC9C;IACJ;IAEA,SAASa,WAAWA,CAAA,EAAG;MACnB,IAAI,CAACW,MAAM,CAACC,cAAc,EAAE;QACxB;QACAD,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEC,YAAY;QAC9C;MACJ;MAEA7B,cAAc,GAAG,IAAI2B,cAAc,CAACE,YAAY;MAChD7B,cAAc,CAAC8B,OAAO,CAAChC,QAAQ,CAACY,KAAK;IACzC;IAEA,SAASmB,YAAYA,CAAA,EAAG;MACpB,IAAI9B,aAAa,EAAE;QACfA,aAAa,CAACgC,MAAM,CAAC;MACzB;IACJ;IAEA,SAASC,OAAOA,CAAA,EAAG;MACf,IAAIjC,aAAa,EAAE;QACfA,aAAa,CAACiC,OAAO,CAAC;QACtBjC,aAAa,GAAG,IAAG;MACvB;MAEA,IAAIC,cAAc,EAAE;QAChBA,cAAc,CAACiC,UAAU,CAAC;QAC1BjC,cAAc,GAAG,IAAG;MACxB;MAEA,IAAI0B,MAAM,CAACC,cAAc,EAAE;QACvBD,MAAM,CAACQ,mBAAmB,CAAC,QAAQ,EAAEL,YAAY;MACrD;IACJ;;IAEA;IACA,SAASM,gBAAgBA,CAAA,EAAG;MACxB,OAAOpC,aAAY;IACvB;IAEA,SAASgC,MAAMA,CAAA,EAAG;MACdF,YAAY,CAAC;IACjB;IAEA,SAASO,WAAWA,CAACC,IAAI,GAAG,KAAK,EAAE;MAC/B,IAAItC,aAAa,EAAE;QACf,OAAOA,aAAa,CAACuC,UAAU,CAAC;UAC5BD,IAAI,EAAEA,IAAI;UACVE,UAAU,EAAE,CAAC;UACbC,eAAe,EAAE;QACrB,CAAC;MACL;MACA,OAAO,IAAG;IACd;;IAEA;IACApD,KAAK,CAAC,MAAMM,KAAK,CAACQ,MAAM,EAAEc,WAAW,EAAE;MAAEyB,IAAI,EAAE;IAAK,CAAC;IACrDrD,KAAK,CAAC,MAAMM,KAAK,CAACc,KAAK,EAAE,MAAM;MAC3B,IAAIT,aAAa,EAAE;QACfiC,OAAO,CAAC;QACRxC,QAAQ,CAAC,MAAM;UACXiB,SAAS,CAAC;UACVO,WAAW,CAAC;QAChB,CAAC;MACL;IACJ,CAAC;IACD5B,KAAK,CAAC,MAAMM,KAAK,CAACuB,OAAO,EAAED,WAAW;IAEtC3B,SAAS,CAAC,MAAM;MACZG,QAAQ,CAAC,MAAM;QACXiB,SAAS,CAAC;QACVO,WAAW,CAAC;MAChB,CAAC;IACL,CAAC;IAED1B,eAAe,CAAC,MAAM;MAClB0C,OAAO,CAAC;IACZ,CAAC;;IAED;IACAU,QAAY,CAAC;MACTP,gBAAgB;MAChBJ,MAAM;MACNK;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}