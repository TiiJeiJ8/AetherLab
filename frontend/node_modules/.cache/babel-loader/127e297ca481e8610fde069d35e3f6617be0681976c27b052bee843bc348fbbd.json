{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\n/* eslint-disable */\n\n// 折线图 option 生成器\nexport default function lineOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  const {\n    yAxis,\n    title,\n    animation\n  } = config;\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n\n  // 合并同名项\n  const mergeRule = 'sum';\n  const mergeMap = new Map(); // key => {x, ys:[]}\n  xData.forEach((x, i) => {\n    if (!mergeMap.has(x)) mergeMap.set(x, {\n      x,\n      ys: []\n    });\n    yDataArr.forEach((yList, idx) => {\n      if (!mergeMap.get(x).ys[idx]) mergeMap.get(x).ys[idx] = [];\n      mergeMap.get(x).ys[idx].push(Number(yList[i]) || 0);\n    });\n  });\n  const mergedX = [];\n  const mergedY = Array.from({\n    length: yDataArr.length\n  }, () => []);\n  mergeMap.forEach(({\n    x,\n    ys\n  }, _) => {\n    mergedX.push(x);\n    ys.forEach((arr, idx) => {\n      let v;\n      switch (mergeRule) {\n        case 'mean':\n          v = arr.reduce((a, b) => a + b, 0) / arr.length;\n          break;\n        case 'max':\n          v = Math.max(...arr);\n          break;\n        default:\n          v = arr.reduce((a, b) => a + b, 0);\n        // sum\n      }\n      mergedY[idx].push(v);\n    });\n  });\n  const seriesArr = yArr.map((y, idx) => ({\n    name: y.field,\n    type: 'line',\n    data: mergedY[idx],\n    animationDuration: animation ? 1500 : 0\n  }));\n  return {\n    title: {\n      text: title || `${yArr.map(y => y.field).join(',')} vs ${config.xAxis.field}`,\n      left: 'center',\n      textStyle: {\n        fontSize: 16,\n        fontWeight: 'bold'\n      }\n    },\n    tooltip: {\n      trigger: 'axis'\n    },\n    legend: {\n      type: 'scroll',\n      show: config.legendVisible !== false,\n      data: yArr.map(y => y.field),\n      top: config.legendPosition || 'bottom'\n    },\n    toolbox: {\n      show: true,\n      feature: {\n        dataZoom: {\n          show: true,\n          yAxisIndex: 'none'\n        },\n        dataView: {\n          show: true,\n          readOnly: false\n        },\n        magicType: {\n          show: true,\n          type: ['line', 'bar']\n        },\n        restore: {\n          show: true\n        },\n        saveAsImage: {\n          show: true\n        }\n      }\n    },\n    xAxis: {\n      type: 'category',\n      data: xData,\n      axisLabel: {\n        interval: 0,\n        rotate: xData.length > 10 ? 45 : 0\n      }\n    },\n    yAxis: {\n      type: 'value',\n      name: yArr.map(y => y.field).join(',')\n    },\n    series: seriesArr,\n    animation: animation,\n    animationDuration: animation ? 1500 : 0,\n    ...customOption\n  };\n}","map":{"version":3,"names":["lineOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","yAxis","title","animation","yArr","Array","isArray","mergeRule","mergeMap","Map","forEach","x","i","has","set","ys","yList","idx","get","push","Number","mergedX","mergedY","from","length","_","arr","v","reduce","a","b","Math","max","seriesArr","map","y","name","field","type","data","animationDuration","text","join","xAxis","left","textStyle","fontSize","fontWeight","tooltip","trigger","legend","show","legendVisible","top","legendPosition","toolbox","feature","dataZoom","yAxisIndex","dataView","readOnly","magicType","restore","saveAsImage","axisLabel","interval","rotate","series"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/chartOptions/line.js"],"sourcesContent":["/* eslint-disable */\n\n// 折线图 option 生成器\nexport default function lineOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    const { yAxis, title, animation } = config;\n    const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n\n    // 合并同名项\n    const mergeRule = 'sum';\n    const mergeMap = new Map(); // key => {x, ys:[]}\n    xData.forEach((x, i) => {\n        if (!mergeMap.has(x)) mergeMap.set(x, { x, ys: [] });\n        yDataArr.forEach((yList, idx) => {\n            if (!mergeMap.get(x).ys[idx]) mergeMap.get(x).ys[idx] = [];\n            mergeMap.get(x).ys[idx].push(Number(yList[i]) || 0);\n        });\n    });\n    const mergedX = [];\n    const mergedY = Array.from({ length: yDataArr.length }, () => []);\n    mergeMap.forEach(({ x, ys }, _) => {\n        mergedX.push(x);\n        ys.forEach((arr, idx) => {\n            let v;\n            switch (mergeRule) {\n                case 'mean': v = arr.reduce((a, b) => a + b, 0) / arr.length; break;\n                case 'max': v = Math.max(...arr); break;\n                default: v = arr.reduce((a, b) => a + b, 0); // sum\n            }\n            mergedY[idx].push(v);\n        });\n    });\n\n    const seriesArr = yArr.map((y, idx) => ({\n        name: y.field,\n        type: 'line',\n        data: mergedY[idx],\n        animationDuration: animation ? 1500 : 0\n    }));\n    return {\n        title: {\n            text: title || `${yArr.map(y => y.field).join(',')} vs ${config.xAxis.field}`,\n            left: 'center',\n            textStyle: { fontSize: 16, fontWeight: 'bold' }\n        },\n        tooltip: { trigger: 'axis' },\n        legend: {\n            type: 'scroll',\n            show: config.legendVisible !== false,\n            data: yArr.map(y => y.field),\n            top: config.legendPosition || 'bottom',\n        },\n        toolbox: {\n            show: true,\n            feature: {\n                dataZoom: { show: true, yAxisIndex: 'none' },\n                dataView: { show: true, readOnly: false },\n                magicType: { show: true, type: ['line', 'bar'] },\n                restore: { show: true },\n                saveAsImage: { show: true },\n            }\n        },\n        xAxis: {\n            type: 'category',\n            data: xData,\n            axisLabel: { interval: 0, rotate: xData.length > 10 ? 45 : 0 }\n        },\n        yAxis: { type: 'value', name: yArr.map(y => y.field).join(',') },\n        series: seriesArr,\n        animation: animation,\n        animationDuration: animation ? 1500 : 0,\n        ...customOption\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}