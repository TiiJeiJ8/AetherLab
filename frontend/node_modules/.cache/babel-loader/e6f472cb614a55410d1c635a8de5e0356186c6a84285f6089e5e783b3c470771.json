{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/* eslint-disable */\n\n// 仪表盘配置生成器\nexport default function gaugeOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  const gaugeData = Array.isArray(seriesData) ? seriesData : seriesData.name && seriesData.value ? seriesData.name.map((n, i) => ({\n    name: n,\n    value: seriesData.value[i]\n  })) : [];\n\n  // 自动分配 offsetCenter\n  const total = gaugeData.length;\n  // 横向均分，纵向固定\n  const getOffset = idx => {\n    const x = -40 + 80 / Math.max(1, total - 1) * idx; // -40% ~ 40%\n    return [`${x}%`, '80%'];\n  };\n  const getDetailOffset = idx => {\n    const x = -40 + 80 / Math.max(1, total - 1) * idx;\n    return [`${x}%`, '95%'];\n  };\n\n  // 预设一组颜色\n  const colorList = ['#5470C6', '#91CC75', '#EE6666', '#FAC858', '#73C0DE', '#3BA272', '#FC8452', '#9A60B4', '#EA7CCC'];\n  const series = gaugeData.map((item, idx) => ({\n    name: item.name,\n    type: 'gauge',\n    title: {\n      show: true,\n      offsetCenter: getOffset(idx)\n    },\n    detail: {\n      formatter: '{value}',\n      offsetCenter: getDetailOffset(idx)\n    },\n    axisLine: {\n      lineStyle: {\n        width: 10,\n        color: [[1, colorList[idx % colorList.length]]]\n      }\n    },\n    pointer: {\n      itemStyle: {\n        color: colorList[idx % colorList.length]\n      }\n    },\n    data: [{\n      name: item.name,\n      value: item.value\n    }]\n  }));\n  return {\n    tooltip: {\n      formatter: '{a} <br/>{b} : {c}%'\n    },\n    series\n  };\n}\n;","map":{"version":3,"names":["gaugeOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","gaugeData","Array","isArray","name","value","map","n","i","total","length","getOffset","idx","x","Math","max","getDetailOffset","colorList","series","item","type","title","show","offsetCenter","detail","formatter","axisLine","lineStyle","width","color","pointer","itemStyle","data","tooltip"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/chartOptions/gauge.js"],"sourcesContent":["/* eslint-disable */\n\n// 仪表盘配置生成器\nexport default function gaugeOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    const gaugeData = Array.isArray(seriesData)\n        ? seriesData\n        : (seriesData.name && seriesData.value)\n            ? seriesData.name.map((n, i) => ({ name: n, value: seriesData.value[i] }))\n            : [];\n\n    // 自动分配 offsetCenter\n    const total = gaugeData.length;\n    // 横向均分，纵向固定\n    const getOffset = idx => {\n      const x = -40 + (80 / Math.max(1, total-1)) * idx; // -40% ~ 40%\n      return [`${x}%`, '80%'];\n    };\n    const getDetailOffset = idx => {\n      const x = -40 + (80 / Math.max(1, total-1)) * idx;\n      return [`${x}%`, '95%'];\n    };\n\n    // 预设一组颜色\n    const colorList = [\n      '#5470C6', '#91CC75', '#EE6666', '#FAC858', '#73C0DE',\n      '#3BA272', '#FC8452', '#9A60B4', '#EA7CCC'\n    ];\n    const series = gaugeData.map((item, idx) => ({\n      name: item.name,\n      type: 'gauge',\n      title: {\n        show: true,\n        offsetCenter: getOffset(idx)\n      },\n      detail: {\n        formatter: '{value}',\n        offsetCenter: getDetailOffset(idx)\n      },\n      axisLine: {\n        lineStyle: {\n          width: 10,\n          color: [[1, colorList[idx % colorList.length]]]\n        }\n      },\n      pointer: {\n        itemStyle: {\n          color: colorList[idx % colorList.length]\n        }\n      },\n      data: [{ name: item.name, value: item.value }]\n    }));\n\n    return {\n      tooltip: {\n        formatter: '{a} <br/>{b} : {c}%'\n      },\n      series\n    };\n};\n"],"mappings":";;AAAA;;AAEA;AACA,eAAe,SAASA,WAAWA,CAACC,MAAM,EAAEC,WAAW,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,YAAY,GAAG,CAAC,CAAC,EAAE;EACxH,MAAMC,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACJ,UAAU,CAAC,GACrCA,UAAU,GACTA,UAAU,CAACK,IAAI,IAAIL,UAAU,CAACM,KAAK,GAChCN,UAAU,CAACK,IAAI,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM;IAAEJ,IAAI,EAAEG,CAAC;IAAEF,KAAK,EAAEN,UAAU,CAACM,KAAK,CAACG,CAAC;EAAE,CAAC,CAAC,CAAC,GACxE,EAAE;;EAEZ;EACA,MAAMC,KAAK,GAAGR,SAAS,CAACS,MAAM;EAC9B;EACA,MAAMC,SAAS,GAAGC,GAAG,IAAI;IACvB,MAAMC,CAAC,GAAG,CAAC,EAAE,GAAI,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEN,KAAK,GAAC,CAAC,CAAC,GAAIG,GAAG,CAAC,CAAC;IACnD,OAAO,CAAC,GAAGC,CAAC,GAAG,EAAE,KAAK,CAAC;EACzB,CAAC;EACD,MAAMG,eAAe,GAAGJ,GAAG,IAAI;IAC7B,MAAMC,CAAC,GAAG,CAAC,EAAE,GAAI,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEN,KAAK,GAAC,CAAC,CAAC,GAAIG,GAAG;IACjD,OAAO,CAAC,GAAGC,CAAC,GAAG,EAAE,KAAK,CAAC;EACzB,CAAC;;EAED;EACA,MAAMI,SAAS,GAAG,CAChB,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EACrD,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAC3C;EACD,MAAMC,MAAM,GAAGjB,SAAS,CAACK,GAAG,CAAC,CAACa,IAAI,EAAEP,GAAG,MAAM;IAC3CR,IAAI,EAAEe,IAAI,CAACf,IAAI;IACfgB,IAAI,EAAE,OAAO;IACbC,KAAK,EAAE;MACLC,IAAI,EAAE,IAAI;MACVC,YAAY,EAAEZ,SAAS,CAACC,GAAG;IAC7B,CAAC;IACDY,MAAM,EAAE;MACNC,SAAS,EAAE,SAAS;MACpBF,YAAY,EAAEP,eAAe,CAACJ,GAAG;IACnC,CAAC;IACDc,QAAQ,EAAE;MACRC,SAAS,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAEZ,SAAS,CAACL,GAAG,GAAGK,SAAS,CAACP,MAAM,CAAC,CAAC;MAChD;IACF,CAAC;IACDoB,OAAO,EAAE;MACPC,SAAS,EAAE;QACTF,KAAK,EAAEZ,SAAS,CAACL,GAAG,GAAGK,SAAS,CAACP,MAAM;MACzC;IACF,CAAC;IACDsB,IAAI,EAAE,CAAC;MAAE5B,IAAI,EAAEe,IAAI,CAACf,IAAI;MAAEC,KAAK,EAAEc,IAAI,CAACd;IAAM,CAAC;EAC/C,CAAC,CAAC,CAAC;EAEH,OAAO;IACL4B,OAAO,EAAE;MACPR,SAAS,EAAE;IACb,CAAC;IACDP;EACF,CAAC;AACL;AAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}