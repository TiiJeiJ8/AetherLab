{"ast":null,"code":"import { unref as _unref, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-config-panel\"\n};\nconst _hoisted_2 = {\n  class: \"config-header\"\n};\nconst _hoisted_3 = {\n  class: \"config-title\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"chart-type-indicator\"\n};\nconst _hoisted_6 = {\n  class: \"config-content\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"no-chart-selected\"\n};\nconst _hoisted_8 = {\n  class: \"empty-state\"\n};\nconst _hoisted_9 = [\"innerHTML\"];\nconst _hoisted_10 = {\n  key: 1,\n  class: \"config-sections\"\n};\nconst _hoisted_11 = {\n  class: \"config-section\"\n};\nconst _hoisted_12 = {\n  class: \"mapping-areas\"\n};\nconst _hoisted_13 = {\n  class: \"config-section\"\n};\nconst _hoisted_14 = {\n  class: \"styling-options\"\n};\nconst _hoisted_15 = {\n  class: \"style-group\"\n};\nconst _hoisted_16 = {\n  class: \"style-group\"\n};\nconst _hoisted_17 = {\n  class: \"config-actions\"\n};\nconst _hoisted_18 = [\"disabled\"];\nconst _hoisted_19 = [\"innerHTML\"];\nconst _hoisted_20 = [\"innerHTML\"];\nimport { ref, computed, watch } from 'vue';\nimport { getThemeIcon } from '@/assets/JS/icons.js';\nimport ChartMappingBasic from './chart-mappings/ChartMappingBasic.vue';\nimport ChartMappingLine from './chart-mappings/ChartMappingLine.vue';\nimport ChartMappingPie from './chart-mappings/ChartMappingPie.vue';\nimport ChartMappingScatter from './chart-mappings/ChartMappingScatter.vue';\n\n// Props\n\nexport default {\n  __name: 'ChartConfigPanel',\n  props: {\n    selectedChartType: {\n      type: String,\n      default: null\n    },\n    draggedColumn: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['chart-generated', 'config-changed'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    /* eslint-disable */\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 图表配置数据\n    const chartConfig = ref({\n      title: '',\n      colorTheme: 'default',\n      mappings: {}\n    });\n\n    // 计算是否可以生成图表\n    const canGenerateChart = computed(() => {\n      return props.selectedChartType && Object.keys(chartConfig.value.mappings).length > 0;\n    });\n\n    // 获取图表类型显示名称\n    function getChartTypeDisplayName(type) {\n      const displayNames = {\n        'bar': 'Bar Chart',\n        'line': 'Line Chart',\n        'pie': 'Pie Chart',\n        'scatter': 'Scatter Plot',\n        'area': 'Area Chart',\n        'radar': 'Radar Chart',\n        'heatmap': 'Heatmap',\n        'treemap': 'Treemap'\n      };\n      return displayNames[type] || type;\n    }\n\n    // 获取图表类型样式类\n    function getChartTypeClass(type) {\n      const typeClasses = {\n        'bar': 'chart-type-bar',\n        'line': 'chart-type-line',\n        'pie': 'chart-type-pie',\n        'scatter': 'chart-type-scatter',\n        'area': 'chart-type-area',\n        'radar': 'chart-type-radar',\n        'heatmap': 'chart-type-heatmap',\n        'treemap': 'chart-type-treemap'\n      };\n      return typeClasses[type] || 'chart-type-default';\n    }\n\n    // 获取映射组件\n    function getMappingComponent(type) {\n      const mappingComponents = {\n        'bar': ChartMappingBasic,\n        'line': ChartMappingLine,\n        'pie': ChartMappingPie,\n        'scatter': ChartMappingScatter,\n        'area': ChartMappingLine,\n        // 区域图使用线图的映射\n        'radar': ChartMappingBasic,\n        // 雷达图使用基础映射\n        'heatmap': ChartMappingBasic,\n        // 热力图使用基础映射\n        'treemap': ChartMappingPie // 树图使用饼图的映射\n      };\n      return mappingComponents[type] || ChartMappingBasic;\n    }\n\n    // 处理字段映射\n    function handleFieldMapped(mapping) {\n      chartConfig.value.mappings = {\n        ...chartConfig.value.mappings,\n        ...mapping\n      };\n      emit('config-changed', chartConfig.value);\n    }\n\n    // 处理字段移除\n    function handleFieldRemoved(fieldKey) {\n      delete chartConfig.value.mappings[fieldKey];\n      emit('config-changed', chartConfig.value);\n    }\n\n    // 生成图表\n    function generateChart() {\n      if (!canGenerateChart.value) return;\n      const chartData = {\n        type: props.selectedChartType,\n        config: chartConfig.value\n      };\n      emit('chart-generated', chartData);\n    }\n\n    // 重置配置\n    function resetConfig() {\n      chartConfig.value = {\n        title: '',\n        colorTheme: 'default',\n        mappings: {}\n      };\n      emit('config-changed', chartConfig.value);\n    }\n\n    // 监听图表类型变化，重置配置\n    watch(() => props.selectedChartType, newType => {\n      if (newType) {\n        resetConfig();\n      }\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", {\n        class: \"config-icon\",\n        innerHTML: _unref(getThemeIcon)('settings')\n      }, null, 8, _hoisted_4), _cache[2] || (_cache[2] = _createElementVNode(\"span\", null, \"Chart Configuration\", -1))]), __props.selectedChartType ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"span\", {\n        class: _normalizeClass([\"chart-type-label\", getChartTypeClass(__props.selectedChartType)])\n      }, _toDisplayString(getChartTypeDisplayName(__props.selectedChartType)), 3)])) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_6, [!__props.selectedChartType ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"span\", {\n        class: \"empty-icon\",\n        innerHTML: _unref(getThemeIcon)('chart')\n      }, null, 8, _hoisted_9), _cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"No Chart Type Selected\", -1)), _cache[4] || (_cache[4] = _createElementVNode(\"p\", null, \"Please select a chart type from the left sidebar to start configuring your visualization.\", -1))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n        class: \"section-header\"\n      }, [_createElementVNode(\"h4\", null, \"Data Mapping\"), _createElementVNode(\"span\", {\n        class: \"section-description\"\n      }, \"Drag columns from the structure panel to configure data mapping\")], -1)), _createElementVNode(\"div\", _hoisted_12, [(_openBlock(), _createBlock(_resolveDynamicComponent(getMappingComponent(__props.selectedChartType)), {\n        \"chart-type\": __props.selectedChartType,\n        onFieldMapped: handleFieldMapped,\n        onFieldRemoved: handleFieldRemoved\n      }, null, 40, [\"chart-type\"]))])]), _createElementVNode(\"div\", _hoisted_13, [_cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n        class: \"section-header\"\n      }, [_createElementVNode(\"h4\", null, \"Chart Styling\"), _createElementVNode(\"span\", {\n        class: \"section-description\"\n      }, \"Customize the appearance of your chart\")], -1)), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n        class: \"style-label\"\n      }, \"Chart Title\", -1)), _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        class: \"style-input\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => chartConfig.value.title = $event),\n        placeholder: \"Enter chart title...\"\n      }, null, 512), [[_vModelText, chartConfig.value.title]])]), _createElementVNode(\"div\", _hoisted_16, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n        class: \"style-label\"\n      }, \"Color Theme\", -1)), _withDirectives(_createElementVNode(\"select\", {\n        class: \"style-select\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => chartConfig.value.colorTheme = $event)\n      }, _cache[7] || (_cache[7] = [_createStaticVNode(\"<option value=\\\"default\\\" data-v-6d91e074>Default</option><option value=\\\"blue\\\" data-v-6d91e074>Blue</option><option value=\\\"green\\\" data-v-6d91e074>Green</option><option value=\\\"purple\\\" data-v-6d91e074>Purple</option><option value=\\\"orange\\\" data-v-6d91e074>Orange</option>\", 5)]), 512), [[_vModelSelect, chartConfig.value.colorTheme]])])])]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"button\", {\n        class: \"action-btn primary-btn\",\n        onClick: generateChart,\n        disabled: !canGenerateChart.value\n      }, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('play')\n      }, null, 8, _hoisted_19), _cache[10] || (_cache[10] = _createTextVNode(\" Generate Chart \"))], 8, _hoisted_18), _createElementVNode(\"button\", {\n        class: \"action-btn secondary-btn\",\n        onClick: resetConfig\n      }, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('refresh')\n      }, null, 8, _hoisted_20), _cache[11] || (_cache[11] = _createTextVNode(\" Reset \"))])])]))])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","getThemeIcon","ChartMappingBasic","ChartMappingLine","ChartMappingPie","ChartMappingScatter","props","__props","emit","__emit","chartConfig","title","colorTheme","mappings","canGenerateChart","selectedChartType","Object","keys","value","length","getChartTypeDisplayName","type","displayNames","getChartTypeClass","typeClasses","getMappingComponent","mappingComponents","handleFieldMapped","mapping","handleFieldRemoved","fieldKey","generateChart","chartData","config","resetConfig","newType"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/ChartConfigPanel.vue"],"sourcesContent":["<template>\n  <div class=\"chart-config-panel\">\n    <!-- 面板头部 -->\n    <div class=\"config-header\">\n      <div class=\"config-title\">\n        <span class=\"config-icon\" v-html=\"getThemeIcon('settings')\"></span>\n        <span>Chart Configuration</span>\n      </div>\n      <div class=\"chart-type-indicator\" v-if=\"selectedChartType\">\n        <span class=\"chart-type-label\" :class=\"getChartTypeClass(selectedChartType)\">\n          {{ getChartTypeDisplayName(selectedChartType) }}\n        </span>\n      </div>\n    </div>\n\n    <!-- 配置内容 -->\n    <div class=\"config-content\">\n      <!-- 没有选择图表类型时的提示 -->\n      <div v-if=\"!selectedChartType\" class=\"no-chart-selected\">\n        <div class=\"empty-state\">\n          <span class=\"empty-icon\" v-html=\"getThemeIcon('chart')\"></span>\n          <h3>No Chart Type Selected</h3>\n          <p>Please select a chart type from the left sidebar to start configuring your visualization.</p>\n        </div>\n      </div>\n\n      <!-- 有选择图表类型时的配置区域 -->\n      <div v-else class=\"config-sections\">\n        <!-- 数据映射区域 -->\n        <div class=\"config-section\">\n          <div class=\"section-header\">\n            <h4>Data Mapping</h4>\n            <span class=\"section-description\">Drag columns from the structure panel to configure data mapping</span>\n          </div>\n\n          <div class=\"mapping-areas\">\n            <!-- 根据图表类型动态显示不同的映射区域 -->\n            <component\n              :is=\"getMappingComponent(selectedChartType)\"\n              :chart-type=\"selectedChartType\"\n              @field-mapped=\"handleFieldMapped\"\n              @field-removed=\"handleFieldRemoved\"\n            />\n          </div>\n        </div>\n\n        <!-- 样式配置区域 -->\n        <div class=\"config-section\">\n          <div class=\"section-header\">\n            <h4>Chart Styling</h4>\n            <span class=\"section-description\">Customize the appearance of your chart</span>\n          </div>\n\n          <div class=\"styling-options\">\n            <!-- 图表标题 -->\n            <div class=\"style-group\">\n              <label class=\"style-label\">Chart Title</label>\n              <input\n                type=\"text\"\n                class=\"style-input\"\n                v-model=\"chartConfig.title\"\n                placeholder=\"Enter chart title...\"\n              />\n            </div>\n\n            <!-- 颜色主题 -->\n            <div class=\"style-group\">\n              <label class=\"style-label\">Color Theme</label>\n              <select class=\"style-select\" v-model=\"chartConfig.colorTheme\">\n                <option value=\"default\">Default</option>\n                <option value=\"blue\">Blue</option>\n                <option value=\"green\">Green</option>\n                <option value=\"purple\">Purple</option>\n                <option value=\"orange\">Orange</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <!-- 操作按钮 -->\n        <div class=\"config-actions\">\n          <button class=\"action-btn primary-btn\" @click=\"generateChart\" :disabled=\"!canGenerateChart\">\n            <span v-html=\"getThemeIcon('play')\"></span>\n            Generate Chart\n          </button>\n          <button class=\"action-btn secondary-btn\" @click=\"resetConfig\">\n            <span v-html=\"getThemeIcon('refresh')\"></span>\n            Reset\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch } from 'vue'\nimport { getThemeIcon } from '@/assets/JS/icons.js'\nimport ChartMappingBasic from './chart-mappings/ChartMappingBasic.vue'\nimport ChartMappingLine from './chart-mappings/ChartMappingLine.vue'\nimport ChartMappingPie from './chart-mappings/ChartMappingPie.vue'\nimport ChartMappingScatter from './chart-mappings/ChartMappingScatter.vue'\n\n// Props\nconst props = defineProps({\n  selectedChartType: {\n    type: String,\n    default: null\n  },\n  draggedColumn: {\n    type: Object,\n    default: null\n  }\n})\n\n// Emits\nconst emit = defineEmits(['chart-generated', 'config-changed'])\n\n// 图表配置数据\nconst chartConfig = ref({\n  title: '',\n  colorTheme: 'default',\n  mappings: {}\n})\n\n// 计算是否可以生成图表\nconst canGenerateChart = computed(() => {\n  return props.selectedChartType && Object.keys(chartConfig.value.mappings).length > 0\n})\n\n// 获取图表类型显示名称\nfunction getChartTypeDisplayName(type) {\n  const displayNames = {\n    'bar': 'Bar Chart',\n    'line': 'Line Chart',\n    'pie': 'Pie Chart',\n    'scatter': 'Scatter Plot',\n    'area': 'Area Chart',\n    'radar': 'Radar Chart',\n    'heatmap': 'Heatmap',\n    'treemap': 'Treemap'\n  }\n  return displayNames[type] || type\n}\n\n// 获取图表类型样式类\nfunction getChartTypeClass(type) {\n  const typeClasses = {\n    'bar': 'chart-type-bar',\n    'line': 'chart-type-line',\n    'pie': 'chart-type-pie',\n    'scatter': 'chart-type-scatter',\n    'area': 'chart-type-area',\n    'radar': 'chart-type-radar',\n    'heatmap': 'chart-type-heatmap',\n    'treemap': 'chart-type-treemap'\n  }\n  return typeClasses[type] || 'chart-type-default'\n}\n\n// 获取映射组件\nfunction getMappingComponent(type) {\n  const mappingComponents = {\n    'bar': ChartMappingBasic,\n    'line': ChartMappingLine,\n    'pie': ChartMappingPie,\n    'scatter': ChartMappingScatter,\n    'area': ChartMappingLine, // 区域图使用线图的映射\n    'radar': ChartMappingBasic, // 雷达图使用基础映射\n    'heatmap': ChartMappingBasic, // 热力图使用基础映射\n    'treemap': ChartMappingPie // 树图使用饼图的映射\n  }\n  return mappingComponents[type] || ChartMappingBasic\n}\n\n// 处理字段映射\nfunction handleFieldMapped(mapping) {\n  chartConfig.value.mappings = { ...chartConfig.value.mappings, ...mapping }\n  emit('config-changed', chartConfig.value)\n}\n\n// 处理字段移除\nfunction handleFieldRemoved(fieldKey) {\n  delete chartConfig.value.mappings[fieldKey]\n  emit('config-changed', chartConfig.value)\n}\n\n// 生成图表\nfunction generateChart() {\n  if (!canGenerateChart.value) return\n  \n  const chartData = {\n    type: props.selectedChartType,\n    config: chartConfig.value\n  }\n  \n  emit('chart-generated', chartData)\n}\n\n// 重置配置\nfunction resetConfig() {\n  chartConfig.value = {\n    title: '',\n    colorTheme: 'default',\n    mappings: {}\n  }\n  emit('config-changed', chartConfig.value)\n}\n\n// 监听图表类型变化，重置配置\nwatch(() => props.selectedChartType, (newType) => {\n  if (newType) {\n    resetConfig()\n  }\n})\n</script>\n\n<style scoped>\n.chart-config-panel {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background: var(--bg-color);\n  color: var(--text-color);\n}\n\n/* 配置头部 */\n.config-header {\n  padding: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n  background: linear-gradient(135deg, rgba(59, 130, 246, 0.05) 0%, rgba(139, 92, 246, 0.05) 100%);\n}\n\n[data-theme=\"dark\"] .config-header {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n  background: linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(139, 92, 246, 0.1) 100%);\n}\n\n.config-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 8px;\n}\n\n.config-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  height: 20px;\n}\n\n.config-icon svg {\n  width: 18px;\n  height: 18px;\n}\n\n.chart-type-indicator {\n  display: flex;\n  justify-content: flex-start;\n}\n\n.chart-type-label {\n  font-size: 12px;\n  font-weight: 500;\n  padding: 4px 8px;\n  border-radius: 6px;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n/* 图表类型样式 */\n.chart-type-bar {\n  background: rgba(59, 130, 246, 0.15);\n  color: #1d4ed8;\n}\n\n.chart-type-line {\n  background: rgba(34, 197, 94, 0.15);\n  color: #059669;\n}\n\n.chart-type-pie {\n  background: rgba(245, 158, 11, 0.15);\n  color: #d97706;\n}\n\n.chart-type-scatter {\n  background: rgba(139, 92, 246, 0.15);\n  color: #7c3aed;\n}\n\n.chart-type-area {\n  background: rgba(236, 72, 153, 0.15);\n  color: #be185d;\n}\n\n.chart-type-default {\n  background: rgba(107, 114, 128, 0.15);\n  color: #4b5563;\n}\n\n[data-theme=\"dark\"] .chart-type-bar {\n  background: rgba(59, 130, 246, 0.25);\n  color: #60a5fa;\n}\n\n[data-theme=\"dark\"] .chart-type-line {\n  background: rgba(34, 197, 94, 0.25);\n  color: #22c55e;\n}\n\n[data-theme=\"dark\"] .chart-type-pie {\n  background: rgba(245, 158, 11, 0.25);\n  color: #fbbf24;\n}\n\n[data-theme=\"dark\"] .chart-type-scatter {\n  background: rgba(139, 92, 246, 0.25);\n  color: #a78bfa;\n}\n\n[data-theme=\"dark\"] .chart-type-area {\n  background: rgba(236, 72, 153, 0.25);\n  color: #f472b6;\n}\n\n[data-theme=\"dark\"] .chart-type-default {\n  background: rgba(107, 114, 128, 0.25);\n  color: #9ca3af;\n}\n\n/* 配置内容 */\n.config-content {\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n}\n\n/* 空状态 */\n.no-chart-selected {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.empty-state {\n  text-align: center;\n  max-width: 280px;\n}\n\n.empty-icon {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 64px;\n  height: 64px;\n  margin-bottom: 16px;\n  opacity: 0.5;\n}\n\n.empty-icon svg {\n  width: 48px;\n  height: 48px;\n}\n\n.empty-state h3 {\n  margin: 0 0 8px 0;\n  font-size: 18px;\n  color: var(--text-color);\n}\n\n.empty-state p {\n  margin: 0;\n  font-size: 14px;\n  color: var(--text-secondary);\n  line-height: 1.5;\n}\n\n/* 配置区域 */\n.config-sections {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n}\n\n.config-section {\n  background: rgba(0, 0, 0, 0.02);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  border-radius: 8px;\n  padding: 16px;\n}\n\n[data-theme=\"dark\"] .config-section {\n  background: rgba(255, 255, 255, 0.02);\n  border: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n.section-header {\n  margin-bottom: 16px;\n}\n\n.section-header h4 {\n  margin: 0 0 4px 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: var(--text-color);\n}\n\n.section-description {\n  font-size: 12px;\n  color: var(--text-secondary);\n}\n\n/* 样式配置 */\n.styling-options {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.style-group {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.style-label {\n  font-size: 12px;\n  font-weight: 500;\n  color: var(--text-color);\n}\n\n.style-input,\n.style-select {\n  padding: 8px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  border-radius: 6px;\n  background: var(--bg-color);\n  color: var(--text-color);\n  font-size: 14px;\n  transition: border-color 0.2s ease;\n}\n\n.style-input:focus,\n.style-select:focus {\n  outline: none;\n  border-color: #3b82f6;\n}\n\n[data-theme=\"dark\"] .style-input,\n[data-theme=\"dark\"] .style-select {\n  border: 1px solid rgba(255, 255, 255, 0.15);\n}\n\n/* 操作按钮 */\n.config-actions {\n  display: flex;\n  gap: 12px;\n  padding-top: 16px;\n  border-top: 1px solid rgba(0, 0, 0, 0.08);\n}\n\n[data-theme=\"dark\"] .config-actions {\n  border-top: 1px solid rgba(255, 255, 255, 0.08);\n}\n\n.action-btn {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  padding: 10px 16px;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.action-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.action-btn svg {\n  width: 16px;\n  height: 16px;\n}\n\n.primary-btn {\n  background: #3b82f6;\n  color: white;\n}\n\n.primary-btn:hover:not(:disabled) {\n  background: #2563eb;\n  transform: translateY(-1px);\n}\n\n.secondary-btn {\n  background: rgba(0, 0, 0, 0.05);\n  color: var(--text-color);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.secondary-btn:hover {\n  background: rgba(0, 0, 0, 0.1);\n}\n\n[data-theme=\"dark\"] .secondary-btn {\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n[data-theme=\"dark\"] .secondary-btn:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n/* 滚动条样式 */\n.config-content::-webkit-scrollbar {\n  width: 6px;\n}\n\n.config-content::-webkit-scrollbar-track {\n  background: rgba(0, 0, 0, 0.05);\n  border-radius: 3px;\n}\n\n.config-content::-webkit-scrollbar-thumb {\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 3px;\n}\n\n.config-content::-webkit-scrollbar-thumb:hover {\n  background: rgba(0, 0, 0, 0.3);\n}\n\n[data-theme=\"dark\"] .config-content::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.05);\n}\n\n[data-theme=\"dark\"] .config-content::-webkit-scrollbar-thumb {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n[data-theme=\"dark\"] .config-content::-webkit-scrollbar-thumb:hover {\n  background: rgba(255, 255, 255, 0.3);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}