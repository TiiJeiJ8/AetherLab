{"ast":null,"code":"import { ref, computed, watch, reactive, nextTick } from 'vue';\nimport { chartIcons } from '../assets/JS/SVG/chartIcons.js';\nimport { chartsTooltipConfig } from '../assets/JS/Config/ChartsTooltipConfig.js';\n\n// Props\n\nexport default {\n  __name: 'ChartConfigPanel',\n  props: {\n    selectedChartType: {\n      type: String,\n      default: 'line'\n    },\n    currentFile: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['config-change', 'generate-chart'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 响应式数据\n    const showDataFilter = ref(false);\n    const showAdvancedConfig = ref(false);\n    const errorMessage = ref('');\n    const tooltipRef = ref(null);\n\n    // 提示框状态\n    const tooltip = reactive({\n      visible: false,\n      type: '',\n      description: '',\n      dataRequirements: [],\n      useCases: [],\n      style: {}\n    });\n    let tooltipTimeout = null;\n\n    // 拖拽状态\n    const isDragOver = ref({\n      xAxis: false,\n      yAxis: false,\n      series: false\n    });\n    const dragError = ref({\n      xAxis: false,\n      yAxis: false,\n      series: false\n    });\n\n    // 图表配置\n    const chartConfig = ref({\n      xAxis: {\n        field: '',\n        type: ''\n      },\n      yAxis: {\n        field: '',\n        type: ''\n      },\n      series: [],\n      title: '',\n      colorScheme: 'default',\n      animation: true,\n      dataRange: 'all',\n      nullHandling: 'ignore'\n    });\n\n    // 根据图表类型获取轴的数据类型要求\n    const getAxisRequirement = computed(() => {\n      const type = props.selectedChartType;\n\n      // 定义不同图表类型的轴要求\n      const requirements = {\n        'Line': {\n          xAxis: 'time/category',\n          yAxis: 'value',\n          series: 'value'\n        },\n        'Bar': {\n          xAxis: 'category',\n          yAxis: 'value',\n          series: 'value'\n        },\n        'Pie': {\n          xAxis: 'category',\n          yAxis: 'not required',\n          series: 'value'\n        },\n        'Scatter': {\n          xAxis: 'value',\n          yAxis: 'value',\n          series: 'optional'\n        },\n        'GEO/MAP': {\n          xAxis: 'longitude',\n          yAxis: 'latitude',\n          series: 'value'\n        },\n        'Candlestick': {\n          xAxis: 'time',\n          yAxis: 'OHLC',\n          series: 'OHLC'\n        },\n        'Radar': {\n          xAxis: 'category',\n          yAxis: 'value',\n          series: 'value'\n        },\n        'Boxplot': {\n          xAxis: 'category',\n          yAxis: 'value',\n          series: 'value'\n        },\n        'Heatmap': {\n          xAxis: 'category',\n          yAxis: 'category',\n          series: 'value'\n        },\n        'Graph': {\n          xAxis: 'node',\n          yAxis: 'edge',\n          series: 'weight'\n        },\n        'Lines': {\n          xAxis: 'time/category',\n          yAxis: 'value',\n          series: 'multi-value'\n        },\n        'Tree': {\n          xAxis: 'hierarchy',\n          yAxis: 'not required',\n          series: 'value'\n        },\n        'Treemap': {\n          xAxis: 'hierarchy',\n          yAxis: 'not required',\n          series: 'value'\n        },\n        'Sunburst': {\n          xAxis: 'hierarchy',\n          yAxis: 'not required',\n          series: 'value'\n        },\n        'Parallel': {\n          xAxis: 'dimension',\n          yAxis: 'value',\n          series: 'multi-value'\n        },\n        'Sankey': {\n          xAxis: 'source',\n          yAxis: 'target',\n          series: 'flow'\n        },\n        'Funnel': {\n          xAxis: 'stage',\n          yAxis: 'value',\n          series: 'value'\n        },\n        'Gauge': {\n          xAxis: 'not required',\n          yAxis: 'value',\n          series: 'target'\n        },\n        'PictorialBar': {\n          xAxis: 'category',\n          yAxis: 'value',\n          series: 'value'\n        },\n        'ThemeRiver': {\n          xAxis: 'time',\n          yAxis: 'value',\n          series: 'theme'\n        },\n        'Calendar': {\n          xAxis: 'date',\n          yAxis: 'value',\n          series: 'value'\n        }\n      };\n      return requirements[type] || {\n        xAxis: 'category',\n        yAxis: 'value',\n        series: 'value'\n      };\n    });\n\n    // 计算属性\n    const isConfigValid = computed(() => {\n      return chartConfig.value.xAxis.field && (chartConfig.value.yAxis.field || chartConfig.value.series.length > 0);\n    });\n    function getChartIcon(type) {\n      // 直接使用传入的类型，chartIcons.js 中的键是首字母大写格式\n      return chartIcons[type] || '';\n    }\n    function toggleDataFilter() {\n      showDataFilter.value = !showDataFilter.value;\n    }\n    function toggleAdvancedConfig() {\n      showAdvancedConfig.value = !showAdvancedConfig.value;\n    }\n\n    // 显示提示框\n    function showTooltip(event, type) {\n      // 清除之前的定时器\n      if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout);\n      }\n\n      // 设置1.2秒延迟\n      tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type];\n        if (config) {\n          tooltip.type = type;\n          tooltip.description = config.description;\n          tooltip.dataRequirements = config.dataRequirements;\n          tooltip.useCases = config.useCases;\n          tooltip.visible = true;\n\n          // 在下一个tick中计算位置，确保DOM已更新\n          nextTick(() => {\n            positionTooltip(event);\n          });\n        }\n      }, 1200); // 1.2秒延迟\n    }\n\n    // 隐藏提示框\n    function hideTooltip() {\n      if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout);\n        tooltipTimeout = null;\n      }\n      tooltip.visible = false;\n    }\n\n    // 计算提示框位置，确保不超出屏幕\n    function positionTooltip(event) {\n      if (!tooltipRef.value) return;\n      const tooltipEl = tooltipRef.value;\n      const rect = tooltipEl.getBoundingClientRect();\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight;\n      let left = event.pageX + 10;\n      let top = event.pageY + 10;\n\n      // 防止右边超出屏幕\n      if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10;\n      }\n\n      // 防止底部超出屏幕\n      if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10;\n      }\n\n      // 防止左边超出屏幕\n      if (left < 0) {\n        left = 10;\n      }\n\n      // 防止顶部超出屏幕\n      if (top < 0) {\n        top = 10;\n      }\n      tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n      };\n    }\n\n    // 拖拽处理\n    function handleDragEnter(target) {\n      isDragOver.value[target] = true;\n      dragError.value[target] = false;\n    }\n    function handleDragLeave(target) {\n      isDragOver.value[target] = false;\n    }\n    function handleDragOver(event, target) {\n      event.preventDefault();\n      isDragOver.value[target] = true;\n    }\n    function handleDrop(event, target) {\n      event.preventDefault();\n      isDragOver.value[target] = false;\n      try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'));\n        if (dragData.type === 'column') {\n          const column = dragData.column;\n\n          // 验证数据类型是否适合目标区域\n          if (validateColumnForTarget(column, target)) {\n            mapColumnToTarget(column, target);\n            errorMessage.value = '';\n          } else {\n            dragError.value[target] = true;\n            errorMessage.value = `Column \"${column.name}\" data type is not suitable for ${getTargetName(target)}`;\n            setTimeout(() => {\n              dragError.value[target] = false;\n              errorMessage.value = '';\n            }, 3000);\n          }\n        }\n      } catch (error) {\n        console.error('Drop failed:', error);\n        errorMessage.value = 'Drag and drop failed, please try again';\n      }\n    }\n    function validateColumnForTarget(column, target) {\n      const columnType = column.type;\n      switch (target) {\n        case 'xAxis':\n          // X轴通常接受类别型数据\n          return ['string', 'category', 'date'].includes(columnType);\n        case 'yAxis':\n          // Y轴通常接受数值型数据\n          return ['number', 'integer'].includes(columnType);\n        case 'series':\n          // 系列数据通常接受数值型数据\n          return ['number', 'integer'].includes(columnType);\n        default:\n          return true;\n      }\n    }\n    function mapColumnToTarget(column, target) {\n      switch (target) {\n        case 'xAxis':\n          chartConfig.value.xAxis = {\n            field: column.name,\n            type: column.type\n          };\n          break;\n        case 'yAxis':\n          chartConfig.value.yAxis = {\n            field: column.name,\n            type: column.type\n          };\n          break;\n        case 'series':\n          // 系列可以有多个，但这里简化为单个\n          chartConfig.value.series = [{\n            field: column.name,\n            type: column.type\n          }];\n          break;\n      }\n      emit('config-change', chartConfig.value);\n    }\n    function removeMapping(target) {\n      switch (target) {\n        case 'xAxis':\n          chartConfig.value.xAxis = {\n            field: '',\n            type: ''\n          };\n          break;\n        case 'yAxis':\n          chartConfig.value.yAxis = {\n            field: '',\n            type: ''\n          };\n          break;\n        case 'series':\n          chartConfig.value.series = [];\n          break;\n      }\n      emit('config-change', chartConfig.value);\n    }\n    function removeSeriesMapping(index) {\n      chartConfig.value.series.splice(index, 1);\n      emit('config-change', chartConfig.value);\n    }\n    function getTargetName(target) {\n      const names = {\n        xAxis: 'X Axis',\n        yAxis: 'Y Axis',\n        series: 'Data Series'\n      };\n      return names[target] || target;\n    }\n    function generateChart() {\n      if (!isConfigValid.value) {\n        errorMessage.value = 'Please complete the required data mapping configuration';\n        return;\n      }\n      emit('generate-chart', chartConfig.value);\n    }\n    function resetConfig() {\n      chartConfig.value = {\n        xAxis: {\n          field: '',\n          type: ''\n        },\n        yAxis: {\n          field: '',\n          type: ''\n        },\n        series: [],\n        title: '',\n        colorScheme: 'default',\n        animation: true,\n        dataRange: 'all',\n        nullHandling: 'ignore'\n      };\n      errorMessage.value = '';\n      emit('config-change', chartConfig.value);\n    }\n\n    // 监听图表类型变化\n    watch(() => props.selectedChartType, newType => {\n      // 根据图表类型调整配置\n      if (newType === 'Pie' || newType === 'pie') {\n        // 饼图不需要Y轴\n        chartConfig.value.yAxis = {\n          field: '',\n          type: ''\n        };\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      showDataFilter,\n      showAdvancedConfig,\n      errorMessage,\n      tooltipRef,\n      tooltip,\n      get tooltipTimeout() {\n        return tooltipTimeout;\n      },\n      set tooltipTimeout(v) {\n        tooltipTimeout = v;\n      },\n      isDragOver,\n      dragError,\n      chartConfig,\n      getAxisRequirement,\n      isConfigValid,\n      getChartIcon,\n      toggleDataFilter,\n      toggleAdvancedConfig,\n      showTooltip,\n      hideTooltip,\n      positionTooltip,\n      handleDragEnter,\n      handleDragLeave,\n      handleDragOver,\n      handleDrop,\n      validateColumnForTarget,\n      mapColumnToTarget,\n      removeMapping,\n      removeSeriesMapping,\n      getTargetName,\n      generateChart,\n      resetConfig,\n      ref,\n      computed,\n      watch,\n      reactive,\n      nextTick,\n      get chartIcons() {\n        return chartIcons;\n      },\n      get chartsTooltipConfig() {\n        return chartsTooltipConfig;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","reactive","nextTick","chartIcons","chartsTooltipConfig","props","__props","emit","__emit","showDataFilter","showAdvancedConfig","errorMessage","tooltipRef","tooltip","visible","type","description","dataRequirements","useCases","style","tooltipTimeout","isDragOver","xAxis","yAxis","series","dragError","chartConfig","field","title","colorScheme","animation","dataRange","nullHandling","getAxisRequirement","selectedChartType","requirements","isConfigValid","value","length","getChartIcon","toggleDataFilter","toggleAdvancedConfig","showTooltip","event","clearTimeout","setTimeout","config","positionTooltip","hideTooltip","tooltipEl","rect","getBoundingClientRect","viewportWidth","window","innerWidth","viewportHeight","innerHeight","left","pageX","top","pageY","width","height","position","zIndex","handleDragEnter","target","handleDragLeave","handleDragOver","preventDefault","handleDrop","dragData","JSON","parse","dataTransfer","getData","column","validateColumnForTarget","mapColumnToTarget","name","getTargetName","error","console","columnType","includes","removeMapping","removeSeriesMapping","index","splice","names","generateChart","resetConfig","newType"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/ChartConfigPanel.vue"],"sourcesContent":["<template>\n<div class=\"chart-config-panel\">\n<!-- 右侧边栏总标题 -->\n<div class=\"panel-header-CCP\">\n    <h3>Chart Configuration</h3>\n</div>\n\n<!-- 数据映射配置区域 -->\n<div class=\"mapping-section\">\n    <div class=\"mapping-section-header\">\n    <h4>Data Mapping</h4>\n    <div class=\"chart-type-tag\"\n         @mouseenter=\"showTooltip($event, selectedChartType)\"\n         @mouseleave=\"hideTooltip\">\n        <span class=\"chart-type-icon\" v-html=\"getChartIcon(selectedChartType)\"></span>\n        <span class=\"chart-type-name\">{{ selectedChartType }}</span>\n    </div>\n    </div>\n\n    <!-- X轴配置 -->\n    <div class=\"mapping-item\">\n    <div class=\"mapping-item-header\">\n        <label class=\"mapping-label\">\n        X Axis\n        <span class=\"required-star\">*</span>\n        </label>\n        <div class=\"mapping-type-tag\">category</div>\n    </div>\n    <div\n        class=\"drop-zone\"\n        :class=\"{\n        'drop-zone-active': isDragOver.xAxis,\n        'drop-zone-filled': chartConfig.xAxis.field,\n        'drop-zone-error': dragError.xAxis\n        }\"\n        @drop=\"handleDrop($event, 'xAxis')\"\n        @dragover.prevent=\"handleDragOver($event, 'xAxis')\"\n        @dragenter.prevent=\"handleDragEnter('xAxis')\"\n        @dragleave.prevent=\"handleDragLeave('xAxis')\"\n    >\n        <div v-if=\"!chartConfig.xAxis.field\" class=\"drop-placeholder\">\n        <div class=\"drop-icon\">↓</div>\n        <span class=\"drop-text\">Drag column here</span>\n        </div>\n        <div v-else class=\"mapped-field\">\n        <div class=\"field-info\">\n            <span class=\"field-name\">{{ chartConfig.xAxis.field }}</span>\n            <span class=\"field-type\">{{ chartConfig.xAxis.type }}</span>\n        </div>\n        <button class=\"remove-btn\" @click=\"removeMapping('xAxis')\">×</button>\n        </div>\n    </div>\n    </div>\n\n    <!-- Y轴配置 -->\n    <div class=\"mapping-item\">\n    <div class=\"mapping-item-header\">\n        <label class=\"mapping-label\">\n        Y Axis\n        <span class=\"required-star\">*</span>\n    </label>\n        <div class=\"mapping-type-tag\">value</div>\n    </div>\n    <div\n        class=\"drop-zone\"\n        :class=\"{\n        'drop-zone-active': isDragOver.yAxis,\n        'drop-zone-filled': chartConfig.yAxis.field,\n        'drop-zone-error': dragError.yAxis\n        }\"\n        @drop=\"handleDrop($event, 'yAxis')\"\n        @dragover.prevent=\"handleDragOver($event, 'yAxis')\"\n        @dragenter.prevent=\"handleDragEnter('yAxis')\"\n        @dragleave.prevent=\"handleDragLeave('yAxis')\"\n    >\n        <div v-if=\"!chartConfig.yAxis.field\" class=\"drop-placeholder\">\n        <div class=\"drop-icon\">↓</div>\n        <span class=\"drop-text\">Drag column here</span>\n        </div>\n        <div v-else class=\"mapped-field\">\n        <div class=\"field-info\">\n            <span class=\"field-name\">{{ chartConfig.yAxis.field }}</span>\n            <span class=\"field-type\">{{ chartConfig.yAxis.type }}</span>\n        </div>\n        <button class=\"remove-btn\" @click=\"removeMapping('yAxis')\">×</button>\n        </div>\n    </div>\n    </div>\n\n    <!-- 数据系列配置 -->\n    <div class=\"mapping-item\">\n    <div class=\"mapping-item-header\">\n        <label class=\"mapping-label\">Data Series</label>\n        <div class=\"mapping-type-tag\">value</div>\n    </div>\n    <div\n        class=\"drop-zone\"\n        :class=\"{\n        'drop-zone-active': isDragOver.series,\n        'drop-zone-filled': chartConfig.series.length > 0,\n        'drop-zone-error': dragError.series\n        }\"\n        @drop=\"handleDrop($event, 'series')\"\n        @dragover.prevent=\"handleDragOver($event, 'series')\"\n        @dragenter.prevent=\"handleDragEnter('series')\"\n        @dragleave.prevent=\"handleDragLeave('series')\"\n    >\n        <div v-if=\"chartConfig.series.length === 0\" class=\"drop-placeholder\">\n        <div class=\"drop-icon\">↓</div>\n        <span class=\"drop-text\">Drag column here</span>\n        </div>\n        <div v-else class=\"mapped-series\">\n        <div\n            v-for=\"(serie, index) in chartConfig.series\"\n            :key=\"index\"\n            class=\"mapped-field\"\n        >\n            <div class=\"field-info\">\n            <span class=\"field-name\">{{ serie.field }}</span>\n            <span class=\"field-type\">{{ serie.type }}</span>\n            </div>\n            <button class=\"remove-btn\" @click=\"removeSeriesMapping(index)\">×</button>\n        </div>\n        </div>\n    </div>\n    </div>\n</div>\n\n<!-- 数据过滤 -->\n<div class=\"filter-section\">\n    <div class=\"section-header\" @click=\"toggleDataFilter\">\n    <h4>Data Filtering</h4>\n    <div class=\"toggle-icon\" :class=\"{ 'toggle-open': showDataFilter }\">▼</div>\n    </div>\n    <div v-if=\"showDataFilter\" class=\"section-content\">\n    <div class=\"filter-item\">\n        <label>Data Range</label>\n        <select v-model=\"chartConfig.dataRange\">\n        <option value=\"all\">All Data</option>\n        <option value=\"first100\">First 100 rows</option>\n        <option value=\"last100\">Last 100 rows</option>\n        <option value=\"sample\">Random Sample</option>\n        </select>\n    </div>\n    <div class=\"filter-item\">\n        <label>Null Value Handling</label>\n        <select v-model=\"chartConfig.nullHandling\">\n        <option value=\"ignore\">Ignore null values</option>\n        <option value=\"zero\">Replace with 0</option>\n        <option value=\"interpolate\">Linear interpolation</option>\n        </select>\n    </div>\n    </div>\n</div>\n\n<!-- 高级配置 -->\n<div class=\"advanced-section\">\n    <div class=\"section-header\" @click=\"toggleAdvancedConfig\">\n    <h4>Advanced Settings</h4>\n    <div class=\"toggle-icon\" :class=\"{ 'toggle-open': showAdvancedConfig }\">▼</div>\n    </div>\n    <div v-if=\"showAdvancedConfig\" class=\"section-content\">\n    <div class=\"config-item\">\n        <label>Chart Title</label>\n        <input type=\"text\" v-model=\"chartConfig.title\" placeholder=\"Enter chart title\">\n    </div>\n    <div class=\"config-item\">\n        <label>Color Theme</label>\n        <select v-model=\"chartConfig.colorScheme\">\n        <option value=\"default\">Default</option>\n        <option value=\"blue\">Blue</option>\n        <option value=\"green\">Green</option>\n        <option value=\"warm\">Warm</option>\n        <option value=\"cool\">Cool</option>\n        </select>\n    </div>\n    <div class=\"config-item\">\n        <label>Animation</label>\n        <input type=\"checkbox\" v-model=\"chartConfig.animation\">\n    </div>\n    </div>\n</div>\n\n<!-- 操作按钮 -->\n<div class=\"action-section\">\n    <button\n    class=\"apply-btn\"\n    :disabled=\"!isConfigValid\"\n    @click=\"generateChart\"\n    >\n    Apply Configuration\n    </button>\n    <button class=\"reset-btn\" @click=\"resetConfig\">\n    Reset Configuration\n    </button>\n</div>\n\n<!-- 错误提示 -->\n<div v-if=\"errorMessage\" class=\"error-message\">\n    <div class=\"error-text\">{{ errorMessage }}</div>\n</div>\n\n<!-- 提示框 -->\n<div\n    v-if=\"tooltip.visible\"\n    class=\"chart-tooltip\"\n    :style=\"tooltip.style\"\n    ref=\"tooltipRef\"\n>\n    <div class=\"tooltip-header\">\n        <span class=\"tooltip-title\">{{ tooltip.type }}</span>\n        <span class=\"tooltip-description\">{{ tooltip.description }}</span>\n    </div>\n    <div class=\"tooltip-section\">\n        <h4>Data Requirements</h4>\n        <div class=\"tooltip-tags\">\n            <span\n                v-for=\"requirement in tooltip.dataRequirements\"\n                :key=\"requirement\"\n                class=\"tooltip-tag data-tag\"\n            >\n                {{ requirement }}\n            </span>\n        </div>\n    </div>\n    <div class=\"tooltip-section\">\n        <h4>Use Cases</h4>\n        <div class=\"tooltip-tags\">\n            <span\n                v-for=\"useCase in tooltip.useCases\"\n                :key=\"useCase\"\n                class=\"tooltip-tag use-case-tag\"\n            >\n                {{ useCase }}\n            </span>\n        </div>\n    </div>\n</div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch, reactive, nextTick } from 'vue'\nimport { chartIcons } from '../assets/JS/SVG/chartIcons.js'\nimport { chartsTooltipConfig } from '../assets/JS/Config/ChartsTooltipConfig.js'\n\n// Props\nconst props = defineProps({\n    selectedChartType: {\n        type: String,\n        default: 'line'\n    },\n    currentFile: {\n        type: Object,\n        default: null\n    }\n})\n\n// Emits\nconst emit = defineEmits(['config-change', 'generate-chart'])\n\n// 响应式数据\nconst showDataFilter = ref(false)\nconst showAdvancedConfig = ref(false)\nconst errorMessage = ref('')\nconst tooltipRef = ref(null)\n\n// 提示框状态\nconst tooltip = reactive({\n    visible: false,\n    type: '',\n    description: '',\n    dataRequirements: [],\n    useCases: [],\n    style: {}\n})\n\nlet tooltipTimeout = null\n\n// 拖拽状态\nconst isDragOver = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\nconst dragError = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\n// 图表配置\nconst chartConfig = ref({\n    xAxis: {\n        field: '',\n        type: ''\n    },\n    yAxis: {\n        field: '',\n        type: ''\n    },\n    series: [],\n    title: '',\n    colorScheme: 'default',\n    animation: true,\n    dataRange: 'all',\n    nullHandling: 'ignore'\n})\n\n// 根据图表类型获取轴的数据类型要求\nconst getAxisRequirement = computed(() => {\n    const type = props.selectedChartType\n    \n    // 定义不同图表类型的轴要求\n    const requirements = {\n        'Line': { xAxis: 'time/category', yAxis: 'value', series: 'value' },\n        'Bar': { xAxis: 'category', yAxis: 'value', series: 'value' },\n        'Pie': { xAxis: 'category', yAxis: 'not required', series: 'value' },\n        'Scatter': { xAxis: 'value', yAxis: 'value', series: 'optional' },\n        'GEO/MAP': { xAxis: 'longitude', yAxis: 'latitude', series: 'value' },\n        'Candlestick': { xAxis: 'time', yAxis: 'OHLC', series: 'OHLC' },\n        'Radar': { xAxis: 'category', yAxis: 'value', series: 'value' },\n        'Boxplot': { xAxis: 'category', yAxis: 'value', series: 'value' },\n        'Heatmap': { xAxis: 'category', yAxis: 'category', series: 'value' },\n        'Graph': { xAxis: 'node', yAxis: 'edge', series: 'weight' },\n        'Lines': { xAxis: 'time/category', yAxis: 'value', series: 'multi-value' },\n        'Tree': { xAxis: 'hierarchy', yAxis: 'not required', series: 'value' },\n        'Treemap': { xAxis: 'hierarchy', yAxis: 'not required', series: 'value' },\n        'Sunburst': { xAxis: 'hierarchy', yAxis: 'not required', series: 'value' },\n        'Parallel': { xAxis: 'dimension', yAxis: 'value', series: 'multi-value' },\n        'Sankey': { xAxis: 'source', yAxis: 'target', series: 'flow' },\n        'Funnel': { xAxis: 'stage', yAxis: 'value', series: 'value' },\n        'Gauge': { xAxis: 'not required', yAxis: 'value', series: 'target' },\n        'PictorialBar': { xAxis: 'category', yAxis: 'value', series: 'value' },\n        'ThemeRiver': { xAxis: 'time', yAxis: 'value', series: 'theme' },\n        'Calendar': { xAxis: 'date', yAxis: 'value', series: 'value' }\n    }\n    \n    return requirements[type] || { xAxis: 'category', yAxis: 'value', series: 'value' }\n})\n\n// 计算属性\nconst isConfigValid = computed(() => {\n    return chartConfig.value.xAxis.field &&\n            (chartConfig.value.yAxis.field || chartConfig.value.series.length > 0)\n})\n\nfunction getChartIcon (type) {\n    // 直接使用传入的类型，chartIcons.js 中的键是首字母大写格式\n    return chartIcons[type] || ''\n}\n\nfunction toggleDataFilter() {\n    showDataFilter.value = !showDataFilter.value\n}\n\nfunction toggleAdvancedConfig() {\n    showAdvancedConfig.value = !showAdvancedConfig.value\n}\n\n// 显示提示框\nfunction showTooltip(event, type) {\n    // 清除之前的定时器\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n    }\n    \n    // 设置1.2秒延迟\n    tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type]\n        if (config) {\n            tooltip.type = type\n            tooltip.description = config.description\n            tooltip.dataRequirements = config.dataRequirements\n            tooltip.useCases = config.useCases\n            tooltip.visible = true\n            \n            // 在下一个tick中计算位置，确保DOM已更新\n            nextTick(() => {\n                positionTooltip(event)\n            })\n        }\n    }, 1200) // 1.2秒延迟\n}\n\n// 隐藏提示框\nfunction hideTooltip() {\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n        tooltipTimeout = null\n    }\n    tooltip.visible = false\n}\n\n// 计算提示框位置，确保不超出屏幕\nfunction positionTooltip(event) {\n    if (!tooltipRef.value) return\n    \n    const tooltipEl = tooltipRef.value\n    const rect = tooltipEl.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    \n    let left = event.pageX + 10\n    let top = event.pageY + 10\n    \n    // 防止右边超出屏幕\n    if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10\n    }\n    \n    // 防止底部超出屏幕\n    if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10\n    }\n    \n    // 防止左边超出屏幕\n    if (left < 0) {\n        left = 10\n    }\n    \n    // 防止顶部超出屏幕\n    if (top < 0) {\n        top = 10\n    }\n    \n    tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n    }\n}\n\n// 拖拽处理\nfunction handleDragEnter (target) {\n    isDragOver.value[target] = true\n    dragError.value[target] = false\n    }\n\nfunction handleDragLeave (target) {\n    isDragOver.value[target] = false\n}\n\nfunction handleDragOver (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = true\n}\n\nfunction handleDrop (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = false\n\n    try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'))\n\n        if (dragData.type === 'column') {\n        const column = dragData.column\n\n        // 验证数据类型是否适合目标区域\n        if (validateColumnForTarget(column, target)) {\n            mapColumnToTarget(column, target)\n            errorMessage.value = ''\n        } else {\n            dragError.value[target] = true\n            errorMessage.value = `Column \"${column.name}\" data type is not suitable for ${getTargetName(target)}`\n            setTimeout(() => {\n            dragError.value[target] = false\n            errorMessage.value = ''\n            }, 3000)\n        }\n        }\n    } catch (error) {\n        console.error('Drop failed:', error)\n        errorMessage.value = 'Drag and drop failed, please try again'\n    }\n}\n\nfunction validateColumnForTarget (column, target) {\n    const columnType = column.type\n\n    switch (target) {\n        case 'xAxis':\n        // X轴通常接受类别型数据\n        return ['string', 'category', 'date'].includes(columnType)\n        case 'yAxis':\n        // Y轴通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        case 'series':\n        // 系列数据通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        default:\n        return true\n    }\n}\n\nfunction mapColumnToTarget (column, target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'series':\n        // 系列可以有多个，但这里简化为单个\n        chartConfig.value.series = [{\n            field: column.name,\n            type: column.type\n        }]\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeMapping (target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = { field: '', type: '' }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = { field: '', type: '' }\n        break\n        case 'series':\n        chartConfig.value.series = []\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeSeriesMapping (index) {\n    chartConfig.value.series.splice(index, 1)\n    emit('config-change', chartConfig.value)\n}\n\nfunction getTargetName (target) {\n    const names = {\n        xAxis: 'X Axis',\n        yAxis: 'Y Axis',\n        series: 'Data Series'\n    }\n    return names[target] || target\n}\n\nfunction generateChart () {\n    if (!isConfigValid.value) {\n        errorMessage.value = 'Please complete the required data mapping configuration'\n        return\n    }\n\n    emit('generate-chart', chartConfig.value)\n}\n\nfunction resetConfig () {\n    chartConfig.value = {\n        xAxis: { field: '', type: '' },\n        yAxis: { field: '', type: '' },\n        series: [],\n        title: '',\n        colorScheme: 'default',\n        animation: true,\n        dataRange: 'all',\n        nullHandling: 'ignore'\n    }\n\n    errorMessage.value = ''\n    emit('config-change', chartConfig.value)\n}\n\n// 监听图表类型变化\nwatch(() => props.selectedChartType, (newType) => {\n    // 根据图表类型调整配置\n    if (newType === 'Pie' || newType === 'pie') {\n        // 饼图不需要Y轴\n        chartConfig.value.yAxis = { field: '', type: '' }\n    }\n})\n</script>\n\n<style scoped>\n\n@import '../assets/CSS/ChartConfigPanel.css';\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}