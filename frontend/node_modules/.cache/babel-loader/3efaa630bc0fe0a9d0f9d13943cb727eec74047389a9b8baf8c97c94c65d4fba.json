{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-display\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"empty-tip\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  ref: \"chartRef\",\n  class: \"chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$setup.hasSeries ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[0] || (_cache[0] = [_createStaticVNode(\"<div class=\\\"empty-svg dynamic-pie-svg\\\" data-v-25b55534><svg width=\\\"70\\\" height=\\\"70\\\" viewBox=\\\"0 0 70 70\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" data-v-25b55534><!-- 饼图底盘 --><circle cx=\\\"35\\\" cy=\\\"35\\\" r=\\\"28\\\" fill=\\\"#F5F7FA\\\" stroke=\\\"#E0E6ED\\\" stroke-width=\\\"3\\\" data-v-25b55534></circle><!-- 动态饼块 --><path class=\\\"pie-slice slice1\\\" d=\\\"M35,35 L35,7 A28,28 0 0,1 62,35 Z\\\" fill=\\\"#4F8EF7\\\" data-v-25b55534></path><path class=\\\"pie-slice slice2\\\" d=\\\"M35,35 L62,35 A28,28 0 0,1 35,63 Z\\\" fill=\\\"#A0C4FF\\\" data-v-25b55534></path><path class=\\\"pie-slice slice3\\\" d=\\\"M35,35 L35,63 A28,28 0 0,1 7,35 Z\\\" fill=\\\"#FFB300\\\" data-v-25b55534></path><path class=\\\"pie-slice slice4\\\" d=\\\"M35,35 L7,35 A28,28 0 0,1 35,7 Z\\\" fill=\\\"#FFD6A0\\\" data-v-25b55534></path><!-- 中心圆点 --><circle class=\\\"pie-center\\\" cx=\\\"35\\\" cy=\\\"35\\\" r=\\\"7\\\" fill=\\\"#fff\\\" stroke=\\\"#4F8EF7\\\" stroke-width=\\\"2\\\" data-v-25b55534></circle></svg></div><div class=\\\"empty-title\\\" data-v-25b55534>No Chart Data</div><div class=\\\"empty-desc\\\" data-v-25b55534>Select a chart type on the left and configure your data to <span class=\\\"faststart\\\" data-v-25b55534>get started fast</span> with visualization!</div>\", 3)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */))]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","$setup","hasSeries","_hoisted_2","_cache","_createStaticVNode","_hoisted_3"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\ChartDisplay.vue"],"sourcesContent":["<template>\n<div class=\"chart-display\">\n    <div v-if=\"!hasSeries\" class=\"empty-tip\">\n        <div class=\"empty-svg dynamic-pie-svg\">\n            <svg width=\"70\" height=\"70\" viewBox=\"0 0 70 70\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <!-- 饼图底盘 -->\n                <circle cx=\"35\" cy=\"35\" r=\"28\" fill=\"#F5F7FA\" stroke=\"#E0E6ED\" stroke-width=\"3\" />\n                <!-- 动态饼块 -->\n                <path class=\"pie-slice slice1\" d=\"M35,35 L35,7 A28,28 0 0,1 62,35 Z\" fill=\"#4F8EF7\" />\n                <path class=\"pie-slice slice2\" d=\"M35,35 L62,35 A28,28 0 0,1 35,63 Z\" fill=\"#A0C4FF\" />\n                <path class=\"pie-slice slice3\" d=\"M35,35 L35,63 A28,28 0 0,1 7,35 Z\" fill=\"#FFB300\" />\n                <path class=\"pie-slice slice4\" d=\"M35,35 L7,35 A28,28 0 0,1 35,7 Z\" fill=\"#FFD6A0\" />\n                <!-- 中心圆点 -->\n                <circle class=\"pie-center\" cx=\"35\" cy=\"35\" r=\"7\" fill=\"#fff\" stroke=\"#4F8EF7\" stroke-width=\"2\" />\n            </svg>\n        </div>\n        <div class=\"empty-title\">No Chart Data</div>\n        <div class=\"empty-desc\">Select a chart type on the left and configure your data to <span class=\"faststart\">get started fast</span> with visualization!</div>\n    </div>\n    <div v-else ref=\"chartRef\" class=\"chart-container\"></div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, watch, onMounted, onBeforeUnmount, computed } from 'vue'\nimport * as echarts from 'echarts'\n\nconst props = defineProps({\n    option: { type: Object, required: true }\n})\n\nconst chartRef = ref(null)\nlet chartInstance = null\n\nconst hasSeries = computed(() => {\n    return props.option && Array.isArray(props.option.series) && props.option.series.length > 0\n})\n\nfunction renderChart() {\n    if (!hasSeries.value) return\n    if (!chartInstance && chartRef.value) {\n        chartInstance = echarts.init(chartRef.value)\n    }\n    if (chartInstance && props.option) {\n        chartInstance.setOption(props.option, true)\n    }\n}\n\nwatch(() => props.option, renderChart, { deep: true })\nonMounted(renderChart)\nonBeforeUnmount(() => {\n    if (chartInstance) chartInstance.dispose()\n})\n</script>\n\n<style scoped>\n.chart-display {\n    width: 100%;\n    height: 100%;\n    min-height: clamp(300px, 60vh, 600px);\n    background: var(--bg-color, #fff);\n    border-radius: clamp(8px, 2vw, 12px);\n    box-shadow: 0 0 1px 1px var(--text-color);\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: clamp(10px, 2vw, 20px);\n}\n\n.chart-container {\n    width: 100% !important;\n    height: 100% !important;\n    min-height: inherit;\n}\n\n.empty-tip {\n    color: #888;\n    text-align: center;\n    letter-spacing: 1px;\n    padding: 24px 10px 10px 10px;\n    user-select: none;\n    background: none;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n.empty-svg {\n    margin-bottom: 12px;\n    opacity: 0.92;\n    animation: floatX 3.2s ease-in-out infinite;\n    will-change: transform;\n}\n.dynamic-pie-svg .pie-slice {\n    transform-origin: 35px 35px;\n    opacity: 0.92;\n    animation: pie-rotate 2.8s cubic-bezier(.4,1.6,.6,1) infinite;\n}\n.dynamic-pie-svg .slice1 { animation-delay: 0s; }\n.dynamic-pie-svg .slice2 { animation-delay: 0.4s; }\n.dynamic-pie-svg .slice3 { animation-delay: 0.8s; }\n.dynamic-pie-svg .slice4 { animation-delay: 1.2s; }\n@keyframes pie-rotate {\n    0% { transform: scale(1) rotate(0deg); opacity: 0.92; }\n    20% { transform: scale(1.08) rotate(3deg); opacity: 1; }\n    50% { transform: scale(1) rotate(0deg); opacity: 0.92; }\n    70% { transform: scale(0.96) rotate(-2deg); opacity: 0.85; }\n    100% { transform: scale(1) rotate(0deg); opacity: 0.92; }\n}\n.dynamic-pie-svg .pie-center {\n    animation: pie-center-pulse 1.8s cubic-bezier(.4,1.6,.6,1) infinite;\n}\n@keyframes pie-center-pulse {\n    0% { transform: scale(1); opacity: 1; }\n    50% { transform: scale(1.18); opacity: 0.7; }\n    100% { transform: scale(1); opacity: 1; }\n}\n@keyframes floatX {\n    0% { transform: translateY(0) translateX(0); }\n    25% { transform: translateY(-8px) translateX(4px); }\n    50% { transform: translateY(-12px) translateX(-4px); }\n    75% { transform: translateY(-8px) translateX(4px); }\n    100% { transform: translateY(0) translateX(0); }\n}\n.empty-title {\n    font-size: 1.25em;\n    font-weight: bold;\n    color: #4F8EF7;\n    margin-bottom: 6px;\n}\n.empty-desc {\n    font-size: 1em;\n    color: #666;\n    margin-top: 2px;\n}\n.faststart {\n    color: #FFB300;\n    font-weight: bold;\n}\n\n/* 小屏幕适配 */\n@media (max-width: 767px) {\n    .chart-display {\n        height: 100%;\n        padding: 8px;\n        border-radius: 8px;\n    }\n    .empty-tip {\n        font-size: 0.95em;\n        padding: 10px 2px 6px 2px;\n    }\n    .empty-title {\n        font-size: 1.05em;\n    }\n    .empty-desc {\n        font-size: 0.95em;\n    }\n    .empty-svg svg {\n        width: 44px;\n        height: 44px;\n    }\n}\n</style>\n"],"mappings":";;EACKA,KAAK,EAAC;AAAe;;EAD1BC,GAAA;EAE2BD,KAAK,EAAC;;;EAFjCC,GAAA;EAmBgBC,GAAG,EAAC,UAAU;EAACF,KAAK,EAAC;;;uBAlBrCG,mBAAA,CAmBM,OAnBNC,UAmBM,G,CAlBUC,MAAA,CAAAC,SAAS,I,cAArBH,mBAAA,CAgBM,OAhBNI,UAgBM,EAAAC,MAAA,QAAAA,MAAA,OAlBVC,kBAAA,0qC,qBAmBIN,mBAAA,CAAyD,OAAzDO,UAAyD,+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}