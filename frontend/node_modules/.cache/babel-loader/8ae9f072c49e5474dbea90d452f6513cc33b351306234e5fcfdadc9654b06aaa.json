{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\n// dataMergeUtils.js\n// 多文件数据合并与主键处理工具函数，支持多图表类型分发、插件化、类型校验\n\n/* eslint-disable */\n\nimport * as nullHandling from './nullHandling.js';\n\n/**\n * @typedef {Object} ChartConfig\n * @property {string} type - 图表类型（如 'pie', 'line', 'bar' 等）\n * @property {Object} [xAxis]\n * @property {Array|Object} [yAxis]\n * @property {Object} [category]\n * @property {Object} [value]\n * @property {Object} [filter]\n */\n\n/**\n * @typedef {Object.<string, Array<Object>>} FileDataMap\n * 文件名到对象数组的映射\n */\n\n/**\n * 类型校验工具\n */\nfunction assertConfig(config, fileDataMap) {\n  if (!config || typeof config !== 'object') throw new Error('config 必须为对象');\n  if (!fileDataMap || typeof fileDataMap !== 'object') throw new Error('fileDataMap 必须为对象');\n  if (!config.type) throw new Error('config.type 必须指定图表类型');\n}\n\n/**\n * 判断是否有主键（即所有y轴字段的文件都包含x轴字段）\n * @param {Object} xAxis\n * @param {Array|Object} yAxis\n * @param {FileDataMap} fileDataMap\n * @returns {boolean}\n */\nexport function hasPrimaryKey(xAxis, yAxis, fileDataMap) {\n  if (!xAxis || !xAxis.field) return false;\n  const xField = xAxis.field;\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  return yArr.every(y => {\n    const yFileData = fileDataMap[y.file];\n    return yFileData && yFileData.length > 0 && yFileData[0].hasOwnProperty(xField);\n  });\n}\n\n/**\n * 通用数据提取工具\n */\nfunction getDataRows(fileDataMap, file, skipHeader = true) {\n  const arr = fileDataMap[file] || [];\n  return skipHeader ? arr.slice(1) : arr;\n}\n\n/**\n * 过滤器插件（可扩展）\n */\nexport function applyFiltersToRows(rows, filters, availableFields) {\n  if (!filters || !filters.filters || !Array.isArray(filters.filters) || filters.filters.length === 0) return rows;\n  const logic = filters.logic || 'AND';\n  const conds = filters.filters || [];\n  if (conds.length === 0) return rows;\n  return rows.filter(row => {\n    const results = conds.map(f => {\n      const val = row[f.field];\n      switch (f.type) {\n        case 'integer':\n          {\n            const num = parseFloat(val);\n            const cmp = parseFloat(f.value);\n            if (f.operator === 'eq') return num === cmp;\n            if (f.operator === 'ne') return num !== cmp;\n            if (f.operator === 'gt') return num > cmp;\n            if (f.operator === 'ge') return num >= cmp;\n            if (f.operator === 'lt') return num < cmp;\n            if (f.operator === 'le') return num <= cmp;\n            return true;\n          }\n        case 'string':\n          {\n            const str = String(val ?? '');\n            const cmp = String(f.value ?? '');\n            if (f.operator === 'eq') return str === cmp;\n            if (f.operator === 'ne') return str !== cmp;\n            if (f.operator === 'contains') return str.includes(cmp);\n            if (f.operator === 'notcontains') return !str.includes(cmp);\n            if (f.operator === 'startsWith') return str.startsWith(cmp);\n            if (f.operator === 'endsWith') return str.endsWith(cmp);\n            return true;\n          }\n        case 'category':\n          {\n            if (f.operator === 'eq') return val === f.value;\n            if (f.operator === 'ne') return val !== f.value;\n            if (f.operator === 'in') return Array.isArray(f.value) ? f.value.includes(val) : false;\n            if (f.operator === 'notin') return Array.isArray(f.value) ? !f.value.includes(val) : false;\n            return true;\n          }\n        case 'boolean':\n          {\n            const boolVal = val === true || val === 'true' || val === 1 || val === '1';\n            const cmp = f.value === true || f.value === 'true' || f.value === 1 || f.value === '1';\n            if (f.operator === 'eq') return boolVal === cmp;\n            if (f.operator === 'ne') return boolVal !== cmp;\n            return true;\n          }\n        case 'date':\n          {\n            const dateVal = new Date(val).getTime();\n            const cmp = new Date(f.value).getTime();\n            if (f.operator === 'eq') return dateVal === cmp;\n            if (f.operator === 'ne') return dateVal !== cmp;\n            if (f.operator === 'before') return dateVal < cmp;\n            if (f.operator === 'after') return dateVal > cmp;\n            return true;\n          }\n        default:\n          return true;\n      }\n    });\n    return logic === 'AND' ? results.every(Boolean) : results.some(Boolean);\n  });\n}\n\n/**\n * 缺失值处理插件分发\n */\nexport function getNullHandler(type) {\n  return nullHandling[type] || nullHandling.ignoreNull;\n}\n\n/**\n * 饼图数据处理器\n */\nfunction pieChartHandler(config, fileDataMap, opts) {\n  const {\n    category,\n    value,\n    filter\n  } = config;\n  let catData = getDataRows(fileDataMap, category.file);\n  let valData = getDataRows(fileDataMap, value.file);\n  if (filter && filter.filters && filter.filters.length) {\n    catData = applyFiltersToRows(catData, filter, []);\n    valData = applyFiltersToRows(valData, filter, []);\n  }\n  const len = Math.min(catData.length, valData.length);\n  const result = [];\n  for (let i = 0; i < len; i++) {\n    const name = catData[i][category.field];\n    const rawVal = valData[i][value.field];\n    const parsedVal = parseFloat(rawVal);\n    const val = rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal) ? null : parsedVal;\n    if (name !== undefined && name !== null && name !== '') {\n      result.push({\n        name,\n        value: val\n      });\n    }\n  }\n  return {\n    xData: [],\n    yDataArr: [],\n    mergeType: 'pie',\n    seriesData: result\n  };\n}\n\n/**\n * 折线/柱状图等通用XY型数据处理器\n */\nfunction xyChartHandler(config, fileDataMap, opts) {\n  const {\n    xAxis,\n    yAxis,\n    filter\n  } = config;\n  let mainData = getDataRows(fileDataMap, xAxis.file);\n  if (filter && filter.filters && filter.filters.length) {\n    mainData = applyFiltersToRows(mainData, filter, []);\n  }\n  const xData = mainData.map(row => row[xAxis.field]);\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  const usePrimaryKey = hasPrimaryKey(xAxis, yAxis, fileDataMap);\n  let yDataArr = [];\n  const nullHandler = getNullHandler(opts.nullHandlingType);\n  if (usePrimaryKey) {\n    const mainIndexMap = new Map();\n    for (const row of mainData) {\n      mainIndexMap.set(row[xAxis.field], row);\n    }\n    yDataArr = yArr.map(y => {\n      const yFileData = getDataRows(fileDataMap, y.file);\n      const yMap = new Map();\n      for (const row of yFileData) {\n        yMap.set(row[xAxis.field], row);\n      }\n      let arr = mainData.map(row => {\n        const match = yMap.get(row[xAxis.field]);\n        if (!match) return null;\n        const rawVal = match[y.field];\n        const parsedVal = parseFloat(rawVal);\n        return rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal) ? null : parsedVal;\n      });\n      arr = nullHandler(arr);\n      return arr;\n    });\n  } else {\n    yDataArr = yArr.map(y => {\n      const yFileData = getDataRows(fileDataMap, y.file);\n      let arr = yFileData.filter((row, idx) => mainData[idx]).map(row => {\n        const rawVal = row[y.field];\n        const parsedVal = parseFloat(rawVal);\n        return rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal) ? null : parsedVal;\n      });\n      if (arr.length > xData.length) arr = arr.slice(0, xData.length);\n      while (arr.length < xData.length) arr.push(null);\n      arr = nullHandler(arr);\n      return arr;\n    });\n  }\n  return {\n    xData,\n    yDataArr,\n    mergeType: usePrimaryKey ? 'primaryKey' : 'rowIndex',\n    seriesData: []\n  };\n}\n\n// 图表类型处理器注册表\nconst chartTypeHandlers = {\n  pie: pieChartHandler,\n  line: xyChartHandler,\n  bar: xyChartHandler\n  // 其他类型可继续扩展\n};\n\n/**\n * 主分发函数：合并多文件数据，返回 { xData, yDataArr, mergeType, seriesData }\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {string} [nullHandlingType]\n * @returns {Object}\n */\nexport function mergeChartData(config, fileDataMap, nullHandlingType = 'ignore') {\n  assertConfig(config, fileDataMap);\n  const handler = chartTypeHandlers[config.type];\n  if (!handler) throw new Error(`不支持的图表类型: ${config.type}`);\n  return handler(config, fileDataMap, {\n    nullHandlingType\n  });\n}","map":{"version":3,"names":["nullHandling","assertConfig","config","fileDataMap","Error","type","hasPrimaryKey","xAxis","yAxis","field","xField","yArr","Array","isArray","every","y","yFileData","file","length","hasOwnProperty","getDataRows","skipHeader","arr","slice","applyFiltersToRows","rows","filters","availableFields","logic","conds","filter","row","results","map","f","val","num","parseFloat","cmp","value","operator","str","String","includes","startsWith","endsWith","boolVal","dateVal","Date","getTime","Boolean","some","getNullHandler","ignoreNull","pieChartHandler","opts","category","catData","valData","len","Math","min","result","i","name","rawVal","parsedVal","undefined","Number","isNaN","push","xData","yDataArr","mergeType","seriesData","xyChartHandler","mainData","usePrimaryKey","nullHandler","nullHandlingType","mainIndexMap","Map","set","yMap","match","get","idx","chartTypeHandlers","pie","line","bar","mergeChartData","handler"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/utils/dataMergeUtils.js"],"sourcesContent":["// dataMergeUtils.js\n// 多文件数据合并与主键处理工具函数，支持多图表类型分发、插件化、类型校验\n\n/* eslint-disable */\n\nimport * as nullHandling from './nullHandling.js';\n\n/**\n * @typedef {Object} ChartConfig\n * @property {string} type - 图表类型（如 'pie', 'line', 'bar' 等）\n * @property {Object} [xAxis]\n * @property {Array|Object} [yAxis]\n * @property {Object} [category]\n * @property {Object} [value]\n * @property {Object} [filter]\n */\n\n/**\n * @typedef {Object.<string, Array<Object>>} FileDataMap\n * 文件名到对象数组的映射\n */\n\n/**\n * 类型校验工具\n */\nfunction assertConfig(config, fileDataMap) {\n    if (!config || typeof config !== 'object') throw new Error('config 必须为对象');\n    if (!fileDataMap || typeof fileDataMap !== 'object') throw new Error('fileDataMap 必须为对象');\n    if (!config.type) throw new Error('config.type 必须指定图表类型');\n}\n\n/**\n * 判断是否有主键（即所有y轴字段的文件都包含x轴字段）\n * @param {Object} xAxis\n * @param {Array|Object} yAxis\n * @param {FileDataMap} fileDataMap\n * @returns {boolean}\n */\nexport function hasPrimaryKey(xAxis, yAxis, fileDataMap) {\n    if (!xAxis || !xAxis.field) return false;\n    const xField = xAxis.field;\n    const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n    return yArr.every(y => {\n        const yFileData = fileDataMap[y.file];\n        return yFileData && yFileData.length > 0 && yFileData[0].hasOwnProperty(xField);\n    });\n}\n\n/**\n * 通用数据提取工具\n */\nfunction getDataRows(fileDataMap, file, skipHeader = true) {\n    const arr = fileDataMap[file] || [];\n    return skipHeader ? arr.slice(1) : arr;\n}\n\n/**\n * 过滤器插件（可扩展）\n */\nexport function applyFiltersToRows(rows, filters, availableFields) {\n    if (!filters || !filters.filters || !Array.isArray(filters.filters) || filters.filters.length === 0) return rows;\n    const logic = filters.logic || 'AND';\n    const conds = filters.filters || [];\n    if (conds.length === 0) return rows;\n    return rows.filter(row => {\n        const results = conds.map(f => {\n            const val = row[f.field];\n            switch (f.type) {\n                case 'integer': {\n                    const num = parseFloat(val);\n                    const cmp = parseFloat(f.value);\n                    if (f.operator === 'eq') return num === cmp;\n                    if (f.operator === 'ne') return num !== cmp;\n                    if (f.operator === 'gt') return num > cmp;\n                    if (f.operator === 'ge') return num >= cmp;\n                    if (f.operator === 'lt') return num < cmp;\n                    if (f.operator === 'le') return num <= cmp;\n                    return true;\n                }\n                case 'string': {\n                    const str = String(val ?? '');\n                    const cmp = String(f.value ?? '');\n                    if (f.operator === 'eq') return str === cmp;\n                    if (f.operator === 'ne') return str !== cmp;\n                    if (f.operator === 'contains') return str.includes(cmp);\n                    if (f.operator === 'notcontains') return !str.includes(cmp);\n                    if (f.operator === 'startsWith') return str.startsWith(cmp);\n                    if (f.operator === 'endsWith') return str.endsWith(cmp);\n                    return true;\n                }\n                case 'category': {\n                    if (f.operator === 'eq') return val === f.value;\n                    if (f.operator === 'ne') return val !== f.value;\n                    if (f.operator === 'in') return Array.isArray(f.value) ? f.value.includes(val) : false;\n                    if (f.operator === 'notin') return Array.isArray(f.value) ? !f.value.includes(val) : false;\n                    return true;\n                }\n                case 'boolean': {\n                    const boolVal = val === true || val === 'true' || val === 1 || val === '1';\n                    const cmp = f.value === true || f.value === 'true' || f.value === 1 || f.value === '1';\n                    if (f.operator === 'eq') return boolVal === cmp;\n                    if (f.operator === 'ne') return boolVal !== cmp;\n                    return true;\n                }\n                case 'date': {\n                    const dateVal = new Date(val).getTime();\n                    const cmp = new Date(f.value).getTime();\n                    if (f.operator === 'eq') return dateVal === cmp;\n                    if (f.operator === 'ne') return dateVal !== cmp;\n                    if (f.operator === 'before') return dateVal < cmp;\n                    if (f.operator === 'after') return dateVal > cmp;\n                    return true;\n                }\n                default:\n                    return true;\n            }\n        });\n        return logic === 'AND' ? results.every(Boolean) : results.some(Boolean);\n    });\n}\n\n/**\n * 缺失值处理插件分发\n */\nexport function getNullHandler(type) {\n    return nullHandling[type] || nullHandling.ignoreNull;\n}\n\n/**\n * 饼图数据处理器\n */\nfunction pieChartHandler(config, fileDataMap, opts) {\n    const { category, value, filter } = config;\n    let catData = getDataRows(fileDataMap, category.file);\n    let valData = getDataRows(fileDataMap, value.file);\n    if (filter && filter.filters && filter.filters.length) {\n        catData = applyFiltersToRows(catData, filter, []);\n        valData = applyFiltersToRows(valData, filter, []);\n    }\n    const len = Math.min(catData.length, valData.length);\n    const result = [];\n    for (let i = 0; i < len; i++) {\n        const name = catData[i][category.field];\n        const rawVal = valData[i][value.field];\n        const parsedVal = parseFloat(rawVal);\n        const val = (rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal)) ? null : parsedVal;\n        if (name !== undefined && name !== null && name !== '') {\n            result.push({ name, value: val });\n        }\n    }\n    return { xData: [], yDataArr: [], mergeType: 'pie', seriesData: result };\n}\n\n/**\n * 折线/柱状图等通用XY型数据处理器\n */\nfunction xyChartHandler(config, fileDataMap, opts) {\n    const { xAxis, yAxis, filter } = config;\n    let mainData = getDataRows(fileDataMap, xAxis.file);\n    if (filter && filter.filters && filter.filters.length) {\n        mainData = applyFiltersToRows(mainData, filter, []);\n    }\n    const xData = mainData.map(row => row[xAxis.field]);\n    const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n    const usePrimaryKey = hasPrimaryKey(xAxis, yAxis, fileDataMap);\n    let yDataArr = [];\n    const nullHandler = getNullHandler(opts.nullHandlingType);\n    if (usePrimaryKey) {\n        const mainIndexMap = new Map();\n        for (const row of mainData) {\n            mainIndexMap.set(row[xAxis.field], row);\n        }\n        yDataArr = yArr.map(y => {\n            const yFileData = getDataRows(fileDataMap, y.file);\n            const yMap = new Map();\n            for (const row of yFileData) {\n                yMap.set(row[xAxis.field], row);\n            }\n            let arr = mainData.map(row => {\n                const match = yMap.get(row[xAxis.field]);\n                if (!match) return null;\n                const rawVal = match[y.field];\n                const parsedVal = parseFloat(rawVal);\n                return (rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal)) ? null : parsedVal;\n            });\n            arr = nullHandler(arr);\n            return arr;\n        });\n    } else {\n        yDataArr = yArr.map(y => {\n            const yFileData = getDataRows(fileDataMap, y.file);\n            let arr = yFileData.filter((row, idx) => mainData[idx]).map(row => {\n                const rawVal = row[y.field];\n                const parsedVal = parseFloat(rawVal);\n                return (rawVal === null || rawVal === undefined || rawVal === '' || Number.isNaN(parsedVal)) ? null : parsedVal;\n            });\n            if (arr.length > xData.length) arr = arr.slice(0, xData.length);\n            while (arr.length < xData.length) arr.push(null);\n            arr = nullHandler(arr);\n            return arr;\n        });\n    }\n    return { xData, yDataArr, mergeType: usePrimaryKey ? 'primaryKey' : 'rowIndex', seriesData: [] };\n}\n\n// 图表类型处理器注册表\nconst chartTypeHandlers = {\n    pie: pieChartHandler,\n    line: xyChartHandler,\n    bar: xyChartHandler,\n    // 其他类型可继续扩展\n};\n\n/**\n * 主分发函数：合并多文件数据，返回 { xData, yDataArr, mergeType, seriesData }\n * @param {ChartConfig} config\n * @param {FileDataMap} fileDataMap\n * @param {string} [nullHandlingType]\n * @returns {Object}\n */\nexport function mergeChartData(config, fileDataMap, nullHandlingType = 'ignore') {\n    assertConfig(config, fileDataMap);\n    const handler = chartTypeHandlers[config.type];\n    if (!handler) throw new Error(`不支持的图表类型: ${config.type}`);\n    return handler(config, fileDataMap, { nullHandlingType });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}