{"ast":null,"code":"import { ref, computed, onMounted, onBeforeUnmount } from 'vue';\nconst duration = 1800;\nexport default {\n  __name: 'GaugeChartIcon',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const t = ref(0);\n    let dir = 1,\n      animId = null;\n    const min = Math.PI,\n      max = 0;\n    const pointerAngle = computed(() => min + (max - min) * t.value);\n    const pointerX = computed(() => 60 + 28 * Math.cos(pointerAngle.value));\n    const pointerY = computed(() => 60 - 28 * Math.sin(pointerAngle.value));\n    function animateGauge(ts) {\n      if (!animateGauge.last) animateGauge.last = ts;\n      const dt = ts - animateGauge.last;\n      animateGauge.last = ts;\n      t.value += dir * dt / duration;\n      if (t.value > 1) t.value = 1;\n      if (t.value < 0) t.value = 0;\n      if (dir === 1 && t.value >= 1 || dir === -1 && t.value <= 0) {\n        setTimeout(() => {\n          dir *= -1;\n          animateGauge.last = undefined;\n          animId = requestAnimationFrame(animateGauge);\n        }, 320);\n        return;\n      }\n      animId = requestAnimationFrame(animateGauge);\n    }\n    onMounted(() => {\n      t.value = 0;\n      dir = 1;\n      animId = requestAnimationFrame(animateGauge);\n    });\n    onBeforeUnmount(() => {\n      if (animId) cancelAnimationFrame(animId);\n    });\n    const __returned__ = {\n      t,\n      get dir() {\n        return dir;\n      },\n      set dir(v) {\n        dir = v;\n      },\n      get animId() {\n        return animId;\n      },\n      set animId(v) {\n        animId = v;\n      },\n      duration,\n      min,\n      max,\n      pointerAngle,\n      pointerX,\n      pointerY,\n      animateGauge,\n      ref,\n      computed,\n      onMounted,\n      onBeforeUnmount\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onBeforeUnmount","duration","t","dir","animId","min","Math","PI","max","pointerAngle","value","pointerX","cos","pointerY","sin","animateGauge","ts","last","dt","setTimeout","undefined","requestAnimationFrame","cancelAnimationFrame"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/svg/GaugeChartIcon.vue"],"sourcesContent":["<template>\n<svg width=\"150\" height=\"120\" viewBox=\"0 0 120 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"empty-gauge-svg\">\n    <g>\n        <!-- 仪表盘弧形 -->\n        <path class=\"gauge-arc\" d=\"M30,60 A30,30 0 0,1 90,60\" />\n        <!-- 动态指针 -->\n        <line class=\"gauge-pointer\" :x1=\"60\" :y1=\"60\" :x2=\"pointerX\" :y2=\"pointerY\" />\n        <!-- 圆心 -->\n        <circle cx=\"60\" cy=\"60\" r=\"4\" fill=\"#FFB300\" />\n    </g>\n</svg>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue'\nconst t = ref(0)\nlet dir = 1, animId = null\nconst duration = 1800\nconst min = Math.PI, max = 0\nconst pointerAngle = computed(() => min + (max-min)*t.value)\nconst pointerX = computed(() => 60 + 28*Math.cos(pointerAngle.value))\nconst pointerY = computed(() => 60 - 28*Math.sin(pointerAngle.value))\nfunction animateGauge(ts) {\n    if (!animateGauge.last) animateGauge.last = ts\n    const dt = ts - animateGauge.last\n    animateGauge.last = ts\n    t.value += dir * dt / duration\n    if (t.value > 1) t.value = 1\n    if (t.value < 0) t.value = 0\n    if ((dir === 1 && t.value >= 1) || (dir === -1 && t.value <= 0)) {\n        setTimeout(() => {\n        dir *= -1\n        animateGauge.last = undefined\n        animId = requestAnimationFrame(animateGauge)\n        }, 320)\n        return\n    }\n    animId = requestAnimationFrame(animateGauge)\n}\nonMounted(() => { t.value = 0; dir = 1; animId = requestAnimationFrame(animateGauge) })\nonBeforeUnmount(() => { if (animId) cancelAnimationFrame(animId) })\n</script>\n<style scoped>\n.empty-gauge-svg { display: block; margin: 0 auto; animation: floatX 4.2s ease-in-out infinite; }\n.gauge-arc {\n    fill: none;\n    stroke: #A0C4FF;\n    stroke-width: 7;\n    opacity: 0.18;\n}\n.gauge-pointer {\n    stroke: #4F8EF7;\n    stroke-width: 5;\n    stroke-linecap: round;\n    opacity: 0.7;\n    transition: x2 0.32s, y2 0.32s, opacity 0.32s;\n}\n@keyframes floatX {\n    0% { transform: translateY(0) translateX(0); }\n    25% { transform: translateY(-8px) translateX(4px); }\n    50% { transform: translateY(-12px) translateX(-4px); }\n    75% { transform: translateY(-8px) translateX(4px); }\n    100% { transform: translateY(0) translateX(0); }\n}\n</style>\n"],"mappings":"AAeA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAe,QAAQ,KAAI;AAG9D,MAAMC,QAAQ,GAAG,IAAG;;;;;;;;IAJpB;IAEA,MAAMC,CAAC,GAAGL,GAAG,CAAC,CAAC;IACf,IAAIM,GAAG,GAAG,CAAC;MAAEC,MAAM,GAAG,IAAG;IAEzB,MAAMC,GAAG,GAAGC,IAAI,CAACC,EAAE;MAAEC,GAAG,GAAG;IAC3B,MAAMC,YAAY,GAAGX,QAAQ,CAAC,MAAMO,GAAG,GAAG,CAACG,GAAG,GAACH,GAAG,IAAEH,CAAC,CAACQ,KAAK;IAC3D,MAAMC,QAAQ,GAAGb,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE,GAACQ,IAAI,CAACM,GAAG,CAACH,YAAY,CAACC,KAAK,CAAC;IACpE,MAAMG,QAAQ,GAAGf,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE,GAACQ,IAAI,CAACQ,GAAG,CAACL,YAAY,CAACC,KAAK,CAAC;IACpE,SAASK,YAAYA,CAACC,EAAE,EAAE;MACtB,IAAI,CAACD,YAAY,CAACE,IAAI,EAAEF,YAAY,CAACE,IAAI,GAAGD,EAAC;MAC7C,MAAME,EAAE,GAAGF,EAAE,GAAGD,YAAY,CAACE,IAAG;MAChCF,YAAY,CAACE,IAAI,GAAGD,EAAC;MACrBd,CAAC,CAACQ,KAAK,IAAIP,GAAG,GAAGe,EAAE,GAAGjB,QAAO;MAC7B,IAAIC,CAAC,CAACQ,KAAK,GAAG,CAAC,EAAER,CAAC,CAACQ,KAAK,GAAG;MAC3B,IAAIR,CAAC,CAACQ,KAAK,GAAG,CAAC,EAAER,CAAC,CAACQ,KAAK,GAAG;MAC3B,IAAKP,GAAG,KAAK,CAAC,IAAID,CAAC,CAACQ,KAAK,IAAI,CAAC,IAAMP,GAAG,KAAK,CAAC,CAAC,IAAID,CAAC,CAACQ,KAAK,IAAI,CAAE,EAAE;QAC7DS,UAAU,CAAC,MAAM;UACjBhB,GAAG,IAAI,CAAC;UACRY,YAAY,CAACE,IAAI,GAAGG,SAAQ;UAC5BhB,MAAM,GAAGiB,qBAAqB,CAACN,YAAY;QAC3C,CAAC,EAAE,GAAG;QACN;MACJ;MACAX,MAAM,GAAGiB,qBAAqB,CAACN,YAAY;IAC/C;IACAhB,SAAS,CAAC,MAAM;MAAEG,CAAC,CAACQ,KAAK,GAAG,CAAC;MAAEP,GAAG,GAAG,CAAC;MAAEC,MAAM,GAAGiB,qBAAqB,CAACN,YAAY,CAAC;IAAC,CAAC;IACtFf,eAAe,CAAC,MAAM;MAAE,IAAII,MAAM,EAAEkB,oBAAoB,CAAClB,MAAM,CAAC;IAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}