{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-config-panel\"\n};\nconst _hoisted_2 = {\n  class: \"panel-header-CCP\",\n  style: {\n    \"position\": \"relative\",\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_3 = [\"innerHTML\"];\nconst _hoisted_4 = {\n  class: \"chart-type-name\"\n};\nconst _hoisted_5 = {\n  class: \"mapping-section-toggle-wrapper\"\n};\nconst _hoisted_6 = {\n  class: \"echarts-option-preview\",\n  style: {\n    \"margin\": \"16px 0\",\n    \"padding\": \"8px 12px\",\n    \"background\": \"#f7f7fa\",\n    \"border-radius\": \"6px\",\n    \"font-size\": \"13px\",\n    \"color\": \"#666\"\n  }\n};\nconst _hoisted_7 = {\n  style: {\n    \"white-space\": \"pre-wrap\",\n    \"word-break\": \"break-all\",\n    \"background\": \"none\",\n    \"color\": \"#444\",\n    \"margin\": \"0\"\n  }\n};\nconst _hoisted_8 = {\n  key: 0,\n  style: {\n    \"margin-top\": \"8px\"\n  }\n};\nconst _hoisted_9 = {\n  style: {\n    \"white-space\": \"pre-wrap\",\n    \"word-break\": \"break-all\",\n    \"background\": \"none\",\n    \"color\": \"#444\",\n    \"margin\": \"0\"\n  }\n};\nconst _hoisted_10 = {\n  class: \"action-section\"\n};\nconst _hoisted_11 = [\"disabled\"];\nconst _hoisted_12 = {\n  key: 2,\n  class: \"error-message\"\n};\nconst _hoisted_13 = {\n  class: \"error-text\"\n};\nconst _hoisted_14 = {\n  class: \"tooltip-header\"\n};\nconst _hoisted_15 = {\n  class: \"tooltip-title\"\n};\nconst _hoisted_16 = {\n  class: \"tooltip-description\"\n};\nconst _hoisted_17 = {\n  class: \"tooltip-section\"\n};\nconst _hoisted_18 = {\n  class: \"tooltip-tags\"\n};\nconst _hoisted_19 = {\n  class: \"tooltip-section\"\n};\nconst _hoisted_20 = {\n  class: \"tooltip-tags\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 右侧边栏总标题 \"), _createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", {\n    style: {\n      \"margin\": \"0\"\n    }\n  }, \" Chart Configuration \", -1 /* HOISTED */)), _createCommentVNode(\" 图表类型及相关提示 \"), _createElementVNode(\"div\", {\n    class: \"chart-type-tag\",\n    onMouseenter: _cache[0] || (_cache[0] = $event => $setup.showTooltip($event, $setup.props.selectedChartType)),\n    onMouseleave: $setup.hideTooltip,\n    style: {\n      \"position\": \"relative\",\n      \"max-width\": \"50%\",\n      \"white-space\": \"normal\",\n      \"word-break\": \"break-all\",\n      \"text-align\": \"right\",\n      \"right\": \"0\",\n      \"margin-right\": \"3%\"\n    }\n  }, [_createElementVNode(\"span\", {\n    class: \"chart-type-icon\",\n    innerHTML: $setup.getChartIcon($props.selectedChartType)\n  }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"span\", _hoisted_4, _toDisplayString($props.selectedChartType), 1 /* TEXT */)], 32 /* NEED_HYDRATION */)]), _createCommentVNode(\" 动态数据映射配置区域 \"), _createElementVNode(\"div\", _hoisted_5, [$setup.currentTypeConfig.mapping ? (_openBlock(), _createBlock($setup[\"ChartMappingConfig\"], {\n    key: 0,\n    mappingConfig: $setup.currentTypeConfig.mapping,\n    modelValue: $setup.chartConfig,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.chartConfig = $event)\n  }, {\n    \"title-append\": _withCtx(() => [_createCommentVNode(\" 自动渲染开关 \"), _createVNode($setup[\"AutoRenderToggle\"], {\n      modelValue: $setup.autoRender,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.autoRender = $event)\n    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"mappingConfig\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 动态数据过滤配置区域 \"), $setup.currentTypeConfig.filter && $setup.currentTypeConfig.filter.length ? (_openBlock(), _createBlock($setup[\"ChartFilterConfig\"], {\n    key: 0,\n    filterConfig: $setup.currentTypeConfig.filter,\n    modelValue: $setup.chartConfig.filter,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.chartConfig.filter = $event)\n  }, null, 8 /* PROPS */, [\"filterConfig\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 动态高级配置区域 \"), $setup.currentTypeConfig.advanced && $setup.currentTypeConfig.advanced.length ? (_openBlock(), _createBlock($setup[\"ChartAdvancedConfig\"], {\n    key: 1,\n    advancedConfig: $setup.currentTypeConfig.advanced,\n    modelValue: $setup.chartConfig,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.chartConfig = $event)\n  }, null, 8 /* PROPS */, [\"advancedConfig\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" ECharts option 相关配置项预览（调试/高级用户可见） \"), _createElementVNode(\"div\", _hoisted_6, [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    style: {\n      \"font-weight\": \"bold\",\n      \"margin-bottom\": \"4px\"\n    }\n  }, \"ECharts Option 预览（只读）\", -1 /* HOISTED */)), _cache[8] || (_cache[8] = _createElementVNode(\"div\", null, [_createElementVNode(\"b\", null, \"当前配置项：\")], -1 /* HOISTED */)), _createElementVNode(\"pre\", _hoisted_7, _toDisplayString(JSON.stringify($setup.chartConfig, null, 2)), 1 /* TEXT */), $setup.chartConfig.filter && $setup.chartConfig.filter.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_cache[6] || (_cache[6] = _createElementVNode(\"b\", null, \"Filter 配置：\", -1 /* HOISTED */)), _createElementVNode(\"pre\", _hoisted_9, _toDisplayString(JSON.stringify($setup.chartConfig.filter, null, 2)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 操作按钮 \"), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    class: \"apply-btn\",\n    disabled: $setup.autoRender || !$setup.isConfigValid,\n    onClick: $setup.generateChart\n  }, \" Apply Configuration \", 8 /* PROPS */, _hoisted_11), _createElementVNode(\"button\", {\n    class: \"reset-btn\",\n    onClick: $setup.resetConfig\n  }, \" Reset Configuration \")]), _createCommentVNode(\" 错误提示 \"), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, _toDisplayString($setup.errorMessage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 提示框 \"), $setup.tooltip.visible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 3,\n    class: \"chart-tooltip\",\n    style: _normalizeStyle($setup.tooltip.style),\n    ref: \"tooltipRef\"\n  }, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"span\", _hoisted_15, _toDisplayString($setup.tooltip.type), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_16, _toDisplayString($setup.tooltip.description), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_17, [_cache[9] || (_cache[9] = _createElementVNode(\"h4\", null, \"Data Requirements\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_18, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tooltip.dataRequirements, requirement => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: requirement,\n      class: \"tooltip-tag data-tag\"\n    }, _toDisplayString(requirement), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_19, [_cache[10] || (_cache[10] = _createElementVNode(\"h4\", null, \"Use Cases\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_20, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tooltip.useCases, useCase => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: useCase,\n      class: \"tooltip-tag use-case-tag\"\n    }, _toDisplayString(useCase), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","style","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","onMouseenter","_cache","$event","$setup","showTooltip","props","selectedChartType","onMouseleave","hideTooltip","innerHTML","getChartIcon","$props","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","currentTypeConfig","mapping","_createBlock","mappingConfig","modelValue","chartConfig","_withCtx","_createVNode","autoRender","_","filter","length","filterConfig","advanced","advancedConfig","_hoisted_6","_hoisted_7","JSON","stringify","_hoisted_8","_hoisted_9","_hoisted_10","disabled","isConfigValid","onClick","generateChart","_hoisted_11","resetConfig","errorMessage","_hoisted_12","_hoisted_13","tooltip","visible","_normalizeStyle","ref","_hoisted_14","_hoisted_15","type","_hoisted_16","description","_hoisted_17","_hoisted_18","_Fragment","_renderList","dataRequirements","requirement","_hoisted_19","_hoisted_20","useCases","useCase"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\Chart\\ChartConfigPanel.vue"],"sourcesContent":["<template>\n<div class=\"chart-config-panel\">\n    <!-- 右侧边栏总标题 -->\n    <div class=\"panel-header-CCP\" style=\"position: relative; display: flex; align-items: center; justify-content: space-between;\">\n        <h3 style=\"margin: 0;\">\n            Chart Configuration\n        </h3>\n        <!-- 图表类型及相关提示 -->\n        <div\n            class=\"chart-type-tag\"\n            @mouseenter=\"showTooltip($event, props.selectedChartType)\"\n            @mouseleave=\"hideTooltip\"\n            style=\"position: relative; max-width: 50%; white-space: normal; word-break: break-all; text-align: right; right: 0; margin-right: 3%;\"\n        >\n            <span class=\"chart-type-icon\" v-html=\"getChartIcon(selectedChartType)\"></span>\n            <span class=\"chart-type-name\">{{ selectedChartType }}</span>\n        </div>\n    </div>\n\n    <!-- 动态数据映射配置区域 -->\n    <div class=\"mapping-section-toggle-wrapper\">\n        <ChartMappingConfig\n            v-if=\"currentTypeConfig.mapping\"\n            :mappingConfig=\"currentTypeConfig.mapping\"\n            v-model=\"chartConfig\"\n        >\n            <template #title-append>\n            <!-- 自动渲染开关 -->\n            <AutoRenderToggle v-model=\"autoRender\" />\n            </template>\n        </ChartMappingConfig>\n    </div>\n\n    <!-- 动态数据过滤配置区域 -->\n    <ChartFilterConfig\n        v-if=\"currentTypeConfig.filter && currentTypeConfig.filter.length\"\n        :filterConfig=\"currentTypeConfig.filter\"\n        v-model=\"chartConfig.filter\"\n    />\n\n    <!-- 动态高级配置区域 -->\n    <ChartAdvancedConfig\n        v-if=\"currentTypeConfig.advanced && currentTypeConfig.advanced.length\"\n        :advancedConfig=\"currentTypeConfig.advanced\"\n        v-model=\"chartConfig\"\n    />\n\n    <!-- ECharts option 相关配置项预览（调试/高级用户可见） -->\n    <div class=\"echarts-option-preview\" style=\"margin: 16px 0; padding: 8px 12px; background: #f7f7fa; border-radius: 6px; font-size: 13px; color: #666;\">\n      <div style=\"font-weight: bold; margin-bottom: 4px;\">ECharts Option 预览（只读）</div>\n      <div><b>当前配置项：</b></div>\n      <pre style=\"white-space: pre-wrap; word-break: break-all; background: none; color: #444; margin: 0;\">{{ JSON.stringify(chartConfig, null, 2) }}</pre>\n      <div v-if=\"chartConfig.filter && chartConfig.filter.length\" style=\"margin-top: 8px;\">\n        <b>Filter 配置：</b>\n        <pre style=\"white-space: pre-wrap; word-break: break-all; background: none; color: #444; margin: 0;\">{{ JSON.stringify(chartConfig.filter, null, 2) }}</pre>\n      </div>\n    </div>\n\n    <!-- 操作按钮 -->\n    <div class=\"action-section\">\n        <button\n        class=\"apply-btn\"\n        :disabled=\"autoRender || !isConfigValid\"\n        @click=\"generateChart\"\n        >\n        Apply Configuration\n        </button>\n        <button class=\"reset-btn\" @click=\"resetConfig\">\n        Reset Configuration\n        </button>\n    </div>\n\n    <!-- 错误提示 -->\n    <div v-if=\"errorMessage\" class=\"error-message\">\n        <div class=\"error-text\">{{ errorMessage }}</div>\n    </div>\n\n    <!-- 提示框 -->\n    <div\n        v-if=\"tooltip.visible\"\n        class=\"chart-tooltip\"\n        :style=\"tooltip.style\"\n        ref=\"tooltipRef\"\n    >\n        <div class=\"tooltip-header\">\n            <span class=\"tooltip-title\">{{ tooltip.type }}</span>\n            <span class=\"tooltip-description\">{{ tooltip.description }}</span>\n        </div>\n        <div class=\"tooltip-section\">\n            <h4>Data Requirements</h4>\n            <div class=\"tooltip-tags\">\n                <span\n                    v-for=\"requirement in tooltip.dataRequirements\"\n                    :key=\"requirement\"\n                    class=\"tooltip-tag data-tag\"\n                >\n                    {{ requirement }}\n                </span>\n            </div>\n        </div>\n        <div class=\"tooltip-section\">\n            <h4>Use Cases</h4>\n            <div class=\"tooltip-tags\">\n                <span\n                    v-for=\"useCase in tooltip.useCases\"\n                    :key=\"useCase\"\n                    class=\"tooltip-tag use-case-tag\"\n                >\n                    {{ useCase }}\n                </span>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch, reactive, nextTick } from 'vue'\nimport { chartIcons } from '../../assets/JS/SVG/chartIcons.js'\nimport { chartsTooltipConfig } from '../../assets/JS/Config/ChartsTooltipConfig.js'\nimport { chartTypeConfig } from '../../assets/JS/Config/ChartTypeConfig.js'\nimport AutoRenderToggle from '../Common/AutoRenderToggle.vue'\nimport { getThemeIcon } from '@/assets/JS/SVG/icons.js'\nimport ChartMappingConfig from './ChartMappingConfig.vue'\nimport ChartFilterConfig from './ChartFilterConfig.vue'\nimport ChartAdvancedConfig from './ChartAdvancedConfig.vue'\n\n// 当前类型的配置\nconst currentTypeConfig = computed(() => {\n  // 兼容首字母大写/小写\n    return chartTypeConfig[props.selectedChartType] || chartTypeConfig[props.selectedChartType.charAt(0).toUpperCase() + props.selectedChartType.slice(1)] || {}\n})\n\n// Props\nconst props = defineProps({\n    selectedChartType: {\n        type: String,\n        default: 'line'\n    },\n    currentFile: {\n        type: Object,\n        default: null\n    }\n})\n\n// Emits\nconst emit = defineEmits(['config-change', 'generate-chart'])\n\n// 响应式数据\nconst showDataFilter = ref(false)\nconst showAdvancedConfig = ref(false)\nconst errorMessage = ref('')\nconst tooltipRef = ref(null)\n\n// 自动渲染开关，默认手动渲染\nconst autoRender = ref(false)\n\n// 提示框状态\nconst tooltip = reactive({\n    visible: false,\n    type: '',\n    description: '',\n    dataRequirements: [],\n    useCases: [],\n    style: {}\n})\n\nlet tooltipTimeout = null\n\n// 拖拽状态\nconst isDragOver = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\nconst dragError = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\n// 图表配置，支持 filter 字段\nconst chartConfig = ref({\n    xAxis: {\n        field: '',\n        type: ''\n    },\n    yAxis: {\n        field: '',\n        type: ''\n    },\n    series: [],\n    title: '',\n    colorScheme: 'default',\n    animation: true,\n    dataRange: 'all',\n    nullHandling: 'ignore',\n    filter: [] // 用于 ECharts 5 filter 语法\n})\n\n// 计算属性\nconst isConfigValid = computed(() => {\n    const xValid = chartConfig.value.xAxis && chartConfig.value.xAxis.field;\n    const y = chartConfig.value.yAxis;\n    const yValid = Array.isArray(y) ? y.length > 0 : (y && y.field);\n    return xValid && yValid;\n})\n\n// 监听 chartConfig 变化，自动渲染\nwatch(chartConfig, (val) => {\n    if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n    console.log('Current chartConfig:', JSON.parse(JSON.stringify(val)))\n}, { deep: true })\n\n// 监听自动渲染开关变化，切换为实时时立即渲染\nwatch(autoRender, (val) => {\n    if (val && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n})\n\nfunction getChartIcon (type) {\n    // 直接使用传入的类型，chartIcons.js 中的键是首字母大写格式\n    return chartIcons[type] || ''\n}\n\nfunction toggleDataFilter() {\n    showDataFilter.value = !showDataFilter.value\n}\n\nfunction toggleAdvancedConfig() {\n    showAdvancedConfig.value = !showAdvancedConfig.value\n}\n\n// 显示提示框\nfunction showTooltip(event, type) {\n    // 清除之前的定时器\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n    }\n    \n    // 设置1.2秒延迟\n    tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type]\n        if (config) {\n            tooltip.type = type\n            tooltip.description = config.description\n            tooltip.dataRequirements = config.dataRequirements\n            tooltip.useCases = config.useCases\n            tooltip.visible = true\n            \n            // 在下一个tick中计算位置，确保DOM已更新\n            nextTick(() => {\n                positionTooltip(event)\n            })\n        }\n    }, 1200) // 1.2秒延迟\n}\n\n// 隐藏提示框\nfunction hideTooltip() {\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n        tooltipTimeout = null\n    }\n    tooltip.visible = false\n}\n\n// 计算提示框位置，确保不超出屏幕\nfunction positionTooltip(event) {\n    if (!tooltipRef.value) return\n    \n    const tooltipEl = tooltipRef.value\n    const rect = tooltipEl.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    \n    let left = event.pageX + 10\n    let top = event.pageY + 10\n    \n    // 防止右边超出屏幕\n    if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10\n    }\n    \n    // 防止底部超出屏幕\n    if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10\n    }\n    \n    // 防止左边超出屏幕\n    if (left < 0) {\n        left = 10\n    }\n    \n    // 防止顶部超出屏幕\n    if (top < 0) {\n        top = 10\n    }\n    \n    tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n    }\n}\n\n// 拖拽处理\nfunction handleDragEnter (target) {\n    isDragOver.value[target] = true\n    dragError.value[target] = false\n    }\n\nfunction handleDragLeave (target) {\n    isDragOver.value[target] = false\n}\n\nfunction handleDragOver (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = true\n}\n\nfunction handleDrop (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = false\n\n    try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'))\n\n        if (dragData.type === 'column') {\n        const column = dragData.column\n\n        // 验证数据类型是否适合目标区域\n        if (validateColumnForTarget(column, target)) {\n            mapColumnToTarget(column, target)\n            errorMessage.value = ''\n        } else {\n            dragError.value[target] = true\n            errorMessage.value = `Column \"${column.name}\" data type is not suitable for ${getTargetName(target)}`\n            setTimeout(() => {\n            dragError.value[target] = false\n            errorMessage.value = ''\n            }, 3000)\n        }\n        }\n    } catch (error) {\n        console.error('Drop failed:', error)\n        errorMessage.value = 'Drag and drop failed, please try again'\n    }\n}\n\nfunction validateColumnForTarget (column, target) {\n    const columnType = column.type\n\n    switch (target) {\n        case 'xAxis':\n        // X轴通常接受类别型数据\n        return ['string', 'category', 'date'].includes(columnType)\n        case 'yAxis':\n        // Y轴通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        case 'series':\n        // 系列数据通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        default:\n        return true\n    }\n}\n\nfunction mapColumnToTarget (column, target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'series':\n        // 系列可以有多个，但这里简化为单个\n        chartConfig.value.series = [{\n            field: column.name,\n            type: column.type\n        }]\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeMapping (target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = { field: '', type: '' }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = { field: '', type: '' }\n        break\n        case 'series':\n        chartConfig.value.series = []\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeSeriesMapping (index) {\n    chartConfig.value.series.splice(index, 1)\n    emit('config-change', chartConfig.value)\n}\n\nfunction getTargetName (target) {\n    const names = {\n        xAxis: 'X Axis',\n        yAxis: 'Y Axis',\n        series: 'Data Series'\n    }\n    return names[target] || target\n}\n\nfunction generateChart () {\n    if (!isConfigValid.value) {\n        errorMessage.value = 'Please complete the required data mapping configuration'\n        return\n    }\n\n    emit('generate-chart', chartConfig.value)\n}\n\nfunction resetConfig () {\n    chartConfig.value = {\n        xAxis: { field: '', type: '' },\n        yAxis: { field: '', type: '' },\n        series: [],\n        title: '',\n        colorScheme: 'default',\n        animation: true,\n        dataRange: 'all',\n        nullHandling: 'ignore'\n    }\n\n    errorMessage.value = ''\n    emit('config-change', chartConfig.value)\n}\n\n// 监听图表类型变化\nwatch(() => props.selectedChartType, (newType) => {\n    // 根据图表类型调整配置\n    if (newType === 'Pie' || newType === 'pie') {\n        // 饼图不需要Y轴\n        chartConfig.value.yAxis = { field: '', type: '' }\n    }\n    // 自动渲染开启时，切换类型后立即触发渲染\n    if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n})\n</script>\n\n<style scoped>\n\n@import '../../assets/CSS/ChartConfigPanel.css';\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}