{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"preview-content\"\n};\nconst _hoisted_2 = {\n  class: \"preview-header\"\n};\nconst _hoisted_3 = {\n  class: \"header-info\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"file-info\"\n};\nconst _hoisted_5 = {\n  class: \"preview-table-wrapper\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"table-container\"\n};\nconst _hoisted_7 = {\n  class: \"preview-table\"\n};\nconst _hoisted_8 = [\"title\"];\nconst _hoisted_9 = {\n  class: \"row-number\"\n};\nconst _hoisted_10 = [\"title\"];\nconst _hoisted_11 = {\n  key: 1,\n  class: \"empty-tip\"\n};\nimport { computed } from 'vue';\nimport { getCellValue, formatFileSize } from '@/assets/JS/utils/dataPreviewUtils.js';\nexport default {\n  __name: 'DataPreviewModal',\n  props: {\n    show: Boolean,\n    currentFile: Object,\n    previewData: {\n      type: Array,\n      default: () => []\n    },\n    isSidePreview: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['close'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    /* eslint-disable */\n    const props = __props;\n    const emit = __emit;\n\n    // 表头计算 - 修复数据类型处理逻辑\n    const tableHeaders = computed(() => {\n      if (!props.previewData.length) return [];\n      const firstRow = props.previewData[0];\n      if (Array.isArray(firstRow)) {\n        return firstRow;\n      } else if (typeof firstRow === 'object' && firstRow !== null) {\n        return Object.keys(firstRow);\n      }\n      return [];\n    });\n\n    // 实际数据行（根据数据类型决定是否排除标题行）\n    const dataRows = computed(() => {\n      if (!props.previewData.length) return [];\n      const firstRow = props.previewData[0];\n      if (Array.isArray(firstRow)) {\n        return props.previewData.slice(1);\n      } else if (typeof firstRow === 'object' && firstRow !== null) {\n        return props.previewData;\n      }\n      return props.previewData;\n    });\n    function onClose() {\n      emit('close');\n    }\n    return (_ctx, _cache) => {\n      return _openBlock(), _createBlock(_Transition, {\n        name: \"modal-fade\"\n      }, {\n        default: _withCtx(() => [__props.show ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"preview-modal\",\n          onClick: _withModifiers(onClose, [\"self\"])\n        }, [_createVNode(_Transition, {\n          name: \"modal-slide\",\n          appear: \"\"\n        }, {\n          default: _withCtx(() => [__props.show ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h3\", null, _toDisplayString(__props.currentFile?.name || 'Data Preview'), 1), __props.currentFile ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString(_unref(formatFileSize)(__props.currentFile.size)) + \" | \" + _toDisplayString(__props.currentFile.rows || 0) + \" row × \" + _toDisplayString(__props.currentFile.columns || 0) + \" column (Only first 100 rows shown) \", 1)) : _createCommentVNode(\"\", true)]), _createElementVNode(\"button\", {\n            class: \"close-btn\",\n            onClick: onClose\n          }, \"×\")]), _createElementVNode(\"div\", _hoisted_5, [dataRows.value.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"table\", _hoisted_7, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"th\", {\n            class: \"row-number\"\n          }, \"#\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(tableHeaders.value, (header, idx) => {\n            return _openBlock(), _createElementBlock(\"th\", {\n              key: idx,\n              title: String(header).length > 12 ? String(header) : '',\n              class: \"column-header\"\n            }, _toDisplayString(String(header)), 9, _hoisted_8);\n          }), 128))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dataRows.value, (row, idx) => {\n            return _openBlock(), _createElementBlock(\"tr\", {\n              key: idx\n            }, [_createElementVNode(\"td\", _hoisted_9, _toDisplayString(idx + 1), 1), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(tableHeaders.value, (header, headerIdx) => {\n              return _openBlock(), _createElementBlock(\"td\", {\n                key: headerIdx,\n                title: _unref(getCellValue)(row, header, headerIdx)\n              }, _toDisplayString(_unref(getCellValue)(row, header, headerIdx)), 9, _hoisted_10);\n            }), 128))]);\n          }), 128))])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _cache[1] || (_cache[1] = [_createElementVNode(\"div\", {\n            class: \"empty-icon\"\n          }, \"📊\", -1), _createElementVNode(\"p\", null, \"No data available...\", -1)])))])])) : _createCommentVNode(\"\", true)]),\n          _: 1\n        })])) : _createCommentVNode(\"\", true)]),\n        _: 1\n      });\n    };\n  }\n};","map":{"version":3,"names":["computed","getCellValue","formatFileSize","props","__props","emit","__emit","tableHeaders","previewData","length","firstRow","Array","isArray","Object","keys","dataRows","slice","onClose"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/Common/DataPreviewModal.vue"],"sourcesContent":["<template>\n<transition name=\"modal-fade\">\n    <div v-if=\"show\"\n        class=\"preview-modal\"\n        @click.self=\"onClose\">\n        <transition name=\"modal-slide\" appear>\n            <div class=\"preview-content\" v-if=\"show\">\n                <!-- 头部 -->\n                <div class=\"preview-header\">\n                    <div class=\"header-info\">\n                        <h3>{{ currentFile?.name || 'Data Preview' }}</h3>\n                        <span class=\"file-info\" v-if=\"currentFile\">\n                            {{ formatFileSize(currentFile.size) }} |\n                            {{ currentFile.rows || 0 }} row × {{ currentFile.columns || 0 }} column (Only first 100 rows shown)\n                        </span>\n                    </div>\n                    <button class=\"close-btn\" @click=\"onClose\">×</button>\n                </div>\n\n                <!-- 数据表格预览 -->\n                <div class=\"preview-table-wrapper\">\n                    <div v-if=\"dataRows.length\" class=\"table-container\">\n                        <table class=\"preview-table\">\n                            <thead>\n                                <tr>\n                                    <th class=\"row-number\">#</th>\n                                    <th v-for=\"(header, idx) in tableHeaders\"\n                                        :key=\"idx\"\n                                        :title=\"String(header).length > 12 ? String(header) : ''\"\n                                        class=\"column-header\">{{ String(header) }}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"(row, idx) in dataRows\"\n                                    :key=\"idx\">\n                                    <td class=\"row-number\">{{ idx + 1 }}</td>\n                                    <td v-for=\"(header, headerIdx) in tableHeaders\"\n                                        :key=\"headerIdx\"\n                                        :title=\"getCellValue(row, header, headerIdx)\">\n                                        {{ getCellValue(row, header, headerIdx) }}\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div v-else class=\"empty-tip\">\n                        <div class=\"empty-icon\">📊</div>\n                        <p>No data available...</p>\n                    </div>\n                </div>\n            </div>\n        </transition>\n    </div>\n</transition>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { computed } from 'vue'\nimport { getCellValue, formatFileSize } from '@/assets/JS/utils/dataPreviewUtils.js'\n\nconst props = defineProps({\n    show: Boolean,\n    currentFile: Object,\n    previewData: {\n        type: Array,\n        default: () => []\n    },\n    isSidePreview: {\n        type: Boolean,\n        default: false\n    }\n})\n\nconst emit = defineEmits(['close'])\n\n// 表头计算 - 修复数据类型处理逻辑\nconst tableHeaders = computed(() => {\n    if (!props.previewData.length) return []\n    const firstRow = props.previewData[0]\n    if (Array.isArray(firstRow)) {\n        return firstRow\n    } else if (typeof firstRow === 'object' && firstRow !== null) {\n        return Object.keys(firstRow)\n    }\n    return []\n})\n\n// 实际数据行（根据数据类型决定是否排除标题行）\nconst dataRows = computed(() => {\n    if (!props.previewData.length) return []\n    const firstRow = props.previewData[0]\n    if (Array.isArray(firstRow)) {\n        return props.previewData.slice(1)\n    } else if (typeof firstRow === 'object' && firstRow !== null) {\n        return props.previewData\n    }\n    return props.previewData\n})\n\nfunction onClose() {\n    emit('close')\n}\n</script>\n\n<style scoped>\n@import '../../assets/CSS/DataPreviewModal.css';\n</style>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA,SAASA,QAAQ,QAAQ,KAAI;AAC7B,SAASC,YAAY,EAAEC,cAAc,QAAQ,uCAAsC;;;;;;;;;;;;;;;;;;;IAFnF;IAIA,MAAMC,KAAK,GAAGC,OAAA;IAad,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,YAAY,GAAGP,QAAQ,CAAC,MAAM;MAChC,IAAI,CAACG,KAAK,CAACK,WAAW,CAACC,MAAM,EAAE,OAAO,EAAC;MACvC,MAAMC,QAAQ,GAAGP,KAAK,CAACK,WAAW,CAAC,CAAC;MACpC,IAAIG,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;QACzB,OAAOA,QAAO;MAClB,CAAC,MAAM,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,KAAK,IAAI,EAAE;QAC1D,OAAOG,MAAM,CAACC,IAAI,CAACJ,QAAQ;MAC/B;MACA,OAAO,EAAC;IACZ,CAAC;;IAED;IACA,MAAMK,QAAQ,GAAGf,QAAQ,CAAC,MAAM;MAC5B,IAAI,CAACG,KAAK,CAACK,WAAW,CAACC,MAAM,EAAE,OAAO,EAAC;MACvC,MAAMC,QAAQ,GAAGP,KAAK,CAACK,WAAW,CAAC,CAAC;MACpC,IAAIG,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;QACzB,OAAOP,KAAK,CAACK,WAAW,CAACQ,KAAK,CAAC,CAAC;MACpC,CAAC,MAAM,IAAI,OAAON,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,KAAK,IAAI,EAAE;QAC1D,OAAOP,KAAK,CAACK,WAAU;MAC3B;MACA,OAAOL,KAAK,CAACK,WAAU;IAC3B,CAAC;IAED,SAASS,OAAOA,CAAA,EAAG;MACfZ,IAAI,CAAC,OAAO;IAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}