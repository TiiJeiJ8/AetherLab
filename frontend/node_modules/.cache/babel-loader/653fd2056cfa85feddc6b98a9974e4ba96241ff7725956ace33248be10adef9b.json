{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/* eslint-disable */\n// 图表选择\n\nfunction onChartTypeSelect(type) {\n  console.log(`Selected chart type: ${type}`);\n  selectedChartType.value = type;\n  // 可添加处理为加载图表类型、切换组件等功能\n}\n\n// 生成ECharts配置，支持多文件数据查找和主键/行号对齐\nexport function generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType) {\n  const {\n    yAxis,\n    title,\n    colorScheme,\n    animation\n  } = config;\n  // series配置\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  const seriesArr = yArr.map((y, idx) => ({\n    name: y.field,\n    type: selectedChartType.value.toLowerCase(),\n    data: yDataArr[idx],\n    animationDuration: animation ? 1500 : 0,\n    itemStyle: {\n      color: getColorByScheme(colorScheme)\n    }\n  }));\n  // 基础option\n  const option = {\n    title: {\n      text: title || `${yArr.map(y => y.field).join(',')} vs ${config.xAxis.field}`,\n      left: 'center',\n      textStyle: {\n        fontSize: 16,\n        fontWeight: 'bold'\n      }\n    },\n    tooltip: {\n      trigger: 'axis'\n    },\n    legend: {\n      data: yArr.map(y => y.field),\n      top: 'bottom'\n    },\n    toolbox: {\n      show: true,\n      feature: {\n        dataView: {\n          show: true,\n          readOnly: false\n        },\n        magicType: {\n          show: true,\n          type: ['line', 'bar']\n        },\n        restore: {\n          show: true\n        },\n        saveAsImage: {\n          show: true\n        }\n      }\n    },\n    xAxis: {\n      type: 'category',\n      data: xData,\n      axisLabel: {\n        interval: 0,\n        rotate: xData.length > 10 ? 45 : 0\n      }\n    },\n    yAxis: {\n      type: 'value',\n      name: yArr.map(y => y.field).join(',')\n    },\n    series: seriesArr,\n    animation: animation,\n    animationDuration: animation ? 1500 : 0\n  };\n  // 饼图特殊处理\n  if (selectedChartType.value === 'Pie' || selectedChartType.value === 'pie') {\n    option.series = [{\n      name: yArr.map(y => y.field).join(','),\n      type: 'pie',\n      radius: '60%',\n      data: xData.map((name, i) => ({\n        name,\n        value: yDataArr[0][i]\n      })),\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }];\n    delete option.xAxis;\n    delete option.yAxis;\n  }\n  // 调试输出\n  console.log('[generateEChartOption] option:', option);\n  return option;\n}\n\n// 根据配色方案获取颜色\nexport function getColorByScheme(scheme) {\n  const colorSchemes = {\n    default: '#5470c6',\n    blue: '#1890ff',\n    green: '#52c41a',\n    warm: '#fa8c16',\n    cool: '#13c2c2'\n  };\n  return colorSchemes[scheme] || colorSchemes.default;\n}","map":{"version":3,"names":["onChartTypeSelect","type","console","log","selectedChartType","value","generateEChartOption","config","fileDataMap","xData","yDataArr","yAxis","title","colorScheme","animation","yArr","Array","isArray","seriesArr","map","y","idx","name","field","toLowerCase","data","animationDuration","itemStyle","color","getColorByScheme","option","text","join","xAxis","left","textStyle","fontSize","fontWeight","tooltip","trigger","legend","top","toolbox","show","feature","dataView","readOnly","magicType","restore","saveAsImage","axisLabel","interval","rotate","length","series","radius","i","emphasis","shadowBlur","shadowOffsetX","shadowColor","scheme","colorSchemes","default","blue","green","warm","cool"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/utils/echartOptionUtils.js"],"sourcesContent":["/* eslint-disable */\n// 图表选择\n\nfunction onChartTypeSelect(type) {\n    console.log(`Selected chart type: ${type}`)\n    selectedChartType.value = type\n    // 可添加处理为加载图表类型、切换组件等功能\n}\n\n// 生成ECharts配置，支持多文件数据查找和主键/行号对齐\nexport function generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType) {\n    const { yAxis, title, colorScheme, animation } = config;\n    // series配置\n    const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n    const seriesArr = yArr.map((y, idx) => ({\n        name: y.field,\n        type: selectedChartType.value.toLowerCase(),\n        data: yDataArr[idx],\n        animationDuration: animation ? 1500 : 0,\n        itemStyle: { color: getColorByScheme(colorScheme) }\n    }));\n    // 基础option\n    const option = {\n        title: {\n            text: title || `${yArr.map(y => y.field).join(',')} vs ${config.xAxis.field}`,\n            left: 'center',\n            textStyle: { fontSize: 16, fontWeight: 'bold' }\n        },\n        tooltip: { trigger: 'axis' },\n        legend: { data: yArr.map(y => y.field), top: 'bottom' },\n        toolbox: {\n            show: true,\n            feature: {\n                dataView: { show: true, readOnly: false },\n                magicType: { show: true, type: ['line', 'bar'] },\n                restore: { show: true },\n                saveAsImage: { show: true }\n            }\n        },\n        xAxis: {\n            type: 'category',\n            data: xData,\n            axisLabel: { interval: 0, rotate: xData.length > 10 ? 45 : 0 }\n        },\n        yAxis: { type: 'value', name: yArr.map(y => y.field).join(',') },\n        series: seriesArr,\n        animation: animation,\n        animationDuration: animation ? 1500 : 0\n    };\n    // 饼图特殊处理\n    if (selectedChartType.value === 'Pie' || selectedChartType.value === 'pie') {\n        option.series = [\n            {\n                name: yArr.map(y => y.field).join(','),\n                type: 'pie',\n                radius: '60%',\n                data: xData.map((name, i) => ({ name, value: yDataArr[0][i] })),\n                emphasis: {\n                    itemStyle: {\n                        shadowBlur: 10,\n                        shadowOffsetX: 0,\n                        shadowColor: 'rgba(0, 0, 0, 0.5)'\n                    }\n                }\n            }\n        ];\n        delete option.xAxis;\n        delete option.yAxis;\n    }\n    // 调试输出\n    console.log('[generateEChartOption] option:', option);\n    return option;\n}\n\n// 根据配色方案获取颜色\nexport function getColorByScheme(scheme) {\n    const colorSchemes = {\n        default: '#5470c6',\n        blue: '#1890ff',\n        green: '#52c41a',\n        warm: '#fa8c16',\n        cool: '#13c2c2'\n    }\n    return colorSchemes[scheme] || colorSchemes.default\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}