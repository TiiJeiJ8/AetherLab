{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { unref as _unref, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"header-left\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"file-name\"\n};\nconst _hoisted_4 = {\n  class: \"header-actions\"\n};\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = [\"innerHTML\"];\nconst _hoisted_7 = {\n  class: \"panel-content\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"loading-state\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"structure-content\"\n};\nconst _hoisted_10 = {\n  class: \"file-info-section\"\n};\nconst _hoisted_11 = {\n  class: \"info-item\"\n};\nconst _hoisted_12 = {\n  class: \"info-value\"\n};\nconst _hoisted_13 = {\n  class: \"info-item\"\n};\nconst _hoisted_14 = {\n  class: \"info-value\"\n};\nconst _hoisted_15 = {\n  class: \"info-item\"\n};\nconst _hoisted_16 = {\n  class: \"info-value\"\n};\nconst _hoisted_17 = {\n  class: \"columns-section\"\n};\nconst _hoisted_18 = {\n  class: \"section-header\"\n};\nconst _hoisted_19 = {\n  class: \"columns-count\"\n};\nconst _hoisted_20 = [\"onDragstart\", \"onMouseenter\"];\nconst _hoisted_21 = {\n  class: \"column-header\"\n};\nconst _hoisted_22 = [\"innerHTML\"];\nconst _hoisted_23 = {\n  class: \"column-info\"\n};\nconst _hoisted_24 = {\n  class: \"column-name\"\n};\nconst _hoisted_25 = {\n  class: \"column-meta\"\n};\nconst _hoisted_26 = {\n  key: 0,\n  class: \"column-stats\"\n};\nconst _hoisted_27 = {\n  class: \"column-actions\"\n};\nconst _hoisted_28 = [\"onClick\"];\nconst _hoisted_29 = [\"innerHTML\"];\nconst _hoisted_30 = {\n  key: 0,\n  class: \"column-preview\"\n};\nconst _hoisted_31 = {\n  class: \"preview-values\"\n};\nconst _hoisted_32 = {\n  key: 0,\n  class: \"preview-more\"\n};\nconst _hoisted_33 = {\n  key: 2,\n  class: \"empty-state\"\n};\nconst _hoisted_34 = [\"innerHTML\"];\nconst _hoisted_35 = {\n  class: \"drag-preview-content\"\n};\nconst _hoisted_36 = [\"innerHTML\"];\nconst _hoisted_37 = {\n  class: \"drag-preview-type\"\n};\nimport { ref, computed, watch, onMounted, onUnmounted, nextTick } from 'vue';\nimport { getThemeIcon } from '@/assets/JS/icons.js';\nimport { getFilePreview } from '@/services/FileServices.js';\n\n// Props\n\nexport default {\n  __name: 'FileStructurePanel',\n  props: {\n    show: {\n      type: Boolean,\n      default: false\n    },\n    file: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['close', 'column-drag', 'column-drop'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    /* eslint-disable */\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 状态管理\n    const isLoading = ref(false);\n    const structureData = ref(null);\n    const currentFile = ref(null);\n\n    // 拖拽相关状态\n    const isDragging = ref(false);\n    const dragOffset = ref({\n      x: 0,\n      y: 0\n    });\n    const panelPosition = ref({\n      position: 'fixed',\n      top: '80px',\n      right: '20px',\n      zIndex: 10001\n    });\n\n    // 列拖拽状态\n    const draggedColumn = ref(null);\n    const dragPreviewStyle = ref({});\n\n    // DOM 引用\n    const panelRef = ref(null);\n    const columnsListRef = ref(null);\n\n    // 当前文件\n    watch(() => props.file, async newFile => {\n      if (newFile) {\n        currentFile.value = newFile;\n        await loadStructureData();\n      }\n    }, {\n      immediate: true\n    });\n\n    // 加载文件结构数据\n    async function loadStructureData() {\n      if (!currentFile.value) return;\n      isLoading.value = true;\n      try {\n        console.log('Loading structure for file:', currentFile.value.name);\n\n        // 从文件服务获取预览数据\n        const previewData = await getFilePreview(currentFile.value.id);\n\n        // 分析数据结构\n        const columns = analyzeDataStructure(previewData);\n        structureData.value = {\n          totalRows: previewData.totalRows || currentFile.value.rows,\n          totalColumns: previewData.totalColumns || currentFile.value.columns,\n          headers: previewData.headers || [],\n          columns: columns\n        };\n        console.log('Structure data loaded:', structureData.value);\n      } catch (error) {\n        console.error('Failed to load structure data:', error);\n        structureData.value = null;\n      } finally {\n        isLoading.value = false;\n      }\n    }\n\n    // 分析数据结构\n    function analyzeDataStructure(previewData) {\n      if (!previewData || !previewData.data || previewData.data.length === 0) {\n        return [];\n      }\n      const data = previewData.data;\n      const headers = previewData.headers || Object.keys(data[0] || {});\n      return headers.map((header, index) => {\n        const columnData = data.map(row => row[header]).filter(val => val !== null && val !== undefined);\n        const columnType = detectColumnType(columnData);\n        const sampleData = columnData.slice(0, 5);\n        const stats = calculateColumnStats(columnData, columnType);\n        return {\n          name: header,\n          index: index,\n          type: columnType,\n          sampleData: sampleData,\n          stats: stats,\n          totalValues: columnData.length\n        };\n      });\n    }\n\n    // 检测列数据类型\n    function detectColumnType(columnData) {\n      if (columnData.length === 0) return 'unknown';\n      let numericCount = 0;\n      let dateCount = 0;\n      let stringCount = 0;\n      const sampleSize = Math.min(columnData.length, 100);\n      const sample = columnData.slice(0, sampleSize);\n      sample.forEach(value => {\n        const str = String(value).trim();\n\n        // 检测数字\n        if (!isNaN(str) && !isNaN(parseFloat(str)) && str !== '') {\n          numericCount++;\n        }\n        // 检测日期\n        else if (isValidDate(str)) {\n          dateCount++;\n        }\n        // 字符串\n        else {\n          stringCount++;\n        }\n      });\n      const total = sample.length;\n      if (numericCount / total > 0.8) return 'number';\n      if (dateCount / total > 0.8) return 'date';\n      if (stringCount / total > 0.8) return 'string';\n      return 'mixed';\n    }\n\n    // 检测是否为有效日期\n    function isValidDate(str) {\n      if (typeof str !== 'string') return false;\n\n      // 常见日期格式正则\n      const datePatterns = [/^\\d{4}-\\d{2}-\\d{2}$/,\n      // YYYY-MM-DD\n      /^\\d{2}\\/\\d{2}\\/\\d{4}$/,\n      // MM/DD/YYYY\n      /^\\d{2}-\\d{2}-\\d{4}$/,\n      // MM-DD-YYYY\n      /^\\d{4}\\/\\d{2}\\/\\d{2}$/ // YYYY/MM/DD\n      ];\n      return datePatterns.some(pattern => pattern.test(str)) && !isNaN(Date.parse(str));\n    }\n\n    // 计算列统计信息\n    function calculateColumnStats(columnData, type) {\n      if (columnData.length === 0) return null;\n      const stats = {\n        nullCount: 0,\n        uniqueCount: new Set(columnData).size\n      };\n      if (type === 'number') {\n        const numbers = columnData.map(v => parseFloat(v)).filter(v => !isNaN(v));\n        if (numbers.length > 0) {\n          stats.min = Math.min(...numbers);\n          stats.max = Math.max(...numbers);\n          stats.avg = numbers.reduce((a, b) => a + b, 0) / numbers.length;\n        }\n      }\n      if (type === 'string') {\n        const lengths = columnData.map(v => String(v).length);\n        stats.minLength = Math.min(...lengths);\n        stats.maxLength = Math.max(...lengths);\n        stats.avgLength = lengths.reduce((a, b) => a + b, 0) / lengths.length;\n      }\n      return stats;\n    }\n\n    // 获取列类型样式类\n    function getColumnTypeClass(type) {\n      const typeClasses = {\n        'number': 'type-number',\n        'string': 'type-string',\n        'date': 'type-date',\n        'mixed': 'type-mixed',\n        'unknown': 'type-unknown'\n      };\n      return typeClasses[type] || 'type-unknown';\n    }\n\n    // 获取列统计文本\n    function getColumnStatsText(column) {\n      if (!column.stats) return '';\n      const {\n        type,\n        stats\n      } = column;\n      if (type === 'number' && stats.min !== undefined) {\n        return `${stats.min.toFixed(1)} ~ ${stats.max.toFixed(1)}`;\n      }\n      if (type === 'string' && stats.avgLength !== undefined) {\n        return `avg: ${stats.avgLength.toFixed(0)} chars`;\n      }\n      return `${stats.uniqueCount} unique`;\n    }\n\n    // 格式化预览值\n    function formatPreviewValue(value) {\n      if (value === null || value === undefined) return 'null';\n      const str = String(value);\n      if (str.length > 15) {\n        return str.substring(0, 15) + '...';\n      }\n      return str;\n    }\n\n    // 格式化文件大小\n    function formatFileSize(bytes) {\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n\n    // 格式化数字\n    function formatNumber(value) {\n      if (typeof value === 'number') {\n        return value.toLocaleString();\n      }\n      return value;\n    }\n\n    // 面板拖拽功能\n    function startDrag(event) {\n      isDragging.value = true;\n      const rect = panelRef.value.getBoundingClientRect();\n      dragOffset.value = {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n      };\n      document.addEventListener('mousemove', handlePanelDrag, {\n        passive: false\n      });\n      document.addEventListener('mouseup', stopPanelDrag, {\n        passive: false\n      });\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    function handlePanelDrag(event) {\n      if (!isDragging.value) return;\n      requestAnimationFrame(() => {\n        const newX = event.clientX - dragOffset.value.x;\n        const newY = event.clientY - dragOffset.value.y;\n        const maxX = window.innerWidth - 320;\n        const maxY = window.innerHeight - 400;\n        const clampedX = Math.max(0, Math.min(newX, maxX));\n        const clampedY = Math.max(0, Math.min(newY, maxY));\n        panelPosition.value = {\n          position: 'fixed',\n          top: `${clampedY}px`,\n          left: `${clampedX}px`,\n          right: 'auto',\n          zIndex: 10001\n        };\n      });\n      event.preventDefault();\n    }\n    function stopPanelDrag() {\n      isDragging.value = false;\n      document.removeEventListener('mousemove', handlePanelDrag);\n      document.removeEventListener('mouseup', stopPanelDrag);\n    }\n    function handleMouseDown() {\n      // 提升 z-index\n      panelPosition.value.zIndex = 10002;\n    }\n\n    // 列拖拽功能\n    function startColumnDrag(event, column) {\n      draggedColumn.value = column;\n\n      // 设置拖拽数据\n      event.dataTransfer.setData('application/json', JSON.stringify({\n        type: 'column',\n        data: column,\n        source: 'file-structure'\n      }));\n      event.dataTransfer.effectAllowed = 'copy';\n\n      // 创建自定义拖拽图像\n      const dragImage = createDragImage(column);\n      event.dataTransfer.setDragImage(dragImage, 10, 10);\n      emit('column-drag', column);\n      console.log('Started dragging column:', column.name);\n    }\n    function endColumnDrag() {\n      setTimeout(() => {\n        draggedColumn.value = null;\n      }, 100);\n    }\n    function createDragImage(column) {\n      const div = document.createElement('div');\n      div.className = 'drag-image';\n      div.innerHTML = `\n        <span class=\"drag-icon\">⋮⋮</span>\n        <span class=\"drag-text\">${column.name}</span>\n        <span class=\"drag-type\">(${column.type})</span>\n    `;\n      div.style.cssText = `\n        position: absolute;\n        top: -1000px;\n        background: rgba(59, 130, 246, 0.9);\n        color: white;\n        padding: 4px 8px;\n        border-radius: 4px;\n        font-size: 12px;\n        white-space: nowrap;\n        box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n    `;\n      document.body.appendChild(div);\n      setTimeout(() => {\n        document.body.removeChild(div);\n      }, 0);\n      return div;\n    }\n\n    // 其他功能\n    function highlightColumn(column) {\n      // 可以在这里添加列高亮逻辑\n    }\n    function unhighlightColumn() {\n      // 移除高亮\n    }\n    function previewColumn(column) {\n      console.log('Preview column:', column);\n      // 可以显示列的详细预览\n    }\n    function refreshStructure() {\n      loadStructureData();\n    }\n    function closePanel() {\n      emit('close');\n    }\n\n    // 生命周期\n    onMounted(() => {\n      if (props.show && props.file) {\n        loadStructureData();\n      }\n    });\n    onUnmounted(() => {\n      document.removeEventListener('mousemove', handlePanelDrag);\n      document.removeEventListener('mouseup', stopPanelDrag);\n    });\n    return (_ctx, _cache) => {\n      return __props.show ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass([\"file-structure-panel\", {\n          'dragging': isDragging.value\n        }]),\n        style: _normalizeStyle(panelPosition.value),\n        onMousedown: handleMouseDown,\n        ref_key: \"panelRef\",\n        ref: panelRef\n      }, [_createElementVNode(\"div\", {\n        class: \"panel-header\",\n        onMousedown: _withModifiers(startDrag, [\"prevent\"])\n      }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"span\", {\n        class: \"panel-icon\",\n        innerHTML: _unref(getThemeIcon)('database')\n      }, null, 8, _hoisted_2), _cache[0] || (_cache[0] = _createElementVNode(\"span\", {\n        class: \"panel-title\"\n      }, \"Data Structure\", -1)), currentFile.value ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(currentFile.value.name), 1)) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n        class: \"header-btn\",\n        onClick: refreshStructure,\n        title: \"Refresh\"\n      }, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('refresh')\n      }, null, 8, _hoisted_5)]), _createElementVNode(\"button\", {\n        class: \"header-btn close-btn\",\n        onClick: closePanel,\n        title: \"Close\"\n      }, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('close')\n      }, null, 8, _hoisted_6)])])], 32), _createElementVNode(\"div\", _hoisted_7, [isLoading.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _cache[1] || (_cache[1] = [_createElementVNode(\"div\", {\n        class: \"loading-spinner\"\n      }, null, -1), _createElementVNode(\"span\", null, \"Loading file structure...\", -1)]))) : structureData.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n        class: \"info-label\"\n      }, \"Rows:\", -1)), _createElementVNode(\"span\", _hoisted_12, _toDisplayString(formatNumber(structureData.value.totalRows)), 1)]), _createElementVNode(\"div\", _hoisted_13, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n        class: \"info-label\"\n      }, \"Columns:\", -1)), _createElementVNode(\"span\", _hoisted_14, _toDisplayString(structureData.value.totalColumns), 1)]), _createElementVNode(\"div\", _hoisted_15, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n        class: \"info-label\"\n      }, \"Size:\", -1)), _createElementVNode(\"span\", _hoisted_16, _toDisplayString(formatFileSize(currentFile.value?.size || 0)), 1)])]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_cache[5] || (_cache[5] = _createElementVNode(\"span\", {\n        class: \"section-title\"\n      }, \"Columns\", -1)), _createElementVNode(\"span\", _hoisted_19, \"(\" + _toDisplayString(structureData.value.columns.length) + \")\", 1)]), _createElementVNode(\"div\", {\n        class: \"columns-list\",\n        ref_key: \"columnsListRef\",\n        ref: columnsListRef\n      }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(structureData.value.columns, (column, index) => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: index,\n          class: _normalizeClass([\"column-item\", {\n            'dragging': draggedColumn.value === column\n          }]),\n          draggable: \"true\",\n          onDragstart: $event => startColumnDrag($event, column),\n          onDragend: endColumnDrag,\n          onMouseenter: $event => highlightColumn(column),\n          onMouseleave: unhighlightColumn\n        }, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", {\n          class: \"column-drag-handle\",\n          innerHTML: _unref(getThemeIcon)('drag')\n        }, null, 8, _hoisted_22), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, _toDisplayString(column.name), 1), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"span\", {\n          class: _normalizeClass([\"column-type\", getColumnTypeClass(column.type)])\n        }, _toDisplayString(column.type), 3), column.stats ? (_openBlock(), _createElementBlock(\"span\", _hoisted_26, _toDisplayString(getColumnStatsText(column)), 1)) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"button\", {\n          class: \"column-action-btn\",\n          onClick: $event => previewColumn(column),\n          title: \"Preview column data\"\n        }, [_createElementVNode(\"span\", {\n          innerHTML: _unref(getThemeIcon)('eye')\n        }, null, 8, _hoisted_29)], 8, _hoisted_28)])]), column.sampleData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n          class: \"preview-header\"\n        }, \"Sample Data:\", -1)), _createElementVNode(\"div\", _hoisted_31, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(column.sampleData.slice(0, 3), (value, idx) => {\n          return _openBlock(), _createElementBlock(\"span\", {\n            key: idx,\n            class: \"preview-value\"\n          }, _toDisplayString(formatPreviewValue(value)), 1);\n        }), 128)), column.sampleData.length > 3 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_32, \" +\" + _toDisplayString(column.sampleData.length - 3) + \" more \", 1)) : _createCommentVNode(\"\", true)])])) : _createCommentVNode(\"\", true)], 42, _hoisted_20);\n      }), 128))], 512)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('warning')\n      }, null, 8, _hoisted_34), _cache[7] || (_cache[7] = _createElementVNode(\"span\", null, \"No structure data available\", -1))]))]), draggedColumn.value ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: \"drag-preview\",\n        style: _normalizeStyle(dragPreviewStyle.value)\n      }, [_createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('drag')\n      }, null, 8, _hoisted_36), _createElementVNode(\"span\", null, _toDisplayString(draggedColumn.value.name), 1), _createElementVNode(\"span\", _hoisted_37, \"(\" + _toDisplayString(draggedColumn.value.type) + \")\", 1)])], 4)) : _createCommentVNode(\"\", true)], 38)) : _createCommentVNode(\"\", true);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","onUnmounted","nextTick","getThemeIcon","getFilePreview","props","__props","emit","__emit","isLoading","structureData","currentFile","isDragging","dragOffset","x","y","panelPosition","position","top","right","zIndex","draggedColumn","dragPreviewStyle","panelRef","columnsListRef","file","newFile","value","loadStructureData","immediate","console","log","name","previewData","id","columns","analyzeDataStructure","totalRows","rows","totalColumns","headers","error","data","length","Object","keys","map","header","index","columnData","row","filter","val","undefined","columnType","detectColumnType","sampleData","slice","stats","calculateColumnStats","type","totalValues","numericCount","dateCount","stringCount","sampleSize","Math","min","sample","forEach","str","String","trim","isNaN","parseFloat","isValidDate","total","datePatterns","some","pattern","test","Date","parse","nullCount","uniqueCount","Set","size","numbers","v","max","avg","reduce","a","b","lengths","minLength","maxLength","avgLength","getColumnTypeClass","typeClasses","getColumnStatsText","column","toFixed","formatPreviewValue","substring","formatFileSize","bytes","k","sizes","i","floor","pow","formatNumber","toLocaleString","startDrag","event","rect","getBoundingClientRect","clientX","left","clientY","document","addEventListener","handlePanelDrag","passive","stopPanelDrag","preventDefault","stopPropagation","requestAnimationFrame","newX","newY","maxX","window","innerWidth","maxY","innerHeight","clampedX","clampedY","removeEventListener","handleMouseDown","startColumnDrag","dataTransfer","setData","JSON","stringify","source","effectAllowed","dragImage","createDragImage","setDragImage","endColumnDrag","setTimeout","div","createElement","className","innerHTML","style","cssText","body","appendChild","removeChild","highlightColumn","unhighlightColumn","previewColumn","refreshStructure","closePanel","show"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/FileStructurePanel.vue"],"sourcesContent":["<template>\n<div\nv-if=\"show\"\nclass=\"file-structure-panel\"\n:class=\"{ 'dragging': isDragging }\"\n:style=\"panelPosition\"\n@mousedown=\"handleMouseDown\"\nref=\"panelRef\">\n<!-- 面板标题栏 -->\n<div class=\"panel-header\" @mousedown.prevent=\"startDrag\">\n    <div class=\"header-left\">\n    <span class=\"panel-icon\" v-html=\"getThemeIcon('database')\"></span>\n    <span class=\"panel-title\">Data Structure</span>\n    <span class=\"file-name\" v-if=\"currentFile\">{{ currentFile.name }}</span>\n    </div>\n    <div class=\"header-actions\">\n    <button class=\"header-btn\" @click=\"refreshStructure\" title=\"Refresh\">\n        <span v-html=\"getThemeIcon('refresh')\"></span>\n    </button>\n    <button class=\"header-btn close-btn\" @click=\"closePanel\" title=\"Close\">\n        <span v-html=\"getThemeIcon('close')\"></span>\n    </button>\n    </div>\n</div>\n\n<!-- 面板内容 -->\n<div class=\"panel-content\">\n    <div v-if=\"isLoading\" class=\"loading-state\">\n    <div class=\"loading-spinner\"></div>\n    <span>Loading file structure...</span>\n    </div>\n    <div v-else-if=\"structureData\" class=\"structure-content\">\n    <!-- 文件基本信息 -->\n    <div class=\"file-info-section\">\n        <div class=\"info-item\">\n        <span class=\"info-label\">Rows:</span>\n        <span class=\"info-value\">{{ formatNumber(structureData.totalRows) }}</span>\n        </div>\n        <div class=\"info-item\">\n        <span class=\"info-label\">Columns:</span>\n        <span class=\"info-value\">{{ structureData.totalColumns }}</span>\n        </div>\n        <div class=\"info-item\">\n        <span class=\"info-label\">Size:</span>\n        <span class=\"info-value\">{{ formatFileSize(currentFile?.size || 0) }}</span>\n        </div>\n    </div>\n\n    <!-- 列结构列表 -->\n    <div class=\"columns-section\">\n        <div class=\"section-header\">\n        <span class=\"section-title\">Columns</span>\n        <span class=\"columns-count\">({{ structureData.columns.length }})</span>\n        </div>\n        <div class=\"columns-list\" ref=\"columnsListRef\">\n        <div\n            v-for=\"(column, index) in structureData.columns\"\n            :key=\"index\"\n            class=\"column-item\"\n            :class=\"{ 'dragging': draggedColumn === column }\"\n            draggable=\"true\"\n            @dragstart=\"startColumnDrag($event, column)\"\n            @dragend=\"endColumnDrag\"\n            @mouseenter=\"highlightColumn(column)\"\n            @mouseleave=\"unhighlightColumn\">\n            <!-- 列信息 -->\n            <div class=\"column-header\">\n            <div class=\"column-drag-handle\" v-html=\"getThemeIcon('drag')\"></div>\n            <div class=\"column-info\">\n                <div class=\"column-name\">{{ column.name }}</div>\n                <div class=\"column-meta\">\n                <span class=\"column-type\" :class=\"getColumnTypeClass(column.type)\">\n                    {{ column.type }}\n                </span>\n                <span class=\"column-stats\" v-if=\"column.stats\">\n                    {{ getColumnStatsText(column) }}\n                </span>\n                </div>\n            </div>\n            <div class=\"column-actions\">\n                <button\n                class=\"column-action-btn\"\n                @click=\"previewColumn(column)\"\n                title=\"Preview column data\">\n                <span v-html=\"getThemeIcon('eye')\"></span>\n                </button>\n            </div>\n            </div>\n\n            <!-- 样本数据预览 -->\n            <div class=\"column-preview\" v-if=\"column.sampleData\">\n            <div class=\"preview-header\">Sample Data:</div>\n            <div class=\"preview-values\">\n                <span\n                v-for=\"(value, idx) in column.sampleData.slice(0, 3)\"\n                :key=\"idx\"\n                class=\"preview-value\">\n                {{ formatPreviewValue(value) }}\n                </span>\n                <span v-if=\"column.sampleData.length > 3\" class=\"preview-more\">\n                +{{ column.sampleData.length - 3 }} more\n                </span>\n            </div>\n            </div>\n        </div>\n        </div>\n    </div>\n    </div>\n\n    <div v-else class=\"empty-state\">\n    <span v-html=\"getThemeIcon('warning')\"></span>\n    <span>No structure data available</span>\n    </div>\n</div>\n\n<!-- 拖拽预览层 -->\n<div v-if=\"draggedColumn\" class=\"drag-preview\" :style=\"dragPreviewStyle\">\n    <div class=\"drag-preview-content\">\n    <span v-html=\"getThemeIcon('drag')\"></span>\n    <span>{{ draggedColumn.name }}</span>\n    <span class=\"drag-preview-type\">({{ draggedColumn.type }})</span>\n    </div>\n</div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch, onMounted, onUnmounted, nextTick } from 'vue'\nimport { getThemeIcon } from '@/assets/JS/icons.js'\nimport { getFilePreview } from '@/services/FileServices.js'\n\n// Props\nconst props = defineProps({\n    show: {\n        type: Boolean,\n        default: false\n    },\n    file: {\n        type: Object,\n        default: null\n    }\n})\n\n// Emits\nconst emit = defineEmits(['close', 'column-drag', 'column-drop'])\n\n// 状态管理\nconst isLoading = ref(false)\nconst structureData = ref(null)\nconst currentFile = ref(null)\n\n// 拖拽相关状态\nconst isDragging = ref(false)\nconst dragOffset = ref({ x: 0, y: 0 })\nconst panelPosition = ref({\n    position: 'fixed',\n    top: '80px',\n    right: '20px',\n    zIndex: 10001\n})\n\n// 列拖拽状态\nconst draggedColumn = ref(null)\nconst dragPreviewStyle = ref({})\n\n// DOM 引用\nconst panelRef = ref(null)\nconst columnsListRef = ref(null)\n\n// 当前文件\nwatch(() => props.file, async (newFile) => {\n    if (newFile) {\n        currentFile.value = newFile\n        await loadStructureData()\n    }\n}, { immediate: true })\n\n// 加载文件结构数据\nasync function loadStructureData() {\n    if (!currentFile.value) return\n    \n    isLoading.value = true\n    try {\n        console.log('Loading structure for file:', currentFile.value.name)\n        \n        // 从文件服务获取预览数据\n        const previewData = await getFilePreview(currentFile.value.id)\n        \n        // 分析数据结构\n        const columns = analyzeDataStructure(previewData)\n        \n        structureData.value = {\n        totalRows: previewData.totalRows || currentFile.value.rows,\n        totalColumns: previewData.totalColumns || currentFile.value.columns,\n        headers: previewData.headers || [],\n        columns: columns\n        }\n        \n        console.log('Structure data loaded:', structureData.value)\n    } catch (error) {\n        console.error('Failed to load structure data:', error)\n        structureData.value = null\n    } finally {\n        isLoading.value = false\n    }\n}\n\n// 分析数据结构\nfunction analyzeDataStructure(previewData) {\n    if (!previewData || !previewData.data || previewData.data.length === 0) {\n        return []\n    }\n    \n    const data = previewData.data\n    const headers = previewData.headers || Object.keys(data[0] || {})\n    \n    return headers.map((header, index) => {\n        const columnData = data.map(row => row[header]).filter(val => val !== null && val !== undefined)\n        const columnType = detectColumnType(columnData)\n        const sampleData = columnData.slice(0, 5)\n        const stats = calculateColumnStats(columnData, columnType)\n        \n        return {\n        name: header,\n        index: index,\n        type: columnType,\n        sampleData: sampleData,\n        stats: stats,\n        totalValues: columnData.length\n        }\n    })\n}\n\n// 检测列数据类型\nfunction detectColumnType(columnData) {\n    if (columnData.length === 0) return 'unknown'\n    \n    let numericCount = 0\n    let dateCount = 0\n    let stringCount = 0\n    \n    const sampleSize = Math.min(columnData.length, 100)\n    const sample = columnData.slice(0, sampleSize)\n    \n    sample.forEach(value => {\n        const str = String(value).trim()\n        \n        // 检测数字\n        if (!isNaN(str) && !isNaN(parseFloat(str)) && str !== '') {\n        numericCount++\n        }\n        // 检测日期\n        else if (isValidDate(str)) {\n        dateCount++\n        }\n        // 字符串\n        else {\n        stringCount++\n        }\n    })\n    \n    const total = sample.length\n    if (numericCount / total > 0.8) return 'number'\n    if (dateCount / total > 0.8) return 'date'\n    if (stringCount / total > 0.8) return 'string'\n    \n    return 'mixed'\n}\n\n// 检测是否为有效日期\nfunction isValidDate(str) {\n    if (typeof str !== 'string') return false\n    \n    // 常见日期格式正则\n    const datePatterns = [\n        /^\\d{4}-\\d{2}-\\d{2}$/,           // YYYY-MM-DD\n        /^\\d{2}\\/\\d{2}\\/\\d{4}$/,         // MM/DD/YYYY\n        /^\\d{2}-\\d{2}-\\d{4}$/,           // MM-DD-YYYY\n        /^\\d{4}\\/\\d{2}\\/\\d{2}$/,         // YYYY/MM/DD\n    ]\n    \n    return datePatterns.some(pattern => pattern.test(str)) && !isNaN(Date.parse(str))\n}\n\n// 计算列统计信息\nfunction calculateColumnStats(columnData, type) {\n    if (columnData.length === 0) return null\n    \n    const stats = {\n        nullCount: 0,\n        uniqueCount: new Set(columnData).size\n    }\n    \n    if (type === 'number') {\n        const numbers = columnData.map(v => parseFloat(v)).filter(v => !isNaN(v))\n        if (numbers.length > 0) {\n        stats.min = Math.min(...numbers)\n        stats.max = Math.max(...numbers)\n        stats.avg = numbers.reduce((a, b) => a + b, 0) / numbers.length\n        }\n    }\n    \n    if (type === 'string') {\n        const lengths = columnData.map(v => String(v).length)\n        stats.minLength = Math.min(...lengths)\n        stats.maxLength = Math.max(...lengths)\n        stats.avgLength = lengths.reduce((a, b) => a + b, 0) / lengths.length\n    }\n    \n    return stats\n}\n\n// 获取列类型样式类\nfunction getColumnTypeClass(type) {\n    const typeClasses = {\n        'number': 'type-number',\n        'string': 'type-string',\n        'date': 'type-date',\n        'mixed': 'type-mixed',\n        'unknown': 'type-unknown'\n    }\n    return typeClasses[type] || 'type-unknown'\n}\n\n// 获取列统计文本\nfunction getColumnStatsText(column) {\n    if (!column.stats) return ''\n    \n    const { type, stats } = column\n    \n    if (type === 'number' && stats.min !== undefined) {\n        return `${stats.min.toFixed(1)} ~ ${stats.max.toFixed(1)}`\n    }\n    \n    if (type === 'string' && stats.avgLength !== undefined) {\n        return `avg: ${stats.avgLength.toFixed(0)} chars`\n    }\n    \n    return `${stats.uniqueCount} unique`\n}\n\n// 格式化预览值\nfunction formatPreviewValue(value) {\n    if (value === null || value === undefined) return 'null'\n    \n    const str = String(value)\n    if (str.length > 15) {\n        return str.substring(0, 15) + '...'\n    }\n    return str\n}\n\n// 格式化文件大小\nfunction formatFileSize(bytes) {\n    if (bytes === 0) return '0 Bytes'\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\n// 格式化数字\nfunction formatNumber(value) {\n    if (typeof value === 'number') {\n        return value.toLocaleString()\n    }\n    return value\n}\n\n// 面板拖拽功能\nfunction startDrag(event) {\n    isDragging.value = true\n    \n    const rect = panelRef.value.getBoundingClientRect()\n    dragOffset.value = {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n    }\n    \n    document.addEventListener('mousemove', handlePanelDrag, { passive: false })\n    document.addEventListener('mouseup', stopPanelDrag, { passive: false })\n    \n    event.preventDefault()\n    event.stopPropagation()\n}\n\nfunction handlePanelDrag(event) {\n    if (!isDragging.value) return\n    \n    requestAnimationFrame(() => {\n        const newX = event.clientX - dragOffset.value.x\n        const newY = event.clientY - dragOffset.value.y\n        \n        const maxX = window.innerWidth - 320\n        const maxY = window.innerHeight - 400\n        \n        const clampedX = Math.max(0, Math.min(newX, maxX))\n        const clampedY = Math.max(0, Math.min(newY, maxY))\n        \n        panelPosition.value = {\n        position: 'fixed',\n        top: `${clampedY}px`,\n        left: `${clampedX}px`,\n        right: 'auto',\n        zIndex: 10001\n        }\n    })\n    \n    event.preventDefault()\n}\n\nfunction stopPanelDrag() {\n    isDragging.value = false\n    document.removeEventListener('mousemove', handlePanelDrag)\n    document.removeEventListener('mouseup', stopPanelDrag)\n}\n\nfunction handleMouseDown() {\n    // 提升 z-index\n    panelPosition.value.zIndex = 10002\n}\n\n// 列拖拽功能\nfunction startColumnDrag(event, column) {\n    draggedColumn.value = column\n    \n    // 设置拖拽数据\n    event.dataTransfer.setData('application/json', JSON.stringify({\n        type: 'column',\n        data: column,\n        source: 'file-structure'\n    }))\n    \n    event.dataTransfer.effectAllowed = 'copy'\n    \n    // 创建自定义拖拽图像\n    const dragImage = createDragImage(column)\n    event.dataTransfer.setDragImage(dragImage, 10, 10)\n    \n    emit('column-drag', column)\n    \n    console.log('Started dragging column:', column.name)\n    }\n\n    function endColumnDrag() {\n    setTimeout(() => {\n        draggedColumn.value = null\n    }, 100)\n}\n\nfunction createDragImage(column) {\n    const div = document.createElement('div')\n    div.className = 'drag-image'\n    div.innerHTML = `\n        <span class=\"drag-icon\">⋮⋮</span>\n        <span class=\"drag-text\">${column.name}</span>\n        <span class=\"drag-type\">(${column.type})</span>\n    `\n    div.style.cssText = `\n        position: absolute;\n        top: -1000px;\n        background: rgba(59, 130, 246, 0.9);\n        color: white;\n        padding: 4px 8px;\n        border-radius: 4px;\n        font-size: 12px;\n        white-space: nowrap;\n        box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n    `\n    document.body.appendChild(div)\n    \n    setTimeout(() => {\n        document.body.removeChild(div)\n    }, 0)\n    \n    return div\n}\n\n// 其他功能\nfunction highlightColumn(column) {\n  // 可以在这里添加列高亮逻辑\n}\n\nfunction unhighlightColumn() {\n  // 移除高亮\n}\n\nfunction previewColumn(column) {\n    console.log('Preview column:', column)\n    // 可以显示列的详细预览\n}\n\nfunction refreshStructure() {\n    loadStructureData()\n}\n\nfunction closePanel() {\n    emit('close')\n}\n\n// 生命周期\nonMounted(() => {\n    if (props.show && props.file) {\n        loadStructureData()\n    }\n})\n\nonUnmounted(() => {\n    document.removeEventListener('mousemove', handlePanelDrag)\n    document.removeEventListener('mouseup', stopPanelDrag)\n})\n</script>\n\n<style scoped>\n/* 主面板样式 */\n.file-structure-panel {\n    position: fixed;\n    width: 320px;\n    max-height: 600px;\n    background: rgba(255, 255, 255, 0.95);\n    backdrop-filter: blur(20px);\n    border-radius: 12px;\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    overflow: hidden;\n    user-select: none;\n    z-index: 10001;\n    display: flex;\n    flex-direction: column;\n}\n\n.file-structure-panel.dragging {\n    box-shadow: 0 12px 48px rgba(0, 0, 0, 0.25);\n    transform: scale(1.02);\n}\n\n/* 暗黑模式 */\n[data-theme=\"dark\"] .file-structure-panel {\n    background: rgba(31, 41, 55, 0.95);\n    border: 1px solid rgba(55, 65, 81, 0.4);\n}\n\n/* 面板标题栏 */\n.panel-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px 16px;\n    background: linear-gradient(135deg, #f8f9fa 0%, #f1f5f9 100%);\n    border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n    cursor: move;\n}\n\n[data-theme=\"dark\"] .panel-header {\n    background: linear-gradient(135deg, #374151 0%, #4b5563 100%);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n}\n\n.header-left {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    flex: 1;\n    min-width: 0;\n}\n\n.panel-icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 18px;\n    height: 18px;\n}\n\n.panel-icon svg {\n    width: 16px;\n    height: 16px;\n}\n\n.panel-title {\n    font-size: 14px;\n    font-weight: 600;\n    color: var(--text-color);\n}\n\n.file-name {\n    font-size: 12px;\n    color: var(--text-secondary);\n    font-weight: 500;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.header-actions {\n    display: flex;\n    gap: 4px;\n}\n\n.header-btn {\n    background: none;\n    border: none;\n    padding: 6px;\n    border-radius: 6px;\n    cursor: pointer;\n    color: var(--text-secondary);\n    transition: all 0.2s;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.header-btn:hover {\n    background: rgba(0, 0, 0, 0.1);\n    color: var(--text-color);\n}\n\n[data-theme=\"dark\"] .header-btn:hover {\n    background: rgba(255, 255, 255, 0.1);\n}\n\n.header-btn.close-btn:hover {\n    background: rgba(239, 68, 68, 0.1);\n    color: #ef4444;\n}\n\n.header-btn svg {\n    width: 14px;\n    height: 14px;\n}\n\n/* 面板内容 */\n.panel-content {\n    flex: 1;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n}\n\n/* 加载状态 */\n.loading-state {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 40px 20px;\n    color: var(--text-secondary);\n    gap: 12px;\n}\n\n.loading-spinner {\n    width: 24px;\n    height: 24px;\n    border: 2px solid rgba(59, 130, 246, 0.2);\n    border-top: 2px solid #3b82f6;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n}\n\n/* 空状态 */\n.empty-state {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 40px 20px;\n    color: var(--text-secondary);\n    gap: 8px;\n}\n\n.empty-state svg {\n    width: 24px;\n    height: 24px;\n}\n\n/* 结构内容 */\n.structure-content {\n    flex: 1;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n}\n\n/* 文件信息区域 */\n.file-info-section {\n    display: flex;\n    justify-content: space-between;\n    padding: 12px 16px;\n    background: rgba(0, 0, 0, 0.02);\n    border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n}\n\n[data-theme=\"dark\"] .file-info-section {\n    background: rgba(255, 255, 255, 0.02);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n}\n\n.info-item {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 2px;\n}\n\n.info-label {\n    font-size: 10px;\n    color: var(--text-secondary);\n    font-weight: 500;\n}\n\n.info-value {\n    font-size: 12px;\n    color: var(--text-color);\n    font-weight: 600;\n}\n\n/* 列区域 */\n.columns-section {\n    flex: 1;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n}\n\n.section-header {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    padding: 12px 16px 8px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n}\n\n[data-theme=\"dark\"] .section-header {\n    border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n}\n\n.section-title {\n    font-size: 13px;\n    font-weight: 600;\n    color: var(--text-color);\n}\n\n.columns-count {\n    font-size: 11px;\n    color: var(--text-secondary);\n}\n\n/* 列列表 */\n.columns-list {\n    flex: 1;\n    overflow-y: auto;\n    padding: 8px 0;\n}\n\n.columns-list::-webkit-scrollbar {\n    width: 4px;\n}\n\n.columns-list::-webkit-scrollbar-track {\n    background: transparent;\n}\n\n.columns-list::-webkit-scrollbar-thumb {\n    background: rgba(0, 0, 0, 0.1);\n    border-radius: 2px;\n}\n\n[data-theme=\"dark\"] .columns-list::-webkit-scrollbar-thumb {\n    background: rgba(255, 255, 255, 0.1);\n}\n\n/* 列项目 */\n.column-item {\n    margin: 4px 12px;\n    background: rgba(255, 255, 255, 0.6);\n    border: 1px solid rgba(0, 0, 0, 0.08);\n    border-radius: 8px;\n    transition: all 0.2s;\n    cursor: grab;\n}\n\n.column-item:hover {\n    background: rgba(255, 255, 255, 0.9);\n    border-color: #3b82f6;\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.column-item.dragging {\n    opacity: 0.5;\n    transform: scale(0.95);\n}\n\n[data-theme=\"dark\"] .column-item {\n    background: rgba(17, 24, 39, 0.6);\n    border: 1px solid rgba(255, 255, 255, 0.08);\n}\n\n[data-theme=\"dark\"] .column-item:hover {\n    background: rgba(17, 24, 39, 0.9);\n    border-color: #60a5fa;\n}\n\n/* 列标题 */\n.column-header {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    padding: 10px 12px;\n}\n\n.column-drag-handle {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 16px;\n    height: 16px;\n    color: var(--text-secondary);\n    cursor: grab;\n}\n\n.column-drag-handle svg {\n    width: 12px;\n    height: 12px;\n}\n\n.column-info {\n    flex: 1;\n    min-width: 0;\n}\n\n.column-name {\n    font-size: 13px;\n    font-weight: 600;\n    color: var(--text-color);\n    margin-bottom: 2px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.column-meta {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-size: 11px;\n}\n\n.column-type {\n    padding: 2px 6px;\n    border-radius: 4px;\n    font-weight: 500;\n    font-size: 10px;\n}\n\n.column-type.type-number {\n    background: rgba(16, 185, 129, 0.1);\n    color: #059669;\n}\n\n.column-type.type-string {\n    background: rgba(59, 130, 246, 0.1);\n    color: #2563eb;\n}\n\n.column-type.type-date {\n    background: rgba(139, 92, 246, 0.1);\n    color: #7c3aed;\n}\n\n.column-type.type-mixed {\n    background: rgba(245, 158, 11, 0.1);\n    color: #d97706;\n}\n\n.column-type.type-unknown {\n    background: rgba(107, 114, 128, 0.1);\n    color: #6b7280;\n}\n\n/* 暗黑模式下的类型颜色 */\n[data-theme=\"dark\"] .column-type.type-number {\n    background: rgba(16, 185, 129, 0.2);\n    color: #6ee7b7;\n}\n\n[data-theme=\"dark\"] .column-type.type-string {\n    background: rgba(59, 130, 246, 0.2);\n    color: #93c5fd;\n}\n\n[data-theme=\"dark\"] .column-type.type-date {\n    background: rgba(139, 92, 246, 0.2);\n    color: #c4b5fd;\n}\n\n[data-theme=\"dark\"] .column-type.type-mixed {\n    background: rgba(245, 158, 11, 0.2);\n    color: #fcd34d;\n}\n\n[data-theme=\"dark\"] .column-type.type-unknown {\n    background: rgba(107, 114, 128, 0.2);\n    color: #d1d5db;\n}\n\n.column-stats {\n    color: var(--text-secondary);\n}\n\n.column-actions {\n    display: flex;\n    gap: 4px;\n}\n\n.column-action-btn {\n    background: none;\n    border: none;\n    padding: 4px;\n    border-radius: 4px;\n    cursor: pointer;\n    color: var(--text-secondary);\n    transition: all 0.2s;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.column-action-btn:hover {\n    background: rgba(59, 130, 246, 0.1);\n    color: #3b82f6;\n}\n\n[data-theme=\"dark\"] .column-action-btn:hover {\n    background: rgba(96, 165, 250, 0.2);\n    color: #60a5fa;\n}\n\n.column-action-btn svg {\n    width: 12px;\n    height: 12px;\n}\n\n/* 列预览 */\n.column-preview {\n    padding: 8px 12px 10px;\n    border-top: 1px solid rgba(0, 0, 0, 0.05);\n    background: rgba(0, 0, 0, 0.02);\n}\n\n[data-theme=\"dark\"] .column-preview {\n    border-top: 1px solid rgba(255, 255, 255, 0.05);\n    background: rgba(255, 255, 255, 0.02);\n}\n\n.preview-header {\n    font-size: 10px;\n    color: var(--text-secondary);\n    margin-bottom: 4px;\n    font-weight: 500;\n}\n\n    .preview-values {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 4px;\n}\n\n.preview-value {\n  padding: 2px 6px;\n  background: rgba(107, 114, 128, 0.1);\n  border-radius: 3px;\n  font-size: 10px;\n  color: var(--text-color);\n  font-family: 'Courier New', monospace;\n}\n\n.preview-more {\n  font-size: 10px;\n  color: var(--text-secondary);\n  font-style: italic;\n}\n\n/* 拖拽预览层 */\n.drag-preview {\n  position: fixed;\n  pointer-events: none;\n  z-index: 10003;\n}\n\n.drag-preview-content {\n  background: rgba(59, 130, 246, 0.9);\n  color: white;\n  padding: 6px 12px;\n  border-radius: 6px;\n  font-size: 12px;\n  white-space: nowrap;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.drag-preview-type {\n  opacity: 0.8;\n  font-size: 10px;\n}\n\n/* 响应式适配 */\n@media (max-width: 768px) {\n  .file-structure-panel {\n    width: 280px;\n    max-height: 500px;\n  }\n  \n  .panel-title {\n    font-size: 12px;\n  }\n  \n  .file-name {\n    font-size: 10px;\n  }\n  \n  .column-name {\n    font-size: 11px;\n  }\n  \n  .column-meta {\n    font-size: 9px;\n  }\n}\n\n/* 拖拽图像样式 */\n.drag-image {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.drag-icon {\n  font-size: 10px;\n}\n\n.drag-text {\n  font-weight: 500;\n}\n\n.drag-type {\n  opacity: 0.8;\n  font-size: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}