{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-config-panel\"\n};\nconst _hoisted_2 = {\n  class: \"panel-header-CCP\",\n  style: {\n    \"position\": \"relative\",\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_3 = [\"innerHTML\"];\nconst _hoisted_4 = {\n  class: \"chart-type-name\"\n};\nconst _hoisted_5 = {\n  class: \"mapping-section-toggle-wrapper\"\n};\nconst _hoisted_6 = [\"disabled\"];\nconst _hoisted_7 = {\n  class: \"save-icon\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_8 = {\n  width: \"22\",\n  height: \"22\",\n  viewBox: \"0 0 22 22\",\n  fill: \"#aa55\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n};\nconst _hoisted_9 = [\"fill\"];\nconst _hoisted_10 = [\"stroke\"];\nconst _hoisted_11 = {\n  class: \"action-section\"\n};\nconst _hoisted_12 = [\"disabled\"];\nconst _hoisted_13 = {\n  key: 2,\n  class: \"error-message\"\n};\nconst _hoisted_14 = {\n  class: \"error-text\"\n};\nconst _hoisted_15 = {\n  class: \"tooltip-header\"\n};\nconst _hoisted_16 = {\n  class: \"tooltip-title\"\n};\nconst _hoisted_17 = {\n  class: \"tooltip-description\"\n};\nconst _hoisted_18 = {\n  class: \"tooltip-section\"\n};\nconst _hoisted_19 = {\n  class: \"tooltip-tags\"\n};\nconst _hoisted_20 = {\n  class: \"tooltip-section\"\n};\nconst _hoisted_21 = {\n  class: \"tooltip-tags\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 右侧边栏总标题 \"), _createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", {\n    style: {\n      \"margin\": \"0\"\n    }\n  }, \" Chart Configuration \", -1 /* HOISTED */)), _createCommentVNode(\" 图表类型及相关提示 \"), _createElementVNode(\"div\", {\n    class: \"chart-type-tag\",\n    onMouseenter: _cache[0] || (_cache[0] = $event => $setup.showTooltip($event, $setup.props.selectedChartType)),\n    onMouseleave: $setup.hideTooltip,\n    style: {\n      \"position\": \"relative\",\n      \"max-width\": \"50%\",\n      \"white-space\": \"normal\",\n      \"word-break\": \"break-all\",\n      \"text-align\": \"right\",\n      \"right\": \"0\",\n      \"margin-right\": \"3%\"\n    }\n  }, [_createElementVNode(\"span\", {\n    class: \"chart-type-icon\",\n    innerHTML: $setup.getChartIcon($props.selectedChartType)\n  }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"span\", _hoisted_4, _toDisplayString($props.selectedChartType), 1 /* TEXT */)], 32 /* NEED_HYDRATION */)]), _createCommentVNode(\" 动态数据映射配置区域 \"), _createElementVNode(\"div\", _hoisted_5, [$setup.currentTypeConfig.mapping ? (_openBlock(), _createBlock($setup[\"ChartMappingConfig\"], {\n    key: 0,\n    mappingConfig: $setup.currentTypeConfig.mapping,\n    modelValue: $setup.chartConfig,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.chartConfig = $event)\n  }, {\n    \"title-append\": _withCtx(() => [_createCommentVNode(\" 自动渲染开关 \"), _createVNode($setup[\"AutoRenderToggle\"], {\n      modelValue: $setup.autoRender,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.autoRender = $event)\n    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"mappingConfig\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 动态数据过滤配置区域 \"), $setup.currentTypeConfig.filter && $setup.currentTypeConfig.filter.length ? (_openBlock(), _createBlock($setup[\"ChartFilterConfig\"], {\n    key: 0,\n    filterConfig: $setup.currentTypeConfig.filter,\n    modelValue: $setup.chartConfig,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.chartConfig = $event)\n  }, null, 8 /* PROPS */, [\"filterConfig\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 动态高级配置区域 \"), $setup.currentTypeConfig.advanced && $setup.currentTypeConfig.advanced.length ? (_openBlock(), _createBlock($setup[\"ChartAdvancedConfig\"], {\n    key: 1,\n    advancedConfig: $setup.currentTypeConfig.advanced,\n    modelValue: $setup.chartConfig,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.chartConfig = $event)\n  }, null, 8 /* PROPS */, [\"advancedConfig\", \"modelValue\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 存储到历史区按钮 \"), _createElementVNode(\"button\", {\n    class: \"save-history-btn animated-save-btn\",\n    disabled: !$setup.isConfigValid || $setup.isMappingEmpty,\n    onClick: $setup.saveToHistory\n  }, [_createElementVNode(\"span\", _hoisted_7, [(_openBlock(), _createElementBlock(\"svg\", _hoisted_8, [_createElementVNode(\"rect\", {\n    x: \"3\",\n    y: \"3\",\n    width: \"16\",\n    height: \"16\",\n    rx: \"4\",\n    fill: $setup.isDark ? '#2d5b8c' : '#4F8CFF'\n  }, null, 8 /* PROPS */, _hoisted_9), _createElementVNode(\"path\", {\n    d: \"M7 11.5L10 14.5L15 9.5\",\n    stroke: $setup.isDark ? '#bfe3ff' : '#fff',\n    \"stroke-width\": \"2.2\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\"\n  }, null, 8 /* PROPS */, _hoisted_10)]))]), _cache[6] || (_cache[6] = _createElementVNode(\"span\", {\n    class: \"save-text\"\n  }, \"Save to Chart History\", -1 /* HOISTED */))], 8 /* PROPS */, _hoisted_6), _createCommentVNode(\" 操作按钮 \"), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    class: \"apply-btn\",\n    disabled: $setup.autoRender || !$setup.isConfigValid,\n    onClick: $setup.generateChart\n  }, \" Apply Configuration \", 8 /* PROPS */, _hoisted_12), _createElementVNode(\"button\", {\n    class: \"reset-btn\",\n    onClick: $setup.resetConfig\n  }, \" Reset Configuration \")]), _createCommentVNode(\" 错误提示 \"), $setup.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, _toDisplayString($setup.errorMessage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 提示框 \"), $setup.tooltip.visible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 3,\n    class: \"chart-tooltip\",\n    style: _normalizeStyle($setup.tooltip.style),\n    ref: \"tooltipRef\"\n  }, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"span\", _hoisted_16, _toDisplayString($setup.tooltip.type), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_17, _toDisplayString($setup.tooltip.description), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_18, [_cache[7] || (_cache[7] = _createElementVNode(\"h4\", null, \"Data Requirements\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tooltip.dataRequirements, requirement => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: requirement,\n      class: \"tooltip-tag data-tag\"\n    }, _toDisplayString(requirement), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_20, [_cache[8] || (_cache[8] = _createElementVNode(\"h4\", null, \"Use Cases\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_21, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tooltip.useCases, useCase => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: useCase,\n      class: \"tooltip-tag use-case-tag\"\n    }, _toDisplayString(useCase), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","style","width","height","viewBox","fill","xmlns","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","onMouseenter","_cache","$event","$setup","showTooltip","props","selectedChartType","onMouseleave","hideTooltip","innerHTML","getChartIcon","$props","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","currentTypeConfig","mapping","_createBlock","mappingConfig","modelValue","chartConfig","_withCtx","_createVNode","autoRender","_","filter","length","filterConfig","advanced","advancedConfig","disabled","isConfigValid","isMappingEmpty","onClick","saveToHistory","_hoisted_7","_hoisted_8","x","y","rx","isDark","_hoisted_9","d","stroke","_hoisted_10","_hoisted_6","_hoisted_11","generateChart","_hoisted_12","resetConfig","errorMessage","_hoisted_13","_hoisted_14","tooltip","visible","_normalizeStyle","ref","_hoisted_15","_hoisted_16","type","_hoisted_17","description","_hoisted_18","_hoisted_19","_Fragment","_renderList","dataRequirements","requirement","_hoisted_20","_hoisted_21","useCases","useCase"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\Chart\\ChartConfigPanel.vue"],"sourcesContent":["<template>\n<div class=\"chart-config-panel\">\n    <!-- 右侧边栏总标题 -->\n    <div class=\"panel-header-CCP\" style=\"position: relative; display: flex; align-items: center; justify-content: space-between;\">\n        <h3 style=\"margin: 0;\">\n            Chart Configuration\n        </h3>\n        <!-- 图表类型及相关提示 -->\n        <div\n            class=\"chart-type-tag\"\n            @mouseenter=\"showTooltip($event, props.selectedChartType)\"\n            @mouseleave=\"hideTooltip\"\n            style=\"position: relative; max-width: 50%; white-space: normal; word-break: break-all; text-align: right; right: 0; margin-right: 3%;\"\n        >\n            <span class=\"chart-type-icon\" v-html=\"getChartIcon(selectedChartType)\"></span>\n            <span class=\"chart-type-name\">{{ selectedChartType }}</span>\n        </div>\n    </div>\n\n    <!-- 动态数据映射配置区域 -->\n    <div class=\"mapping-section-toggle-wrapper\">\n        <ChartMappingConfig\n            v-if=\"currentTypeConfig.mapping\"\n            :mappingConfig=\"currentTypeConfig.mapping\"\n            v-model=\"chartConfig\"\n        >\n            <template #title-append>\n            <!-- 自动渲染开关 -->\n            <AutoRenderToggle v-model=\"autoRender\" />\n            </template>\n        </ChartMappingConfig>\n    </div>\n\n    <!-- 动态数据过滤配置区域 -->\n    <ChartFilterConfig\n        v-if=\"currentTypeConfig.filter && currentTypeConfig.filter.length\"\n        :filterConfig=\"currentTypeConfig.filter\"\n        v-model=\"chartConfig\"\n    />\n\n    <!-- 动态高级配置区域 -->\n    <ChartAdvancedConfig\n        v-if=\"currentTypeConfig.advanced && currentTypeConfig.advanced.length\"\n        :advancedConfig=\"currentTypeConfig.advanced\"\n        v-model=\"chartConfig\"\n    />\n\n    <!-- 存储到历史区按钮 -->\n    <button\n        class=\"save-history-btn animated-save-btn\"\n        :disabled=\"!isConfigValid || isMappingEmpty\"\n        @click=\"saveToHistory\"\n    >\n        <span class=\"save-icon\" aria-hidden=\"true\">\n            <svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"#aa55\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect x=\"3\" y=\"3\" width=\"16\" height=\"16\" rx=\"4\" :fill=\"isDark ? '#2d5b8c' : '#4F8CFF'\"/>\n                <path d=\"M7 11.5L10 14.5L15 9.5\" :stroke=\"isDark ? '#bfe3ff' : '#fff'\" stroke-width=\"2.2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>\n        </span>\n        <span class=\"save-text\">Save to Chart History</span>\n    </button>\n\n    <!-- 操作按钮 -->\n    <div class=\"action-section\">\n        <button\n            class=\"apply-btn\"\n            :disabled=\"autoRender || !isConfigValid\"\n            @click=\"generateChart\"\n        >\n            Apply Configuration\n        </button>\n        <button class=\"reset-btn\" @click=\"resetConfig\">\n            Reset Configuration\n        </button>\n    </div>\n\n    <!-- 错误提示 -->\n    <div v-if=\"errorMessage\" class=\"error-message\">\n        <div class=\"error-text\">{{ errorMessage }}</div>\n    </div>\n\n    <!-- 提示框 -->\n    <div\n        v-if=\"tooltip.visible\"\n        class=\"chart-tooltip\"\n        :style=\"tooltip.style\"\n        ref=\"tooltipRef\"\n    >\n        <div class=\"tooltip-header\">\n            <span class=\"tooltip-title\">{{ tooltip.type }}</span>\n            <span class=\"tooltip-description\">{{ tooltip.description }}</span>\n        </div>\n        <div class=\"tooltip-section\">\n            <h4>Data Requirements</h4>\n            <div class=\"tooltip-tags\">\n                <span\n                    v-for=\"requirement in tooltip.dataRequirements\"\n                    :key=\"requirement\"\n                    class=\"tooltip-tag data-tag\"\n                >\n                    {{ requirement }}\n                </span>\n            </div>\n        </div>\n        <div class=\"tooltip-section\">\n            <h4>Use Cases</h4>\n            <div class=\"tooltip-tags\">\n                <span\n                    v-for=\"useCase in tooltip.useCases\"\n                    :key=\"useCase\"\n                    class=\"tooltip-tag use-case-tag\"\n                >\n                    {{ useCase }}\n                </span>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch, reactive, nextTick } from 'vue'\nimport { chartIcons } from '../../assets/JS/SVG/chartIcons.js'\nimport { chartsTooltipConfig } from '../../assets/JS/Config/ChartsTooltipConfig.js'\nimport { chartTypeConfig } from '../../assets/JS/Config/ChartTypeConfig.js'\nimport AutoRenderToggle from '../Common/AutoRenderToggle.vue'\nimport ChartMappingConfig from './ChartMappingConfig.vue'\nimport ChartFilterConfig from './ChartFilterConfig.vue'\nimport ChartAdvancedConfig from './ChartAdvancedConfig.vue'\n\n// 当前类型的配置\nconst currentTypeConfig = computed(() => {\n  // 兼容首字母大写/小写\n    return chartTypeConfig[props.selectedChartType] || chartTypeConfig[props.selectedChartType.charAt(0).toUpperCase() + props.selectedChartType.slice(1)] || {}\n})\n\n// Props\nconst props = defineProps({\n    selectedChartType: {\n        type: String,\n        default: 'line'\n    },\n    currentFile: {\n        type: Object,\n        default: null\n    }\n})\n\n// Emits\nconst emit = defineEmits(['config-change', 'generate-chart'])\n\n// 响应式数据\nconst showDataFilter = ref(false)\nconst showAdvancedConfig = ref(false)\nconst errorMessage = ref('')\nconst tooltipRef = ref(null)\n\n// 自动渲染开关，默认手动渲染\nconst autoRender = ref(false)\n\n// 提示框状态\nconst tooltip = reactive({\n    visible: false,\n    type: '',\n    description: '',\n    dataRequirements: [],\n    useCases: [],\n    style: {}\n})\n\nlet tooltipTimeout = null\n\n// 拖拽状态\nconst isDragOver = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\nconst dragError = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\n// 图表配置\nconst chartConfig = ref({\n    xAxis: {\n        field: '',\n        type: ''\n    },\n    yAxis: {\n        field: '',\n        type: ''\n    },\n    series: [],\n    title: '',\n    colorScheme: 'default',\n    animation: true,\n    dataRange: 'all',\n    nullHandling: 'ignore'\n})\n\n// 计算属性\nconst isConfigValid = computed(() => {\n    const xValid = chartConfig.value.xAxis && chartConfig.value.xAxis.field;\n    const y = chartConfig.value.yAxis;\n    const yValid = Array.isArray(y) ? y.length > 0 : (y && y.field);\n    return xValid && yValid;\n})\n// 检查映射区是否为空（x、y、series都为空时禁用按钮）\nconst isMappingEmpty = computed(() => {\n    const x = chartConfig.value.xAxis && chartConfig.value.xAxis.field;\n    const y = chartConfig.value.yAxis && chartConfig.value.yAxis.field;\n    const s = Array.isArray(chartConfig.value.series) && chartConfig.value.series.length > 0;\n    return !x && !y && !s;\n})\n\n// 深色模式检测\nconst isDark = computed(() => {\n    return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n})\n\n// 监听 chartConfig 变化，自动渲染\nwatch(chartConfig, (val) => {\n    if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n    console.log('Current chartConfig:', JSON.parse(JSON.stringify(val)))\n}, { deep: true })\n\n// 监听自动渲染开关变化，切换为实时时立即渲染\nwatch(autoRender, (val) => {\n    if (val && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n})\n\nfunction getChartIcon (type) {\n    // 直接使用传入的类型，chartIcons.js 中的键是首字母大写格式\n    return chartIcons[type] || ''\n}\n\nfunction toggleDataFilter() {\n    showDataFilter.value = !showDataFilter.value\n}\n\nfunction toggleAdvancedConfig() {\n    showAdvancedConfig.value = !showAdvancedConfig.value\n}\n\n// 显示提示框\nfunction showTooltip(event, type) {\n    // 清除之前的定时器\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n    }\n    \n    // 设置1.2秒延迟\n    tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type]\n        if (config) {\n            tooltip.type = type\n            tooltip.description = config.description\n            tooltip.dataRequirements = config.dataRequirements\n            tooltip.useCases = config.useCases\n            tooltip.visible = true\n            \n            // 在下一个tick中计算位置，确保DOM已更新\n            nextTick(() => {\n                positionTooltip(event)\n            })\n        }\n    }, 1200) // 1.2秒延迟\n}\n\n// 隐藏提示框\nfunction hideTooltip() {\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n        tooltipTimeout = null\n    }\n    tooltip.visible = false\n}\n\n// 计算提示框位置，确保不超出屏幕\nfunction positionTooltip(event) {\n    if (!tooltipRef.value) return\n    \n    const tooltipEl = tooltipRef.value\n    const rect = tooltipEl.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    \n    let left = event.pageX + 10\n    let top = event.pageY + 10\n    \n    // 防止右边超出屏幕\n    if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10\n    }\n    \n    // 防止底部超出屏幕\n    if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10\n    }\n    \n    // 防止左边超出屏幕\n    if (left < 0) {\n        left = 10\n    }\n    \n    // 防止顶部超出屏幕\n    if (top < 0) {\n        top = 10\n    }\n    \n    tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n    }\n}\n\n// 拖拽处理\nfunction handleDragEnter (target) {\n    isDragOver.value[target] = true\n    dragError.value[target] = false\n    }\n\nfunction handleDragLeave (target) {\n    isDragOver.value[target] = false\n}\n\nfunction handleDragOver (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = true\n}\n\nfunction handleDrop (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = false\n\n    try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'))\n\n        if (dragData.type === 'column') {\n        const column = dragData.column\n\n        // 验证数据类型是否适合目标区域\n        if (validateColumnForTarget(column, target)) {\n            mapColumnToTarget(column, target)\n            errorMessage.value = ''\n        } else {\n            dragError.value[target] = true\n            errorMessage.value = `Column \"${column.name}\" data type is not suitable for ${getTargetName(target)}`\n            setTimeout(() => {\n            dragError.value[target] = false\n            errorMessage.value = ''\n            }, 3000)\n        }\n        }\n    } catch (error) {\n        console.error('Drop failed:', error)\n        errorMessage.value = 'Drag and drop failed, please try again'\n    }\n}\n\nfunction validateColumnForTarget (column, target) {\n    const columnType = column.type\n\n    switch (target) {\n        case 'xAxis':\n        // X轴通常接受类别型数据\n        return ['string', 'category', 'date'].includes(columnType)\n        case 'yAxis':\n        // Y轴通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        case 'series':\n        // 系列数据通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        default:\n        return true\n    }\n}\n\nfunction mapColumnToTarget (column, target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'series':\n        // 系列可以有多个，但这里简化为单个\n        chartConfig.value.series = [{\n            field: column.name,\n            type: column.type\n        }]\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeMapping (target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = { field: '', type: '' }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = { field: '', type: '' }\n        break\n        case 'series':\n        chartConfig.value.series = []\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeSeriesMapping (index) {\n    chartConfig.value.series.splice(index, 1)\n    emit('config-change', chartConfig.value)\n}\n\nfunction getTargetName (target) {\n    const names = {\n        xAxis: 'X Axis',\n        yAxis: 'Y Axis',\n        series: 'Data Series'\n    }\n    return names[target] || target\n}\n\nfunction generateChart () {\n    if (!isConfigValid.value) {\n        errorMessage.value = 'Please complete the required data mapping configuration'\n        return\n    }\n\n    emit('generate-chart', chartConfig.value)\n}\n\nfunction resetConfig () {\n    chartConfig.value = {\n        xAxis: { field: '', type: '' },\n        yAxis: { field: '', type: '' },\n        series: [],\n        title: '',\n        colorScheme: 'default',\n        animation: true,\n        dataRange: 'all',\n        nullHandling: 'ignore'\n    }\n\n    errorMessage.value = ''\n    emit('config-change', chartConfig.value)\n}\n\n// 监听图表类型变化\nwatch(() => props.selectedChartType, (newType) => {\n    // 根据图表类型调整配置\n    if (newType === 'Pie' || newType === 'pie') {\n        // 饼图不需要Y轴\n        chartConfig.value.yAxis = { field: '', type: '' }\n    }\n    // 自动渲染开启时，切换类型后立即触发渲染\n    if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n})\n\n// 存储到历史区\nfunction saveToHistory() {\n    // 触发父组件事件，ChartVisualizations.vue 需监听 @save-history\n    emit('save-history', chartConfig.value)\n}\n</script>\n\n<style scoped>\n\n\n@import '../../assets/CSS/ChartConfigPanel.css';\n\n\n.animated-save-btn {\n    width: 100%;\n    margin-bottom: 12px;\n    font-weight: 600;\n    font-size: 1.08em;\n    height: 48px;\n    min-height: 44px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.7em;\n    background: linear-gradient(90deg, var(--save-btn-bg1, #4F8CFF) 0%, var(--save-btn-bg2, #6FC3FF) 100%);\n    color: var(--save-btn-color, #fff);\n    border: none;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(79,140,255,0.10);\n    cursor: pointer;\n    transition: background 0.3s, box-shadow 0.3s, transform 0.18s;\n    position: relative;\n    overflow: hidden;\n    user-select: none;\n}\n.animated-save-btn:disabled {\n    background: var(--save-btn-bg-disabled, #b3cfff);\n    color: var(--save-btn-color-disabled, #fff);\n    cursor: not-allowed;\n    opacity: 0.7;\n    box-shadow: none;\n}\n.animated-save-btn .save-icon {\n    display: flex;\n    align-items: center;\n    transition: transform 0.3s cubic-bezier(.4,2,.6,1), filter 0.3s;\n}\n.animated-save-btn:not(:disabled):hover .save-icon {\n    transform: scale(1.18) rotate(-8deg);\n    filter: drop-shadow(0 2px 8px #4F8CFF66);\n}\n.animated-save-btn .save-text {\n    letter-spacing: 0.01em;\n    transition: color 0.2s;\n}\n.animated-save-btn:not(:disabled):hover .save-text {\n    color: #eaf4ff;\n}\n.animated-save-btn:active {\n    transform: scale(0.98);\n    box-shadow: 0 1px 2px rgba(79,140,255,0.08);\n}\n\n@media (prefers-color-scheme: dark) {\n    .animated-save-btn {\n        --save-btn-bg1: #2d5b8c;\n        --save-btn-bg2: #3e7bb6;\n        --save-btn-color: #eaf4ff;\n        --save-btn-bg-disabled: #2d3e5a;\n        --save-btn-color-disabled: #bfe3ff;\n    }\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}