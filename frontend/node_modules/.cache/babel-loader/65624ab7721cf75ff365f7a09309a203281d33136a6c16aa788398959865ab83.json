{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-type-selector\"\n};\nconst _hoisted_2 = {\n  class: \"selector-header\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"selected-indicator\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = {\n  class: \"indicator-text\"\n};\nconst _hoisted_6 = {\n  class: \"chart-types-grid\"\n};\nconst _hoisted_7 = [\"onClick\", \"title\"];\nconst _hoisted_8 = [\"innerHTML\"];\nconst _hoisted_9 = {\n  class: \"chart-label\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"chart-description\"\n};\nconst _hoisted_11 = {\n  class: \"description-header\"\n};\nconst _hoisted_12 = {\n  class: \"description-title\"\n};\nconst _hoisted_13 = {\n  class: \"description-badge\"\n};\nconst _hoisted_14 = {\n  class: \"description-text\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"chart-requirements\"\n};\nconst _hoisted_16 = {\n  class: \"requirements-list\"\n};\nconst _hoisted_17 = {\n  class: \"requirement-label\"\n};\nconst _hoisted_18 = {\n  class: \"requirement-types\"\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"requirement-required\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", {\n    class: \"selector-title\"\n  }, \"图表类型\", -1 /* HOISTED */)), $setup.selectedType ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"span\", {\n    class: \"indicator-icon\",\n    innerHTML: $setup.getChartIcon($setup.selectedType)\n  }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"span\", _hoisted_5, _toDisplayString($setup.selectedType), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chartTypes, type => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: type,\n      class: _normalizeClass([\"chart-type-item\", {\n        'active': $setup.selectedType === type\n      }]),\n      onClick: $event => $setup.selectChartType(type),\n      title: `选择 ${type} 图表`\n    }, [_createElementVNode(\"div\", {\n      class: \"chart-icon\",\n      innerHTML: $setup.getChartIcon(type)\n    }, null, 8 /* PROPS */, _hoisted_8), _createElementVNode(\"span\", _hoisted_9, _toDisplayString(type), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))]), $setup.selectedType ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", _hoisted_12, _toDisplayString($setup.selectedType) + \" 图表\", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_13, _toDisplayString($setup.getChartCategory($setup.selectedType)), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_14, _toDisplayString($setup.getChartDescription($setup.selectedType)), 1 /* TEXT */), $setup.getChartRequirements($setup.selectedType) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_cache[1] || (_cache[1] = _createElementVNode(\"h4\", {\n    class: \"requirements-title\"\n  }, \"数据要求\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.getChartRequirements($setup.selectedType), requirement => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: requirement.key,\n      class: \"requirement-item\"\n    }, [_createElementVNode(\"span\", _hoisted_17, _toDisplayString(requirement.label) + \":\", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_18, _toDisplayString(requirement.acceptTypes.join(', ')), 1 /* TEXT */), requirement.required ? (_openBlock(), _createElementBlock(\"span\", _hoisted_19, \"必需\")) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$setup","selectedType","_hoisted_3","innerHTML","getChartIcon","_hoisted_4","_hoisted_5","_toDisplayString","_createCommentVNode","_hoisted_6","_Fragment","_renderList","chartTypes","type","_normalizeClass","onClick","$event","selectChartType","title","_hoisted_8","_hoisted_9","_hoisted_7","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","getChartCategory","_hoisted_14","getChartDescription","getChartRequirements","_hoisted_15","_hoisted_16","requirement","_hoisted_17","label","_hoisted_18","acceptTypes","join","required","_hoisted_19"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\newArchitecture\\frontend_vue_design\\src\\components\\ChartTypeSelector.vue"],"sourcesContent":["<template>\n  <div class=\"chart-type-selector\">\n    <div class=\"selector-header\">\n      <h3 class=\"selector-title\">图表类型</h3>\n      <div class=\"selected-indicator\" v-if=\"selectedType\">\n        <span class=\"indicator-icon\" v-html=\"getChartIcon(selectedType)\"></span>\n        <span class=\"indicator-text\">{{ selectedType }}</span>\n      </div>\n    </div>\n\n    <div class=\"chart-types-grid\">\n      <button\n        v-for=\"type in chartTypes\"\n        :key=\"type\"\n        class=\"chart-type-item\"\n        :class=\"{ 'active': selectedType === type }\"\n        @click=\"selectChartType(type)\"\n        :title=\"`选择 ${type} 图表`\">\n\n        <div class=\"chart-icon\" v-html=\"getChartIcon(type)\"></div>\n        <span class=\"chart-label\">{{ type }}</span>\n      </button>\n    </div>\n\n    <div class=\"chart-description\" v-if=\"selectedType\">\n      <div class=\"description-header\">\n        <span class=\"description-title\">{{ selectedType }} 图表</span>\n        <span class=\"description-badge\">{{ getChartCategory(selectedType) }}</span>\n      </div>\n      <p class=\"description-text\">{{ getChartDescription(selectedType) }}</p>\n\n      <div class=\"chart-requirements\" v-if=\"getChartRequirements(selectedType)\">\n        <h4 class=\"requirements-title\">数据要求</h4>\n        <ul class=\"requirements-list\">\n          <li\n            v-for=\"requirement in getChartRequirements(selectedType)\"\n            :key=\"requirement.key\"\n            class=\"requirement-item\">\n            <span class=\"requirement-label\">{{ requirement.label }}:</span>\n            <span class=\"requirement-types\">{{ requirement.acceptTypes.join(', ') }}</span>\n            <span v-if=\"requirement.required\" class=\"requirement-required\">必需</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineEmits } from 'vue'\nimport { chartTypes, chartIcons } from '@/assets/JS/chartIcons.js'\n\n// Emits\nconst emit = defineEmits(['select'])\n\n// 选中的图表类型\nconst selectedType = ref('')\n\n// 获取图表图标\nfunction getChartIcon(type) {\n  return chartIcons[type] || ''\n}\n\n// 选择图表类型\nfunction selectChartType(type) {\n  selectedType.value = type\n  emit('select', type)\n}\n\n// 获取图表类别\nfunction getChartCategory(type) {\n  const categories = {\n    'Line': '趋势分析',\n    'Bar': '比较分析',\n    'Pie': '占比分析',\n    'Scatter': '相关分析',\n    'GEO/MAP': '地理分析',\n    'Candlestick': '金融分析',\n    'Radar': '多维分析',\n    'Boxplot': '统计分析',\n    'Heatmap': '密度分析',\n    'Graph': '关系分析',\n    'Lines': '趋势分析',\n    'Tree': '层次分析',\n    'Treemap': '层次占比',\n    'Sunburst': '层次占比',\n    'Parallel': '多维比较',\n    'Sankey': '流向分析',\n    'Funnel': '转化分析',\n    'Gauge': '指标展示',\n    'PictorialBar': '创意展示',\n    'ThemeRiver': '时序流',\n    'Calendar': '时间分析'\n  }\n  return categories[type] || '数据可视化'\n}\n\n// 获取图表描述\nfunction getChartDescription(type) {\n  const descriptions = {\n    'Line': '用于展示数据在连续时间间隔或有序类别上的变化趋势，适合时间序列数据分析。',\n    'Bar': '用于比较不同类别的数据大小，通过柱状图的高度来直观展示数据差异。',\n    'Pie': '用于展示各部分在整体中的占比关系，适合展示构成比例。',\n    'Scatter': '用于展示两个连续变量之间的相关关系，可以发现数据的分布模式。',\n    'GEO/MAP': '在地图上展示地理位置相关的数据，支持区域填色和点标记。',\n    'Candlestick': '专门用于展示股票、期货等金融数据的开盘、收盘、最高、最低价格。',\n    'Radar': '用于展示多个维度的数据比较，适合性能评估和多指标对比。',\n    'Boxplot': '用于展示数据的分布特征，包括中位数、四分位数和异常值。',\n    'Heatmap': '用颜色深浅来展示数据密度或强度，适合展示矩阵数据。',\n    'Graph': '用于展示节点之间的关系网络，适合社交网络、依赖关系等分析。',\n    'Lines': '多条线的组合图表，用于比较多个数据系列的趋势变化。',\n    'Tree': '用于展示层次结构数据，如组织架构、分类体系等。',\n    'Treemap': '用矩形面积展示层次数据的占比关系，空间利用率高。',\n    'Sunburst': '用同心圆展示层次数据，从内到外展示不同层级。',\n    'Parallel': '用于多维数据的平行坐标展示，便于发现高维数据模式。',\n    'Sankey': '用于展示数据流向和转换关系，流量粗细表示数量大小。',\n    'Funnel': '用于展示数据在各阶段的转化情况，适合漏斗分析。',\n    'Gauge': '用仪表盘形式展示单一指标的当前状态和目标达成情况。',\n    'PictorialBar': '用图片或符号替代传统柱状图，提供更好的视觉效果。',\n    'ThemeRiver': '用河流图展示时间序列数据的变化和流动趋势。',\n    'Calendar': '在日历格式上展示时间相关数据，适合周期性数据分析。'\n  }\n  return descriptions[type] || '数据可视化图表'\n}\n\n// 获取图表数据要求\nfunction getChartRequirements(type) {\n  const requirements = {\n    'Line': [\n      { key: 'xAxis', label: 'X轴', acceptTypes: ['string', 'date', 'integer'], required: true },\n      { key: 'yAxis', label: 'Y轴', acceptTypes: ['integer', 'float'], required: true },\n      { key: 'series', label: '系列', acceptTypes: ['string'], required: false }\n    ],\n    'Bar': [\n      { key: 'xAxis', label: 'X轴(类别)', acceptTypes: ['string'], required: true },\n      { key: 'yAxis', label: 'Y轴(数值)', acceptTypes: ['integer', 'float'], required: true },\n      { key: 'series', label: '系列', acceptTypes: ['string'], required: false }\n    ],\n    'Pie': [\n      { key: 'category', label: '类别', acceptTypes: ['string'], required: true },\n      { key: 'value', label: '数值', acceptTypes: ['integer', 'float'], required: true }\n    ],\n    'Scatter': [\n      { key: 'xAxis', label: 'X轴', acceptTypes: ['integer', 'float'], required: true },\n      { key: 'yAxis', label: 'Y轴', acceptTypes: ['integer', 'float'], required: true },\n      { key: 'size', label: '大小', acceptTypes: ['integer', 'float'], required: false },\n      { key: 'series', label: '系列', acceptTypes: ['string'], required: false }\n    ],\n    'Heatmap': [\n      { key: 'xAxis', label: 'X轴', acceptTypes: ['string', 'date'], required: true },\n      { key: 'yAxis', label: 'Y轴', acceptTypes: ['string'], required: true },\n      { key: 'value', label: '数值', acceptTypes: ['integer', 'float'], required: true }\n    ]\n  }\n  return requirements[type] || []\n}\n</script>\n\n<style scoped>\n.chart-type-selector {\n  padding: 16px;\n  height: 100%;\n  overflow-y: auto;\n  background: var(--bg-color);\n}\n\n.selector-header {\n  margin-bottom: 16px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n[data-theme=\"dark\"] .selector-header {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.selector-title {\n  font-size: 16px;\n  font-weight: 600;\n  color: var(--text-color);\n  margin: 0 0 8px 0;\n}\n\n.selected-indicator {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 4px 8px;\n  background: rgba(59, 130, 246, 0.1);\n  border-radius: 6px;\n  font-size: 12px;\n  color: #3b82f6;\n}\n\n[data-theme=\"dark\"] .selected-indicator {\n  background: rgba(96, 165, 250, 0.2);\n  color: #60a5fa;\n}\n\n.indicator-icon {\n  width: 16px;\n  height: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.chart-types-grid {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 8px;\n  margin-bottom: 20px;\n}\n\n.chart-type-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 12px 8px;\n  background: rgba(255, 255, 255, 0.6);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  min-height: 70px;\n  justify-content: center;\n}\n\n.chart-type-item:hover {\n  background: rgba(59, 130, 246, 0.05);\n  border-color: #3b82f6;\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.15);\n}\n\n.chart-type-item.active {\n  background: rgba(59, 130, 246, 0.1);\n  border-color: #3b82f6;\n  color: #3b82f6;\n  box-shadow: 0 2px 8px rgba(59, 130, 246, 0.2);\n}\n\n[data-theme=\"dark\"] .chart-type-item {\n  background: rgba(55, 65, 81, 0.6);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n[data-theme=\"dark\"] .chart-type-item:hover {\n  background: rgba(96, 165, 250, 0.1);\n  border-color: #60a5fa;\n  box-shadow: 0 4px 12px rgba(96, 165, 250, 0.15);\n}\n\n[data-theme=\"dark\"] .chart-type-item.active {\n  background: rgba(96, 165, 250, 0.2);\n  border-color: #60a5fa;\n  color: #60a5fa;\n  box-shadow: 0 2px 8px rgba(96, 165, 250, 0.2);\n}\n\n.chart-icon {\n  width: 24px;\n  height: 24px;\n  margin-bottom: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.chart-icon svg {\n  width: 100%;\n  height: 100%;\n}\n\n.chart-label {\n  font-size: 10px;\n  font-weight: 500;\n  color: inherit;\n  text-align: center;\n  line-height: 1.2;\n}\n\n.chart-description {\n  background: rgba(249, 250, 251, 0.8);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  border-radius: 8px;\n  padding: 16px;\n}\n\n[data-theme=\"dark\"] .chart-description {\n  background: rgba(55, 65, 81, 0.3);\n  border: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n.description-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n}\n\n.description-title {\n  font-size: 14px;\n  font-weight: 600;\n  color: var(--text-color);\n}\n\n.description-badge {\n  font-size: 10px;\n  padding: 2px 6px;\n  background: rgba(107, 114, 128, 0.1);\n  color: var(--text-secondary);\n  border-radius: 4px;\n}\n\n.description-text {\n  font-size: 12px;\n  color: var(--text-secondary);\n  line-height: 1.4;\n  margin: 0 0 12px 0;\n}\n\n.requirements-title {\n  font-size: 12px;\n  font-weight: 600;\n  color: var(--text-color);\n  margin: 0 0 8px 0;\n}\n\n.requirements-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.requirement-item {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 11px;\n  margin-bottom: 4px;\n  flex-wrap: wrap;\n}\n\n.requirement-label {\n  font-weight: 500;\n  color: var(--text-color);\n  min-width: 40px;\n}\n\n.requirement-types {\n  color: var(--text-secondary);\n  font-style: italic;\n  flex: 1;\n}\n\n.requirement-required {\n  background: rgba(239, 68, 68, 0.1);\n  color: #ef4444;\n  padding: 1px 4px;\n  border-radius: 3px;\n  font-size: 9px;\n  font-weight: 500;\n}\n\n/* 响应式设计 */\n@media (max-width: 1200px) {\n  .chart-types-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .chart-type-item {\n    flex-direction: row;\n    justify-content: flex-start;\n    gap: 8px;\n    min-height: auto;\n    padding: 8px 12px;\n  }\n  \n  .chart-icon {\n    width: 20px;\n    height: 20px;\n    margin-bottom: 0;\n  }\n  \n  .chart-label {\n    font-size: 12px;\n  }\n}\n\n/* 滚动条样式 */\n.chart-type-selector::-webkit-scrollbar {\n  width: 6px;\n}\n\n.chart-type-selector::-webkit-scrollbar-track {\n  background: rgba(0, 0, 0, 0.05);\n}\n\n.chart-type-selector::-webkit-scrollbar-thumb {\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 3px;\n}\n\n[data-theme=\"dark\"] .chart-type-selector::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.05);\n}\n\n[data-theme=\"dark\"] .chart-type-selector::-webkit-scrollbar-thumb {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n/* SVG 图标适配 */\n.chart-type-selector svg {\n  display: block;\n  flex-shrink: 0;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}