{"ast":null,"code":"import { ref, watch, onMounted, onBeforeUnmount, computed } from 'vue';\nimport * as echarts from 'echarts';\nexport default {\n  __name: 'ChartDisplay',\n  props: {\n    option: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n    const chartRef = ref(null);\n    let chartInstance = null;\n    const hasSeries = computed(() => {\n      return props.option && Array.isArray(props.option.series) && props.option.series.length > 0;\n    });\n    function renderChart() {\n      if (!hasSeries.value) return;\n      if (!chartInstance && chartRef.value) {\n        chartInstance = echarts.init(chartRef.value);\n      }\n      if (chartInstance && props.option) {\n        chartInstance.setOption(props.option, true);\n      }\n    }\n    watch(() => props.option, renderChart, {\n      deep: true\n    });\n    onMounted(renderChart);\n    onBeforeUnmount(() => {\n      if (chartInstance) chartInstance.dispose();\n    });\n    const __returned__ = {\n      props,\n      chartRef,\n      get chartInstance() {\n        return chartInstance;\n      },\n      set chartInstance(v) {\n        chartInstance = v;\n      },\n      hasSeries,\n      renderChart,\n      ref,\n      watch,\n      onMounted,\n      onBeforeUnmount,\n      computed,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","onBeforeUnmount","computed","echarts","props","__props","chartRef","chartInstance","hasSeries","option","Array","isArray","series","length","renderChart","value","init","setOption","deep","dispose"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/ChartDisplay.vue"],"sourcesContent":["<template>\n<div class=\"chart-display\">\n    <div v-if=\"!hasSeries\" class=\"empty-state\">\n        <div class=\"empty-icon\">üìä</div>\n        <h3>Fast Start</h3>\n        <p>ÂºÄÂßãÂàõÂª∫‰Ω†ÁöÑÁ¨¨‰∏Ä‰∏™ÂõæË°®</p>\n        <div class=\"quick-start-steps\">\n            <div class=\"step\">\n                <span class=\"step-number\">1</span>\n                <span class=\"step-text\">‰∏ä‰º†Êï∞ÊçÆÊñá‰ª∂</span>\n            </div>\n            <div class=\"step\">\n                <span class=\"step-number\">2</span>\n                <span class=\"step-text\">ÈÄâÊã©ÂõæË°®Á±ªÂûã</span>\n            </div>\n            <div class=\"step\">\n                <span class=\"step-number\">3</span>\n                <span class=\"step-text\">ÊãñÊãΩÂàóÂà∞ÈÖçÁΩÆÈù¢Êùø</span>\n            </div>\n        </div>\n    </div>\n    <div v-else ref=\"chartRef\" class=\"chart-container\"></div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, watch, onMounted, onBeforeUnmount, computed } from 'vue'\nimport * as echarts from 'echarts'\n\nconst props = defineProps({\n    option: { type: Object, required: true }\n})\n\nconst chartRef = ref(null)\nlet chartInstance = null\n\nconst hasSeries = computed(() => {\n    return props.option && Array.isArray(props.option.series) && props.option.series.length > 0\n})\n\nfunction renderChart() {\n    if (!hasSeries.value) return\n    if (!chartInstance && chartRef.value) {\n        chartInstance = echarts.init(chartRef.value)\n    }\n    if (chartInstance && props.option) {\n        chartInstance.setOption(props.option, true)\n    }\n}\n\nwatch(() => props.option, renderChart, { deep: true })\nonMounted(renderChart)\nonBeforeUnmount(() => {\n    if (chartInstance) chartInstance.dispose()\n})\n</script>\n\n<style scoped>\n.chart-display {\n    width: 100%;\n    height: 100%;\n    min-height: clamp(300px, 60vh, 600px); /* ÂìçÂ∫îÂºèÈ´òÂ∫¶ */\n    background: var(--bg-color, #fff);\n    border-radius: clamp(8px, 2vw, 12px);\n    box-shadow: 0 0 1px var(--text-color);\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: clamp(10px, 2vw, 20px);\n}\n\n.chart-container {\n    width: 100% !important; /* Ë¶ÜÁõñ inline style */\n    height: 100% !important;\n    min-height: inherit;\n}\n\n.empty-tip {\n    color: #aaa;\n    font-size: clamp(1em, 2vw, 1.2em);\n    text-align: center;\n    letter-spacing: 1px;\n    padding: 20px;\n    user-select: none;\n}\n\n/* Â∞èÂ±èÂπïÈÄÇÈÖç */\n@media (max-width: 767px) {\n    .chart-display {\n        height: 100%;      /* Â°´ÂÖÖÁà∂ÂÆπÂô® */\n        padding: 8px;\n        border-radius: 8px;\n    }\n\n    .empty-tip {\n        font-size: 0.9em;\n        padding: 10px;\n    }\n}\n</style>\n"],"mappings":"AA2BA,SAASA,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,KAAI;AACrE,OAAO,KAAKC,OAAO,MAAM,SAAQ;;;;;;;;;;;;;;IAFjC;IAIA,MAAMC,KAAK,GAAGC,OAAA;IAId,MAAMC,QAAQ,GAAGR,GAAG,CAAC,IAAI;IACzB,IAAIS,aAAa,GAAG,IAAG;IAEvB,MAAMC,SAAS,GAAGN,QAAQ,CAAC,MAAM;MAC7B,OAAOE,KAAK,CAACK,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACP,KAAK,CAACK,MAAM,CAACG,MAAM,CAAC,IAAIR,KAAK,CAACK,MAAM,CAACG,MAAM,CAACC,MAAM,GAAG;IAC9F,CAAC;IAED,SAASC,WAAWA,CAAA,EAAG;MACnB,IAAI,CAACN,SAAS,CAACO,KAAK,EAAE;MACtB,IAAI,CAACR,aAAa,IAAID,QAAQ,CAACS,KAAK,EAAE;QAClCR,aAAa,GAAGJ,OAAO,CAACa,IAAI,CAACV,QAAQ,CAACS,KAAK;MAC/C;MACA,IAAIR,aAAa,IAAIH,KAAK,CAACK,MAAM,EAAE;QAC/BF,aAAa,CAACU,SAAS,CAACb,KAAK,CAACK,MAAM,EAAE,IAAI;MAC9C;IACJ;IAEAV,KAAK,CAAC,MAAMK,KAAK,CAACK,MAAM,EAAEK,WAAW,EAAE;MAAEI,IAAI,EAAE;IAAK,CAAC;IACrDlB,SAAS,CAACc,WAAW;IACrBb,eAAe,CAAC,MAAM;MAClB,IAAIM,aAAa,EAAEA,aAAa,CAACY,OAAO,CAAC;IAC7C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}