{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/* eslint-disable */\n\n// 平行坐标系图配置生成器\n// 平行坐标系图配置生成器\nexport default function parallelOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  // 解包数据\n  const {\n    dimensions,\n    name\n  } = seriesData;\n  if (!dimensions || !name || !Array.isArray(dimensions) || !Array.isArray(name)) {\n    return {};\n  }\n\n  // 1. 获取所有维度名\n  const dimensionNames = Object.keys(name[0]);\n\n  // 2. 构造 parallelAxis\n  const parallelAxis = dimensionNames.map((dim, idx) => {\n    // 判断类型\n    const isNumber = typeof name[0][dim] === 'number';\n    return {\n      dim: idx,\n      name: dim,\n      type: isNumber ? 'value' : 'category'\n    };\n  });\n\n  // 3. 构造 series，支持多组数据\n  // dimensions 是二维数组，每个子数组是一组系列\n  const series = dimensions.map((group, idx) => ({\n    type: 'parallel',\n    name: name && name[idx] ? name[idx] : `系列${idx + 1}`,\n    lineStyle: {\n      width: 2\n    },\n    data: group.map(item => dimensionNames.map(dim => item[dim]))\n  }));\n\n  // 4. 组装 option\n  const option = {\n    parallelAxis,\n    parallel: {\n      left: '5%',\n      right: '13%',\n      bottom: '10%',\n      parallelAxisDefault: {\n        type: 'value',\n        nameLocation: 'end',\n        nameGap: 20\n      }\n    },\n    series,\n    ...customOption\n  };\n  return option;\n}","map":{"version":3,"names":["parallelOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","dimensions","name","Array","isArray","dimensionNames","Object","keys","parallelAxis","map","dim","idx","isNumber","type","series","group","lineStyle","width","data","item","option","parallel","left","right","bottom","parallelAxisDefault","nameLocation","nameGap"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/chartOptions/parallel.js"],"sourcesContent":["/* eslint-disable */\n\n// 平行坐标系图配置生成器\n// 平行坐标系图配置生成器\nexport default function parallelOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    // 解包数据\n    const { dimensions, name } = seriesData;\n\n    if (!dimensions || !name || !Array.isArray(dimensions) || !Array.isArray(name)) {\n        return {};\n    }\n\n    // 1. 获取所有维度名\n    const dimensionNames = Object.keys(name[0]);\n\n    // 2. 构造 parallelAxis\n    const parallelAxis = dimensionNames.map((dim, idx) => {\n        // 判断类型\n        const isNumber = typeof name[0][dim] === 'number';\n        return {\n            dim: idx,\n            name: dim,\n            type: isNumber ? 'value' : 'category'\n        };\n    });\n\n    // 3. 构造 series，支持多组数据\n    // dimensions 是二维数组，每个子数组是一组系列\n    const series = dimensions.map((group, idx) => ({\n        type: 'parallel',\n        name: name && name[idx] ? name[idx] : `系列${idx + 1}`,\n        lineStyle: {\n            width: 2\n        },\n        data: group.map(item => dimensionNames.map(dim => item[dim]))\n    }));\n\n    // 4. 组装 option\n    const option = {\n        parallelAxis,\n        parallel: {\n            left: '5%',\n            right: '13%',\n            bottom: '10%',\n            parallelAxisDefault: {\n                type: 'value',\n                nameLocation: 'end',\n                nameGap: 20\n            }\n        },\n        series,\n        ...customOption\n    };\n\n    return option;\n}"],"mappings":";;AAAA;;AAEA;AACA;AACA,eAAe,SAASA,cAAcA,CAACC,MAAM,EAAEC,WAAW,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,YAAY,GAAG,CAAC,CAAC,EAAE;EAC3H;EACA,MAAM;IAAEC,UAAU;IAAEC;EAAK,CAAC,GAAGH,UAAU;EAEvC,IAAI,CAACE,UAAU,IAAI,CAACC,IAAI,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,UAAU,CAAC,IAAI,CAACE,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;IAC5E,OAAO,CAAC,CAAC;EACb;;EAEA;EACA,MAAMG,cAAc,GAAGC,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE3C;EACA,MAAMM,YAAY,GAAGH,cAAc,CAACI,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;IAClD;IACA,MAAMC,QAAQ,GAAG,OAAOV,IAAI,CAAC,CAAC,CAAC,CAACQ,GAAG,CAAC,KAAK,QAAQ;IACjD,OAAO;MACHA,GAAG,EAAEC,GAAG;MACRT,IAAI,EAAEQ,GAAG;MACTG,IAAI,EAAED,QAAQ,GAAG,OAAO,GAAG;IAC/B,CAAC;EACL,CAAC,CAAC;;EAEF;EACA;EACA,MAAME,MAAM,GAAGb,UAAU,CAACQ,GAAG,CAAC,CAACM,KAAK,EAAEJ,GAAG,MAAM;IAC3CE,IAAI,EAAE,UAAU;IAChBX,IAAI,EAAEA,IAAI,IAAIA,IAAI,CAACS,GAAG,CAAC,GAAGT,IAAI,CAACS,GAAG,CAAC,GAAG,KAAKA,GAAG,GAAG,CAAC,EAAE;IACpDK,SAAS,EAAE;MACPC,KAAK,EAAE;IACX,CAAC;IACDC,IAAI,EAAEH,KAAK,CAACN,GAAG,CAACU,IAAI,IAAId,cAAc,CAACI,GAAG,CAACC,GAAG,IAAIS,IAAI,CAACT,GAAG,CAAC,CAAC;EAChE,CAAC,CAAC,CAAC;;EAEH;EACA,MAAMU,MAAM,GAAG;IACXZ,YAAY;IACZa,QAAQ,EAAE;MACNC,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE,KAAK;MACZC,MAAM,EAAE,KAAK;MACbC,mBAAmB,EAAE;QACjBZ,IAAI,EAAE,OAAO;QACba,YAAY,EAAE,KAAK;QACnBC,OAAO,EAAE;MACb;IACJ,CAAC;IACDb,MAAM;IACN,GAAGd;EACP,CAAC;EAED,OAAOoB,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}