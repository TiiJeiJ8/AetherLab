{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"preview-content\"\n};\nconst _hoisted_2 = {\n  class: \"preview-header\"\n};\nconst _hoisted_3 = {\n  class: \"header-info\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"file-info\"\n};\nconst _hoisted_5 = {\n  class: \"preview-table-wrapper\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"table-container\"\n};\nconst _hoisted_7 = {\n  class: \"preview-table\"\n};\nconst _hoisted_8 = [\"title\"];\nconst _hoisted_9 = {\n  class: \"row-number\"\n};\nconst _hoisted_10 = [\"title\"];\nconst _hoisted_11 = {\n  key: 1,\n  class: \"empty-tip\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Transition, {\n    name: \"modal-fade\"\n  }, {\n    default: _withCtx(() => [$props.show ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"preview-modal\",\n      onClick: _withModifiers($setup.onClose, [\"self\"])\n    }, [_createVNode(_Transition, {\n      name: \"modal-slide\",\n      appear: \"\"\n    }, {\n      default: _withCtx(() => [$props.show ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 头部 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h3\", null, _toDisplayString($props.currentFile?.name || 'Data Preview'), 1 /* TEXT */), $props.currentFile ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString($setup.formatFileSize($props.currentFile.size)) + \" | \" + _toDisplayString($props.currentFile.rows || 0) + \" row × \" + _toDisplayString($props.currentFile.columns || 0) + \" column (Only first 100 rows shown) \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"button\", {\n        class: \"close-btn\",\n        onClick: $setup.onClose\n      }, \"×\")]), _createCommentVNode(\" 数据表格预览 \"), _createElementVNode(\"div\", _hoisted_5, [$setup.dataRows.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"table\", _hoisted_7, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"th\", {\n        class: \"row-number\"\n      }, \"#\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tableHeaders, (header, idx) => {\n        return _openBlock(), _createElementBlock(\"th\", {\n          key: idx,\n          title: header.length > 12 ? header : '',\n          class: \"column-header\"\n        }, _toDisplayString(header), 9 /* TEXT, PROPS */, _hoisted_8);\n      }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.dataRows, (row, idx) => {\n        return _openBlock(), _createElementBlock(\"tr\", {\n          key: idx\n        }, [_createElementVNode(\"td\", _hoisted_9, _toDisplayString(idx + 1), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tableHeaders, (header, headerIdx) => {\n          return _openBlock(), _createElementBlock(\"td\", {\n            key: headerIdx,\n            title: $setup.getCellValue(row, header, headerIdx)\n          }, _toDisplayString($setup.getCellValue(row, header, headerIdx)), 9 /* TEXT, PROPS */, _hoisted_10);\n        }), 128 /* KEYED_FRAGMENT */))]);\n      }), 128 /* KEYED_FRAGMENT */))])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _cache[1] || (_cache[1] = [_createElementVNode(\"div\", {\n        class: \"empty-icon\"\n      }, \"📊\", -1 /* HOISTED */), _createElementVNode(\"p\", null, \"暂无数据可预览\", -1 /* HOISTED */)])))])])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    })])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["key","class","_createBlock","_Transition","name","default","_withCtx","$props","show","_createElementBlock","onClick","_withModifiers","$setup","onClose","_createVNode","appear","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","currentFile","_hoisted_4","formatFileSize","size","rows","columns","_hoisted_5","dataRows","length","_hoisted_6","_hoisted_7","_Fragment","_renderList","tableHeaders","header","idx","title","_hoisted_8","row","_hoisted_9","headerIdx","getCellValue","_hoisted_10","_hoisted_11","_cache","_"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\DataPreviewModal.vue"],"sourcesContent":["<template>\n<transition name=\"modal-fade\">\n    <div v-if=\"show\"\n        class=\"preview-modal\"\n        @click.self=\"onClose\">\n        <transition name=\"modal-slide\" appear>\n            <div class=\"preview-content\" v-if=\"show\">\n                <!-- 头部 -->\n                <div class=\"preview-header\">\n                    <div class=\"header-info\">\n                        <h3>{{ currentFile?.name || 'Data Preview' }}</h3>\n                        <span class=\"file-info\" v-if=\"currentFile\">\n                            {{ formatFileSize(currentFile.size) }} |\n                            {{ currentFile.rows || 0 }} row × {{ currentFile.columns || 0 }} column (Only first 100 rows shown)\n                        </span>\n                    </div>\n                    <button class=\"close-btn\" @click=\"onClose\">×</button>\n                </div>\n\n                <!-- 数据表格预览 -->\n                <div class=\"preview-table-wrapper\">\n                    <div v-if=\"dataRows.length\" class=\"table-container\">\n                        <table class=\"preview-table\">\n                            <thead>\n                                <tr>\n                                    <th class=\"row-number\">#</th>\n                                    <th v-for=\"(header, idx) in tableHeaders\"\n                                        :key=\"idx\"\n                                        :title=\"header.length > 12 ? header : ''\"\n                                        class=\"column-header\">{{ header }}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"(row, idx) in dataRows\"\n                                    :key=\"idx\">\n                                    <td class=\"row-number\">{{ idx + 1 }}</td>\n                                    <td v-for=\"(header, headerIdx) in tableHeaders\"\n                                        :key=\"headerIdx\"\n                                        :title=\"getCellValue(row, header, headerIdx)\">\n                                        {{ getCellValue(row, header, headerIdx) }}\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div v-else class=\"empty-tip\">\n                        <div class=\"empty-icon\">📊</div>\n                        <p>暂无数据可预览</p>\n                    </div>\n                </div>\n            </div>\n        </transition>\n    </div>\n</transition>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed } from 'vue'\n\nconst props = defineProps({\n    show: Boolean,\n    currentFile: Object,\n    previewData: {\n        type: Array,\n        default: () => []\n    },\n    isSidePreview: {\n        type: Boolean,\n        default: false\n    }\n})\n\nconst emit = defineEmits(['close'])\n\n// 表头计算 - 修复数据类型处理逻辑\nconst tableHeaders = computed(() => {\n    if (!props.previewData.length) return []\n    \n    // 获取第一行数据作为表头\n    const firstRow = props.previewData[0]\n    if (Array.isArray(firstRow)) {\n        // 如果是数组格式，第一行通常是表头\n        return firstRow\n    } else if (typeof firstRow === 'object' && firstRow !== null) {\n        // 如果是对象格式，使用对象的键名作为标题\n        return Object.keys(firstRow)\n    }\n    return []\n})\n\n// 实际数据行（根据数据类型决定是否排除标题行）\nconst dataRows = computed(() => {\n    if (!props.previewData.length) return []\n    \n    const firstRow = props.previewData[0]\n    \n    // 调试：打印数据结构\n    console.log('DataPreviewModal - First row:', firstRow)\n    console.log('DataPreviewModal - Is array:', Array.isArray(firstRow))\n    console.log('DataPreviewModal - Full data:', props.previewData)\n    \n    if (Array.isArray(firstRow)) {\n        // 检查第一行是否为字符串（表头）还是数字（数据）\n        const hasStringHeaders = firstRow.some(cell => typeof cell === 'string' && isNaN(cell))\n        if (hasStringHeaders) {\n            // 第一行是表头，跳过它\n            return props.previewData.slice(1)\n        } else {\n            // 第一行就是数据，不跳过\n            return props.previewData\n        }\n    } else if (typeof firstRow === 'object' && firstRow !== null) {\n        // 对象格式：所有行都是数据行\n        return props.previewData\n    }\n    return props.previewData\n})\n\n// 获取单元格值的方法\nfunction getCellValue(row, header, index) {\n    if (Array.isArray(row)) {\n        return row[index] || ''\n    } else if (typeof row === 'object' && row !== null) {\n        // 对于对象，优先使用表头作为键来获取值\n        return row[header] !== undefined ? row[header] : ''\n    }\n    return row || ''\n}\n\n// 格式化文件大小\nfunction formatFileSize(bytes) {\n    if (!bytes) return '0 Bytes'\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\nfunction onClose() {\n    emit('close')\n}\n</script>\n\n<style scoped>\n@import '../assets/CSS/DataPreviewModal.css';\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}