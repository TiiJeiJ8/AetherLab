{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"panel-title\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = {\n  class: \"panel-controls\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"panel-content\"\n};\nconst _hoisted_7 = {\n  class: \"file-summary\"\n};\nconst _hoisted_8 = {\n  class: \"summary-item\"\n};\nconst _hoisted_9 = {\n  class: \"summary-value\"\n};\nconst _hoisted_10 = {\n  class: \"summary-item\"\n};\nconst _hoisted_11 = {\n  class: \"summary-value\"\n};\nconst _hoisted_12 = {\n  class: \"summary-item\"\n};\nconst _hoisted_13 = {\n  class: \"summary-value\"\n};\nconst _hoisted_14 = {\n  class: \"columns-container\"\n};\nconst _hoisted_15 = {\n  class: \"columns-header\"\n};\nconst _hoisted_16 = {\n  class: \"columns-count\"\n};\nconst _hoisted_17 = {\n  class: \"columns-list\"\n};\nconst _hoisted_18 = [\"onDragstart\"];\nconst _hoisted_19 = {\n  class: \"column-info\"\n};\nconst _hoisted_20 = {\n  class: \"column-header\"\n};\nconst _hoisted_21 = {\n  class: \"column-name\"\n};\nconst _hoisted_22 = {\n  class: \"column-details\"\n};\nconst _hoisted_23 = {\n  class: \"sample-data\"\n};\nconst _hoisted_24 = {\n  class: \"sample-value\"\n};\nconst _hoisted_25 = {\n  key: 0,\n  class: \"column-stats\"\n};\nconst _hoisted_26 = {\n  key: 0,\n  class: \"stat-item\"\n};\nconst _hoisted_27 = {\n  key: 1,\n  class: \"stat-item\"\n};\nconst _hoisted_28 = {\n  class: \"drag-handle\",\n  title: \"Drag to configure chart\"\n};\nconst _hoisted_29 = [\"innerHTML\"];\nexport function render(_ctx, _cache) {\n  return _ctx.isVisible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"file-structure-panel\", {\n      'is-focused': _ctx.isFocused,\n      'dragging': _ctx.isDragging\n    }]),\n    style: _normalizeStyle(_ctx.panelPosition),\n    onMouseenter: _cache[4] || (_cache[4] = (...args) => _ctx.handleMouseEnter && _ctx.handleMouseEnter(...args)),\n    onMouseleave: _cache[5] || (_cache[5] = (...args) => _ctx.handleMouseLeave && _ctx.handleMouseLeave(...args)),\n    onMousedown: _cache[6] || (_cache[6] = (...args) => _ctx.handleMouseDown && _ctx.handleMouseDown(...args)),\n    ref: \"panelRef\"\n  }, [_createCommentVNode(\" 面板头部 \"), _createElementVNode(\"div\", {\n    class: \"panel-header\",\n    onMousedown: _cache[2] || (_cache[2] = _withModifiers((...args) => _ctx.startDrag && _ctx.startDrag(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"span\", {\n    class: \"panel-icon\",\n    innerHTML: _ctx.getThemeIcon('structure')\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"span\", null, _toDisplayString(_ctx.fileInfo.name) + \" - Structure\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    class: \"control-btn minimize-btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.minimize && _ctx.minimize(...args)),\n    title: \"Minimize\"\n  }, [_createElementVNode(\"span\", {\n    innerHTML: _ctx.getThemeIcon('minimize')\n  }, null, 8 /* PROPS */, _hoisted_4)]), _createElementVNode(\"button\", {\n    class: \"control-btn close-btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.close && _ctx.close(...args)),\n    title: \"Close\"\n  }, [_createElementVNode(\"span\", {\n    innerHTML: _ctx.getThemeIcon('close')\n  }, null, 8 /* PROPS */, _hoisted_5)])])], 32 /* NEED_HYDRATION */), _createCommentVNode(\" 面板内容 \"), !_ctx.isMinimized ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createCommentVNode(\" 文件信息摘要 \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_cache[7] || (_cache[7] = _createElementVNode(\"span\", {\n    class: \"summary-label\"\n  }, \"Rows:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_9, _toDisplayString(_ctx.dataRows), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_10, [_cache[8] || (_cache[8] = _createElementVNode(\"span\", {\n    class: \"summary-label\"\n  }, \"Columns:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_11, _toDisplayString(_ctx.fileInfo.columns || 0), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_12, [_cache[9] || (_cache[9] = _createElementVNode(\"span\", {\n    class: \"summary-label\"\n  }, \"Size:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_13, _toDisplayString(_ctx.formatFileSize(_ctx.fileInfo.size)), 1 /* TEXT */)])]), _createCommentVNode(\" 列结构列表 \"), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_cache[10] || (_cache[10] = _createElementVNode(\"h4\", null, \"Data Columns\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_16, _toDisplayString(_ctx.columns.length) + \" columns\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_17, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.columns, (column, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"column-item\", {\n        'dragging': _ctx.draggedColumn === index\n      }]),\n      draggable: \"true\",\n      onDragstart: $event => _ctx.handleDragStart(column, index, $event),\n      onDragend: _cache[3] || (_cache[3] = (...args) => _ctx.handleDragEnd && _ctx.handleDragEnd(...args))\n    }, [_createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"span\", _hoisted_21, _toDisplayString(column.name), 1 /* TEXT */), _createElementVNode(\"span\", {\n      class: _normalizeClass([\"column-type\", _ctx.getColumnTypeClass(column.type)])\n    }, _toDisplayString(column.type), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_cache[11] || (_cache[11] = _createElementVNode(\"span\", {\n      class: \"sample-label\"\n    }, \"Sample:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_24, _toDisplayString(column.sample), 1 /* TEXT */)]), column.stats ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [column.stats.nullCount !== undefined ? (_openBlock(), _createElementBlock(\"span\", _hoisted_26, \" Nulls: \" + _toDisplayString(column.stats.nullCount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), column.stats.uniqueCount !== undefined ? (_openBlock(), _createElementBlock(\"span\", _hoisted_27, \" Unique: \" + _toDisplayString(column.stats.uniqueCount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"span\", {\n      innerHTML: _ctx.getThemeIcon('drag')\n    }, null, 8 /* PROPS */, _hoisted_29)])], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_18);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)], 38 /* CLASS, STYLE, NEED_HYDRATION */)) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["class","key","title","_ctx","isVisible","_createElementBlock","_normalizeClass","isFocused","isDragging","style","_normalizeStyle","panelPosition","onMouseenter","_cache","args","handleMouseEnter","onMouseleave","handleMouseLeave","onMousedown","handleMouseDown","ref","_createCommentVNode","_createElementVNode","_withModifiers","startDrag","_hoisted_1","innerHTML","getThemeIcon","_hoisted_2","_toDisplayString","fileInfo","name","_hoisted_3","onClick","minimize","_hoisted_4","close","_hoisted_5","isMinimized","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","dataRows","_hoisted_10","_hoisted_11","columns","_hoisted_12","_hoisted_13","formatFileSize","size","_hoisted_14","_hoisted_15","_hoisted_16","length","_hoisted_17","_Fragment","_renderList","column","index","draggedColumn","draggable","onDragstart","$event","handleDragStart","onDragend","handleDragEnd","_hoisted_19","_hoisted_20","_hoisted_21","getColumnTypeClass","type","_hoisted_22","_hoisted_23","_hoisted_24","sample","stats","_hoisted_25","nullCount","undefined","_hoisted_26","uniqueCount","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_18"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\FileStructurePanel.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"isVisible\"\n    class=\"file-structure-panel\"\n    :class=\"{\n      'is-focused': isFocused,\n      'dragging': isDragging\n    }\"\n    :style=\"panelPosition\"\n    @mouseenter=\"handleMouseEnter\"\n    @mouseleave=\"handleMouseLeave\"\n    @mousedown=\"handleMouseDown\"\n    ref=\"panelRef\">\n    <!-- 面板头部 -->\n    <div\n      class=\"panel-header\"\n      @mousedown.prevent=\"startDrag\">\n      <div class=\"panel-title\">\n        <span class=\"panel-icon\" v-html=\"getThemeIcon('structure')\"></span>\n        <span>{{ fileInfo.name }} - Structure</span>\n      </div>\n      <div class=\"panel-controls\">\n        <button class=\"control-btn minimize-btn\" @click=\"minimize\" title=\"Minimize\">\n          <span v-html=\"getThemeIcon('minimize')\"></span>\n        </button>\n        <button class=\"control-btn close-btn\" @click=\"close\" title=\"Close\">\n          <span v-html=\"getThemeIcon('close')\"></span>\n        </button>\n      </div>\n    </div>\n\n    <!-- 面板内容 -->\n    <div class=\"panel-content\" v-if=\"!isMinimized\">\n      <!-- 文件信息摘要 -->\n      <div class=\"file-summary\">\n        <div class=\"summary-item\">\n          <span class=\"summary-label\">Rows:</span>\n          <span class=\"summary-value\">{{ dataRows }}</span>\n        </div>\n        <div class=\"summary-item\">\n          <span class=\"summary-label\">Columns:</span>\n          <span class=\"summary-value\">{{ fileInfo.columns || 0 }}</span>\n        </div>\n        <div class=\"summary-item\">\n          <span class=\"summary-label\">Size:</span>\n          <span class=\"summary-value\">{{ formatFileSize(fileInfo.size) }}</span>\n        </div>\n      </div>\n\n      <!-- 列结构列表 -->\n      <div class=\"columns-container\">\n        <div class=\"columns-header\">\n          <h4>Data Columns</h4>\n          <span class=\"columns-count\">{{ columns.length }} columns</span>\n        </div>\n        <div class=\"columns-list\">\n          <div\n            v-for=\"(column, index) in columns\"\n            :key=\"index\"\n            class=\"column-item\"\n            :class=\"{ 'dragging': draggedColumn === index }\"\n            draggable=\"true\"\n            @dragstart=\"handleDragStart(column, index, $event)\"\n            @dragend=\"handleDragEnd\">\n            <div class=\"column-info\">\n              <div class=\"column-header\">\n                <span class=\"column-name\">{{ column.name }}</span>\n                <span class=\"column-type\" :class=\"getColumnTypeClass(column.type)\">\n                  {{ column.type }}\n                </span>\n              </div>\n              <div class=\"column-details\">\n                <div class=\"sample-data\">\n                  <span class=\"sample-label\">Sample:</span>\n                  <span class=\"sample-value\">{{ column.sample }}</span>\n                </div>\n                <div class=\"column-stats\" v-if=\"column.stats\">\n                  <span class=\"stat-item\" v-if=\"column.stats.nullCount !== undefined\">\n                    Nulls: {{ column.stats.nullCount }}\n                  </span>\n                  <span class=\"stat-item\" v-if=\"column.stats.uniqueCount !== undefined\">\n                    Unique: {{ column.stats.uniqueCount }}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div class=\"drag-handle\" title=\"Drag to configure chart\">\n              <span v-html=\"getThemeIcon('drag')\"></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n// 接收当前文件（文件名或对象）\nconst props = defineProps({\n  currentFile: {\n    type: [Object, String],\n    required: true\n  }\n})\n/* eslint-disable */\nimport { ref, computed, watch, onMounted, onUnmounted, nextTick } from 'vue'\nimport { getThemeIcon } from '@/assets/JS/SVG/icons.js'\n\n// Props\nconst props = defineProps({\n  fileInfo: {\n    type: Object,\n    required: true\n  },\n  visible: {\n    type: Boolean,\n    default: false\n  }\n})\n\n// Emits\nconst emit = defineEmits(['close', 'minimize', 'column-drag'])\n\n// 面板状态\nconst isVisible = ref(false)\nconst isMinimized = ref(false)\nconst isFocused = ref(true)\nconst isDragging = ref(false)\nconst draggedColumn = ref(null)\n\n// 拖拽相关状态\nconst dragOffset = ref({ x: 0, y: 0 })\nconst panelPosition = ref({\n  position: 'fixed',\n  top: '120px',\n  right: '20px',\n  width: '380px',\n  maxHeight: '70vh'\n})\n\n// DOM 引用\nconst panelRef = ref(null)\n\n// 文件列结构数据\nconst columns = ref([])\n\n// 计算实际数据行数（排除标题行）\nconst dataRows = computed(() => {\n  if (!props.fileInfo || !props.fileInfo.data || !Array.isArray(props.fileInfo.data)) {\n    return 0\n  }\n  return Math.max(0, props.fileInfo.data.length - 1) // 减去标题行\n})\n\n// 监听 visible 属性变化\nwatch(() => props.visible, (newVal) => {\n  isVisible.value = newVal\n  if (newVal) {\n    isFocused.value = true\n    isMinimized.value = false\n    nextTick(() => {\n      analyzeFileStructure()\n    })\n  }\n}, { immediate: true })\n\n// 监听文件信息变化\nwatch(() => props.fileInfo, (newFileInfo) => {\n  if (newFileInfo && isVisible.value) {\n    analyzeFileStructure()\n  }\n}, { deep: true })\n\n// 分析文件结构\nasync function analyzeFileStructure() {\n  if (!props.fileInfo || !props.fileInfo.data) {\n    console.warn('No file data available for structure analysis')\n    return\n  }\n\n  const data = props.fileInfo.data\n  if (!Array.isArray(data) || data.length === 0) {\n    console.warn('Invalid data format for structure analysis')\n    return\n  }\n\n  // 使用第一行作为列名（如果是表头）\n  const headers = props.fileInfo.headers || Object.keys(data[0])\n  \n  // 分析每列的数据类型和样本\n  const analyzedColumns = headers.map((header, index) => {\n    const columnData = data.slice(1).map(row => { // 跳过第一行（标题行）\n      if (Array.isArray(row)) {\n        return row[index]\n      } else if (typeof row === 'object') {\n        return row[header]\n      }\n      return null\n    }).filter(val => val !== null && val !== undefined && val !== '')\n\n    // 推断数据类型\n    const type = inferDataType(columnData)\n    \n    // 获取样本数据（跳过标题行）\n    const sample = columnData.slice(0, 3).join(', ') || 'No data'\n    \n    // 统计信息（总行数需要减去标题行）\n    const stats = calculateColumnStats(columnData, data.length - 1)\n\n    return {\n      name: header,\n      type: type,\n      sample: sample,\n      stats: stats,\n      index: index\n    }\n  })\n\n  columns.value = analyzedColumns\n}\n\n// 推断数据类型\nfunction inferDataType(columnData) {\n  if (columnData.length === 0) return 'unknown'\n  \n  const sample = columnData.slice(0, Math.min(20, columnData.length)) // 取更多样本进行分析\n  const uniqueValues = [...new Set(sample)]\n  const uniqueCount = uniqueValues.length\n  \n  // 检查是否为明确的布尔值（true/false字符串）\n  const isTrueFalseBool = sample.every(val => {\n    const str = String(val).toLowerCase()\n    return str === 'true' || str === 'false' || val === true || val === false\n  })\n  \n  if (isTrueFalseBool && uniqueCount <= 2) {\n    return 'boolean'\n  }\n  \n  // 检查是否为数字\n  const isNumeric = sample.every(val => !isNaN(val) && !isNaN(parseFloat(val)))\n  \n  if (isNumeric) {\n    const isInteger = sample.every(val => Number.isInteger(parseFloat(val)))\n    \n    if (isInteger) {\n      // 对于整数，需要智能判断是布尔值、类别值还是普通整数\n      if (uniqueCount === 2 && uniqueValues.every(val => val === 0 || val === 1 || val === '0' || val === '1')) {\n        // 只有两个唯一值且都是0/1，可能是布尔值\n        // 但需要考虑数据的语义上下文，这里倾向于认为是布尔值\n        return 'boolean'\n      } else if (uniqueCount <= 10 && uniqueCount < sample.length * 0.5) {\n        // 唯一值较少且明显少于样本数量的一半，可能是类别值\n        return 'category'\n      } else {\n        return 'integer'\n      }\n    } else {\n      return 'number'\n    }\n  }\n  \n  // 检查是否为日期\n  const isDate = sample.some(val => !isNaN(Date.parse(val)))\n  if (isDate) return 'date'\n  \n  // 检查是否为类别值（字符串类型的类别）\n  if (uniqueCount <= 10 && uniqueCount < sample.length * 0.5) {\n    return 'category'\n  }\n  \n  // 默认为字符串\n  return 'string'\n}\n\n// 计算列统计信息\nfunction calculateColumnStats(columnData, totalRows) {\n  const nonEmptyCount = columnData.length\n  const nullCount = totalRows - nonEmptyCount\n  const uniqueCount = new Set(columnData).size\n  \n  return {\n    nullCount,\n    uniqueCount,\n    fillRate: Math.round((nonEmptyCount / totalRows) * 100)\n  }\n}\n\n// 获取列类型样式类\nfunction getColumnTypeClass(type) {\n  const typeClasses = {\n    'string': 'type-string',\n    'number': 'type-number',\n    'integer': 'type-integer',\n    'date': 'type-date',\n    'boolean': 'type-boolean',\n    'category': 'type-category',\n    'unknown': 'type-unknown'\n  }\n  return typeClasses[type] || 'type-unknown'\n}\n\n// 格式化文件大小\nfunction formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes'\n  const k = 1024\n  const sizes = ['Bytes', 'KB', 'MB', 'GB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\n// 鼠标事件处理\nfunction handleMouseEnter() {\n  isFocused.value = true\n}\n\nfunction handleMouseLeave() {\n  if (!isDragging.value) {\n    isFocused.value = false\n  }\n}\n\nfunction handleMouseDown() {\n  isFocused.value = true\n}\n\n// 面板拖拽功能\nfunction startDrag(event) {\n  isDragging.value = true\n  isFocused.value = true\n  \n  const rect = panelRef.value.getBoundingClientRect()\n  dragOffset.value = {\n    x: event.clientX - rect.left,\n    y: event.clientY - rect.top\n  }\n  \n  document.addEventListener('mousemove', handlePanelDrag, { passive: false })\n  document.addEventListener('mouseup', stopDrag, { passive: false })\n  \n  event.preventDefault()\n  event.stopPropagation()\n}\n\nfunction handlePanelDrag(event) {\n  if (!isDragging.value) return\n  \n  requestAnimationFrame(() => {\n    const newX = event.clientX - dragOffset.value.x\n    const newY = event.clientY - dragOffset.value.y\n    \n    // 确保面板不会拖拽到屏幕外\n    const maxX = window.innerWidth - 400\n    const maxY = window.innerHeight - 300\n    \n    const clampedX = Math.max(0, Math.min(newX, maxX))\n    const clampedY = Math.max(0, Math.min(newY, maxY))\n    \n    panelPosition.value = {\n      ...panelPosition.value,\n      top: `${clampedY}px`,\n      left: `${clampedX}px`,\n      right: 'auto'\n    }\n  })\n  \n  event.preventDefault()\n}\n\nfunction stopDrag(event) {\n  isDragging.value = false\n  \n  document.removeEventListener('mousemove', handlePanelDrag)\n  document.removeEventListener('mouseup', stopDrag)\n  \n  setTimeout(() => {\n    if (!isDragging.value) {\n      isFocused.value = false\n    }\n  }, 150)\n  \n  event.preventDefault()\n}\n\n// 列拖拽功能\nfunction handleDragStart(column, index, event) {\n  draggedColumn.value = index\n  \n  // 设置拖拽数据，补充 file 字段\n  const dragData = {\n    type: 'column',\n    column: {\n      ...column,\n      file: props.currentFile?.name || props.currentFile // 兼容 currentFile 结构\n    },\n    source: 'file-structure'\n  }\n  event.dataTransfer.setData('application/json', JSON.stringify(dragData))\n  event.dataTransfer.effectAllowed = 'copy'\n  // 自定义拖拽图像\n  const dragImage = createDragImage(column)\n  event.dataTransfer.setDragImage(dragImage, 0, 0)\n  emit('column-drag', { action: 'start', column: dragData.column, index })\n}\n\nfunction handleDragEnd() {\n  draggedColumn.value = null\n  emit('column-drag', { action: 'end' })\n}\n\n// 创建拖拽图像\nfunction createDragImage(column) {\n  const dragElement = document.createElement('div')\n  dragElement.className = 'drag-preview'\n  dragElement.innerHTML = `\n    <div class=\"drag-preview-content\">\n      <span class=\"drag-column-name\">${column.name}</span>\n      <span class=\"drag-column-type\">${column.type}</span>\n    </div>\n  `\n  \n  // 添加样式\n  dragElement.style.cssText = `\n    position: absolute;\n    top: -1000px;\n    left: -1000px;\n    background: rgba(59, 130, 246, 0.9);\n    color: white;\n    padding: 8px 12px;\n    border-radius: 6px;\n    font-size: 12px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n    pointer-events: none;\n    z-index: 10000;\n  `\n  \n  document.body.appendChild(dragElement)\n  \n  // 清理\n  setTimeout(() => {\n    document.body.removeChild(dragElement)\n  }, 100)\n  \n  return dragElement\n}\n\n// 面板控制\nfunction minimize() {\n  isMinimized.value = !isMinimized.value\n  emit('minimize', isMinimized.value)\n}\n\nfunction close() {\n  isVisible.value = false\n  emit('close')\n}\n\n// 组件挂载时添加全局点击监听\nonMounted(() => {\n  document.addEventListener('click', handleGlobalClick)\n})\n\nonUnmounted(() => {\n  document.removeEventListener('click', handleGlobalClick)\n  document.removeEventListener('mousemove', handlePanelDrag)\n  document.removeEventListener('mouseup', stopDrag)\n})\n\n// 全局点击处理\nfunction handleGlobalClick(event) {\n  if (panelRef.value && !panelRef.value.contains(event.target)) {\n    isFocused.value = false\n  }\n}\n</script>\n\n<style scoped>\n@import '../assets/CSS/FileStructurePanel.css';\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}