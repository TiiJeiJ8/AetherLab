{"ast":null,"code":"import { ref, watch } from 'vue';\nexport default {\n  __name: 'ChartMappingConfig',\n  props: {\n    mappingConfig: Array,\n    modelValue: Object\n  },\n  emits: ['update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* no-undef */\n    /* eslint-disable */\n    const props = __props;\n    const emit = __emit;\n    const localConfig = ref({\n      ...props.modelValue\n    });\n    const dragOverIndex = ref(null);\n    watch(() => props.modelValue, val => {\n      localConfig.value = {\n        ...val\n      };\n    });\n    function updateField(key, value) {\n      localConfig.value[key] = value;\n      emit('update:modelValue', {\n        ...localConfig.value\n      });\n    }\n    function getFieldDisplay(val) {\n      if (typeof val === 'object' && val !== null) {\n        return val.field || '';\n      }\n      return val ?? '';\n    }\n    function handleDrop(event, key) {\n      try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'));\n        if (dragData.type === 'column') {\n          // 只存储字段名和类型\n          updateField(key, {\n            field: dragData.column.name,\n            type: dragData.column.type\n          });\n        }\n      } catch (e) {\n        // ignore\n      }\n      dragOverIndex.value = null;\n    }\n    const __returned__ = {\n      props,\n      emit,\n      localConfig,\n      dragOverIndex,\n      updateField,\n      getFieldDisplay,\n      handleDrop,\n      ref,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","props","__props","emit","__emit","localConfig","modelValue","dragOverIndex","val","value","updateField","key","getFieldDisplay","field","handleDrop","event","dragData","JSON","parse","dataTransfer","getData","type","column","name","e"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/ChartMappingConfig.vue"],"sourcesContent":["<template>\n<div class=\"mapping-section\">\n<div class=\"mapping-section-header\">\n    <h4>Data Mapping</h4>\n</div>\n<div v-for=\"(item, index) in mappingConfig\" :key=\"item.key\" class=\"mapping-item\">\n    <div class=\"mapping-item-header\">\n    <label class=\"mapping-label\">\n        {{ item.label }}\n        <span v-if=\"item.required\" class=\"required-star\">*</span>\n    </label>\n    <div class=\"mapping-type-tag\">{{ item.type }}</div>\n    </div>\n    <div class=\"drop-zone\"\n      @dragover.prevent\n      @dragenter.prevent=\"dragOverIndex = index\"\n      @dragleave.prevent=\"dragOverIndex = null\"\n      @drop.prevent=\"handleDrop($event, item.key)\"\n      :class=\"{ 'drop-zone-active': dragOverIndex === index }\"\n    >\n      <div v-if=\"!getFieldDisplay(localConfig[item.key])\" class=\"drop-placeholder\">\n        <div class=\"drop-icon\">↓</div>\n        <span class=\"drop-text\">拖拽数据列到此处</span>\n      </div>\n      <input v-else :value=\"getFieldDisplay(localConfig[item.key])\" @input=\"updateField(item.key, $event.target.value)\" :placeholder=\"'Select ' + item.label\" />\n    </div>\n</div>\n</div>\n</template>\n\n<script setup>\n/* no-undef */\n/* eslint-disable */\nimport { ref, watch } from 'vue'\nconst props = defineProps({\n    mappingConfig: Array,\n    modelValue: Object\n})\nconst emit = defineEmits(['update:modelValue'])\n\nconst localConfig = ref({ ...props.modelValue })\nconst dragOverIndex = ref(null)\n\nwatch(() => props.modelValue, (val) => {\n    localConfig.value = { ...val }\n})\n\nfunction updateField (key, value) {\n    localConfig.value[key] = value\n    emit('update:modelValue', { ...localConfig.value })\n}\n\nfunction getFieldDisplay(val) {\n  if (typeof val === 'object' && val !== null) {\n    return val.field || ''\n  }\n  return val ?? ''\n}\n\nfunction handleDrop(event, key) {\n  try {\n    const dragData = JSON.parse(event.dataTransfer.getData('text/plain'))\n    if (dragData.type === 'column') {\n      // 只存储字段名和类型\n      updateField(key, { field: dragData.column.name, type: dragData.column.type })\n    }\n  } catch (e) {\n    // ignore\n  }\n  dragOverIndex.value = null\n}\n</script>\n\n<style scoped>\n.mapping-section { margin-bottom: 16px; }\n.mapping-item { margin-bottom: 12px; }\n</style>\n"],"mappings":"AAiCA,SAASA,GAAG,EAAEC,KAAK,QAAQ,KAAI;;;;;;;;;;;;;;IAF/B;IACA;IAEA,MAAMC,KAAK,GAAGC,OAAA;IAId,MAAMC,IAAI,GAAGC,MAAA;IAEb,MAAMC,WAAW,GAAGN,GAAG,CAAC;MAAE,GAAGE,KAAK,CAACK;IAAW,CAAC;IAC/C,MAAMC,aAAa,GAAGR,GAAG,CAAC,IAAI;IAE9BC,KAAK,CAAC,MAAMC,KAAK,CAACK,UAAU,EAAGE,GAAG,IAAK;MACnCH,WAAW,CAACI,KAAK,GAAG;QAAE,GAAGD;MAAI;IACjC,CAAC;IAED,SAASE,WAAWA,CAAEC,GAAG,EAAEF,KAAK,EAAE;MAC9BJ,WAAW,CAACI,KAAK,CAACE,GAAG,CAAC,GAAGF,KAAI;MAC7BN,IAAI,CAAC,mBAAmB,EAAE;QAAE,GAAGE,WAAW,CAACI;MAAM,CAAC;IACtD;IAEA,SAASG,eAAeA,CAACJ,GAAG,EAAE;MAC5B,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;QAC3C,OAAOA,GAAG,CAACK,KAAK,IAAI,EAAC;MACvB;MACA,OAAOL,GAAG,IAAI,EAAC;IACjB;IAEA,SAASM,UAAUA,CAACC,KAAK,EAAEJ,GAAG,EAAE;MAC9B,IAAI;QACF,MAAMK,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;QACpE,IAAIJ,QAAQ,CAACK,IAAI,KAAK,QAAQ,EAAE;UAC9B;UACAX,WAAW,CAACC,GAAG,EAAE;YAAEE,KAAK,EAAEG,QAAQ,CAACM,MAAM,CAACC,IAAI;YAAEF,IAAI,EAAEL,QAAQ,CAACM,MAAM,CAACD;UAAK,CAAC;QAC9E;MACF,CAAC,CAAC,OAAOG,CAAC,EAAE;QACV;MAAA;MAEFjB,aAAa,CAACE,KAAK,GAAG,IAAG;IAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}