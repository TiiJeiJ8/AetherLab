{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, unref as _unref, withCtx as _withCtx, createBlock as _createBlock, vShow as _vShow, withDirectives as _withDirectives, Transition as _Transition, createVNode as _createVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"nav-container\"\n};\nconst _hoisted_2 = {\n  class: \"nav-actions\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"href\"];\nimport { ref, onMounted, onUnmounted, computed } from 'vue';\nimport { RouterLink } from 'vue-router';\nexport default {\n  __name: 'TopBar',\n  props: {\n    actions: {\n      type: Array,\n      default: () => [{\n        type: 'button',\n        label: 'Home',\n        to: '/',\n        external: false\n      }]\n    }\n  },\n  setup(__props) {\n    /* eslint-disable */\n    const props = __props;\n\n    // 滚动隐藏逻辑\n    const isHidden = ref(false);\n    let lastScrollY = window.scrollY;\n    let ticking = false;\n    function handleScroll() {\n      if (!ticking) {\n        window.requestAnimationFrame(() => {\n          const currentY = window.scrollY;\n          isHidden.value = currentY > lastScrollY && currentY > 30;\n          lastScrollY = currentY;\n          ticking = false;\n        });\n        ticking = true;\n      }\n    }\n\n    // TopBar 入场\n    const isMounted = ref(false);\n    onMounted(() => {\n      isMounted.value = true;\n      window.addEventListener('scroll', handleScroll);\n      document.addEventListener('click', handleClickOutside);\n    });\n\n    // 菜单状态\n    const isMenuOpen = ref(false);\n    const toggleMenu = () => {\n      isMenuOpen.value = !isMenuOpen.value;\n    };\n    const isDesktop = computed(() => window.innerWidth >= 990);\n\n    // 点击空白处关闭菜单\n    function handleClickOutside(event) {\n      const nav = document.querySelector('.top-bar');\n      if (nav && !nav.contains(event.target)) {\n        isMenuOpen.value = false;\n      }\n    }\n    onMounted(() => {\n      window.addEventListener('scroll', handleScroll);\n      document.addEventListener('click', handleClickOutside);\n    });\n    onUnmounted(() => {\n      window.removeEventListener('scroll', handleScroll);\n      document.removeEventListener('click', handleClickOutside);\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createBlock(_Transition, {\n        name: \"topbar-fade-slide\"\n      }, {\n        default: _withCtx(() => [isMounted.value ? (_openBlock(), _createElementBlock(\"header\", {\n          key: 0,\n          class: _normalizeClass([\"top-bar\", {\n            'top-bar--hidden': isHidden.value\n          }])\n        }, [_createElementVNode(\"nav\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n          class: \"logo dynamic-gradient-text\"\n        }, \"Fuck Charts\", -1)), _createElementVNode(\"div\", {\n          class: \"burger-container\",\n          onClick: toggleMenu\n        }, _cache[1] || (_cache[1] = [_createElementVNode(\"span\", {\n          class: \"burger-icon\"\n        }, \"☰\", -1)])), _createVNode(_Transition, {\n          name: \"menu-fade\"\n        }, {\n          default: _withCtx(() => [_withDirectives(_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.actions, (item, idx) => {\n            return _openBlock(), _createElementBlock(_Fragment, null, [item.type === 'button' && !item.to ? (_openBlock(), _createElementBlock(\"button\", {\n              key: `button-${idx}`,\n              class: \"nav-btn\",\n              onClick: item.onClick\n            }, _toDisplayString(item.label), 9, _hoisted_3)) : item.type === 'button' && item.to && !item.external ? (_openBlock(), _createBlock(_unref(RouterLink), {\n              key: `router-${idx}`,\n              to: item.to,\n              class: \"nav-btn\",\n              onClick: _cache[0] || (_cache[0] = $event => isMenuOpen.value = false)\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.label), 1)]),\n              _: 2\n            }, 1032, [\"to\"])) : item.type === 'button' && item.to && item.external ? (_openBlock(), _createElementBlock(\"a\", {\n              key: `external-${idx}`,\n              href: item.to,\n              class: \"nav-btn\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }, _toDisplayString(item.label), 9, _hoisted_4)) : _createCommentVNode(\"\", true)], 64);\n          }), 256))], 512), [[_vShow, isMenuOpen.value || isDesktop.value]])]),\n          _: 1\n        })])], 2)) : _createCommentVNode(\"\", true)]),\n        _: 1\n      });\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","computed","RouterLink","props","__props","isHidden","lastScrollY","window","scrollY","ticking","handleScroll","requestAnimationFrame","currentY","value","isMounted","addEventListener","document","handleClickOutside","isMenuOpen","toggleMenu","isDesktop","innerWidth","event","nav","querySelector","contains","target","removeEventListener"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/Common/TopBar.vue"],"sourcesContent":["<template>\n<transition name=\"topbar-fade-slide\">\n    <header\n        v-if=\"isMounted\"\n        class=\"top-bar\"\n        :class=\"{ 'top-bar--hidden': isHidden }\"\n    >\n        <nav class=\"nav-container\">\n        <!-- LOGO -->\n        <div class=\"logo dynamic-gradient-text\">Fuck Charts</div>\n\n        <!-- 汉堡菜单图标 -->\n        <div class=\"burger-container\" @click=\"toggleMenu\">\n            <span class=\"burger-icon\">☰</span>\n        </div>\n\n        <!-- 菜单项 -->\n        <transition name=\"menu-fade\">\n            <div class=\"nav-actions\" v-show=\"isMenuOpen || isDesktop\">\n            <template v-for=\"(item, idx) in actions\">\n                <!-- 普通按钮 -->\n                <button\n                v-if=\"item.type === 'button' && !item.to\"\n                :key=\"`button-${idx}`\"\n                class=\"nav-btn\"\n                @click=\"item.onClick\"\n                >\n                {{ item.label }}\n                </button>\n\n                <!-- 内部路由跳转 -->\n                <RouterLink\n                v-else-if=\"item.type === 'button' && item.to && !item.external\"\n                :key=\"`router-${idx}`\"\n                :to=\"item.to\"\n                class=\"nav-btn\"\n                @click=\"isMenuOpen = false\"\n                >\n                {{ item.label }}\n                </RouterLink>\n\n                <!-- 外部链接 -->\n                <a\n                v-else-if=\"item.type === 'button' && item.to && item.external\"\n                :key=\"`external-${idx}`\"\n                :href=\"item.to\"\n                class=\"nav-btn\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                >\n                {{ item.label }}\n                </a>\n            </template>\n            </div>\n        </transition>\n        </nav>\n    </header>\n</transition>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, onMounted, onUnmounted, computed } from 'vue'\nimport { RouterLink } from 'vue-router'\n\nconst props = defineProps({\nactions: {\n    type: Array,\n    default: () => [\n    { type: 'button', label: 'Home', to: '/', external: false }\n    ]\n}\n})\n\n// 滚动隐藏逻辑\nconst isHidden = ref(false)\nlet lastScrollY = window.scrollY\nlet ticking = false\nfunction handleScroll() {\nif (!ticking) {\n    window.requestAnimationFrame(() => {\n    const currentY = window.scrollY\n    isHidden.value = currentY > lastScrollY && currentY > 30\n    lastScrollY = currentY\n    ticking = false\n    })\n    ticking = true\n}\n}\n\n// TopBar 入场\nconst isMounted = ref(false)\nonMounted(() => {\n    isMounted.value = true\n    window.addEventListener('scroll', handleScroll)\n    document.addEventListener('click', handleClickOutside)\n})\n\n// 菜单状态\nconst isMenuOpen = ref(false)\nconst toggleMenu = () => {\nisMenuOpen.value = !isMenuOpen.value\n}\n\nconst isDesktop = computed(() => window.innerWidth >= 990)\n\n// 点击空白处关闭菜单\nfunction handleClickOutside(event) {\nconst nav = document.querySelector('.top-bar')\nif (nav && !nav.contains(event.target)) {\n    isMenuOpen.value = false\n}\n}\n\nonMounted(() => {\nwindow.addEventListener('scroll', handleScroll)\ndocument.addEventListener('click', handleClickOutside)\n})\nonUnmounted(() => {\nwindow.removeEventListener('scroll', handleScroll)\ndocument.removeEventListener('click', handleClickOutside)\n})\n</script>\n\n<style scoped>\n.top-bar {\n    position: fixed;\n    top: calc(1.6vw + 6px);\n    left: 50%;\n    transform: translateX(-50%) scale(var(--topbar-scale, 0.95));\n    background-color: var(--bg-color);\n    backdrop-filter: saturate(180%) blur(10px);\n    border-radius: calc(0.6vw + 7px);\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.13);\n    padding: 0 calc(1.2vw + 8px);\n    z-index: 9999;\n    width: calc(52vw + 210px);\n    max-width: 1350px;\n    min-width: 260px;\n    height: auto;\n    transition: top 0.35s ease, opacity 0.25s, transform 0.3s;\n    will-change: transform;\n}\n\n/* TopBar 出场动画 */\n.topbar-fade-slide-enter-active {\n    transition: opacity 0.5s, transform 0.6s;\n}\n.topbar-fade-slide-leave-active {\n    transition: opacity 0.3s, transform 0.3s;\n}\n/* 开始 */\n.topbar-fade-slide-enter-from {\n    opacity: 0;\n    transform: translateY(-40px) translateX(-50%);\n}\n/* 结束 */\n.topbar-fade-slide-leave-to {\n    opacity: 0;\n    transform: translateY(-40px) translateX(-50%);\n}\n\n.top-bar--hidden {\n    top: -100px;\n    opacity: 0;\n    pointer-events: none;\n}\n\n.nav-container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n}\n\n.logo {\n    font-weight: 900;\n    font-size: calc(1.35rem + 1vw);\n    background: linear-gradient(270deg, #ff416c, #fa83bf, #1f97ff, #12d8fa, #50f6a0, #ff416c);\n    background-size: 1200% 1200%;\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    animation: gradientMove 20s ease infinite;\n    user-select: none;\n    margin-right: auto;\n}\n\n@keyframes gradientMove {\n    0% { background-position: 0% 50%; }\n    50% { background-position: 100% 50%; }\n    100% { background-position: 0% 50%; }\n}\n\n.burger-container {\n    display: none;\n    font-size: 1.8rem;\n    cursor: pointer;\n    user-select: none;\n    color: var(--text-color);\n}\n\n.nav-actions {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    transition: all 0.3s ease;\n}\n\n/* 动画 */\n.menu-fade-enter-active,\n.menu-fade-leave-active {\n    transition: all 0.3s ease;\n}\n.menu-fade-enter-from,\n.menu-fade-leave-to {\n    opacity: 0;\n    transform: translateY(-8px);\n}\n\n/* 按钮 */\n.nav-btn {\n    background: transparent;\n    border: none;\n    font-size: calc(0.82rem + 0.32vw);\n    font-weight: 600;\n    cursor: pointer;\n    color: var(--text-color);\n    padding: calc(4px + 0.33vw) calc(10px + 0.55vw);\n    border-radius: calc(6px + 0.38vw);\n    transition: background-color 0.3s ease;\n    text-align: center;\n    text-decoration: none;\n}\n\n.nav-btn:hover {\n    background-color: rgba(136, 133, 133, 0.1);\n}\n\n/* 响应式：小屏幕 */\n@media (max-width: 990px) {\n    .burger-container {\n        display: block;\n    }\n\n    .nav-actions {\n        flex-direction: column;\n        align-items: flex-start;\n        width: 100%;\n        margin-top: 12px;\n    }\n\n    .nav-btn {\n        width: 100%;\n        text-align: left;\n        padding: 10px 12px;\n        font-size: 1.1rem;\n    }\n\n    .logo {\n        font-size: 1.5rem;\n    }\n\n    .top-bar {\n        width: 98vw;\n        min-width: 0;\n        padding: 0 8px;\n        left: 1vw;\n        transform: none;\n        border-radius: 8px;\n    }\n}\n\n/* 超大屏幕适配（2K、4K、8K） */\n@media (min-width: 1920px) {\n    .top-bar {\n        --topbar-scale: 1.13;\n    }\n}\n@media (min-width: 2560px) {\n    .top-bar {\n        --topbar-scale: 1.28;\n    }\n}\n@media (min-width: 3840px) {\n    .top-bar {\n        --topbar-scale: 1.5;\n    }\n}\n@media (min-width: 7680px) {\n    .top-bar {\n        --topbar-scale: 1.9;\n    }\n}\n</style>\n"],"mappings":";;;;;;;;;AA8DA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,KAAI;AAC1D,SAASC,UAAU,QAAQ,YAAW;;;;;;;;;;;;;;;IAFtC;IAIA,MAAMC,KAAK,GAAGC,OAAA;;IASd;IACA,MAAMC,QAAQ,GAAGP,GAAG,CAAC,KAAK;IAC1B,IAAIQ,WAAW,GAAGC,MAAM,CAACC,OAAM;IAC/B,IAAIC,OAAO,GAAG,KAAI;IAClB,SAASC,YAAYA,CAAA,EAAG;MACxB,IAAI,CAACD,OAAO,EAAE;QACVF,MAAM,CAACI,qBAAqB,CAAC,MAAM;UACnC,MAAMC,QAAQ,GAAGL,MAAM,CAACC,OAAM;UAC9BH,QAAQ,CAACQ,KAAK,GAAGD,QAAQ,GAAGN,WAAW,IAAIM,QAAQ,GAAG,EAAC;UACvDN,WAAW,GAAGM,QAAO;UACrBH,OAAO,GAAG,KAAI;QACd,CAAC;QACDA,OAAO,GAAG,IAAG;MACjB;IACA;;IAEA;IACA,MAAMK,SAAS,GAAGhB,GAAG,CAAC,KAAK;IAC3BC,SAAS,CAAC,MAAM;MACZe,SAAS,CAACD,KAAK,GAAG,IAAG;MACrBN,MAAM,CAACQ,gBAAgB,CAAC,QAAQ,EAAEL,YAAY;MAC9CM,QAAQ,CAACD,gBAAgB,CAAC,OAAO,EAAEE,kBAAkB;IACzD,CAAC;;IAED;IACA,MAAMC,UAAU,GAAGpB,GAAG,CAAC,KAAK;IAC5B,MAAMqB,UAAU,GAAGA,CAAA,KAAM;MACzBD,UAAU,CAACL,KAAK,GAAG,CAACK,UAAU,CAACL,KAAI;IACnC;IAEA,MAAMO,SAAS,GAAGnB,QAAQ,CAAC,MAAMM,MAAM,CAACc,UAAU,IAAI,GAAG;;IAEzD;IACA,SAASJ,kBAAkBA,CAACK,KAAK,EAAE;MACnC,MAAMC,GAAG,GAAGP,QAAQ,CAACQ,aAAa,CAAC,UAAU;MAC7C,IAAID,GAAG,IAAI,CAACA,GAAG,CAACE,QAAQ,CAACH,KAAK,CAACI,MAAM,CAAC,EAAE;QACpCR,UAAU,CAACL,KAAK,GAAG,KAAI;MAC3B;IACA;IAEAd,SAAS,CAAC,MAAM;MAChBQ,MAAM,CAACQ,gBAAgB,CAAC,QAAQ,EAAEL,YAAY;MAC9CM,QAAQ,CAACD,gBAAgB,CAAC,OAAO,EAAEE,kBAAkB;IACrD,CAAC;IACDjB,WAAW,CAAC,MAAM;MAClBO,MAAM,CAACoB,mBAAmB,CAAC,QAAQ,EAAEjB,YAAY;MACjDM,QAAQ,CAACW,mBAAmB,CAAC,OAAO,EAAEV,kBAAkB;IACxD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}