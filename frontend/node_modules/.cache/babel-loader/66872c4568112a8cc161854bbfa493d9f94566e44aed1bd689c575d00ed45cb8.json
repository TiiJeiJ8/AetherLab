{"ast":null,"code":"/**\n * 文件相关工具函数\n */\n/* eslint-disable */\nimport { SUPPORTED_FILE_TYPES, STATUS_TEXT_MAP, STATUS_ICON_MAP } from '../constants/fileConstants.js';\n\n// 格式化文件大小\nexport function formatFileSize(bytes) {\n  if (!bytes || bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n// 获取文件状态文本\nexport function getStatusText(status) {\n  return STATUS_TEXT_MAP[status] || '未知';\n}\n\n// 获取文件状态图标\nexport function getStatusIcon(status) {\n  return STATUS_ICON_MAP[status] || '❓';\n}\n\n// 验证文件格式\nexport function isValidFileType(filename) {\n  const ext = filename.split('.').pop().toLowerCase();\n  return SUPPORTED_FILE_TYPES.includes(ext);\n}\n\n// 模拟文件上传进度\nexport function simulateUploadProgress(onProgress, duration = 3000) {\n  return new Promise(resolve => {\n    let progress = 0;\n    const interval = 50; // 50ms更新一次\n    const increment = 100 / (duration / interval);\n    const timer = setInterval(() => {\n      progress += increment + Math.random() * 2; // 添加一些随机性\n\n      // 模拟上传过程中的波动\n      if (progress > 30 && progress < 70) {\n        progress += Math.random() * 3 - 1.5; // -1.5到1.5的随机波动\n      }\n      if (progress >= 100) {\n        progress = 100;\n        clearInterval(timer);\n        onProgress(100);\n        setTimeout(resolve, 200); // 延迟一点完成\n      } else {\n        onProgress(Math.min(progress, 99)); // 不让它在完成前到达100%\n      }\n    }, interval);\n  });\n}\n\n// 模拟文件同步进度\nexport function simulateSyncProgress(onProgress, duration = 2000) {\n  return new Promise(resolve => {\n    let progress = 0;\n    const interval = 40;\n    const increment = 100 / (duration / interval);\n    const timer = setInterval(() => {\n      progress += increment + Math.random() * 1.5;\n      if (progress >= 100) {\n        progress = 100;\n        clearInterval(timer);\n        onProgress(100);\n        setTimeout(resolve, 100);\n      } else {\n        onProgress(Math.min(progress, 99));\n      }\n    }, interval);\n  });\n}","map":{"version":3,"names":["SUPPORTED_FILE_TYPES","STATUS_TEXT_MAP","STATUS_ICON_MAP","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","getStatusText","status","getStatusIcon","isValidFileType","filename","ext","split","pop","toLowerCase","includes","simulateUploadProgress","onProgress","duration","Promise","resolve","progress","interval","increment","timer","setInterval","random","clearInterval","setTimeout","min","simulateSyncProgress"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/utils/fileUtils.js"],"sourcesContent":["/**\n * 文件相关工具函数\n */\n/* eslint-disable */\nimport { SUPPORTED_FILE_TYPES, STATUS_TEXT_MAP, STATUS_ICON_MAP } from '../constants/fileConstants.js'\n\n// 格式化文件大小\nexport function formatFileSize(bytes) {\n    if (!bytes || bytes === 0) return '0 Bytes'\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\n// 获取文件状态文本\nexport function getStatusText(status) {\n    return STATUS_TEXT_MAP[status] || '未知'\n}\n\n// 获取文件状态图标\nexport function getStatusIcon(status) {\n    return STATUS_ICON_MAP[status] || '❓'\n}\n\n// 验证文件格式\nexport function isValidFileType(filename) {\n    const ext = filename.split('.').pop().toLowerCase()\n    return SUPPORTED_FILE_TYPES.includes(ext)\n}\n\n// 模拟文件上传进度\nexport function simulateUploadProgress(onProgress, duration = 3000) {\n    return new Promise((resolve) => {\n        let progress = 0\n        const interval = 50 // 50ms更新一次\n        const increment = (100 / (duration / interval))\n        \n        const timer = setInterval(() => {\n            progress += increment + Math.random() * 2 // 添加一些随机性\n            \n            // 模拟上传过程中的波动\n            if (progress > 30 && progress < 70) {\n                progress += Math.random() * 3 - 1.5 // -1.5到1.5的随机波动\n            }\n            \n            if (progress >= 100) {\n                progress = 100\n                clearInterval(timer)\n                onProgress(100)\n                setTimeout(resolve, 200) // 延迟一点完成\n            } else {\n                onProgress(Math.min(progress, 99)) // 不让它在完成前到达100%\n            }\n        }, interval)\n    })\n}\n\n// 模拟文件同步进度\nexport function simulateSyncProgress(onProgress, duration = 2000) {\n    return new Promise((resolve) => {\n        let progress = 0\n        const interval = 40\n        const increment = (100 / (duration / interval))\n        \n        const timer = setInterval(() => {\n            progress += increment + Math.random() * 1.5\n            \n            if (progress >= 100) {\n                progress = 100\n                clearInterval(timer)\n                onProgress(100)\n                setTimeout(resolve, 100)\n            } else {\n                onProgress(Math.min(progress, 99))\n            }\n        }, interval)\n    })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}