{"ast":null,"code":"// echartOptionUtils.js\n// 利用Option分发器, 根据图表类型生成不同的ECharts Option\n\n/* eslint-disable */\n\n// 模块化导入各类图表 option 生成器\nimport barOption from '../../JS/chartOptions/bar';\nimport scatterOption from '../../JS/chartOptions/scatter';\nimport lineOption from '../../JS/chartOptions/line';\nimport pieOption from '../../JS/chartOptions/pie';\nimport candlestickOption from '../chartOptions/candlestick';\n// ...可继续导入更多类型\n\n// 图表类型注册表\nconst chartOptionGenerators = {};\n\n// 注册新类型生成器接口\nexport function registerChartOptionGenerator(type, generatorFn) {\n  chartOptionGenerators[type.toLowerCase()] = generatorFn;\n}\n\n// 注册模块化生成器\nregisterChartOptionGenerator('Line', lineOption);\nregisterChartOptionGenerator('Bar', barOption);\nregisterChartOptionGenerator('Pie', pieOption);\nregisterChartOptionGenerator('Scatter', scatterOption);\nregisterChartOptionGenerator('Candlestick', candlestickOption);\n// ...可继续注册更多类型\n\n// 主入口：根据类型分发\nexport function generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  // 控制台显示传入的所有字段\n  console.log('[generateEChartOption] config:', config);\n  console.log('[generateEChartOption] fileDataMap:', fileDataMap);\n  console.log('[generateEChartOption] xData:', xData);\n  console.log('[generateEChartOption] yDataArr:', yDataArr);\n  console.log('[generateEChartOption] selectedChartType:', selectedChartType);\n  console.log('[generateEChartOption] seriesData:', seriesData);\n  console.log('[generateEChartOption] customOption:', customOption);\n  const type = selectedChartType.value.toLowerCase();\n  const generator = chartOptionGenerators[type];\n  console.log('[generator]', type, generator);\n  if (!generator) {\n    throw new Error(`No chart option generator registered for type: ${type}`);\n  }\n  const option = generator(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption);\n  // 调试输出\n  console.log('[generateEChartOption] Type:', type);\n  console.log('[generateEChartOption] Generated option:', option);\n  return option;\n}","map":{"version":3,"names":["barOption","scatterOption","lineOption","pieOption","candlestickOption","chartOptionGenerators","registerChartOptionGenerator","type","generatorFn","toLowerCase","generateEChartOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","console","log","value","generator","Error","option"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/utils/echartOptionUtils.js"],"sourcesContent":["// echartOptionUtils.js\n// 利用Option分发器, 根据图表类型生成不同的ECharts Option\n\n/* eslint-disable */\n\n// 模块化导入各类图表 option 生成器\nimport barOption from '../../JS/chartOptions/bar'\nimport scatterOption from '../../JS/chartOptions/scatter'\nimport lineOption from '../../JS/chartOptions/line'\nimport pieOption from '../../JS/chartOptions/pie'\nimport candlestickOption from '../chartOptions/candlestick'\n// ...可继续导入更多类型\n\n// 图表类型注册表\nconst chartOptionGenerators = {};\n\n// 注册新类型生成器接口\nexport function registerChartOptionGenerator(type, generatorFn) {\n    chartOptionGenerators[type.toLowerCase()] = generatorFn;\n}\n\n// 注册模块化生成器\nregisterChartOptionGenerator('Line', lineOption)\nregisterChartOptionGenerator('Bar', barOption)\nregisterChartOptionGenerator('Pie', pieOption)\nregisterChartOptionGenerator('Scatter', scatterOption)\nregisterChartOptionGenerator('Candlestick', candlestickOption)\n// ...可继续注册更多类型\n\n\n// 主入口：根据类型分发\nexport function generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    // 控制台显示传入的所有字段\n    console.log('[generateEChartOption] config:', config);\n    console.log('[generateEChartOption] fileDataMap:', fileDataMap);\n    console.log('[generateEChartOption] xData:', xData);\n    console.log('[generateEChartOption] yDataArr:', yDataArr);\n    console.log('[generateEChartOption] selectedChartType:', selectedChartType);\n    console.log('[generateEChartOption] seriesData:', seriesData);\n    console.log('[generateEChartOption] customOption:', customOption);\n    const type = selectedChartType.value.toLowerCase();\n    const generator = chartOptionGenerators[type];\n    console.log('[generator]', type, generator);\n    if (!generator) {\n        throw new Error(`No chart option generator registered for type: ${type}`);\n    }\n    const option = generator(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption);\n    // 调试输出\n    console.log('[generateEChartOption] Type:', type);\n    console.log('[generateEChartOption] Generated option:', option);\n    return option;\n}\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,iBAAiB,MAAM,6BAA6B;AAC3D;;AAEA;AACA,MAAMC,qBAAqB,GAAG,CAAC,CAAC;;AAEhC;AACA,OAAO,SAASC,4BAA4BA,CAACC,IAAI,EAAEC,WAAW,EAAE;EAC5DH,qBAAqB,CAACE,IAAI,CAACE,WAAW,CAAC,CAAC,CAAC,GAAGD,WAAW;AAC3D;;AAEA;AACAF,4BAA4B,CAAC,MAAM,EAAEJ,UAAU,CAAC;AAChDI,4BAA4B,CAAC,KAAK,EAAEN,SAAS,CAAC;AAC9CM,4BAA4B,CAAC,KAAK,EAAEH,SAAS,CAAC;AAC9CG,4BAA4B,CAAC,SAAS,EAAEL,aAAa,CAAC;AACtDK,4BAA4B,CAAC,aAAa,EAAEF,iBAAiB,CAAC;AAC9D;;AAGA;AACA,OAAO,SAASM,oBAAoBA,CAACC,MAAM,EAAEC,WAAW,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,YAAY,GAAG,CAAC,CAAC,EAAE;EACzH;EACAC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAER,MAAM,CAAC;EACrDO,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEP,WAAW,CAAC;EAC/DM,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEN,KAAK,CAAC;EACnDK,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEL,QAAQ,CAAC;EACzDI,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAEJ,iBAAiB,CAAC;EAC3EG,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEH,UAAU,CAAC;EAC7DE,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEF,YAAY,CAAC;EACjE,MAAMV,IAAI,GAAGQ,iBAAiB,CAACK,KAAK,CAACX,WAAW,CAAC,CAAC;EAClD,MAAMY,SAAS,GAAGhB,qBAAqB,CAACE,IAAI,CAAC;EAC7CW,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEZ,IAAI,EAAEc,SAAS,CAAC;EAC3C,IAAI,CAACA,SAAS,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkDf,IAAI,EAAE,CAAC;EAC7E;EACA,MAAMgB,MAAM,GAAGF,SAAS,CAACV,MAAM,EAAEC,WAAW,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,YAAY,CAAC;EAC3G;EACAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEZ,IAAI,CAAC;EACjDW,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEI,MAAM,CAAC;EAC/D,OAAOA,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}