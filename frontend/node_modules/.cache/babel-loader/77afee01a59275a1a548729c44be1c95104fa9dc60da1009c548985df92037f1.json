{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, computed, watch } from 'vue';\nimport { getChartConfig } from '../configs/chartConfigs.js';\nexport default {\n  __name: 'FieldMapping',\n  props: {\n    chartType: {\n      type: String,\n      required: true\n    },\n    mappings: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: ['update:mappings', 'mapping-error'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const props = __props;\n    const emit = __emit;\n\n    // ÊãñÊãΩÁä∂ÊÄÅ\n    const isDragOver = ref({});\n    const dragError = ref({});\n\n    // Â≠óÊÆµÊò†Â∞Ñ\n    const fieldMappings = ref({\n      ...props.mappings\n    });\n\n    // ÁõëÂê¨Â§ñÈÉ®Êò†Â∞ÑÂèòÂåñ\n    watch(() => props.mappings, newMappings => {\n      fieldMappings.value = {\n        ...newMappings\n      };\n    }, {\n      deep: true\n    });\n\n    // ÁõëÂê¨ÂÜÖÈÉ®Êò†Â∞ÑÂèòÂåñ\n    watch(fieldMappings, newMappings => {\n      emit('update:mappings', newMappings);\n    }, {\n      deep: true\n    });\n\n    // Ëé∑ÂèñÂΩìÂâçÂõæË°®ÁöÑÊò†Â∞ÑÂ≠óÊÆµÈÖçÁΩÆ\n    const mappingFields = computed(() => {\n      const config = getChartConfig(props.chartType);\n      const fields = [];\n\n      // ÂøÖÈúÄÂ≠óÊÆµ\n      config.requiredFields.forEach(fieldName => {\n        fields.push({\n          name: fieldName,\n          label: getFieldLabel(fieldName),\n          required: true,\n          dataType: getFieldDataType(fieldName, config),\n          multiple: fieldName === 'series' && config.maxSeries > 1,\n          placeholder: getFieldPlaceholder(fieldName),\n          icon: getFieldIcon(fieldName)\n        });\n      });\n\n      // ÂèØÈÄâÂ≠óÊÆµ\n      config.optionalFields.forEach(fieldName => {\n        fields.push({\n          name: fieldName,\n          label: getFieldLabel(fieldName),\n          required: false,\n          dataType: getFieldDataType(fieldName, config),\n          multiple: fieldName === 'series' && config.maxSeries > 1,\n          placeholder: getFieldPlaceholder(fieldName),\n          icon: getFieldIcon(fieldName)\n        });\n      });\n      return fields;\n    });\n\n    // Ëé∑ÂèñÂ≠óÊÆµÊ†áÁ≠æ\n    function getFieldLabel(fieldName) {\n      const labels = {\n        xAxis: 'XËΩ¥',\n        yAxis: 'YËΩ¥',\n        series: 'Êï∞ÊçÆÁ≥ªÂàó',\n        dimension: 'Áª¥Â∫¶',\n        value: 'Êï∞ÂÄº',\n        color: 'È¢úËâ≤',\n        size: 'Â§ßÂ∞è',\n        parent: 'Áà∂Á∫ß',\n        target: 'ÁõÆÊ†áÂÄº'\n      };\n      return labels[fieldName] || fieldName;\n    }\n\n    // Ëé∑ÂèñÂ≠óÊÆµÊï∞ÊçÆÁ±ªÂûãÊòæÁ§∫ÊñáÊú¨\n    function getFieldDataType(fieldName, config) {\n      const types = config.fieldTypes[fieldName] || [];\n      const typeLabels = {\n        category: 'Á±ªÂà´',\n        value: 'Êï∞ÂÄº',\n        time: 'Êó∂Èó¥',\n        dimension: 'Áª¥Â∫¶',\n        measure: 'Â∫¶Èáè'\n      };\n      return types.map(type => typeLabels[type] || type).join(' / ');\n    }\n\n    // Ëé∑ÂèñÂ≠óÊÆµÂç†‰ΩçÁ¨¶ÊñáÊú¨\n    function getFieldPlaceholder(fieldName) {\n      const placeholders = {\n        xAxis: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫XËΩ¥',\n        yAxis: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫YËΩ¥',\n        series: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫Êï∞ÊçÆÁ≥ªÂàó',\n        dimension: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫Áª¥Â∫¶',\n        value: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫Êï∞ÂÄº',\n        color: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫È¢úËâ≤',\n        size: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫Â§ßÂ∞è',\n        parent: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫Áà∂Á∫ß',\n        target: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫ÁõÆÊ†áÂÄº'\n      };\n      return placeholders[fieldName] || 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ';\n    }\n\n    // Ëé∑ÂèñÂ≠óÊÆµÂõæÊ†á\n    function getFieldIcon(fieldName) {\n      const icons = {\n        xAxis: '‚Üí',\n        yAxis: '‚Üë',\n        series: 'üìä',\n        dimension: 'üè∑Ô∏è',\n        value: 'üíØ',\n        color: 'üé®',\n        size: 'üìè',\n        parent: 'üìÅ',\n        target: 'üéØ'\n      };\n      return icons[fieldName] || '‚Üì';\n    }\n\n    // ÊãñÊãΩÂ§ÑÁêÜ\n    function handleDragEnter(fieldName) {\n      isDragOver.value[fieldName] = true;\n      dragError.value[fieldName] = false;\n    }\n    function handleDragLeave(fieldName) {\n      isDragOver.value[fieldName] = false;\n    }\n    function handleDragOver(event, fieldName) {\n      event.preventDefault();\n      isDragOver.value[fieldName] = true;\n    }\n    function handleDrop(event, fieldName) {\n      event.preventDefault();\n      isDragOver.value[fieldName] = false;\n      try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'));\n        if (dragData.type === 'column') {\n          const column = dragData.column;\n\n          // È™åËØÅÂ≠óÊÆµÁ±ªÂûã\n          if (validateFieldMapping(props.chartType, fieldName, column.type)) {\n            mapColumnToField(column, fieldName);\n            emit('mapping-error', '');\n          } else {\n            dragError.value[fieldName] = true;\n            const fieldLabel = getFieldLabel(fieldName);\n            emit('mapping-error', `Âàó \"${column.name}\" ÁöÑÊï∞ÊçÆÁ±ªÂûã‰∏çÈÄÇÂêàÁî®‰Ωú${fieldLabel}`);\n            setTimeout(() => {\n              dragError.value[fieldName] = false;\n            }, 3000);\n          }\n        }\n      } catch (error) {\n        console.error('Drop failed:', error);\n        emit('mapping-error', 'ÊãñÊãΩÂ§±Ë¥•ÔºåËØ∑ÈáçËØï');\n      }\n    }\n\n    // Êò†Â∞ÑÂàóÂà∞Â≠óÊÆµ\n    function mapColumnToField(column, fieldName) {\n      const field = mappingFields.value.find(f => f.name === fieldName);\n      if (field?.multiple) {\n        // Â§öÂÄºÂ≠óÊÆµÔºàÂ¶ÇseriesÔºâ\n        if (!Array.isArray(fieldMappings.value[fieldName])) {\n          fieldMappings.value[fieldName] = [];\n        }\n\n        // Ê£ÄÊü•ÊòØÂê¶Â∑≤Â≠òÂú®\n        const exists = fieldMappings.value[fieldName].some(mapping => mapping.field === column.name);\n        if (!exists) {\n          const config = getChartConfig(props.chartType);\n          if (fieldMappings.value[fieldName].length < config.maxSeries) {\n            fieldMappings.value[fieldName].push({\n              field: column.name,\n              type: column.type,\n              dataType: getFieldTypeMapping(column.type)\n            });\n          } else {\n            emit('mapping-error', `ÊúÄÂ§öÂè™ËÉΩÊ∑ªÂä† ${config.maxSeries} ‰∏™Êï∞ÊçÆÁ≥ªÂàó`);\n          }\n        }\n      } else {\n        // ÂçïÂÄºÂ≠óÊÆµ\n        fieldMappings.value[fieldName] = {\n          field: column.name,\n          type: column.type,\n          dataType: getFieldTypeMapping(column.type)\n        };\n      }\n    }\n\n    // ÁßªÈô§Êò†Â∞Ñ\n    function removeMapping(fieldName, index = null) {\n      const field = mappingFields.value.find(f => f.name === fieldName);\n      if (field?.multiple && index !== null) {\n        // ÁßªÈô§Â§öÂÄºÂ≠óÊÆµ‰∏≠ÁöÑÁâπÂÆöÈ°π\n        fieldMappings.value[fieldName].splice(index, 1);\n      } else {\n        // ÁßªÈô§ÂçïÂÄºÂ≠óÊÆµÊàñÊï¥‰∏™Â§öÂÄºÂ≠óÊÆµ\n        fieldMappings.value[fieldName] = field?.multiple ? [] : null;\n      }\n    }\n\n    // Ëé∑ÂèñÊò†Â∞ÑÈ™åËØÅÁä∂ÊÄÅ\n    const mappingValidation = computed(() => {\n      const config = getChartConfig(props.chartType);\n      const validation = {\n        isValid: true,\n        missingFields: []\n      };\n      config.requiredFields.forEach(fieldName => {\n        const mapping = fieldMappings.value[fieldName];\n        const field = mappingFields.value.find(f => f.name === fieldName);\n        if (!mapping || field?.multiple && (!Array.isArray(mapping) || mapping.length === 0)) {\n          validation.isValid = false;\n          validation.missingFields.push(getFieldLabel(fieldName));\n        }\n      });\n      return validation;\n    });\n\n    // Êö¥Èú≤È™åËØÅÁä∂ÊÄÅÁªôÁà∂ÁªÑ‰ª∂\n    __expose({\n      validation: mappingValidation,\n      fieldMappings\n    });\n    const __returned__ = {\n      props,\n      emit,\n      isDragOver,\n      dragError,\n      fieldMappings,\n      mappingFields,\n      getFieldLabel,\n      getFieldDataType,\n      getFieldPlaceholder,\n      getFieldIcon,\n      handleDragEnter,\n      handleDragLeave,\n      handleDragOver,\n      handleDrop,\n      mapColumnToField,\n      removeMapping,\n      mappingValidation,\n      ref,\n      computed,\n      watch,\n      get getChartConfig() {\n        return getChartConfig;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","getChartConfig","props","__props","emit","__emit","isDragOver","dragError","fieldMappings","mappings","newMappings","value","deep","mappingFields","config","chartType","fields","requiredFields","forEach","fieldName","push","name","label","getFieldLabel","required","dataType","getFieldDataType","multiple","maxSeries","placeholder","getFieldPlaceholder","icon","getFieldIcon","optionalFields","labels","xAxis","yAxis","series","dimension","color","size","parent","target","types","fieldTypes","typeLabels","category","time","measure","map","type","join","placeholders","icons","handleDragEnter","handleDragLeave","handleDragOver","event","preventDefault","handleDrop","dragData","JSON","parse","dataTransfer","getData","column","validateFieldMapping","mapColumnToField","fieldLabel","setTimeout","error","console","field","find","f","Array","isArray","exists","some","mapping","length","getFieldTypeMapping","removeMapping","index","splice","mappingValidation","validation","isValid","missingFields","__expose"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/FieldMapping.vue"],"sourcesContent":["<template>\n  <div class=\"field-mapping\">\n    <div class=\"mapping-item\" v-for=\"field in mappingFields\" :key=\"field.name\">\n      <div class=\"mapping-item-header\">\n        <label class=\"mapping-label\">\n          {{ field.label }}\n          <span v-if=\"field.required\" class=\"required-star\">*</span>\n        </label>\n        <div class=\"mapping-type-tag\">{{ field.dataType }}</div>\n      </div>\n\n      <div\n        class=\"drop-zone\"\n        :class=\"{\n          'drop-zone-active': isDragOver[field.name],\n          'drop-zone-filled': fieldMappings[field.name]?.field,\n          'drop-zone-error': dragError[field.name],\n          'drop-zone-disabled': field.disabled\n        }\"\n        @drop=\"handleDrop($event, field.name)\"\n        @dragover.prevent=\"handleDragOver($event, field.name)\"\n        @dragenter.prevent=\"handleDragEnter(field.name)\"\n        @dragleave.prevent=\"handleDragLeave(field.name)\"\n      >\n        <div v-if=\"!fieldMappings[field.name]?.field\" class=\"drop-placeholder\">\n          <div class=\"drop-icon\">{{ field.icon || '‚Üì' }}</div>\n          <span class=\"drop-text\">{{ field.placeholder || 'Drag column here' }}</span>\n        </div>\n\n        <div v-else-if=\"field.multiple\" class=\"mapped-series\">\n          <div\n            v-for=\"(mapping, index) in fieldMappings[field.name]\"\n            :key=\"index\"\n            class=\"mapped-field\"\n          >\n            <div class=\"field-info\">\n              <span class=\"field-name\">{{ mapping.field }}</span>\n              <span class=\"field-type\">{{ mapping.type }}</span>\n            </div>\n            <button class=\"remove-btn\" @click=\"removeMapping(field.name, index)\">√ó</button>\n          </div>\n        </div>\n\n        <div v-else class=\"mapped-field\">\n          <div class=\"field-info\">\n            <span class=\"field-name\">{{ fieldMappings[field.name].field }}</span>\n            <span class=\"field-type\">{{ fieldMappings[field.name].type }}</span>\n          </div>\n          <button class=\"remove-btn\" @click=\"removeMapping(field.name)\">√ó</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\nimport { getChartConfig } from '../configs/chartConfigs.js'\n\nconst props = defineProps({\n  chartType: {\n    type: String,\n    required: true\n  },\n  mappings: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\nconst emit = defineEmits(['update:mappings', 'mapping-error'])\n\n// ÊãñÊãΩÁä∂ÊÄÅ\nconst isDragOver = ref({})\nconst dragError = ref({})\n\n// Â≠óÊÆµÊò†Â∞Ñ\nconst fieldMappings = ref({ ...props.mappings })\n\n// ÁõëÂê¨Â§ñÈÉ®Êò†Â∞ÑÂèòÂåñ\nwatch(() => props.mappings, (newMappings) => {\n  fieldMappings.value = { ...newMappings }\n}, { deep: true })\n\n// ÁõëÂê¨ÂÜÖÈÉ®Êò†Â∞ÑÂèòÂåñ\nwatch(fieldMappings, (newMappings) => {\n  emit('update:mappings', newMappings)\n}, { deep: true })\n\n// Ëé∑ÂèñÂΩìÂâçÂõæË°®ÁöÑÊò†Â∞ÑÂ≠óÊÆµÈÖçÁΩÆ\nconst mappingFields = computed(() => {\n  const config = getChartConfig(props.chartType)\n  const fields = []\n\n  // ÂøÖÈúÄÂ≠óÊÆµ\n  config.requiredFields.forEach(fieldName => {\n    fields.push({\n      name: fieldName,\n      label: getFieldLabel(fieldName),\n      required: true,\n      dataType: getFieldDataType(fieldName, config),\n      multiple: fieldName === 'series' && config.maxSeries > 1,\n      placeholder: getFieldPlaceholder(fieldName),\n      icon: getFieldIcon(fieldName)\n    })\n  })\n\n  // ÂèØÈÄâÂ≠óÊÆµ\n  config.optionalFields.forEach(fieldName => {\n    fields.push({\n      name: fieldName,\n      label: getFieldLabel(fieldName),\n      required: false,\n      dataType: getFieldDataType(fieldName, config),\n      multiple: fieldName === 'series' && config.maxSeries > 1,\n      placeholder: getFieldPlaceholder(fieldName),\n      icon: getFieldIcon(fieldName)\n    })\n  })\n\n  return fields\n})\n\n// Ëé∑ÂèñÂ≠óÊÆµÊ†áÁ≠æ\nfunction getFieldLabel (fieldName) {\n  const labels = {\n    xAxis: 'XËΩ¥',\n    yAxis: 'YËΩ¥',\n    series: 'Êï∞ÊçÆÁ≥ªÂàó',\n    dimension: 'Áª¥Â∫¶',\n    value: 'Êï∞ÂÄº',\n    color: 'È¢úËâ≤',\n    size: 'Â§ßÂ∞è',\n    parent: 'Áà∂Á∫ß',\n    target: 'ÁõÆÊ†áÂÄº'\n  }\n  return labels[fieldName] || fieldName\n}\n\n// Ëé∑ÂèñÂ≠óÊÆµÊï∞ÊçÆÁ±ªÂûãÊòæÁ§∫ÊñáÊú¨\nfunction getFieldDataType (fieldName, config) {\n  const types = config.fieldTypes[fieldName] || []\n  const typeLabels = {\n    category: 'Á±ªÂà´',\n    value: 'Êï∞ÂÄº',\n    time: 'Êó∂Èó¥',\n    dimension: 'Áª¥Â∫¶',\n    measure: 'Â∫¶Èáè'\n  }\n  return types.map(type => typeLabels[type] || type).join(' / ')\n}\n\n// Ëé∑ÂèñÂ≠óÊÆµÂç†‰ΩçÁ¨¶ÊñáÊú¨\nfunction getFieldPlaceholder (fieldName) {\n  const placeholders = {\n    xAxis: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫XËΩ¥',\n    yAxis: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫YËΩ¥',\n    series: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫Êï∞ÊçÆÁ≥ªÂàó',\n    dimension: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫Áª¥Â∫¶',\n    value: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫Êï∞ÂÄº',\n    color: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫È¢úËâ≤',\n    size: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫Â§ßÂ∞è',\n    parent: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫Áà∂Á∫ß',\n    target: 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ‰Ωú‰∏∫ÁõÆÊ†áÂÄº'\n  }\n  return placeholders[fieldName] || 'ÊãñÊãΩÂàóÂà∞Ê≠§Â§Ñ'\n}\n\n// Ëé∑ÂèñÂ≠óÊÆµÂõæÊ†á\nfunction getFieldIcon (fieldName) {\n  const icons = {\n    xAxis: '‚Üí',\n    yAxis: '‚Üë',\n    series: 'üìä',\n    dimension: 'üè∑Ô∏è',\n    value: 'üíØ',\n    color: 'üé®',\n    size: 'üìè',\n    parent: 'üìÅ',\n    target: 'üéØ'\n  }\n  return icons[fieldName] || '‚Üì'\n}\n\n// ÊãñÊãΩÂ§ÑÁêÜ\nfunction handleDragEnter (fieldName) {\n  isDragOver.value[fieldName] = true\n  dragError.value[fieldName] = false\n}\n\nfunction handleDragLeave (fieldName) {\n  isDragOver.value[fieldName] = false\n}\n\nfunction handleDragOver (event, fieldName) {\n  event.preventDefault()\n  isDragOver.value[fieldName] = true\n}\n\nfunction handleDrop (event, fieldName) {\n  event.preventDefault()\n  isDragOver.value[fieldName] = false\n\n  try {\n    const dragData = JSON.parse(event.dataTransfer.getData('text/plain'))\n\n    if (dragData.type === 'column') {\n      const column = dragData.column\n\n      // È™åËØÅÂ≠óÊÆµÁ±ªÂûã\n      if (validateFieldMapping(props.chartType, fieldName, column.type)) {\n        mapColumnToField(column, fieldName)\n        emit('mapping-error', '')\n      } else {\n        dragError.value[fieldName] = true\n        const fieldLabel = getFieldLabel(fieldName)\n        emit('mapping-error', `Âàó \"${column.name}\" ÁöÑÊï∞ÊçÆÁ±ªÂûã‰∏çÈÄÇÂêàÁî®‰Ωú${fieldLabel}`)\n        setTimeout(() => {\n          dragError.value[fieldName] = false\n        }, 3000)\n      }\n    }\n  } catch (error) {\n    console.error('Drop failed:', error)\n    emit('mapping-error', 'ÊãñÊãΩÂ§±Ë¥•ÔºåËØ∑ÈáçËØï')\n  }\n}\n\n// Êò†Â∞ÑÂàóÂà∞Â≠óÊÆµ\nfunction mapColumnToField (column, fieldName) {\n  const field = mappingFields.value.find(f => f.name === fieldName)\n\n  if (field?.multiple) {\n    // Â§öÂÄºÂ≠óÊÆµÔºàÂ¶ÇseriesÔºâ\n    if (!Array.isArray(fieldMappings.value[fieldName])) {\n      fieldMappings.value[fieldName] = []\n    }\n\n    // Ê£ÄÊü•ÊòØÂê¶Â∑≤Â≠òÂú®\n    const exists = fieldMappings.value[fieldName].some(mapping => mapping.field === column.name)\n    if (!exists) {\n      const config = getChartConfig(props.chartType)\n      if (fieldMappings.value[fieldName].length < config.maxSeries) {\n        fieldMappings.value[fieldName].push({\n          field: column.name,\n          type: column.type,\n          dataType: getFieldTypeMapping(column.type)\n        })\n      } else {\n        emit('mapping-error', `ÊúÄÂ§öÂè™ËÉΩÊ∑ªÂä† ${config.maxSeries} ‰∏™Êï∞ÊçÆÁ≥ªÂàó`)\n      }\n    }\n  } else {\n    // ÂçïÂÄºÂ≠óÊÆµ\n    fieldMappings.value[fieldName] = {\n      field: column.name,\n      type: column.type,\n      dataType: getFieldTypeMapping(column.type)\n    }\n  }\n}\n\n// ÁßªÈô§Êò†Â∞Ñ\nfunction removeMapping (fieldName, index = null) {\n  const field = mappingFields.value.find(f => f.name === fieldName)\n\n  if (field?.multiple && index !== null) {\n    // ÁßªÈô§Â§öÂÄºÂ≠óÊÆµ‰∏≠ÁöÑÁâπÂÆöÈ°π\n    fieldMappings.value[fieldName].splice(index, 1)\n  } else {\n    // ÁßªÈô§ÂçïÂÄºÂ≠óÊÆµÊàñÊï¥‰∏™Â§öÂÄºÂ≠óÊÆµ\n    fieldMappings.value[fieldName] = field?.multiple ? [] : null\n  }\n}\n\n// Ëé∑ÂèñÊò†Â∞ÑÈ™åËØÅÁä∂ÊÄÅ\nconst mappingValidation = computed(() => {\n  const config = getChartConfig(props.chartType)\n  const validation = {\n    isValid: true,\n    missingFields: []\n  }\n\n  config.requiredFields.forEach(fieldName => {\n    const mapping = fieldMappings.value[fieldName]\n    const field = mappingFields.value.find(f => f.name === fieldName)\n\n    if (!mapping || (field?.multiple && (!Array.isArray(mapping) || mapping.length === 0))) {\n      validation.isValid = false\n      validation.missingFields.push(getFieldLabel(fieldName))\n    }\n  })\n\n  return validation\n})\n\n// Êö¥Èú≤È™åËØÅÁä∂ÊÄÅÁªôÁà∂ÁªÑ‰ª∂\ndefineExpose({\n  validation: mappingValidation,\n  fieldMappings\n})\n</script>\n\n<style scoped>\n.field-mapping {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.mapping-item {\n  animation: fadeInUp 0.5s ease;\n  animation-fill-mode: both;\n}\n\n.mapping-item:nth-child(1) { animation-delay: 0.1s; }\n.mapping-item:nth-child(2) { animation-delay: 0.2s; }\n.mapping-item:nth-child(3) { animation-delay: 0.3s; }\n.mapping-item:nth-child(4) { animation-delay: 0.4s; }\n.mapping-item:nth-child(5) { animation-delay: 0.5s; }\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.mapping-item-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n}\n\n.mapping-label {\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--text-color, #333333);\n}\n\n.required-star {\n  color: #ff5252;\n  font-weight: bold;\n  margin-left: 4px;\n}\n\n.mapping-type-tag {\n  display: inline-flex;\n  align-items: center;\n  padding: 2px 8px;\n  background: var(--bg-secondary, #f1f3f4);\n  color: var(--text-secondary, #666666);\n  border-radius: 10px;\n  font-size: 10px;\n  font-weight: 500;\n  text-transform: uppercase;\n  border: 1px solid var(--border-color, #e5e5e5);\n  transition: all 0.3s ease;\n}\n\n.drop-zone {\n  min-height: 50px;\n  border: 2px dashed var(--border-color, #e5e5e5);\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);\n  background: var(--bg-color, #ffffff);\n  position: relative;\n  overflow: hidden;\n}\n\n.drop-zone-active {\n  border-color: var(--primary-color, #5470c6);\n  background-color: rgba(84, 112, 198, 0.05);\n  transform: scale(1.02);\n  box-shadow: 0 4px 20px rgba(84, 112, 198, 0.15);\n  border-style: solid;\n}\n\n.drop-zone-filled {\n  border-color: var(--success-color, #28a745);\n  background-color: rgba(40, 167, 69, 0.05);\n  transform: scale(1.01);\n}\n\n.drop-zone-error {\n  border-color: var(--error-color, #dc3545);\n  background-color: rgba(220, 53, 69, 0.05);\n  animation: shake 0.5s ease-in-out;\n}\n\n.drop-zone-disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n  border-color: var(--disabled-color, #a8a8a8);\n}\n\n@keyframes shake {\n  0%, 100% { transform: translateX(0); }\n  25% { transform: translateX(-4px); }\n  75% { transform: translateX(4px); }\n}\n\n.drop-placeholder {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--text-secondary, #666666);\n  transition: all 0.3s ease;\n}\n\n.drop-icon {\n  font-size: 16px;\n  font-weight: bold;\n  transition: transform 0.3s ease;\n}\n\n.drop-text {\n  font-size: 12px;\n  transition: color 0.3s ease;\n}\n\n.drop-zone:hover .drop-placeholder {\n  color: var(--primary-color, #5470c6);\n  transform: scale(1.05);\n}\n\n.drop-zone:hover .drop-icon {\n  animation: bounceArrow 0.6s ease;\n}\n\n@keyframes bounceArrow {\n  0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\n  40% { transform: translateY(-3px); }\n  60% { transform: translateY(-2px); }\n}\n\n.mapped-field {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 8px 12px;\n  background: var(--bg-secondary, #f8f9fa);\n  border-radius: 6px;\n  position: relative;\n  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);\n  animation: slideInDown 0.4s ease;\n  overflow: hidden;\n}\n\n@keyframes slideInDown {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.mapped-field:hover {\n  background: var(--bg-tertiary, #e9ecef);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px var(--shadow-color, rgba(0, 0, 0, 0.1));\n}\n\n.mapped-series {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n}\n\n.field-info {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n}\n\n.field-name {\n  font-size: 13px;\n  font-weight: 500;\n  color: var(--text-color, #333333);\n}\n\n.field-type {\n  font-size: 11px;\n  color: var(--text-secondary, #666666);\n  text-transform: uppercase;\n}\n\n.remove-btn {\n  background: var(--error-color, #dc3545);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 12px;\n  transition: all 0.3s ease;\n  opacity: 0.7;\n}\n\n.remove-btn:hover {\n  background: var(--error-hover, #c82333);\n  transform: scale(1.1) rotate(90deg);\n  opacity: 1;\n  box-shadow: 0 0 10px rgba(220, 53, 69, 0.5);\n}\n\n/* ÊöóËâ≤‰∏ªÈ¢òÈÄÇÈÖç */\n[data-theme=\"dark\"] .mapping-type-tag,\n:root.dark .mapping-type-tag {\n  background: var(--bg-tertiary, #3d3d3d);\n  color: var(--text-secondary, #b0b0b0);\n  border-color: var(--border-color, #404040);\n}\n\n[data-theme=\"dark\"] .drop-zone,\n:root.dark .drop-zone {\n  border-color: var(--border-color, #555555);\n  background: var(--bg-color, #1e1e1e);\n}\n\n[data-theme=\"dark\"] .mapped-field,\n:root.dark .mapped-field {\n  background: var(--bg-secondary, #2d2d2d);\n}\n\n[data-theme=\"dark\"] .mapped-field:hover,\n:root.dark .mapped-field:hover {\n  background: var(--bg-tertiary, #3d3d3d);\n}\n</style>\n"],"mappings":";;;;;;AAwDA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,KAAI;AACzC,SAASC,cAAc,QAAQ,4BAA2B;;;;;;;;;;;;;;;;;;IAE1D,MAAMC,KAAK,GAAGC,OAAA;IAWd,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,UAAU,GAAGR,GAAG,CAAC,CAAC,CAAC;IACzB,MAAMS,SAAS,GAAGT,GAAG,CAAC,CAAC,CAAC;;IAExB;IACA,MAAMU,aAAa,GAAGV,GAAG,CAAC;MAAE,GAAGI,KAAK,CAACO;IAAS,CAAC;;IAE/C;IACAT,KAAK,CAAC,MAAME,KAAK,CAACO,QAAQ,EAAGC,WAAW,IAAK;MAC3CF,aAAa,CAACG,KAAK,GAAG;QAAE,GAAGD;MAAY;IACzC,CAAC,EAAE;MAAEE,IAAI,EAAE;IAAK,CAAC;;IAEjB;IACAZ,KAAK,CAACQ,aAAa,EAAGE,WAAW,IAAK;MACpCN,IAAI,CAAC,iBAAiB,EAAEM,WAAW;IACrC,CAAC,EAAE;MAAEE,IAAI,EAAE;IAAK,CAAC;;IAEjB;IACA,MAAMC,aAAa,GAAGd,QAAQ,CAAC,MAAM;MACnC,MAAMe,MAAM,GAAGb,cAAc,CAACC,KAAK,CAACa,SAAS;MAC7C,MAAMC,MAAM,GAAG,EAAC;;MAEhB;MACAF,MAAM,CAACG,cAAc,CAACC,OAAO,CAACC,SAAS,IAAI;QACzCH,MAAM,CAACI,IAAI,CAAC;UACVC,IAAI,EAAEF,SAAS;UACfG,KAAK,EAAEC,aAAa,CAACJ,SAAS,CAAC;UAC/BK,QAAQ,EAAE,IAAI;UACdC,QAAQ,EAAEC,gBAAgB,CAACP,SAAS,EAAEL,MAAM,CAAC;UAC7Ca,QAAQ,EAAER,SAAS,KAAK,QAAQ,IAAIL,MAAM,CAACc,SAAS,GAAG,CAAC;UACxDC,WAAW,EAAEC,mBAAmB,CAACX,SAAS,CAAC;UAC3CY,IAAI,EAAEC,YAAY,CAACb,SAAS;QAC9B,CAAC;MACH,CAAC;;MAED;MACAL,MAAM,CAACmB,cAAc,CAACf,OAAO,CAACC,SAAS,IAAI;QACzCH,MAAM,CAACI,IAAI,CAAC;UACVC,IAAI,EAAEF,SAAS;UACfG,KAAK,EAAEC,aAAa,CAACJ,SAAS,CAAC;UAC/BK,QAAQ,EAAE,KAAK;UACfC,QAAQ,EAAEC,gBAAgB,CAACP,SAAS,EAAEL,MAAM,CAAC;UAC7Ca,QAAQ,EAAER,SAAS,KAAK,QAAQ,IAAIL,MAAM,CAACc,SAAS,GAAG,CAAC;UACxDC,WAAW,EAAEC,mBAAmB,CAACX,SAAS,CAAC;UAC3CY,IAAI,EAAEC,YAAY,CAACb,SAAS;QAC9B,CAAC;MACH,CAAC;MAED,OAAOH,MAAK;IACd,CAAC;;IAED;IACA,SAASO,aAAaA,CAAEJ,SAAS,EAAE;MACjC,MAAMe,MAAM,GAAG;QACbC,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE,IAAI;QACXC,MAAM,EAAE,MAAM;QACdC,SAAS,EAAE,IAAI;QACf3B,KAAK,EAAE,IAAI;QACX4B,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE,IAAI;QACVC,MAAM,EAAE,IAAI;QACZC,MAAM,EAAE;MACV;MACA,OAAOR,MAAM,CAACf,SAAS,CAAC,IAAIA,SAAQ;IACtC;;IAEA;IACA,SAASO,gBAAgBA,CAAEP,SAAS,EAAEL,MAAM,EAAE;MAC5C,MAAM6B,KAAK,GAAG7B,MAAM,CAAC8B,UAAU,CAACzB,SAAS,CAAC,IAAI,EAAC;MAC/C,MAAM0B,UAAU,GAAG;QACjBC,QAAQ,EAAE,IAAI;QACdnC,KAAK,EAAE,IAAI;QACXoC,IAAI,EAAE,IAAI;QACVT,SAAS,EAAE,IAAI;QACfU,OAAO,EAAE;MACX;MACA,OAAOL,KAAK,CAACM,GAAG,CAACC,IAAI,IAAIL,UAAU,CAACK,IAAI,CAAC,IAAIA,IAAI,CAAC,CAACC,IAAI,CAAC,KAAK;IAC/D;;IAEA;IACA,SAASrB,mBAAmBA,CAAEX,SAAS,EAAE;MACvC,MAAMiC,YAAY,GAAG;QACnBjB,KAAK,EAAE,YAAY;QACnBC,KAAK,EAAE,YAAY;QACnBC,MAAM,EAAE,cAAc;QACtBC,SAAS,EAAE,YAAY;QACvB3B,KAAK,EAAE,YAAY;QACnB4B,KAAK,EAAE,YAAY;QACnBC,IAAI,EAAE,YAAY;QAClBC,MAAM,EAAE,YAAY;QACpBC,MAAM,EAAE;MACV;MACA,OAAOU,YAAY,CAACjC,SAAS,CAAC,IAAI,QAAO;IAC3C;;IAEA;IACA,SAASa,YAAYA,CAAEb,SAAS,EAAE;MAChC,MAAMkC,KAAK,GAAG;QACZlB,KAAK,EAAE,GAAG;QACVC,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE,KAAK;QAChB3B,KAAK,EAAE,IAAI;QACX4B,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE,IAAI;QACVC,MAAM,EAAE,IAAI;QACZC,MAAM,EAAE;MACV;MACA,OAAOW,KAAK,CAAClC,SAAS,CAAC,IAAI,GAAE;IAC/B;;IAEA;IACA,SAASmC,eAAeA,CAAEnC,SAAS,EAAE;MACnCb,UAAU,CAACK,KAAK,CAACQ,SAAS,CAAC,GAAG,IAAG;MACjCZ,SAAS,CAACI,KAAK,CAACQ,SAAS,CAAC,GAAG,KAAI;IACnC;IAEA,SAASoC,eAAeA,CAAEpC,SAAS,EAAE;MACnCb,UAAU,CAACK,KAAK,CAACQ,SAAS,CAAC,GAAG,KAAI;IACpC;IAEA,SAASqC,cAAcA,CAAEC,KAAK,EAAEtC,SAAS,EAAE;MACzCsC,KAAK,CAACC,cAAc,CAAC;MACrBpD,UAAU,CAACK,KAAK,CAACQ,SAAS,CAAC,GAAG,IAAG;IACnC;IAEA,SAASwC,UAAUA,CAAEF,KAAK,EAAEtC,SAAS,EAAE;MACrCsC,KAAK,CAACC,cAAc,CAAC;MACrBpD,UAAU,CAACK,KAAK,CAACQ,SAAS,CAAC,GAAG,KAAI;MAElC,IAAI;QACF,MAAMyC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,KAAK,CAACM,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;QAEpE,IAAIJ,QAAQ,CAACV,IAAI,KAAK,QAAQ,EAAE;UAC9B,MAAMe,MAAM,GAAGL,QAAQ,CAACK,MAAK;;UAE7B;UACA,IAAIC,oBAAoB,CAAChE,KAAK,CAACa,SAAS,EAAEI,SAAS,EAAE8C,MAAM,CAACf,IAAI,CAAC,EAAE;YACjEiB,gBAAgB,CAACF,MAAM,EAAE9C,SAAS;YAClCf,IAAI,CAAC,eAAe,EAAE,EAAE;UAC1B,CAAC,MAAM;YACLG,SAAS,CAACI,KAAK,CAACQ,SAAS,CAAC,GAAG,IAAG;YAChC,MAAMiD,UAAU,GAAG7C,aAAa,CAACJ,SAAS;YAC1Cf,IAAI,CAAC,eAAe,EAAE,MAAM6D,MAAM,CAAC5C,IAAI,eAAe+C,UAAU,EAAE;YAClEC,UAAU,CAAC,MAAM;cACf9D,SAAS,CAACI,KAAK,CAACQ,SAAS,CAAC,GAAG,KAAI;YACnC,CAAC,EAAE,IAAI;UACT;QACF;MACF,CAAC,CAAC,OAAOmD,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK;QACnClE,IAAI,CAAC,eAAe,EAAE,UAAU;MAClC;IACF;;IAEA;IACA,SAAS+D,gBAAgBA,CAAEF,MAAM,EAAE9C,SAAS,EAAE;MAC5C,MAAMqD,KAAK,GAAG3D,aAAa,CAACF,KAAK,CAAC8D,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACrD,IAAI,KAAKF,SAAS;MAEhE,IAAIqD,KAAK,EAAE7C,QAAQ,EAAE;QACnB;QACA,IAAI,CAACgD,KAAK,CAACC,OAAO,CAACpE,aAAa,CAACG,KAAK,CAACQ,SAAS,CAAC,CAAC,EAAE;UAClDX,aAAa,CAACG,KAAK,CAACQ,SAAS,CAAC,GAAG,EAAC;QACpC;;QAEA;QACA,MAAM0D,MAAM,GAAGrE,aAAa,CAACG,KAAK,CAACQ,SAAS,CAAC,CAAC2D,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACP,KAAK,KAAKP,MAAM,CAAC5C,IAAI;QAC3F,IAAI,CAACwD,MAAM,EAAE;UACX,MAAM/D,MAAM,GAAGb,cAAc,CAACC,KAAK,CAACa,SAAS;UAC7C,IAAIP,aAAa,CAACG,KAAK,CAACQ,SAAS,CAAC,CAAC6D,MAAM,GAAGlE,MAAM,CAACc,SAAS,EAAE;YAC5DpB,aAAa,CAACG,KAAK,CAACQ,SAAS,CAAC,CAACC,IAAI,CAAC;cAClCoD,KAAK,EAAEP,MAAM,CAAC5C,IAAI;cAClB6B,IAAI,EAAEe,MAAM,CAACf,IAAI;cACjBzB,QAAQ,EAAEwD,mBAAmB,CAAChB,MAAM,CAACf,IAAI;YAC3C,CAAC;UACH,CAAC,MAAM;YACL9C,IAAI,CAAC,eAAe,EAAE,UAAUU,MAAM,CAACc,SAAS,QAAQ;UAC1D;QACF;MACF,CAAC,MAAM;QACL;QACApB,aAAa,CAACG,KAAK,CAACQ,SAAS,CAAC,GAAG;UAC/BqD,KAAK,EAAEP,MAAM,CAAC5C,IAAI;UAClB6B,IAAI,EAAEe,MAAM,CAACf,IAAI;UACjBzB,QAAQ,EAAEwD,mBAAmB,CAAChB,MAAM,CAACf,IAAI;QAC3C;MACF;IACF;;IAEA;IACA,SAASgC,aAAaA,CAAE/D,SAAS,EAAEgE,KAAK,GAAG,IAAI,EAAE;MAC/C,MAAMX,KAAK,GAAG3D,aAAa,CAACF,KAAK,CAAC8D,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACrD,IAAI,KAAKF,SAAS;MAEhE,IAAIqD,KAAK,EAAE7C,QAAQ,IAAIwD,KAAK,KAAK,IAAI,EAAE;QACrC;QACA3E,aAAa,CAACG,KAAK,CAACQ,SAAS,CAAC,CAACiE,MAAM,CAACD,KAAK,EAAE,CAAC;MAChD,CAAC,MAAM;QACL;QACA3E,aAAa,CAACG,KAAK,CAACQ,SAAS,CAAC,GAAGqD,KAAK,EAAE7C,QAAQ,GAAG,EAAE,GAAG,IAAG;MAC7D;IACF;;IAEA;IACA,MAAM0D,iBAAiB,GAAGtF,QAAQ,CAAC,MAAM;MACvC,MAAMe,MAAM,GAAGb,cAAc,CAACC,KAAK,CAACa,SAAS;MAC7C,MAAMuE,UAAU,GAAG;QACjBC,OAAO,EAAE,IAAI;QACbC,aAAa,EAAE;MACjB;MAEA1E,MAAM,CAACG,cAAc,CAACC,OAAO,CAACC,SAAS,IAAI;QACzC,MAAM4D,OAAO,GAAGvE,aAAa,CAACG,KAAK,CAACQ,SAAS;QAC7C,MAAMqD,KAAK,GAAG3D,aAAa,CAACF,KAAK,CAAC8D,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACrD,IAAI,KAAKF,SAAS;QAEhE,IAAI,CAAC4D,OAAO,IAAKP,KAAK,EAAE7C,QAAQ,KAAK,CAACgD,KAAK,CAACC,OAAO,CAACG,OAAO,CAAC,IAAIA,OAAO,CAACC,MAAM,KAAK,CAAC,CAAE,EAAE;UACtFM,UAAU,CAACC,OAAO,GAAG,KAAI;UACzBD,UAAU,CAACE,aAAa,CAACpE,IAAI,CAACG,aAAa,CAACJ,SAAS,CAAC;QACxD;MACF,CAAC;MAED,OAAOmE,UAAS;IAClB,CAAC;;IAED;IACAG,QAAY,CAAC;MACXH,UAAU,EAAED,iBAAiB;MAC7B7E;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}