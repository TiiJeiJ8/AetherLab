{"ast":null,"code":"import { unref as _unref, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createVNode as _createVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-config-panel\"\n};\nconst _hoisted_2 = {\n  class: \"config-header\"\n};\nconst _hoisted_3 = {\n  class: \"header-title\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"chart-type-indicator\"\n};\nconst _hoisted_6 = {\n  class: \"chart-type-label\"\n};\nconst _hoisted_7 = {\n  class: \"config-content\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"empty-state\"\n};\nconst _hoisted_9 = [\"innerHTML\"];\nconst _hoisted_10 = {\n  key: 1,\n  class: \"chart-config-area\"\n};\nconst _hoisted_11 = {\n  class: \"config-tabs\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = [\"innerHTML\"];\nconst _hoisted_14 = {\n  class: \"tab-content\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"tab-panel\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"tab-panel\"\n};\nconst _hoisted_17 = {\n  key: 2,\n  class: \"tab-panel\"\n};\nconst _hoisted_18 = {\n  key: 0,\n  class: \"config-actions\"\n};\nconst _hoisted_19 = [\"innerHTML\"];\nconst _hoisted_20 = [\"disabled\"];\nconst _hoisted_21 = [\"innerHTML\"];\nimport { ref, computed, watch } from 'vue';\nimport { getThemeIcon } from '@/assets/JS/icons.js';\nimport ChartMappingPanel from './chart-mappings/ChartMappingPanel.vue';\nimport ChartStylePanel from './chart-style/ChartStylePanel.vue';\nimport ChartPreviewPanel from './ChartPreviewPanel.vue';\n\n// Props\n\nexport default {\n  __name: 'ChartConfigPanel',\n  props: {\n    selectedChartType: {\n      type: String,\n      default: null\n    },\n    availableData: {\n      type: Array,\n      default: () => []\n    }\n  },\n  emits: ['chart-generated', 'configuration-changed'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    /* eslint-disable */\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 配置状态\n    const activeTab = ref('mapping');\n    const mappedFields = ref({});\n    const styleConfig = ref({});\n    const previewData = ref(null);\n\n    // 配置标签\n    const configTabs = computed(() => [{\n      id: 'mapping',\n      label: 'Data Mapping',\n      icon: 'drag'\n    }, {\n      id: 'style',\n      label: 'Style',\n      icon: 'palette'\n    }, {\n      id: 'preview',\n      label: 'Preview',\n      icon: 'eye'\n    }]);\n\n    // 检查是否可以生成图表\n    const canGenerateChart = computed(() => {\n      return props.selectedChartType && Object.keys(mappedFields.value).length > 0 && validateMappingForChartType();\n    });\n\n    // 监听图表类型变化，重置配置\n    watch(() => props.selectedChartType, newType => {\n      if (newType) {\n        resetConfiguration();\n        activeTab.value = 'mapping';\n      }\n    });\n\n    // 获取图表类型标签\n    function getChartTypeLabel(type) {\n      const labels = {\n        'bar': 'Bar Chart',\n        'line': 'Line Chart',\n        'pie': 'Pie Chart',\n        'scatter': 'Scatter Plot',\n        'area': 'Area Chart',\n        'radar': 'Radar Chart',\n        'funnel': 'Funnel Chart',\n        'gauge': 'Gauge Chart'\n      };\n      return labels[type] || type;\n    }\n\n    // 验证当前图表类型的字段映射\n    function validateMappingForChartType() {\n      const type = props.selectedChartType;\n      const fields = mappedFields.value;\n      switch (type) {\n        case 'bar':\n        case 'line':\n          return fields.xAxis && fields.yAxis;\n        case 'pie':\n          return fields.category && fields.value;\n        case 'scatter':\n          return fields.xAxis && fields.yAxis;\n        default:\n          return Object.keys(fields).length > 0;\n      }\n    }\n\n    // 处理字段映射\n    function handleFieldMapped(mapping) {\n      mappedFields.value = {\n        ...mappedFields.value,\n        ...mapping\n      };\n      emit('configuration-changed', {\n        type: 'field-mapped',\n        chartType: props.selectedChartType,\n        mappedFields: mappedFields.value\n      });\n    }\n\n    // 处理字段移除\n    function handleFieldRemoved(fieldKey) {\n      delete mappedFields.value[fieldKey];\n      emit('configuration-changed', {\n        type: 'field-removed',\n        chartType: props.selectedChartType,\n        mappedFields: mappedFields.value\n      });\n    }\n\n    // 处理样式变化\n    function handleStyleChanged(newStyle) {\n      styleConfig.value = {\n        ...styleConfig.value,\n        ...newStyle\n      };\n      emit('configuration-changed', {\n        type: 'style-changed',\n        chartType: props.selectedChartType,\n        styleConfig: styleConfig.value\n      });\n    }\n\n    // 生成图表\n    function handleGenerateChart(chartOption) {\n      emit('chart-generated', {\n        chartType: props.selectedChartType,\n        option: chartOption,\n        mappedFields: mappedFields.value,\n        styleConfig: styleConfig.value\n      });\n    }\n    function generateChart() {\n      if (canGenerateChart.value) {\n        // 触发预览面板生成图表\n        handleGenerateChart(null);\n      }\n    }\n\n    // 清空配置\n    function clearConfiguration() {\n      mappedFields.value = {};\n      styleConfig.value = {};\n      previewData.value = null;\n      activeTab.value = 'mapping';\n    }\n\n    // 重置配置\n    function resetConfiguration() {\n      clearConfiguration();\n      // 根据图表类型设置默认配置\n      initializeDefaultConfig();\n    }\n\n    // 初始化默认配置\n    function initializeDefaultConfig() {\n      const type = props.selectedChartType;\n\n      // 设置默认样式配置\n      switch (type) {\n        case 'bar':\n          styleConfig.value = {\n            color: '#5470c6',\n            barWidth: '60%'\n          };\n          break;\n        case 'line':\n          styleConfig.value = {\n            color: '#91cc75',\n            smooth: false,\n            symbolSize: 6\n          };\n          break;\n        case 'pie':\n          styleConfig.value = {\n            radius: '60%',\n            labelPosition: 'outside'\n          };\n          break;\n        default:\n          styleConfig.value = {};\n      }\n    }\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", {\n        class: \"config-icon\",\n        innerHTML: _unref(getThemeIcon)('structure')\n      }, null, 8, _hoisted_4), _cache[0] || (_cache[0] = _createElementVNode(\"span\", null, \"Chart Configuration\", -1))]), __props.selectedChartType ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"span\", _hoisted_6, _toDisplayString(getChartTypeLabel(__props.selectedChartType)), 1), _createElementVNode(\"span\", {\n        class: _normalizeClass([\"chart-type-badge\", `type-${__props.selectedChartType}`])\n      }, _toDisplayString(__props.selectedChartType.toUpperCase()), 3)])) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_7, [!__props.selectedChartType ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"div\", {\n        class: \"empty-icon\",\n        innerHTML: _unref(getThemeIcon)('structure')\n      }, null, 8, _hoisted_9), _cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Select Chart Type\", -1)), _cache[2] || (_cache[2] = _createElementVNode(\"p\", null, \"Choose a chart type from the left sidebar to configure data mapping\", -1))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(configTabs.value, tab => {\n        return _openBlock(), _createElementBlock(\"button\", {\n          key: tab.id,\n          class: _normalizeClass([\"tab-button\", {\n            'active': activeTab.value === tab.id\n          }]),\n          onClick: $event => activeTab.value = tab.id\n        }, [_createElementVNode(\"span\", {\n          innerHTML: _unref(getThemeIcon)(tab.icon)\n        }, null, 8, _hoisted_13), _createElementVNode(\"span\", null, _toDisplayString(tab.label), 1)], 10, _hoisted_12);\n      }), 128))]), _createElementVNode(\"div\", _hoisted_14, [activeTab.value === 'mapping' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createVNode(ChartMappingPanel, {\n        chartType: __props.selectedChartType,\n        mappedFields: mappedFields.value,\n        onFieldMapped: handleFieldMapped,\n        onFieldRemoved: handleFieldRemoved\n      }, null, 8, [\"chartType\", \"mappedFields\"])])) : _createCommentVNode(\"\", true), activeTab.value === 'style' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createVNode(ChartStylePanel, {\n        chartType: __props.selectedChartType,\n        styleConfig: styleConfig.value,\n        onStyleChanged: handleStyleChanged\n      }, null, 8, [\"chartType\", \"styleConfig\"])])) : _createCommentVNode(\"\", true), activeTab.value === 'preview' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createVNode(ChartPreviewPanel, {\n        chartType: __props.selectedChartType,\n        mappedFields: mappedFields.value,\n        styleConfig: styleConfig.value,\n        previewData: previewData.value,\n        onGenerateChart: handleGenerateChart\n      }, null, 8, [\"chartType\", \"mappedFields\", \"styleConfig\", \"previewData\"])])) : _createCommentVNode(\"\", true)])]))]), __props.selectedChartType ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"button\", {\n        class: \"action-btn secondary\",\n        onClick: clearConfiguration\n      }, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('remove')\n      }, null, 8, _hoisted_19), _cache[3] || (_cache[3] = _createTextVNode(\" Clear \"))]), _createElementVNode(\"button\", {\n        class: \"action-btn primary\",\n        disabled: !canGenerateChart.value,\n        onClick: generateChart\n      }, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('check')\n      }, null, 8, _hoisted_21), _cache[4] || (_cache[4] = _createTextVNode(\" Generate Chart \"))], 8, _hoisted_20)])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","getThemeIcon","ChartMappingPanel","ChartStylePanel","ChartPreviewPanel","props","__props","emit","__emit","activeTab","mappedFields","styleConfig","previewData","configTabs","id","label","icon","canGenerateChart","selectedChartType","Object","keys","value","length","validateMappingForChartType","newType","resetConfiguration","getChartTypeLabel","type","labels","fields","xAxis","yAxis","category","handleFieldMapped","mapping","chartType","handleFieldRemoved","fieldKey","handleStyleChanged","newStyle","handleGenerateChart","chartOption","option","generateChart","clearConfiguration","initializeDefaultConfig","color","barWidth","smooth","symbolSize","radius","labelPosition"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/ChartConfigPanel.vue"],"sourcesContent":["<template>\n  <div class=\"chart-config-panel\">\n    <!-- 配置面板头部 -->\n    <div class=\"config-header\">\n      <div class=\"header-title\">\n        <span class=\"config-icon\" v-html=\"getThemeIcon('structure')\"></span>\n        <span>Chart Configuration</span>\n      </div>\n      <div class=\"chart-type-indicator\" v-if=\"selectedChartType\">\n        <span class=\"chart-type-label\">{{ getChartTypeLabel(selectedChartType) }}</span>\n        <span class=\"chart-type-badge\" :class=\"`type-${selectedChartType}`\">\n          {{ selectedChartType.toUpperCase() }}\n        </span>\n      </div>\n    </div>\n\n    <!-- 配置内容区域 -->\n    <div class=\"config-content\">\n      <div v-if=\"!selectedChartType\" class=\"empty-state\">\n        <div class=\"empty-icon\" v-html=\"getThemeIcon('structure')\"></div>\n        <h3>Select Chart Type</h3>\n        <p>Choose a chart type from the left sidebar to configure data mapping</p>\n      </div>\n\n      <!-- 图表类型配置区域 -->\n      <div v-else class=\"chart-config-area\">\n        <!-- 标签导航 -->\n        <div class=\"config-tabs\">\n          <button \n            v-for=\"tab in configTabs\" \n            :key=\"tab.id\"\n            class=\"tab-button\"\n            :class=\"{ 'active': activeTab === tab.id }\"\n            @click=\"activeTab = tab.id\">\n            <span v-html=\"getThemeIcon(tab.icon)\"></span>\n            <span>{{ tab.label }}</span>\n          </button>\n        </div>\n\n        <!-- 标签内容 -->\n        <div class=\"tab-content\">\n          <!-- Data Mapping Tab -->\n          <div v-if=\"activeTab === 'mapping'\" class=\"tab-panel\">\n            <ChartMappingPanel \n              :chartType=\"selectedChartType\"\n              :mappedFields=\"mappedFields\"\n              @field-mapped=\"handleFieldMapped\"\n              @field-removed=\"handleFieldRemoved\"\n            />\n          </div>\n\n          <!-- Style Tab -->\n          <div v-if=\"activeTab === 'style'\" class=\"tab-panel\">\n            <ChartStylePanel \n              :chartType=\"selectedChartType\"\n              :styleConfig=\"styleConfig\"\n              @style-changed=\"handleStyleChanged\"\n            />\n          </div>\n\n          <!-- Preview Tab -->\n          <div v-if=\"activeTab === 'preview'\" class=\"tab-panel\">\n            <ChartPreviewPanel \n              :chartType=\"selectedChartType\"\n              :mappedFields=\"mappedFields\"\n              :styleConfig=\"styleConfig\"\n              :previewData=\"previewData\"\n              @generate-chart=\"handleGenerateChart\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 底部操作按钮 -->\n    <div class=\"config-actions\" v-if=\"selectedChartType\">\n      <button class=\"action-btn secondary\" @click=\"clearConfiguration\">\n        <span v-html=\"getThemeIcon('remove')\"></span>\n        Clear\n      </button>\n      <button \n        class=\"action-btn primary\" \n        :disabled=\"!canGenerateChart\"\n        @click=\"generateChart\">\n        <span v-html=\"getThemeIcon('check')\"></span>\n        Generate Chart\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch } from 'vue'\nimport { getThemeIcon } from '@/assets/JS/icons.js'\nimport ChartMappingPanel from './chart-mappings/ChartMappingPanel.vue'\nimport ChartStylePanel from './chart-style/ChartStylePanel.vue'\nimport ChartPreviewPanel from './ChartPreviewPanel.vue'\n\n// Props\nconst props = defineProps({\n  selectedChartType: {\n    type: String,\n    default: null\n  },\n  availableData: {\n    type: Array,\n    default: () => []\n  }\n})\n\n// Emits\nconst emit = defineEmits(['chart-generated', 'configuration-changed'])\n\n// 配置状态\nconst activeTab = ref('mapping')\nconst mappedFields = ref({})\nconst styleConfig = ref({})\nconst previewData = ref(null)\n\n// 配置标签\nconst configTabs = computed(() => [\n  { id: 'mapping', label: 'Data Mapping', icon: 'drag' },\n  { id: 'style', label: 'Style', icon: 'palette' },\n  { id: 'preview', label: 'Preview', icon: 'eye' }\n])\n\n// 检查是否可以生成图表\nconst canGenerateChart = computed(() => {\n  return props.selectedChartType && \n         Object.keys(mappedFields.value).length > 0 &&\n         validateMappingForChartType()\n})\n\n// 监听图表类型变化，重置配置\nwatch(() => props.selectedChartType, (newType) => {\n  if (newType) {\n    resetConfiguration()\n    activeTab.value = 'mapping'\n  }\n})\n\n// 获取图表类型标签\nfunction getChartTypeLabel(type) {\n  const labels = {\n    'bar': 'Bar Chart',\n    'line': 'Line Chart', \n    'pie': 'Pie Chart',\n    'scatter': 'Scatter Plot',\n    'area': 'Area Chart',\n    'radar': 'Radar Chart',\n    'funnel': 'Funnel Chart',\n    'gauge': 'Gauge Chart'\n  }\n  return labels[type] || type\n}\n\n// 验证当前图表类型的字段映射\nfunction validateMappingForChartType() {\n  const type = props.selectedChartType\n  const fields = mappedFields.value\n  \n  switch (type) {\n    case 'bar':\n    case 'line':\n      return fields.xAxis && fields.yAxis\n    case 'pie':\n      return fields.category && fields.value\n    case 'scatter':\n      return fields.xAxis && fields.yAxis\n    default:\n      return Object.keys(fields).length > 0\n  }\n}\n\n// 处理字段映射\nfunction handleFieldMapped(mapping) {\n  mappedFields.value = { ...mappedFields.value, ...mapping }\n  emit('configuration-changed', {\n    type: 'field-mapped',\n    chartType: props.selectedChartType,\n    mappedFields: mappedFields.value\n  })\n}\n\n// 处理字段移除\nfunction handleFieldRemoved(fieldKey) {\n  delete mappedFields.value[fieldKey]\n  emit('configuration-changed', {\n    type: 'field-removed', \n    chartType: props.selectedChartType,\n    mappedFields: mappedFields.value\n  })\n}\n\n// 处理样式变化\nfunction handleStyleChanged(newStyle) {\n  styleConfig.value = { ...styleConfig.value, ...newStyle }\n  emit('configuration-changed', {\n    type: 'style-changed',\n    chartType: props.selectedChartType,\n    styleConfig: styleConfig.value\n  })\n}\n\n// 生成图表\nfunction handleGenerateChart(chartOption) {\n  emit('chart-generated', {\n    chartType: props.selectedChartType,\n    option: chartOption,\n    mappedFields: mappedFields.value,\n    styleConfig: styleConfig.value\n  })\n}\n\nfunction generateChart() {\n  if (canGenerateChart.value) {\n    // 触发预览面板生成图表\n    handleGenerateChart(null)\n  }\n}\n\n// 清空配置\nfunction clearConfiguration() {\n  mappedFields.value = {}\n  styleConfig.value = {}\n  previewData.value = null\n  activeTab.value = 'mapping'\n}\n\n// 重置配置\nfunction resetConfiguration() {\n  clearConfiguration()\n  // 根据图表类型设置默认配置\n  initializeDefaultConfig()\n}\n\n// 初始化默认配置\nfunction initializeDefaultConfig() {\n  const type = props.selectedChartType\n  \n  // 设置默认样式配置\n  switch (type) {\n    case 'bar':\n      styleConfig.value = {\n        color: '#5470c6',\n        barWidth: '60%'\n      }\n      break\n    case 'line':\n      styleConfig.value = {\n        color: '#91cc75',\n        smooth: false,\n        symbolSize: 6\n      }\n      break\n    case 'pie':\n      styleConfig.value = {\n        radius: '60%',\n        labelPosition: 'outside'\n      }\n      break\n    default:\n      styleConfig.value = {}\n  }\n}\n</script>\n\n<style scoped>\n.chart-config-panel {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background: var(--bg-color);\n  color: var(--text-color);\n}\n\n/* 配置面板头部 */\n.config-header {\n  padding: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n  background: linear-gradient(135deg, rgba(59, 130, 246, 0.05) 0%, rgba(139, 92, 246, 0.05) 100%);\n}\n\n[data-theme=\"dark\"] .config-header {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n  background: linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(139, 92, 246, 0.1) 100%);\n}\n\n.header-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 8px;\n}\n\n.config-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  height: 20px;\n}\n\n.config-icon svg {\n  width: 18px;\n  height: 18px;\n}\n\n.chart-type-indicator {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.chart-type-label {\n  font-size: 14px;\n  color: var(--text-secondary);\n}\n\n.chart-type-badge {\n  font-size: 10px;\n  font-weight: 600;\n  padding: 2px 6px;\n  border-radius: 4px;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.type-bar {\n  background: rgba(84, 112, 198, 0.15);\n  color: #5470c6;\n}\n\n.type-line {\n  background: rgba(145, 204, 117, 0.15);\n  color: #91cc75;\n}\n\n.type-pie {\n  background: rgba(250, 200, 88, 0.15);\n  color: #fac858;\n}\n\n.type-scatter {\n  background: rgba(238, 102, 102, 0.15);\n  color: #ee6666;\n}\n\n/* 配置内容区域 */\n.config-content {\n  flex: 1;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n/* 空状态 */\n.empty-state {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px 20px;\n  text-align: center;\n}\n\n.empty-icon {\n  width: 64px;\n  height: 64px;\n  margin-bottom: 16px;\n  opacity: 0.3;\n}\n\n.empty-icon svg {\n  width: 100%;\n  height: 100%;\n}\n\n.empty-state h3 {\n  margin: 0 0 8px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: var(--text-color);\n}\n\n.empty-state p {\n  margin: 0;\n  font-size: 14px;\n  color: var(--text-secondary);\n  line-height: 1.5;\n}\n\n/* 图表配置区域 */\n.chart-config-area {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n/* 配置标签 */\n.config-tabs {\n  display: flex;\n  padding: 0 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n  background: rgba(0, 0, 0, 0.02);\n}\n\n[data-theme=\"dark\"] .config-tabs {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n  background: rgba(255, 255, 255, 0.02);\n}\n\n.tab-button {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 12px 16px;\n  border: none;\n  background: transparent;\n  color: var(--text-secondary);\n  font-size: 13px;\n  font-weight: 500;\n  cursor: pointer;\n  border-bottom: 2px solid transparent;\n  transition: all 0.2s ease;\n  position: relative;\n}\n\n.tab-button:hover {\n  color: var(--text-color);\n  background: rgba(59, 130, 246, 0.05);\n}\n\n.tab-button.active {\n  color: #3b82f6;\n  border-bottom-color: #3b82f6;\n  background: rgba(59, 130, 246, 0.08);\n}\n\n.tab-button svg {\n  width: 14px;\n  height: 14px;\n}\n\n/* 标签内容 */\n.tab-content {\n  flex: 1;\n  overflow-y: auto;\n}\n\n.tab-panel {\n  height: 100%;\n  padding: 16px;\n}\n\n/* 底部操作按钮 */\n.config-actions {\n  padding: 16px;\n  border-top: 1px solid rgba(0, 0, 0, 0.08);\n  display: flex;\n  gap: 12px;\n}\n\n[data-theme=\"dark\"] .config-actions {\n  border-top: 1px solid rgba(255, 255, 255, 0.08);\n}\n\n.action-btn {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  padding: 10px 16px;\n  border: none;\n  border-radius: 6px;\n  font-size: 13px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.action-btn svg {\n  width: 14px;\n  height: 14px;\n}\n\n.action-btn.secondary {\n  background: rgba(107, 114, 128, 0.1);\n  color: var(--text-secondary);\n  border: 1px solid rgba(107, 114, 128, 0.2);\n}\n\n.action-btn.secondary:hover {\n  background: rgba(107, 114, 128, 0.15);\n  color: var(--text-color);\n}\n\n.action-btn.primary {\n  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);\n  color: white;\n  box-shadow: 0 2px 8px rgba(59, 130, 246, 0.3);\n}\n\n.action-btn.primary:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.4);\n}\n\n.action-btn.primary:disabled {\n  background: rgba(107, 114, 128, 0.3);\n  color: rgba(255, 255, 255, 0.5);\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n/* 响应式适配 */\n@media (max-width: 768px) {\n  .config-header {\n    padding: 12px;\n  }\n  \n  .tab-button {\n    padding: 10px 12px;\n    font-size: 12px;\n  }\n  \n  .tab-panel {\n    padding: 12px;\n  }\n  \n  .config-actions {\n    padding: 12px;\n    flex-direction: column;\n  }\n}\n\n/* 滚动条样式 */\n.tab-content::-webkit-scrollbar {\n  width: 6px;\n}\n\n.tab-content::-webkit-scrollbar-track {\n  background: rgba(0, 0, 0, 0.05);\n  border-radius: 3px;\n}\n\n.tab-content::-webkit-scrollbar-thumb {\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 3px;\n}\n\n.tab-content::-webkit-scrollbar-thumb:hover {\n  background: rgba(0, 0, 0, 0.3);\n}\n\n[data-theme=\"dark\"] .tab-content::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.05);\n}\n\n[data-theme=\"dark\"] .tab-content::-webkit-scrollbar-thumb {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n[data-theme=\"dark\"] .tab-content::-webkit-scrollbar-thumb:hover {\n  background: rgba(255, 255, 255, 0.3);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}