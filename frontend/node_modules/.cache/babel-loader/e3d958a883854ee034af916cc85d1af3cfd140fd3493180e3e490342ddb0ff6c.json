{"ast":null,"code":"import { chartTypes, chartIcons } from '../assets/JS/chartIcons.js';\nexport default {\n  __name: 'ChartIcons',\n  props: {\n    types: {\n      type: Array,\n      default: () => chartTypes\n    },\n    modelValue: {\n      type: String,\n      default: ''\n    }\n  },\n  emits: ['select', 'update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n    const emit = __emit;\n    const selectedType = ref(props.modelValue);\n    function renderButton(type) {\n      const icon = chartIcons[type] || '';\n      return `${icon}<span class=\"label\">${type}</span>`;\n    }\n    function handleClick(type) {\n      emit('select', type);\n    }\n    const __returned__ = {\n      props,\n      emit,\n      selectedType,\n      renderButton,\n      handleClick,\n      get chartTypes() {\n        return chartTypes;\n      },\n      get chartIcons() {\n        return chartIcons;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["chartTypes","chartIcons","props","__props","emit","__emit","selectedType","ref","modelValue","renderButton","type","icon","handleClick"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/ChartIcons.vue"],"sourcesContent":["<template>\n<div class=\"chart-type-panel\">\n    <button\n    v-for=\"type in types\"\n    :key=\"type\"\n    class=\"sideBar-btn\"\n    v-html=\"renderButton(type)\"\n    @click=\"handleClick(type)\"\n    ></button>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { chartTypes, chartIcons } from '../assets/JS/chartIcons.js'\nimport { defineProps, defineEmits } from 'vue'\n\nconst props = defineProps({\n    types: {\n        type: Array,\n        default: () => chartTypes\n    },\n\n    modelValue: {\n        type: String,\n        default: ''\n    }\n})\n\nconst emit = defineEmits(['select', 'update:modelValue'])\n\nconst selectedType = ref(props.modelValue)\n\nfunction renderButton(type) {\n    const icon = chartIcons[type] || ''\n    return `${icon}<span class=\"label\">${type}</span>`\n}\n\nfunction handleClick(type) {\n    emit('select', type)\n}\n</script>\n\n<style scoped>\n.chart-type-panel {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n.sideBar-btn {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    background: transparent;\n    border: none;\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    color: var(--text-color);\n    padding: 6px 14px;\n    border-radius: 8px;\n    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s;\n}\n.sideBar-btn:hover {\n    background-color: rgba(136, 133, 133, 0.1);\n    transform: translateY(-2px) scale(1.02);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n.sideBar-btn svg {\n    fill: currentColor;\n}\n.label {\n    white-space: nowrap;\n}\n</style>\n\n<style>\n.chart-icon-svg {\n    width: 1.6em;\n    height: 1.6em;\n    min-width: 24px;\n    min-height: 24px;\n    max-width: 32px;\n    max-height: 32px;\n    color: var(--text-color);\n    fill: currentColor;\n    vertical-align: middle;\n    display: inline-block;\n}\n</style>\n"],"mappings":"AAcA,SAASA,UAAU,EAAEC,UAAU,QAAQ,4BAA2B;;;;;;;;;;;;;;;;;;;;IADlE;IAIA,MAAMC,KAAK,GAAGC,OAAA;IAYd,MAAMC,IAAI,GAAGC,MAAA;IAEb,MAAMC,YAAY,GAAGC,GAAG,CAACL,KAAK,CAACM,UAAU;IAEzC,SAASC,YAAYA,CAACC,IAAI,EAAE;MACxB,MAAMC,IAAI,GAAGV,UAAU,CAACS,IAAI,CAAC,IAAI,EAAC;MAClC,OAAO,GAAGC,IAAI,uBAAuBD,IAAI,SAAQ;IACrD;IAEA,SAASE,WAAWA,CAACF,IAAI,EAAE;MACvBN,IAAI,CAAC,QAAQ,EAAEM,IAAI;IACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}