{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport TopBar from '../components/TopBar.vue';\nimport SideBar from '../components/SideBar.vue';\nimport ChartTypeSelector from '../components/ChartTypeSelector.vue';\nimport DataMappingConfig from '../components/DataMappingConfig.vue';\nimport ChartDisplay from '../components/ChartDisplay.vue';\nimport ChartHistoryModal from '../components/ChartHistoryModal.vue';\nimport FileUploadModal from '../components/FileUploadModal.vue';\nimport DataPreviewModal from '../components/DataPreviewModal.vue';\nimport FileWorkspace from '../components/FileWorkspace.vue';\nimport FileStructurePanel from '../components/FileStructurePanel.vue';\nimport { getFilePreview } from '../services/FileServices.js';\nimport { ref, nextTick } from 'vue';\n\n// 图表类型选择相关\n\nexport default {\n  __name: 'ChartVisualizations',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const selectedChartType = ref('');\n\n    // 图表配置和渲染相关\n    const chartOption = ref(null);\n\n    // 文件上传相关\n    const showFileUpload = ref(false);\n    function UploadFiles() {\n      showFileUpload.value = true;\n    }\n\n    // 数据预览相关\n    const showDataPreview = ref(false);\n    const currentDataFile = ref(null);\n    const previewData = ref([]);\n\n    // 文件结构面板\n    const showFileStructure = ref(false);\n\n    // 工作区相关\n    const workspaceFiles = ref([]);\n\n    // 图表历史相关\n    const showHistory = ref(false);\n    const chartHistory = ref([]);\n    function DataPreview() {\n      if (workspaceFiles.value.length > 0) {\n        currentDataFile.value = workspaceFiles.value[0];\n        // 模拟预览数据\n        previewData.value = generateMockPreviewData();\n        showDataPreview.value = true;\n      } else {\n        alert('请先上传数据文件');\n      }\n    }\n    function openHistory() {\n      showHistory.value = true;\n    }\n\n    // 图表类型选择处理\n    function onChartTypeSelect(chartType) {\n      selectedChartType.value = chartType;\n      console.log('选择图表类型:', chartType);\n    }\n\n    // 文件工作区处理\n    function handleWorkspaceUpdate(files) {\n      workspaceFiles.value = [...files];\n    }\n    function handleWorkspaceRemove(file) {\n      const index = workspaceFiles.value.findIndex(f => f.id === file.id);\n      if (index !== -1) {\n        workspaceFiles.value.splice(index, 1);\n      }\n    }\n    function handleWorkspacePreview(file) {\n      currentDataFile.value = file;\n      previewData.value = generateMockPreviewData();\n      showDataPreview.value = true;\n    }\n    function handleWorkspaceClear() {\n      workspaceFiles.value = [];\n    }\n    function handleShowFileStructure(file) {\n      showFileStructure.value = true;\n    }\n\n    // 列拖拽处理\n    function handleColumnDrag(dragData) {\n      console.log('列拖拽:', dragData);\n    }\n\n    // 图表生成和预览\n    function handleGenerateChart(config) {\n      console.log('生成图表配置:', config);\n      console.log('图表类型:', config.chartType);\n      console.log('配置数据:', config.configs);\n\n      // 检查是否有必需的配置\n      const hasRequiredConfigs = config.configs.filter(c => c.required).every(c => c.columns.length > 0);\n      console.log('是否满足必需配置:', hasRequiredConfigs);\n      if (!hasRequiredConfigs) {\n        alert('请先配置必需的数据映射项（标有 * 的项目）');\n        return;\n      }\n\n      // 根据配置生成图表选项\n      const option = generateChartOption(config);\n      console.log('生成的图表选项:', option);\n      chartOption.value = option;\n\n      // 保存到历史记录\n      saveToHistory(config, option);\n    }\n    function handlePreviewChart(config) {\n      console.log('预览图表配置:', config);\n      console.log('预览图表类型:', config.chartType);\n\n      // 生成预览图表选项\n      const option = generateChartOption(config, true);\n      console.log('生成的预览图表选项:', option);\n      chartOption.value = option;\n    }\n\n    // 生成图表选项\n    function generateChartOption(config, isPreview = false) {\n      const {\n        chartType,\n        configs,\n        options,\n        filter\n      } = config;\n\n      // 模拟生成 ECharts 配置\n      const baseOption = {\n        title: {\n          text: options.title || `${chartType} 图表${isPreview ? ' (预览)' : ''}`,\n          left: 'center',\n          textStyle: {\n            color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n          }\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          bottom: '10px',\n          textStyle: {\n            color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n          }\n        }\n      };\n\n      // 根据图表类型生成特定配置\n      switch (chartType) {\n        case 'Line':\n          return generateLineChart(baseOption, configs, options, isPreview);\n        case 'Bar':\n          return generateBarChart(baseOption, configs, options, isPreview);\n        case 'Pie':\n          return generatePieChart(baseOption, configs, options, isPreview);\n        case 'Scatter':\n          return generateScatterChart(baseOption, configs, options, isPreview);\n        case 'Heatmap':\n          return generateHeatmapChart(baseOption, configs, options, isPreview);\n        default:\n          return generateDefaultChart(baseOption, chartType, isPreview);\n      }\n    }\n\n    // 生成线性图\n    function generateLineChart(baseOption, configs, options, isPreview) {\n      const mockData = generateMockChartData('line');\n      return {\n        ...baseOption,\n        xAxis: {\n          type: 'category',\n          data: mockData.categories,\n          axisLabel: {\n            color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n          }\n        },\n        series: [{\n          name: '数据系列',\n          type: 'line',\n          data: mockData.values,\n          smooth: options.smooth || false,\n          lineStyle: {\n            width: options.lineWidth || 2\n          },\n          label: {\n            show: options.showDataLabels || false\n          }\n        }]\n      };\n    }\n\n    // 生成柱状图\n    function generateBarChart(baseOption, configs, options, isPreview) {\n      const mockData = generateMockChartData('bar');\n      return {\n        ...baseOption,\n        xAxis: {\n          type: 'category',\n          data: mockData.categories,\n          axisLabel: {\n            color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n          }\n        },\n        series: [{\n          name: '数据系列',\n          type: 'bar',\n          data: mockData.values,\n          barWidth: `${options.barWidth || 60}%`,\n          label: {\n            show: options.showDataLabels || false\n          }\n        }]\n      };\n    }\n\n    // 生成饼图\n    function generatePieChart(baseOption, configs, options, isPreview) {\n      const mockData = generateMockChartData('pie');\n      return {\n        ...baseOption,\n        series: [{\n          name: '数据分布',\n          type: 'pie',\n          radius: `${options.radius || 60}%`,\n          data: mockData.pieData,\n          roseType: options.roseType !== 'none' ? options.roseType : false,\n          label: {\n            show: true,\n            formatter: options.showPercent ? '{b}: {c} ({d}%)' : '{b}: {c}'\n          }\n        }]\n      };\n    }\n\n    // 生成散点图\n    function generateScatterChart(baseOption, configs, options, isPreview) {\n      const mockData = generateMockChartData('scatter');\n      return {\n        ...baseOption,\n        xAxis: {\n          type: 'value',\n          axisLabel: {\n            color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n          }\n        },\n        series: [{\n          name: '数据点',\n          type: 'scatter',\n          data: mockData.scatterData,\n          symbolSize: options.symbolSize || 8\n        }]\n      };\n    }\n\n    // 生成热力图\n    function generateHeatmapChart(baseOption, configs, options, isPreview) {\n      const mockData = generateMockChartData('heatmap');\n      return {\n        ...baseOption,\n        grid: {\n          height: '50%',\n          top: '10%'\n        },\n        xAxis: {\n          type: 'category',\n          data: mockData.xCategories,\n          splitArea: {\n            show: true\n          },\n          axisLabel: {\n            color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n          }\n        },\n        yAxis: {\n          type: 'category',\n          data: mockData.yCategories,\n          splitArea: {\n            show: true\n          },\n          axisLabel: {\n            color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n          }\n        },\n        visualMap: {\n          min: 0,\n          max: 10,\n          calculable: true,\n          orient: 'horizontal',\n          left: 'center',\n          bottom: '15%',\n          textStyle: {\n            color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n          }\n        },\n        series: [{\n          name: '热力值',\n          type: 'heatmap',\n          data: mockData.heatmapData,\n          label: {\n            show: true\n          }\n        }]\n      };\n    }\n\n    // 生成默认图表\n    function generateDefaultChart(baseOption, chartType, isPreview) {\n      return {\n        ...baseOption,\n        series: [{\n          name: chartType,\n          type: 'line',\n          data: [120, 200, 150, 80, 70, 110, 130]\n        }]\n      };\n    }\n\n    // 生成模拟图表数据\n    function generateMockChartData(chartType) {\n      switch (chartType) {\n        case 'line':\n        case 'bar':\n          return {\n            categories: ['一月', '二月', '三月', '四月', '五月', '六月', '七月'],\n            values: [120, 200, 150, 80, 70, 110, 130]\n          };\n        case 'pie':\n          return {\n            pieData: [{\n              value: 1048,\n              name: '搜索引擎'\n            }, {\n              value: 735,\n              name: '直接访问'\n            }, {\n              value: 580,\n              name: '邮件营销'\n            }, {\n              value: 484,\n              name: '联盟广告'\n            }, {\n              value: 300,\n              name: '视频广告'\n            }]\n          };\n        case 'scatter':\n          return {\n            scatterData: Array.from({\n              length: 50\n            }, () => [Math.random() * 100, Math.random() * 100])\n          };\n        case 'heatmap':\n          const xCategories = ['周一', '周二', '周三', '周四', '周五', '周六', '周日'];\n          const yCategories = ['上午', '下午', '晚上'];\n          const heatmapData = [];\n          for (let i = 0; i < xCategories.length; i++) {\n            for (let j = 0; j < yCategories.length; j++) {\n              heatmapData.push([i, j, Math.round(Math.random() * 10)]);\n            }\n          }\n          return {\n            xCategories,\n            yCategories,\n            heatmapData\n          };\n        default:\n          return {\n            categories: [],\n            values: []\n          };\n      }\n    }\n\n    // 生成模拟预览数据\n    function generateMockPreviewData() {\n      return Array.from({\n        length: 10\n      }, (_, index) => ({\n        id: index + 1,\n        name: `数据项 ${index + 1}`,\n        value: Math.floor(Math.random() * 1000),\n        category: ['A类', 'B类', 'C类'][Math.floor(Math.random() * 3)],\n        date: new Date(2023, 0, index + 1).toLocaleDateString()\n      }));\n    }\n\n    // 保存到历史记录\n    function saveToHistory(config, option) {\n      const historyItem = {\n        id: Date.now().toString(),\n        name: config.options.title || `${config.chartType} 图表`,\n        type: config.chartType,\n        config,\n        option,\n        createTime: new Date().toLocaleString(),\n        thumbnail: generateThumbnail(option)\n      };\n      chartHistory.value.unshift(historyItem);\n\n      // 限制历史记录数量\n      if (chartHistory.value.length > 50) {\n        chartHistory.value = chartHistory.value.slice(0, 50);\n      }\n\n      // 保存到本地存储\n      localStorage.setItem('chartHistory', JSON.stringify(chartHistory.value));\n    }\n\n    // 生成缩略图\n    function generateThumbnail(option) {\n      // 简化版的图表配置用于缩略图显示\n      return {\n        ...option,\n        title: {\n          ...option.title,\n          textStyle: {\n            fontSize: 12\n          }\n        },\n        legend: {\n          show: false\n        },\n        tooltip: {\n          show: false\n        }\n      };\n    }\n\n    // 预览图表历史\n    function previewChart(historyItem) {\n      chartOption.value = historyItem.option;\n      showHistory.value = false;\n    }\n\n    // 删除图表历史\n    function deleteChart(historyItem) {\n      const index = chartHistory.value.findIndex(item => item.id === historyItem.id);\n      if (index !== -1) {\n        chartHistory.value.splice(index, 1);\n        localStorage.setItem('chartHistory', JSON.stringify(chartHistory.value));\n      }\n    }\n\n    // 初始化时加载历史记录\n    function loadHistory() {\n      try {\n        const saved = localStorage.getItem('chartHistory');\n        if (saved) {\n          chartHistory.value = JSON.parse(saved);\n        }\n      } catch (error) {\n        console.error('加载图表历史失败:', error);\n      }\n    }\n\n    // 页面加载时执行\n    loadHistory();\n    const __returned__ = {\n      selectedChartType,\n      chartOption,\n      showFileUpload,\n      UploadFiles,\n      showDataPreview,\n      currentDataFile,\n      previewData,\n      showFileStructure,\n      workspaceFiles,\n      showHistory,\n      chartHistory,\n      DataPreview,\n      openHistory,\n      onChartTypeSelect,\n      handleWorkspaceUpdate,\n      handleWorkspaceRemove,\n      handleWorkspacePreview,\n      handleWorkspaceClear,\n      handleShowFileStructure,\n      handleColumnDrag,\n      handleGenerateChart,\n      handlePreviewChart,\n      generateChartOption,\n      generateLineChart,\n      generateBarChart,\n      generatePieChart,\n      generateScatterChart,\n      generateHeatmapChart,\n      generateDefaultChart,\n      generateMockChartData,\n      generateMockPreviewData,\n      saveToHistory,\n      generateThumbnail,\n      previewChart,\n      deleteChart,\n      loadHistory,\n      TopBar,\n      SideBar,\n      ChartTypeSelector,\n      DataMappingConfig,\n      ChartDisplay,\n      ChartHistoryModal,\n      FileUploadModal,\n      DataPreviewModal,\n      FileWorkspace,\n      FileStructurePanel,\n      get getFilePreview() {\n        return getFilePreview;\n      },\n      ref,\n      nextTick\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["TopBar","SideBar","ChartTypeSelector","DataMappingConfig","ChartDisplay","ChartHistoryModal","FileUploadModal","DataPreviewModal","FileWorkspace","FileStructurePanel","getFilePreview","ref","nextTick","selectedChartType","chartOption","showFileUpload","UploadFiles","value","showDataPreview","currentDataFile","previewData","showFileStructure","workspaceFiles","showHistory","chartHistory","DataPreview","length","generateMockPreviewData","alert","openHistory","onChartTypeSelect","chartType","console","log","handleWorkspaceUpdate","files","handleWorkspaceRemove","file","index","findIndex","f","id","splice","handleWorkspacePreview","handleWorkspaceClear","handleShowFileStructure","handleColumnDrag","dragData","handleGenerateChart","config","configs","hasRequiredConfigs","filter","c","required","every","columns","option","generateChartOption","saveToHistory","handlePreviewChart","isPreview","options","baseOption","title","text","left","textStyle","color","getComputedStyle","document","documentElement","getPropertyValue","trim","tooltip","trigger","legend","bottom","generateLineChart","generateBarChart","generatePieChart","generateScatterChart","generateHeatmapChart","generateDefaultChart","mockData","generateMockChartData","xAxis","type","data","categories","axisLabel","yAxis","series","name","values","smooth","lineStyle","width","lineWidth","label","show","showDataLabels","barWidth","radius","pieData","roseType","formatter","showPercent","scatterData","symbolSize","grid","height","top","xCategories","splitArea","yCategories","visualMap","min","max","calculable","orient","heatmapData","Array","from","Math","random","i","j","push","round","_","floor","category","date","Date","toLocaleDateString","historyItem","now","toString","createTime","toLocaleString","thumbnail","generateThumbnail","unshift","slice","localStorage","setItem","JSON","stringify","fontSize","previewChart","deleteChart","item","loadHistory","saved","getItem","parse","error"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/views/ChartVisualizations.vue"],"sourcesContent":["<template>\n<div class=\"py-5\">\n  <TopBar :actions=\"[\n    { type: 'button', label: 'Files', onClick: UploadFiles },\n    { type: 'button', label: 'Data Preview', onClick: DataPreview},\n    { type: 'button', label: 'Chart History', onClick: openHistory},\n    { type: 'button', label: 'Dashboard', },\n    { type: 'button', label: 'Instruction', },\n    { type: 'button', label: 'Back2Home', to: '/'},\n  ]\"/>\n</div>\n\n<!-- 左侧边栏 -->\n<SideBar\nposition=\"left\"\n:collapsedWidth=\"40\"\n:expandedWidth=\"200\">\n  <ChartTypeSelector @select=\"onChartTypeSelect\" />\n</SideBar>\n\n<!-- 右侧边栏 -->\n<SideBar\nposition=\"right\"\n:collapsedWidth=\"40\"\n:expandedWidth=\"420\">\n  <DataMappingConfig\n    :selectedChartType=\"selectedChartType\"\n    @generate-chart=\"handleGenerateChart\"\n    @preview-chart=\"handlePreviewChart\"\n  />\n</SideBar>\n\n<!-- 绘制区 -->\n<div class=\"main-content\">\n  <section class=\"chart-workspace\">\n    <ChartDisplay v-if=\"chartOption\" :option=\"chartOption\" />\n    <div v-else class=\"empty-chart-workspace\">\n      <div class=\"empty-icon\">📊</div>\n      <div class=\"empty-text\">选择图表类型并配置数据开始可视化</div>\n    </div>\n  </section>\n</div>\n\n<!-- 图表存储区 -->\n<ChartHistoryModal\n  :show=\"showHistory\"\n  :chartHistory=\"chartHistory\"\n  @close=\"showHistory = false\"\n  @preview=\"previewChart\"\n  @delete=\"deleteChart\"\n/>\n\n<!-- 文件上传弹窗 -->\n<FileUploadModal\n  v-if=\"showFileUpload\"\n  :show=\"showFileUpload\"\n  :workspaceFiles=\"workspaceFiles\"\n  @close=\"showFileUpload = false\"\n  @workspace-updated=\"handleWorkspaceUpdate\"\n/>\n\n<!-- 数据预览弹窗 -->\n<DataPreviewModal\n  v-if=\"showDataPreview\"\n  :show=\"showDataPreview\"\n  :current-file=\"currentDataFile\"\n  :preview-data=\"previewData\"\n  @close=\"showDataPreview = false\"\n/>\n\n<!-- 文件工作区 -->\n<FileWorkspace\n  :files=\"workspaceFiles\"\n  @remove=\"handleWorkspaceRemove\"\n  @preview=\"handleWorkspacePreview\"\n  @clear=\"handleWorkspaceClear\"\n  @show-structure=\"handleShowFileStructure\"\n/>\n\n<!-- 文件结构面板 -->\n<FileStructurePanel\n  :files=\"workspaceFiles\"\n  :showPanel=\"showFileStructure\"\n  @close=\"showFileStructure = false\"\n  @column-drag=\"handleColumnDrag\"\n/>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport TopBar from '../components/TopBar.vue'\nimport SideBar from '../components/SideBar.vue'\nimport ChartTypeSelector from '../components/ChartTypeSelector.vue'\nimport DataMappingConfig from '../components/DataMappingConfig.vue'\nimport ChartDisplay from '../components/ChartDisplay.vue'\nimport ChartHistoryModal from '../components/ChartHistoryModal.vue'\nimport FileUploadModal from '../components/FileUploadModal.vue'\nimport DataPreviewModal from '../components/DataPreviewModal.vue'\nimport FileWorkspace from '../components/FileWorkspace.vue'\nimport FileStructurePanel from '../components/FileStructurePanel.vue'\nimport { getFilePreview } from '../services/FileServices.js'\nimport { ref, nextTick } from 'vue'\n\n// 图表类型选择相关\nconst selectedChartType = ref('')\n\n// 图表配置和渲染相关\nconst chartOption = ref(null)\n\n// 文件上传相关\nconst showFileUpload = ref(false)\nfunction UploadFiles() {\n  showFileUpload.value = true\n}\n\n// 数据预览相关\nconst showDataPreview = ref(false)\nconst currentDataFile = ref(null)\nconst previewData = ref([])\n\n// 文件结构面板\nconst showFileStructure = ref(false)\n\n// 工作区相关\nconst workspaceFiles = ref([])\n\n// 图表历史相关\nconst showHistory = ref(false)\nconst chartHistory = ref([])\n\nfunction DataPreview() {\n  if (workspaceFiles.value.length > 0) {\n    currentDataFile.value = workspaceFiles.value[0]\n    // 模拟预览数据\n    previewData.value = generateMockPreviewData()\n    showDataPreview.value = true\n  } else {\n    alert('请先上传数据文件')\n  }\n}\n\nfunction openHistory() {\n  showHistory.value = true\n}\n\n// 图表类型选择处理\nfunction onChartTypeSelect(chartType) {\n  selectedChartType.value = chartType\n  console.log('选择图表类型:', chartType)\n}\n\n// 文件工作区处理\nfunction handleWorkspaceUpdate(files) {\n  workspaceFiles.value = [...files]\n}\n\nfunction handleWorkspaceRemove(file) {\n  const index = workspaceFiles.value.findIndex(f => f.id === file.id)\n  if (index !== -1) {\n    workspaceFiles.value.splice(index, 1)\n  }\n}\n\nfunction handleWorkspacePreview(file) {\n  currentDataFile.value = file\n  previewData.value = generateMockPreviewData()\n  showDataPreview.value = true\n}\n\nfunction handleWorkspaceClear() {\n  workspaceFiles.value = []\n}\n\nfunction handleShowFileStructure(file) {\n  showFileStructure.value = true\n}\n\n// 列拖拽处理\nfunction handleColumnDrag(dragData) {\n  console.log('列拖拽:', dragData)\n}\n\n// 图表生成和预览\nfunction handleGenerateChart(config) {\n  console.log('生成图表配置:', config)\n  console.log('图表类型:', config.chartType)\n  console.log('配置数据:', config.configs)\n  \n  // 检查是否有必需的配置\n  const hasRequiredConfigs = config.configs\n    .filter(c => c.required)\n    .every(c => c.columns.length > 0)\n  \n  console.log('是否满足必需配置:', hasRequiredConfigs)\n  \n  if (!hasRequiredConfigs) {\n    alert('请先配置必需的数据映射项（标有 * 的项目）')\n    return\n  }\n  \n  // 根据配置生成图表选项\n  const option = generateChartOption(config)\n  console.log('生成的图表选项:', option)\n  chartOption.value = option\n  \n  // 保存到历史记录\n  saveToHistory(config, option)\n}\n\nfunction handlePreviewChart(config) {\n  console.log('预览图表配置:', config)\n  console.log('预览图表类型:', config.chartType)\n  \n  // 生成预览图表选项\n  const option = generateChartOption(config, true)\n  console.log('生成的预览图表选项:', option)\n  chartOption.value = option\n}\n\n// 生成图表选项\nfunction generateChartOption(config, isPreview = false) {\n  const { chartType, configs, options, filter } = config\n  \n  // 模拟生成 ECharts 配置\n  const baseOption = {\n    title: {\n      text: options.title || `${chartType} 图表${isPreview ? ' (预览)' : ''}`,\n      left: 'center',\n      textStyle: {\n        color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n      }\n    },\n    tooltip: {\n      trigger: 'item'\n    },\n    legend: {\n      bottom: '10px',\n      textStyle: {\n        color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n      }\n    }\n  }\n  \n  // 根据图表类型生成特定配置\n  switch (chartType) {\n    case 'Line':\n      return generateLineChart(baseOption, configs, options, isPreview)\n    case 'Bar':\n      return generateBarChart(baseOption, configs, options, isPreview)\n    case 'Pie':\n      return generatePieChart(baseOption, configs, options, isPreview)\n    case 'Scatter':\n      return generateScatterChart(baseOption, configs, options, isPreview)\n    case 'Heatmap':\n      return generateHeatmapChart(baseOption, configs, options, isPreview)\n    default:\n      return generateDefaultChart(baseOption, chartType, isPreview)\n  }\n}\n\n// 生成线性图\nfunction generateLineChart(baseOption, configs, options, isPreview) {\n  const mockData = generateMockChartData('line')\n  \n  return {\n    ...baseOption,\n    xAxis: {\n      type: 'category',\n      data: mockData.categories,\n      axisLabel: {\n        color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n      }\n    },\n    yAxis: {\n      type: 'value',\n      axisLabel: {\n        color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n      }\n    },\n    series: [{\n      name: '数据系列',\n      type: 'line',\n      data: mockData.values,\n      smooth: options.smooth || false,\n      lineStyle: {\n        width: options.lineWidth || 2\n      },\n      label: {\n        show: options.showDataLabels || false\n      }\n    }]\n  }\n}\n\n// 生成柱状图\nfunction generateBarChart(baseOption, configs, options, isPreview) {\n  const mockData = generateMockChartData('bar')\n  \n  return {\n    ...baseOption,\n    xAxis: {\n      type: 'category',\n      data: mockData.categories,\n      axisLabel: {\n        color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n      }\n    },\n    yAxis: {\n      type: 'value',\n      axisLabel: {\n        color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n      }\n    },\n    series: [{\n      name: '数据系列',\n      type: 'bar',\n      data: mockData.values,\n      barWidth: `${options.barWidth || 60}%`,\n      label: {\n        show: options.showDataLabels || false\n      }\n    }]\n  }\n}\n\n// 生成饼图\nfunction generatePieChart(baseOption, configs, options, isPreview) {\n  const mockData = generateMockChartData('pie')\n  \n  return {\n    ...baseOption,\n    series: [{\n      name: '数据分布',\n      type: 'pie',\n      radius: `${options.radius || 60}%`,\n      data: mockData.pieData,\n      roseType: options.roseType !== 'none' ? options.roseType : false,\n      label: {\n        show: true,\n        formatter: options.showPercent ? '{b}: {c} ({d}%)' : '{b}: {c}'\n      }\n    }]\n  }\n}\n\n// 生成散点图\nfunction generateScatterChart(baseOption, configs, options, isPreview) {\n  const mockData = generateMockChartData('scatter')\n  \n  return {\n    ...baseOption,\n    xAxis: {\n      type: 'value',\n      axisLabel: {\n        color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n      }\n    },\n    yAxis: {\n      type: 'value',\n      axisLabel: {\n        color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n      }\n    },\n    series: [{\n      name: '数据点',\n      type: 'scatter',\n      data: mockData.scatterData,\n      symbolSize: options.symbolSize || 8\n    }]\n  }\n}\n\n// 生成热力图\nfunction generateHeatmapChart(baseOption, configs, options, isPreview) {\n  const mockData = generateMockChartData('heatmap')\n  \n  return {\n    ...baseOption,\n    grid: {\n      height: '50%',\n      top: '10%'\n    },\n    xAxis: {\n      type: 'category',\n      data: mockData.xCategories,\n      splitArea: {\n        show: true\n      },\n      axisLabel: {\n        color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n      }\n    },\n    yAxis: {\n      type: 'category',\n      data: mockData.yCategories,\n      splitArea: {\n        show: true\n      },\n      axisLabel: {\n        color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n      }\n    },\n    visualMap: {\n      min: 0,\n      max: 10,\n      calculable: true,\n      orient: 'horizontal',\n      left: 'center',\n      bottom: '15%',\n      textStyle: {\n        color: getComputedStyle(document.documentElement).getPropertyValue('--text-color').trim()\n      }\n    },\n    series: [{\n      name: '热力值',\n      type: 'heatmap',\n      data: mockData.heatmapData,\n      label: {\n        show: true\n      }\n    }]\n  }\n}\n\n// 生成默认图表\nfunction generateDefaultChart(baseOption, chartType, isPreview) {\n  return {\n    ...baseOption,\n    series: [{\n      name: chartType,\n      type: 'line',\n      data: [120, 200, 150, 80, 70, 110, 130]\n    }]\n  }\n}\n\n// 生成模拟图表数据\nfunction generateMockChartData(chartType) {\n  switch (chartType) {\n    case 'line':\n    case 'bar':\n      return {\n        categories: ['一月', '二月', '三月', '四月', '五月', '六月', '七月'],\n        values: [120, 200, 150, 80, 70, 110, 130]\n      }\n    case 'pie':\n      return {\n        pieData: [\n          { value: 1048, name: '搜索引擎' },\n          { value: 735, name: '直接访问' },\n          { value: 580, name: '邮件营销' },\n          { value: 484, name: '联盟广告' },\n          { value: 300, name: '视频广告' }\n        ]\n      }\n    case 'scatter':\n      return {\n        scatterData: Array.from({ length: 50 }, () => [\n          Math.random() * 100,\n          Math.random() * 100\n        ])\n      }\n    case 'heatmap':\n      const xCategories = ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n      const yCategories = ['上午', '下午', '晚上']\n      const heatmapData = []\n      \n      for (let i = 0; i < xCategories.length; i++) {\n        for (let j = 0; j < yCategories.length; j++) {\n          heatmapData.push([i, j, Math.round(Math.random() * 10)])\n        }\n      }\n      \n      return {\n        xCategories,\n        yCategories,\n        heatmapData\n      }\n    default:\n      return { categories: [], values: [] }\n  }\n}\n\n// 生成模拟预览数据\nfunction generateMockPreviewData() {\n  return Array.from({ length: 10 }, (_, index) => ({\n    id: index + 1,\n    name: `数据项 ${index + 1}`,\n    value: Math.floor(Math.random() * 1000),\n    category: ['A类', 'B类', 'C类'][Math.floor(Math.random() * 3)],\n    date: new Date(2023, 0, index + 1).toLocaleDateString()\n  }))\n}\n\n// 保存到历史记录\nfunction saveToHistory(config, option) {\n  const historyItem = {\n    id: Date.now().toString(),\n    name: config.options.title || `${config.chartType} 图表`,\n    type: config.chartType,\n    config,\n    option,\n    createTime: new Date().toLocaleString(),\n    thumbnail: generateThumbnail(option)\n  }\n  \n  chartHistory.value.unshift(historyItem)\n  \n  // 限制历史记录数量\n  if (chartHistory.value.length > 50) {\n    chartHistory.value = chartHistory.value.slice(0, 50)\n  }\n  \n  // 保存到本地存储\n  localStorage.setItem('chartHistory', JSON.stringify(chartHistory.value))\n}\n\n// 生成缩略图\nfunction generateThumbnail(option) {\n  // 简化版的图表配置用于缩略图显示\n  return {\n    ...option,\n    title: { ...option.title, textStyle: { fontSize: 12 } },\n    legend: { show: false },\n    tooltip: { show: false }\n  }\n}\n\n// 预览图表历史\nfunction previewChart(historyItem) {\n  chartOption.value = historyItem.option\n  showHistory.value = false\n}\n\n// 删除图表历史\nfunction deleteChart(historyItem) {\n  const index = chartHistory.value.findIndex(item => item.id === historyItem.id)\n  if (index !== -1) {\n    chartHistory.value.splice(index, 1)\n    localStorage.setItem('chartHistory', JSON.stringify(chartHistory.value))\n  }\n}\n\n// 初始化时加载历史记录\nfunction loadHistory() {\n  try {\n    const saved = localStorage.getItem('chartHistory')\n    if (saved) {\n      chartHistory.value = JSON.parse(saved)\n    }\n  } catch (error) {\n    console.error('加载图表历史失败:', error)\n  }\n}\n\n// 页面加载时执行\nloadHistory()\n</script>\n\n<style scoped>\n.sideBar-btn {\nbackground: transparent;\nborder: none;\nfont-size: 1.1rem;\nfont-weight: 600;\ncursor: pointer;\ncolor: var(--text-color);\npadding: 6px 14px;\nborder-radius: 8px;\ntransition:\n    background-color 0.3s cubic-bezier(.4,2,.6,1),\n    transform 0.2s cubic-bezier(.4,2,.6,1),\n    box-shadow 0.2s;\ntext-align: center;\ntext-decoration: none;\n}\n.sideBar-btn:hover {\nbackground-color: rgba(136, 133, 133, 0.1);\ntransform: translateY(-2px) scale(1.02);\nbox-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 图表绘制区 */\n.main-content {\ndisplay: flex;\ngap: 32px;\nmargin: 40px 60px 0 220px;\nmin-height: 500px;\n}\n@media (max-width: 767px) {\n  .main-content {\n    margin: 20px 30px 0 80px;\n    gap: 16px;\n    min-height: auto;\n  }\n}\n.chart-workspace {\nflex: 1;\nmin-width: 0;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n}\n\n/* 图表缓存区 */\n.chart-history {\nwidth: 220px;\nbackground: var(--bg-color, #fff);\nborder-radius: 10px;\nbox-shadow: 0 0px 1px var(--text-color);\npadding: 16px;\nflex-shrink: 0;\n}\n.chart-history-item {\npadding: 8px 0;\ncursor: pointer;\nborder-bottom: 1px solid #747272;\ntransition: background 0.2s;\n}\n.chart-history-item:hover {\nbackground: rgba(136, 133, 133, 0.1);\n}\n</style>\n"],"mappings":";;;;AA0FA,OAAOA,MAAM,MAAM,0BAAyB;AAC5C,OAAOC,OAAO,MAAM,2BAA0B;AAC9C,OAAOC,iBAAiB,MAAM,qCAAoC;AAClE,OAAOC,iBAAiB,MAAM,qCAAoC;AAClE,OAAOC,YAAY,MAAM,gCAA+B;AACxD,OAAOC,iBAAiB,MAAM,qCAAoC;AAClE,OAAOC,eAAe,MAAM,mCAAkC;AAC9D,OAAOC,gBAAgB,MAAM,oCAAmC;AAChE,OAAOC,aAAa,MAAM,iCAAgC;AAC1D,OAAOC,kBAAkB,MAAM,sCAAqC;AACpE,SAASC,cAAc,QAAQ,6BAA4B;AAC3D,SAASC,GAAG,EAAEC,QAAQ,QAAQ,KAAI;;AAElC;;;;;;;;;IAdA;IAeA,MAAMC,iBAAiB,GAAGF,GAAG,CAAC,EAAE;;IAEhC;IACA,MAAMG,WAAW,GAAGH,GAAG,CAAC,IAAI;;IAE5B;IACA,MAAMI,cAAc,GAAGJ,GAAG,CAAC,KAAK;IAChC,SAASK,WAAWA,CAAA,EAAG;MACrBD,cAAc,CAACE,KAAK,GAAG,IAAG;IAC5B;;IAEA;IACA,MAAMC,eAAe,GAAGP,GAAG,CAAC,KAAK;IACjC,MAAMQ,eAAe,GAAGR,GAAG,CAAC,IAAI;IAChC,MAAMS,WAAW,GAAGT,GAAG,CAAC,EAAE;;IAE1B;IACA,MAAMU,iBAAiB,GAAGV,GAAG,CAAC,KAAK;;IAEnC;IACA,MAAMW,cAAc,GAAGX,GAAG,CAAC,EAAE;;IAE7B;IACA,MAAMY,WAAW,GAAGZ,GAAG,CAAC,KAAK;IAC7B,MAAMa,YAAY,GAAGb,GAAG,CAAC,EAAE;IAE3B,SAASc,WAAWA,CAAA,EAAG;MACrB,IAAIH,cAAc,CAACL,KAAK,CAACS,MAAM,GAAG,CAAC,EAAE;QACnCP,eAAe,CAACF,KAAK,GAAGK,cAAc,CAACL,KAAK,CAAC,CAAC;QAC9C;QACAG,WAAW,CAACH,KAAK,GAAGU,uBAAuB,CAAC;QAC5CT,eAAe,CAACD,KAAK,GAAG,IAAG;MAC7B,CAAC,MAAM;QACLW,KAAK,CAAC,UAAU;MAClB;IACF;IAEA,SAASC,WAAWA,CAAA,EAAG;MACrBN,WAAW,CAACN,KAAK,GAAG,IAAG;IACzB;;IAEA;IACA,SAASa,iBAAiBA,CAACC,SAAS,EAAE;MACpClB,iBAAiB,CAACI,KAAK,GAAGc,SAAQ;MAClCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,SAAS;IAClC;;IAEA;IACA,SAASG,qBAAqBA,CAACC,KAAK,EAAE;MACpCb,cAAc,CAACL,KAAK,GAAG,CAAC,GAAGkB,KAAK;IAClC;IAEA,SAASC,qBAAqBA,CAACC,IAAI,EAAE;MACnC,MAAMC,KAAK,GAAGhB,cAAc,CAACL,KAAK,CAACsB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE;MAClE,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBhB,cAAc,CAACL,KAAK,CAACyB,MAAM,CAACJ,KAAK,EAAE,CAAC;MACtC;IACF;IAEA,SAASK,sBAAsBA,CAACN,IAAI,EAAE;MACpClB,eAAe,CAACF,KAAK,GAAGoB,IAAG;MAC3BjB,WAAW,CAACH,KAAK,GAAGU,uBAAuB,CAAC;MAC5CT,eAAe,CAACD,KAAK,GAAG,IAAG;IAC7B;IAEA,SAAS2B,oBAAoBA,CAAA,EAAG;MAC9BtB,cAAc,CAACL,KAAK,GAAG,EAAC;IAC1B;IAEA,SAAS4B,uBAAuBA,CAACR,IAAI,EAAE;MACrChB,iBAAiB,CAACJ,KAAK,GAAG,IAAG;IAC/B;;IAEA;IACA,SAAS6B,gBAAgBA,CAACC,QAAQ,EAAE;MAClCf,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEc,QAAQ;IAC9B;;IAEA;IACA,SAASC,mBAAmBA,CAACC,MAAM,EAAE;MACnCjB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEgB,MAAM;MAC7BjB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEgB,MAAM,CAAClB,SAAS;MACrCC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEgB,MAAM,CAACC,OAAO;;MAEnC;MACA,MAAMC,kBAAkB,GAAGF,MAAM,CAACC,OAAM,CACrCE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,EACtBC,KAAK,CAACF,CAAC,IAAIA,CAAC,CAACG,OAAO,CAAC9B,MAAM,GAAG,CAAC;MAElCM,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEkB,kBAAkB;MAE3C,IAAI,CAACA,kBAAkB,EAAE;QACvBvB,KAAK,CAAC,wBAAwB;QAC9B;MACF;;MAEA;MACA,MAAM6B,MAAM,GAAGC,mBAAmB,CAACT,MAAM;MACzCjB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEwB,MAAM;MAC9B3C,WAAW,CAACG,KAAK,GAAGwC,MAAK;;MAEzB;MACAE,aAAa,CAACV,MAAM,EAAEQ,MAAM;IAC9B;IAEA,SAASG,kBAAkBA,CAACX,MAAM,EAAE;MAClCjB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEgB,MAAM;MAC7BjB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEgB,MAAM,CAAClB,SAAS;;MAEvC;MACA,MAAM0B,MAAM,GAAGC,mBAAmB,CAACT,MAAM,EAAE,IAAI;MAC/CjB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEwB,MAAM;MAChC3C,WAAW,CAACG,KAAK,GAAGwC,MAAK;IAC3B;;IAEA;IACA,SAASC,mBAAmBA,CAACT,MAAM,EAAEY,SAAS,GAAG,KAAK,EAAE;MACtD,MAAM;QAAE9B,SAAS;QAAEmB,OAAO;QAAEY,OAAO;QAAEV;MAAO,CAAC,GAAGH,MAAK;;MAErD;MACA,MAAMc,UAAU,GAAG;QACjBC,KAAK,EAAE;UACLC,IAAI,EAAEH,OAAO,CAACE,KAAK,IAAI,GAAGjC,SAAS,MAAM8B,SAAS,GAAG,OAAO,GAAG,EAAE,EAAE;UACnEK,IAAI,EAAE,QAAQ;UACdC,SAAS,EAAE;YACTC,KAAK,EAAEC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,cAAc,CAAC,CAACC,IAAI,CAAC;UAC1F;QACF,CAAC;QACDC,OAAO,EAAE;UACPC,OAAO,EAAE;QACX,CAAC;QACDC,MAAM,EAAE;UACNC,MAAM,EAAE,MAAM;UACdV,SAAS,EAAE;YACTC,KAAK,EAAEC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,cAAc,CAAC,CAACC,IAAI,CAAC;UAC1F;QACF;MACF;;MAEA;MACA,QAAQ1C,SAAS;QACf,KAAK,MAAM;UACT,OAAO+C,iBAAiB,CAACf,UAAU,EAAEb,OAAO,EAAEY,OAAO,EAAED,SAAS;QAClE,KAAK,KAAK;UACR,OAAOkB,gBAAgB,CAAChB,UAAU,EAAEb,OAAO,EAAEY,OAAO,EAAED,SAAS;QACjE,KAAK,KAAK;UACR,OAAOmB,gBAAgB,CAACjB,UAAU,EAAEb,OAAO,EAAEY,OAAO,EAAED,SAAS;QACjE,KAAK,SAAS;UACZ,OAAOoB,oBAAoB,CAAClB,UAAU,EAAEb,OAAO,EAAEY,OAAO,EAAED,SAAS;QACrE,KAAK,SAAS;UACZ,OAAOqB,oBAAoB,CAACnB,UAAU,EAAEb,OAAO,EAAEY,OAAO,EAAED,SAAS;QACrE;UACE,OAAOsB,oBAAoB,CAACpB,UAAU,EAAEhC,SAAS,EAAE8B,SAAS;MAChE;IACF;;IAEA;IACA,SAASiB,iBAAiBA,CAACf,UAAU,EAAEb,OAAO,EAAEY,OAAO,EAAED,SAAS,EAAE;MAClE,MAAMuB,QAAQ,GAAGC,qBAAqB,CAAC,MAAM;MAE7C,OAAO;QACL,GAAGtB,UAAU;QACbuB,KAAK,EAAE;UACLC,IAAI,EAAE,UAAU;UAChBC,IAAI,EAAEJ,QAAQ,CAACK,UAAU;UACzBC,SAAS,EAAE;YACTtB,KAAK,EAAEC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,cAAc,CAAC,CAACC,IAAI,CAAC;UAC1F;QACF,CAAC;QACDkB,KAAK,EAAE;UACLJ,IAAI,EAAE,OAAO;UACbG,SAAS,EAAE;YACTtB,KAAK,EAAEC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,cAAc,CAAC,CAACC,IAAI,CAAC;UAC1F;QACF,CAAC;QACDmB,MAAM,EAAE,CAAC;UACPC,IAAI,EAAE,MAAM;UACZN,IAAI,EAAE,MAAM;UACZC,IAAI,EAAEJ,QAAQ,CAACU,MAAM;UACrBC,MAAM,EAAEjC,OAAO,CAACiC,MAAM,IAAI,KAAK;UAC/BC,SAAS,EAAE;YACTC,KAAK,EAAEnC,OAAO,CAACoC,SAAS,IAAI;UAC9B,CAAC;UACDC,KAAK,EAAE;YACLC,IAAI,EAAEtC,OAAO,CAACuC,cAAc,IAAI;UAClC;QACF,CAAC;MACH;IACF;;IAEA;IACA,SAAStB,gBAAgBA,CAAChB,UAAU,EAAEb,OAAO,EAAEY,OAAO,EAAED,SAAS,EAAE;MACjE,MAAMuB,QAAQ,GAAGC,qBAAqB,CAAC,KAAK;MAE5C,OAAO;QACL,GAAGtB,UAAU;QACbuB,KAAK,EAAE;UACLC,IAAI,EAAE,UAAU;UAChBC,IAAI,EAAEJ,QAAQ,CAACK,UAAU;UACzBC,SAAS,EAAE;YACTtB,KAAK,EAAEC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,cAAc,CAAC,CAACC,IAAI,CAAC;UAC1F;QACF,CAAC;QACDkB,KAAK,EAAE;UACLJ,IAAI,EAAE,OAAO;UACbG,SAAS,EAAE;YACTtB,KAAK,EAAEC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,cAAc,CAAC,CAACC,IAAI,CAAC;UAC1F;QACF,CAAC;QACDmB,MAAM,EAAE,CAAC;UACPC,IAAI,EAAE,MAAM;UACZN,IAAI,EAAE,KAAK;UACXC,IAAI,EAAEJ,QAAQ,CAACU,MAAM;UACrBQ,QAAQ,EAAE,GAAGxC,OAAO,CAACwC,QAAQ,IAAI,EAAE,GAAG;UACtCH,KAAK,EAAE;YACLC,IAAI,EAAEtC,OAAO,CAACuC,cAAc,IAAI;UAClC;QACF,CAAC;MACH;IACF;;IAEA;IACA,SAASrB,gBAAgBA,CAACjB,UAAU,EAAEb,OAAO,EAAEY,OAAO,EAAED,SAAS,EAAE;MACjE,MAAMuB,QAAQ,GAAGC,qBAAqB,CAAC,KAAK;MAE5C,OAAO;QACL,GAAGtB,UAAU;QACb6B,MAAM,EAAE,CAAC;UACPC,IAAI,EAAE,MAAM;UACZN,IAAI,EAAE,KAAK;UACXgB,MAAM,EAAE,GAAGzC,OAAO,CAACyC,MAAM,IAAI,EAAE,GAAG;UAClCf,IAAI,EAAEJ,QAAQ,CAACoB,OAAO;UACtBC,QAAQ,EAAE3C,OAAO,CAAC2C,QAAQ,KAAK,MAAM,GAAG3C,OAAO,CAAC2C,QAAQ,GAAG,KAAK;UAChEN,KAAK,EAAE;YACLC,IAAI,EAAE,IAAI;YACVM,SAAS,EAAE5C,OAAO,CAAC6C,WAAW,GAAG,iBAAiB,GAAG;UACvD;QACF,CAAC;MACH;IACF;;IAEA;IACA,SAAS1B,oBAAoBA,CAAClB,UAAU,EAAEb,OAAO,EAAEY,OAAO,EAAED,SAAS,EAAE;MACrE,MAAMuB,QAAQ,GAAGC,qBAAqB,CAAC,SAAS;MAEhD,OAAO;QACL,GAAGtB,UAAU;QACbuB,KAAK,EAAE;UACLC,IAAI,EAAE,OAAO;UACbG,SAAS,EAAE;YACTtB,KAAK,EAAEC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,cAAc,CAAC,CAACC,IAAI,CAAC;UAC1F;QACF,CAAC;QACDkB,KAAK,EAAE;UACLJ,IAAI,EAAE,OAAO;UACbG,SAAS,EAAE;YACTtB,KAAK,EAAEC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,cAAc,CAAC,CAACC,IAAI,CAAC;UAC1F;QACF,CAAC;QACDmB,MAAM,EAAE,CAAC;UACPC,IAAI,EAAE,KAAK;UACXN,IAAI,EAAE,SAAS;UACfC,IAAI,EAAEJ,QAAQ,CAACwB,WAAW;UAC1BC,UAAU,EAAE/C,OAAO,CAAC+C,UAAU,IAAI;QACpC,CAAC;MACH;IACF;;IAEA;IACA,SAAS3B,oBAAoBA,CAACnB,UAAU,EAAEb,OAAO,EAAEY,OAAO,EAAED,SAAS,EAAE;MACrE,MAAMuB,QAAQ,GAAGC,qBAAqB,CAAC,SAAS;MAEhD,OAAO;QACL,GAAGtB,UAAU;QACb+C,IAAI,EAAE;UACJC,MAAM,EAAE,KAAK;UACbC,GAAG,EAAE;QACP,CAAC;QACD1B,KAAK,EAAE;UACLC,IAAI,EAAE,UAAU;UAChBC,IAAI,EAAEJ,QAAQ,CAAC6B,WAAW;UAC1BC,SAAS,EAAE;YACTd,IAAI,EAAE;UACR,CAAC;UACDV,SAAS,EAAE;YACTtB,KAAK,EAAEC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,cAAc,CAAC,CAACC,IAAI,CAAC;UAC1F;QACF,CAAC;QACDkB,KAAK,EAAE;UACLJ,IAAI,EAAE,UAAU;UAChBC,IAAI,EAAEJ,QAAQ,CAAC+B,WAAW;UAC1BD,SAAS,EAAE;YACTd,IAAI,EAAE;UACR,CAAC;UACDV,SAAS,EAAE;YACTtB,KAAK,EAAEC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,cAAc,CAAC,CAACC,IAAI,CAAC;UAC1F;QACF,CAAC;QACD2C,SAAS,EAAE;UACTC,GAAG,EAAE,CAAC;UACNC,GAAG,EAAE,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE,YAAY;UACpBtD,IAAI,EAAE,QAAQ;UACdW,MAAM,EAAE,KAAK;UACbV,SAAS,EAAE;YACTC,KAAK,EAAEC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,cAAc,CAAC,CAACC,IAAI,CAAC;UAC1F;QACF,CAAC;QACDmB,MAAM,EAAE,CAAC;UACPC,IAAI,EAAE,KAAK;UACXN,IAAI,EAAE,SAAS;UACfC,IAAI,EAAEJ,QAAQ,CAACqC,WAAW;UAC1BtB,KAAK,EAAE;YACLC,IAAI,EAAE;UACR;QACF,CAAC;MACH;IACF;;IAEA;IACA,SAASjB,oBAAoBA,CAACpB,UAAU,EAAEhC,SAAS,EAAE8B,SAAS,EAAE;MAC9D,OAAO;QACL,GAAGE,UAAU;QACb6B,MAAM,EAAE,CAAC;UACPC,IAAI,EAAE9D,SAAS;UACfwD,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;QACxC,CAAC;MACH;IACF;;IAEA;IACA,SAASH,qBAAqBA,CAACtD,SAAS,EAAE;MACxC,QAAQA,SAAS;QACf,KAAK,MAAM;QACX,KAAK,KAAK;UACR,OAAO;YACL0D,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;YACtDK,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;UAC1C;QACF,KAAK,KAAK;UACR,OAAO;YACLU,OAAO,EAAE,CACP;cAAEvF,KAAK,EAAE,IAAI;cAAE4E,IAAI,EAAE;YAAO,CAAC,EAC7B;cAAE5E,KAAK,EAAE,GAAG;cAAE4E,IAAI,EAAE;YAAO,CAAC,EAC5B;cAAE5E,KAAK,EAAE,GAAG;cAAE4E,IAAI,EAAE;YAAO,CAAC,EAC5B;cAAE5E,KAAK,EAAE,GAAG;cAAE4E,IAAI,EAAE;YAAO,CAAC,EAC5B;cAAE5E,KAAK,EAAE,GAAG;cAAE4E,IAAI,EAAE;YAAO;UAE/B;QACF,KAAK,SAAS;UACZ,OAAO;YACLe,WAAW,EAAEc,KAAK,CAACC,IAAI,CAAC;cAAEjG,MAAM,EAAE;YAAG,CAAC,EAAE,MAAM,CAC5CkG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EACnBD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAE,CACnB;UACH;QACF,KAAK,SAAS;UACZ,MAAMZ,WAAW,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;UAC7D,MAAME,WAAW,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI;UACrC,MAAMM,WAAW,GAAG,EAAC;UAErB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,WAAW,CAACvF,MAAM,EAAEoG,CAAC,EAAE,EAAE;YAC3C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,WAAW,CAACzF,MAAM,EAAEqG,CAAC,EAAE,EAAE;cAC3CN,WAAW,CAACO,IAAI,CAAC,CAACF,CAAC,EAAEC,CAAC,EAAEH,IAAI,CAACK,KAAK,CAACL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YACzD;UACF;UAEA,OAAO;YACLZ,WAAW;YACXE,WAAW;YACXM;UACF;QACF;UACE,OAAO;YAAEhC,UAAU,EAAE,EAAE;YAAEK,MAAM,EAAE;UAAG;MACxC;IACF;;IAEA;IACA,SAASnE,uBAAuBA,CAAA,EAAG;MACjC,OAAO+F,KAAK,CAACC,IAAI,CAAC;QAAEjG,MAAM,EAAE;MAAG,CAAC,EAAE,CAACwG,CAAC,EAAE5F,KAAK,MAAM;QAC/CG,EAAE,EAAEH,KAAK,GAAG,CAAC;QACbuD,IAAI,EAAE,OAAOvD,KAAK,GAAG,CAAC,EAAE;QACxBrB,KAAK,EAAE2G,IAAI,CAACO,KAAK,CAACP,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;QACvCO,QAAQ,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAACR,IAAI,CAACO,KAAK,CAACP,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3DQ,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAEhG,KAAK,GAAG,CAAC,CAAC,CAACiG,kBAAkB,CAAC;MACxD,CAAC,CAAC;IACJ;;IAEA;IACA,SAAS5E,aAAaA,CAACV,MAAM,EAAEQ,MAAM,EAAE;MACrC,MAAM+E,WAAW,GAAG;QAClB/F,EAAE,EAAE6F,IAAI,CAACG,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzB7C,IAAI,EAAE5C,MAAM,CAACa,OAAO,CAACE,KAAK,IAAI,GAAGf,MAAM,CAAClB,SAAS,KAAK;QACtDwD,IAAI,EAAEtC,MAAM,CAAClB,SAAS;QACtBkB,MAAM;QACNQ,MAAM;QACNkF,UAAU,EAAE,IAAIL,IAAI,CAAC,CAAC,CAACM,cAAc,CAAC,CAAC;QACvCC,SAAS,EAAEC,iBAAiB,CAACrF,MAAM;MACrC;MAEAjC,YAAY,CAACP,KAAK,CAAC8H,OAAO,CAACP,WAAW;;MAEtC;MACA,IAAIhH,YAAY,CAACP,KAAK,CAACS,MAAM,GAAG,EAAE,EAAE;QAClCF,YAAY,CAACP,KAAK,GAAGO,YAAY,CAACP,KAAK,CAAC+H,KAAK,CAAC,CAAC,EAAE,EAAE;MACrD;;MAEA;MACAC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAAC5H,YAAY,CAACP,KAAK,CAAC;IACzE;;IAEA;IACA,SAAS6H,iBAAiBA,CAACrF,MAAM,EAAE;MACjC;MACA,OAAO;QACL,GAAGA,MAAM;QACTO,KAAK,EAAE;UAAE,GAAGP,MAAM,CAACO,KAAK;UAAEG,SAAS,EAAE;YAAEkF,QAAQ,EAAE;UAAG;QAAE,CAAC;QACvDzE,MAAM,EAAE;UAAEwB,IAAI,EAAE;QAAM,CAAC;QACvB1B,OAAO,EAAE;UAAE0B,IAAI,EAAE;QAAM;MACzB;IACF;;IAEA;IACA,SAASkD,YAAYA,CAACd,WAAW,EAAE;MACjC1H,WAAW,CAACG,KAAK,GAAGuH,WAAW,CAAC/E,MAAK;MACrClC,WAAW,CAACN,KAAK,GAAG,KAAI;IAC1B;;IAEA;IACA,SAASsI,WAAWA,CAACf,WAAW,EAAE;MAChC,MAAMlG,KAAK,GAAGd,YAAY,CAACP,KAAK,CAACsB,SAAS,CAACiH,IAAI,IAAIA,IAAI,CAAC/G,EAAE,KAAK+F,WAAW,CAAC/F,EAAE;MAC7E,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBd,YAAY,CAACP,KAAK,CAACyB,MAAM,CAACJ,KAAK,EAAE,CAAC;QAClC2G,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAAC5H,YAAY,CAACP,KAAK,CAAC;MACzE;IACF;;IAEA;IACA,SAASwI,WAAWA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,KAAK,GAAGT,YAAY,CAACU,OAAO,CAAC,cAAc;QACjD,IAAID,KAAK,EAAE;UACTlI,YAAY,CAACP,KAAK,GAAGkI,IAAI,CAACS,KAAK,CAACF,KAAK;QACvC;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACd7H,OAAO,CAAC6H,KAAK,CAAC,WAAW,EAAEA,KAAK;MAClC;IACF;;IAEA;IACAJ,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}