{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, computed, watch } from 'vue';\nimport { getChartConfig } from '../configs/chartConfigs.js';\nexport default {\n  __name: 'FieldMapping',\n  props: {\n    chartType: {\n      type: String,\n      required: true\n    },\n    mappings: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: ['update:mappings', 'mapping-error'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const props = __props;\n    const emit = __emit;\n\n    // 拖拽状态\n    const isDragOver = ref({});\n    const dragError = ref({});\n\n    // 字段映射\n    const fieldMappings = ref({\n      ...props.mappings\n    });\n\n    // 监听外部映射变化\n    watch(() => props.mappings, newMappings => {\n      fieldMappings.value = {\n        ...newMappings\n      };\n    }, {\n      deep: true\n    });\n\n    // 监听内部映射变化\n    watch(fieldMappings, newMappings => {\n      emit('update:mappings', newMappings);\n    }, {\n      deep: true\n    });\n\n    // 获取当前图表的映射字段配置\n    const mappingFields = computed(() => {\n      const config = getChartConfig(props.chartType);\n      const fieldMapping = config.getFieldMapping();\n      const fields = [];\n\n      // 必需字段\n      if (fieldMapping.required) {\n        fieldMapping.required.forEach(fieldConfig => {\n          fields.push({\n            name: fieldConfig.name,\n            label: fieldConfig.label,\n            required: true,\n            dataType: fieldConfig.dataTypes.join(' / '),\n            multiple: fieldConfig.multiple,\n            placeholder: getFieldPlaceholder(fieldConfig.name),\n            icon: getFieldIcon(fieldConfig.name)\n          });\n        });\n      }\n\n      // 可选字段\n      if (fieldMapping.optional) {\n        fieldMapping.optional.forEach(fieldConfig => {\n          fields.push({\n            name: fieldConfig.name,\n            label: fieldConfig.label,\n            required: false,\n            dataType: fieldConfig.dataTypes.join(' / '),\n            multiple: fieldConfig.multiple,\n            placeholder: getFieldPlaceholder(fieldConfig.name),\n            icon: getFieldIcon(fieldConfig.name)\n          });\n        });\n      }\n      return fields;\n    });\n\n    // 获取字段标签\n    function getFieldLabel(fieldName) {\n      const labels = {\n        x_axis: 'X轴',\n        y_axis: 'Y轴',\n        series: '数据系列',\n        dimension: '维度',\n        value: '数值',\n        color: '颜色',\n        size: '大小',\n        parent: '父级',\n        target: '目标值',\n        // 兼容旧的命名方式\n        xAxis: 'X轴',\n        yAxis: 'Y轴'\n      };\n      return labels[fieldName] || fieldName;\n    }\n\n    // 验证字段映射\n    function validateFieldMapping(chartType, fieldName, dataType) {\n      const config = getChartConfig(chartType);\n      const allowedTypes = config.fieldTypes?.[fieldName] || [];\n      if (allowedTypes.length === 0) return true;\n      const typeMapping = {\n        string: 'category',\n        number: 'value',\n        date: 'time',\n        boolean: 'category'\n      };\n      const mappedType = typeMapping[dataType] || dataType;\n      return allowedTypes.includes(mappedType);\n    }\n\n    // 获取字段类型映射\n    function getFieldTypeMapping(dataType) {\n      const mapping = {\n        string: 'category',\n        number: 'value',\n        date: 'time',\n        boolean: 'category'\n      };\n      return mapping[dataType] || dataType;\n    }\n\n    // 获取字段数据类型显示文本\n    function getFieldDataType(fieldName, config) {\n      const types = config.fieldTypes[fieldName] || [];\n      const typeLabels = {\n        category: '类别',\n        value: '数值',\n        time: '时间',\n        dimension: '维度',\n        measure: '度量'\n      };\n      return types.map(type => typeLabels[type] || type).join(' / ');\n    }\n\n    // 获取字段占位符文本\n    function getFieldPlaceholder(fieldName) {\n      const placeholders = {\n        x_axis: '拖拽列到此处作为X轴',\n        y_axis: '拖拽列到此处作为Y轴',\n        series: '拖拽列到此处作为数据系列',\n        dimension: '拖拽列到此处作为维度',\n        value: '拖拽列到此处作为数值',\n        color: '拖拽列到此处作为颜色',\n        size: '拖拽列到此处作为大小',\n        parent: '拖拽列到此处作为父级',\n        target: '拖拽列到此处作为目标值',\n        // 兼容旧的命名方式\n        xAxis: '拖拽列到此处作为X轴',\n        yAxis: '拖拽列到此处作为Y轴'\n      };\n      return placeholders[fieldName] || '拖拽列到此处';\n    }\n\n    // 获取字段图标\n    function getFieldIcon(fieldName) {\n      const icons = {\n        x_axis: '→',\n        y_axis: '↑',\n        series: '📊',\n        dimension: '🏷️',\n        value: '💯',\n        color: '🎨',\n        size: '📏',\n        parent: '📁',\n        target: '🎯',\n        // 兼容旧的命名方式\n        xAxis: '→',\n        yAxis: '↑'\n      };\n      return icons[fieldName] || '↓';\n    }\n\n    // 拖拽处理\n    function handleDragEnter(fieldName) {\n      isDragOver.value[fieldName] = true;\n      dragError.value[fieldName] = false;\n    }\n    function handleDragLeave(fieldName) {\n      isDragOver.value[fieldName] = false;\n    }\n    function handleDragOver(event, fieldName) {\n      event.preventDefault();\n      isDragOver.value[fieldName] = true;\n    }\n    function handleDrop(event, fieldName) {\n      event.preventDefault();\n      isDragOver.value[fieldName] = false;\n      try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'));\n        if (dragData.type === 'column') {\n          const column = dragData.column;\n\n          // 验证字段类型\n          if (validateFieldMapping(props.chartType, fieldName, column.type)) {\n            mapColumnToField(column, fieldName);\n            emit('mapping-error', '');\n          } else {\n            dragError.value[fieldName] = true;\n            const fieldLabel = getFieldLabel(fieldName);\n            emit('mapping-error', `列 \"${column.name}\" 的数据类型不适合用作${fieldLabel}`);\n            setTimeout(() => {\n              dragError.value[fieldName] = false;\n            }, 3000);\n          }\n        }\n      } catch (error) {\n        console.error('Drop failed:', error);\n        emit('mapping-error', '拖拽失败，请重试');\n      }\n    }\n\n    // 映射列到字段\n    function mapColumnToField(column, fieldName) {\n      const field = mappingFields.value.find(f => f.name === fieldName);\n      if (field?.multiple) {\n        // 多值字段（如series）\n        if (!Array.isArray(fieldMappings.value[fieldName])) {\n          fieldMappings.value[fieldName] = [];\n        }\n\n        // 检查是否已存在\n        const exists = fieldMappings.value[fieldName].some(mapping => mapping.field === column.name);\n        if (!exists) {\n          const config = getChartConfig(props.chartType);\n          if (fieldMappings.value[fieldName].length < config.maxSeries) {\n            fieldMappings.value[fieldName].push({\n              field: column.name,\n              type: column.type,\n              dataType: getFieldTypeMapping(column.type)\n            });\n          } else {\n            emit('mapping-error', `最多只能添加 ${config.maxSeries} 个数据系列`);\n          }\n        }\n      } else {\n        // 单值字段\n        fieldMappings.value[fieldName] = {\n          field: column.name,\n          type: column.type,\n          dataType: getFieldTypeMapping(column.type)\n        };\n      }\n    }\n\n    // 移除映射\n    function removeMapping(fieldName, index = null) {\n      const field = mappingFields.value.find(f => f.name === fieldName);\n      if (field?.multiple && index !== null) {\n        // 移除多值字段中的特定项\n        fieldMappings.value[fieldName].splice(index, 1);\n      } else {\n        // 移除单值字段或整个多值字段\n        fieldMappings.value[fieldName] = field?.multiple ? [] : null;\n      }\n    }\n\n    // 获取映射验证状态\n    const mappingValidation = computed(() => {\n      const config = getChartConfig(props.chartType);\n      const fieldMapping = config.getFieldMapping();\n      const validation = {\n        isValid: true,\n        missingFields: []\n      };\n\n      // 检查必需字段\n      if (fieldMapping.required) {\n        fieldMapping.required.forEach(fieldConfig => {\n          const mapping = fieldMappings.value[fieldConfig.name];\n          if (!mapping || fieldConfig.multiple && (!Array.isArray(mapping) || mapping.length === 0)) {\n            validation.isValid = false;\n            validation.missingFields.push(fieldConfig.label);\n          }\n        });\n      }\n      return validation;\n    });\n\n    // 更新映射（给父组件调用）\n    function updateMappings(newMappings) {\n      fieldMappings.value = {\n        ...newMappings\n      };\n    }\n\n    // 重置映射（给父组件调用）\n    function reset() {\n      fieldMappings.value = {};\n    }\n\n    // 暴露验证状态和方法给父组件\n    __expose({\n      validation: mappingValidation,\n      fieldMappings,\n      updateMappings,\n      reset\n    });\n    const __returned__ = {\n      props,\n      emit,\n      isDragOver,\n      dragError,\n      fieldMappings,\n      mappingFields,\n      getFieldLabel,\n      validateFieldMapping,\n      getFieldTypeMapping,\n      getFieldDataType,\n      getFieldPlaceholder,\n      getFieldIcon,\n      handleDragEnter,\n      handleDragLeave,\n      handleDragOver,\n      handleDrop,\n      mapColumnToField,\n      removeMapping,\n      mappingValidation,\n      updateMappings,\n      reset,\n      ref,\n      computed,\n      watch,\n      get getChartConfig() {\n        return getChartConfig;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","getChartConfig","props","__props","emit","__emit","isDragOver","dragError","fieldMappings","mappings","newMappings","value","deep","mappingFields","config","chartType","fieldMapping","getFieldMapping","fields","required","forEach","fieldConfig","push","name","label","dataType","dataTypes","join","multiple","placeholder","getFieldPlaceholder","icon","getFieldIcon","optional","getFieldLabel","fieldName","labels","x_axis","y_axis","series","dimension","color","size","parent","target","xAxis","yAxis","validateFieldMapping","allowedTypes","fieldTypes","length","typeMapping","string","number","date","boolean","mappedType","includes","getFieldTypeMapping","mapping","getFieldDataType","types","typeLabels","category","time","measure","map","type","placeholders","icons","handleDragEnter","handleDragLeave","handleDragOver","event","preventDefault","handleDrop","dragData","JSON","parse","dataTransfer","getData","column","mapColumnToField","fieldLabel","setTimeout","error","console","field","find","f","Array","isArray","exists","some","maxSeries","removeMapping","index","splice","mappingValidation","validation","isValid","missingFields","updateMappings","reset","__expose"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/FieldMapping.vue"],"sourcesContent":["<template>\n  <div class=\"field-mapping\">\n    <div class=\"mapping-item\" v-for=\"field in mappingFields\" :key=\"field.name\">\n      <div class=\"mapping-item-header\">\n        <label class=\"mapping-label\">\n          {{ field.label }}\n          <span v-if=\"field.required\" class=\"required-star\">*</span>\n        </label>\n        <div class=\"mapping-type-tag\">{{ field.dataType }}</div>\n      </div>\n\n      <div\n        class=\"drop-zone\"\n        :class=\"{\n          'drop-zone-active': isDragOver[field.name],\n          'drop-zone-filled': fieldMappings[field.name]?.field,\n          'drop-zone-error': dragError[field.name],\n          'drop-zone-disabled': field.disabled\n        }\"\n        @drop=\"handleDrop($event, field.name)\"\n        @dragover.prevent=\"handleDragOver($event, field.name)\"\n        @dragenter.prevent=\"handleDragEnter(field.name)\"\n        @dragleave.prevent=\"handleDragLeave(field.name)\"\n      >\n        <div v-if=\"!fieldMappings[field.name]?.field\" class=\"drop-placeholder\">\n          <div class=\"drop-icon\">{{ field.icon || '↓' }}</div>\n          <span class=\"drop-text\">{{ field.placeholder || 'Drag column here' }}</span>\n        </div>\n\n        <div v-else-if=\"field.multiple\" class=\"mapped-series\">\n          <div\n            v-for=\"(mapping, index) in fieldMappings[field.name]\"\n            :key=\"index\"\n            class=\"mapped-field\"\n          >\n            <div class=\"field-info\">\n              <span class=\"field-name\">{{ mapping.field }}</span>\n              <span class=\"field-type\">{{ mapping.type }}</span>\n            </div>\n            <button class=\"remove-btn\" @click=\"removeMapping(field.name, index)\">×</button>\n          </div>\n        </div>\n\n        <div v-else class=\"mapped-field\">\n          <div class=\"field-info\">\n            <span class=\"field-name\">{{ fieldMappings[field.name].field }}</span>\n            <span class=\"field-type\">{{ fieldMappings[field.name].type }}</span>\n          </div>\n          <button class=\"remove-btn\" @click=\"removeMapping(field.name)\">×</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\nimport { getChartConfig } from '../configs/chartConfigs.js'\n\nconst props = defineProps({\n  chartType: {\n    type: String,\n    required: true\n  },\n  mappings: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\nconst emit = defineEmits(['update:mappings', 'mapping-error'])\n\n// 拖拽状态\nconst isDragOver = ref({})\nconst dragError = ref({})\n\n// 字段映射\nconst fieldMappings = ref({ ...props.mappings })\n\n// 监听外部映射变化\nwatch(() => props.mappings, (newMappings) => {\n  fieldMappings.value = { ...newMappings }\n}, { deep: true })\n\n// 监听内部映射变化\nwatch(fieldMappings, (newMappings) => {\n  emit('update:mappings', newMappings)\n}, { deep: true })\n\n// 获取当前图表的映射字段配置\nconst mappingFields = computed(() => {\n  const config = getChartConfig(props.chartType)\n  const fieldMapping = config.getFieldMapping()\n  const fields = []\n\n  // 必需字段\n  if (fieldMapping.required) {\n    fieldMapping.required.forEach(fieldConfig => {\n      fields.push({\n        name: fieldConfig.name,\n        label: fieldConfig.label,\n        required: true,\n        dataType: fieldConfig.dataTypes.join(' / '),\n        multiple: fieldConfig.multiple,\n        placeholder: getFieldPlaceholder(fieldConfig.name),\n        icon: getFieldIcon(fieldConfig.name)\n      })\n    })\n  }\n\n  // 可选字段\n  if (fieldMapping.optional) {\n    fieldMapping.optional.forEach(fieldConfig => {\n      fields.push({\n        name: fieldConfig.name,\n        label: fieldConfig.label,\n        required: false,\n        dataType: fieldConfig.dataTypes.join(' / '),\n        multiple: fieldConfig.multiple,\n        placeholder: getFieldPlaceholder(fieldConfig.name),\n        icon: getFieldIcon(fieldConfig.name)\n      })\n    })\n  }\n\n  return fields\n})\n\n// 获取字段标签\nfunction getFieldLabel (fieldName) {\n  const labels = {\n    x_axis: 'X轴',\n    y_axis: 'Y轴',\n    series: '数据系列',\n    dimension: '维度',\n    value: '数值',\n    color: '颜色',\n    size: '大小',\n    parent: '父级',\n    target: '目标值',\n    // 兼容旧的命名方式\n    xAxis: 'X轴',\n    yAxis: 'Y轴'\n  }\n  return labels[fieldName] || fieldName\n}\n\n// 验证字段映射\nfunction validateFieldMapping (chartType, fieldName, dataType) {\n  const config = getChartConfig(chartType)\n  const allowedTypes = config.fieldTypes?.[fieldName] || []\n\n  if (allowedTypes.length === 0) return true\n\n  const typeMapping = {\n    string: 'category',\n    number: 'value',\n    date: 'time',\n    boolean: 'category'\n  }\n\n  const mappedType = typeMapping[dataType] || dataType\n  return allowedTypes.includes(mappedType)\n}\n\n// 获取字段类型映射\nfunction getFieldTypeMapping (dataType) {\n  const mapping = {\n    string: 'category',\n    number: 'value',\n    date: 'time',\n    boolean: 'category'\n  }\n  return mapping[dataType] || dataType\n}\n\n// 获取字段数据类型显示文本\nfunction getFieldDataType (fieldName, config) {\n  const types = config.fieldTypes[fieldName] || []\n  const typeLabels = {\n    category: '类别',\n    value: '数值',\n    time: '时间',\n    dimension: '维度',\n    measure: '度量'\n  }\n  return types.map(type => typeLabels[type] || type).join(' / ')\n}\n\n// 获取字段占位符文本\nfunction getFieldPlaceholder (fieldName) {\n  const placeholders = {\n    x_axis: '拖拽列到此处作为X轴',\n    y_axis: '拖拽列到此处作为Y轴',\n    series: '拖拽列到此处作为数据系列',\n    dimension: '拖拽列到此处作为维度',\n    value: '拖拽列到此处作为数值',\n    color: '拖拽列到此处作为颜色',\n    size: '拖拽列到此处作为大小',\n    parent: '拖拽列到此处作为父级',\n    target: '拖拽列到此处作为目标值',\n    // 兼容旧的命名方式\n    xAxis: '拖拽列到此处作为X轴',\n    yAxis: '拖拽列到此处作为Y轴'\n  }\n  return placeholders[fieldName] || '拖拽列到此处'\n}\n\n// 获取字段图标\nfunction getFieldIcon (fieldName) {\n  const icons = {\n    x_axis: '→',\n    y_axis: '↑',\n    series: '📊',\n    dimension: '🏷️',\n    value: '💯',\n    color: '🎨',\n    size: '📏',\n    parent: '📁',\n    target: '🎯',\n    // 兼容旧的命名方式\n    xAxis: '→',\n    yAxis: '↑'\n  }\n  return icons[fieldName] || '↓'\n}\n\n// 拖拽处理\nfunction handleDragEnter (fieldName) {\n  isDragOver.value[fieldName] = true\n  dragError.value[fieldName] = false\n}\n\nfunction handleDragLeave (fieldName) {\n  isDragOver.value[fieldName] = false\n}\n\nfunction handleDragOver (event, fieldName) {\n  event.preventDefault()\n  isDragOver.value[fieldName] = true\n}\n\nfunction handleDrop (event, fieldName) {\n  event.preventDefault()\n  isDragOver.value[fieldName] = false\n\n  try {\n    const dragData = JSON.parse(event.dataTransfer.getData('text/plain'))\n\n    if (dragData.type === 'column') {\n      const column = dragData.column\n\n      // 验证字段类型\n      if (validateFieldMapping(props.chartType, fieldName, column.type)) {\n        mapColumnToField(column, fieldName)\n        emit('mapping-error', '')\n      } else {\n        dragError.value[fieldName] = true\n        const fieldLabel = getFieldLabel(fieldName)\n        emit('mapping-error', `列 \"${column.name}\" 的数据类型不适合用作${fieldLabel}`)\n        setTimeout(() => {\n          dragError.value[fieldName] = false\n        }, 3000)\n      }\n    }\n  } catch (error) {\n    console.error('Drop failed:', error)\n    emit('mapping-error', '拖拽失败，请重试')\n  }\n}\n\n// 映射列到字段\nfunction mapColumnToField (column, fieldName) {\n  const field = mappingFields.value.find(f => f.name === fieldName)\n\n  if (field?.multiple) {\n    // 多值字段（如series）\n    if (!Array.isArray(fieldMappings.value[fieldName])) {\n      fieldMappings.value[fieldName] = []\n    }\n\n    // 检查是否已存在\n    const exists = fieldMappings.value[fieldName].some(mapping => mapping.field === column.name)\n    if (!exists) {\n      const config = getChartConfig(props.chartType)\n      if (fieldMappings.value[fieldName].length < config.maxSeries) {\n        fieldMappings.value[fieldName].push({\n          field: column.name,\n          type: column.type,\n          dataType: getFieldTypeMapping(column.type)\n        })\n      } else {\n        emit('mapping-error', `最多只能添加 ${config.maxSeries} 个数据系列`)\n      }\n    }\n  } else {\n    // 单值字段\n    fieldMappings.value[fieldName] = {\n      field: column.name,\n      type: column.type,\n      dataType: getFieldTypeMapping(column.type)\n    }\n  }\n}\n\n// 移除映射\nfunction removeMapping (fieldName, index = null) {\n  const field = mappingFields.value.find(f => f.name === fieldName)\n\n  if (field?.multiple && index !== null) {\n    // 移除多值字段中的特定项\n    fieldMappings.value[fieldName].splice(index, 1)\n  } else {\n    // 移除单值字段或整个多值字段\n    fieldMappings.value[fieldName] = field?.multiple ? [] : null\n  }\n}\n\n// 获取映射验证状态\nconst mappingValidation = computed(() => {\n  const config = getChartConfig(props.chartType)\n  const fieldMapping = config.getFieldMapping()\n  const validation = {\n    isValid: true,\n    missingFields: []\n  }\n\n  // 检查必需字段\n  if (fieldMapping.required) {\n    fieldMapping.required.forEach(fieldConfig => {\n      const mapping = fieldMappings.value[fieldConfig.name]\n      \n      if (!mapping || (fieldConfig.multiple && (!Array.isArray(mapping) || mapping.length === 0))) {\n        validation.isValid = false\n        validation.missingFields.push(fieldConfig.label)\n      }\n    })\n  }\n\n  return validation\n})\n\n// 更新映射（给父组件调用）\nfunction updateMappings (newMappings) {\n  fieldMappings.value = { ...newMappings }\n}\n\n// 重置映射（给父组件调用）\nfunction reset () {\n  fieldMappings.value = {}\n}\n\n// 暴露验证状态和方法给父组件\ndefineExpose({\n  validation: mappingValidation,\n  fieldMappings,\n  updateMappings,\n  reset\n})\n</script>\n\n<style scoped>\n.field-mapping {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.mapping-item {\n  animation: fadeInUp 0.5s ease;\n  animation-fill-mode: both;\n}\n\n.mapping-item:nth-child(1) { animation-delay: 0.1s; }\n.mapping-item:nth-child(2) { animation-delay: 0.2s; }\n.mapping-item:nth-child(3) { animation-delay: 0.3s; }\n.mapping-item:nth-child(4) { animation-delay: 0.4s; }\n.mapping-item:nth-child(5) { animation-delay: 0.5s; }\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.mapping-item-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n}\n\n.mapping-label {\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--text-color, #333333);\n}\n\n.required-star {\n  color: #ff5252;\n  font-weight: bold;\n  margin-left: 4px;\n}\n\n.mapping-type-tag {\n  display: inline-flex;\n  align-items: center;\n  padding: 2px 8px;\n  background: var(--bg-secondary, #f1f3f4);\n  color: var(--text-secondary, #666666);\n  border-radius: 10px;\n  font-size: 10px;\n  font-weight: 500;\n  text-transform: uppercase;\n  border: 1px solid var(--border-color, #e5e5e5);\n  transition: all 0.3s ease;\n}\n\n.drop-zone {\n  min-height: 50px;\n  border: 2px dashed var(--border-color, #e5e5e5);\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);\n  background: var(--bg-color, #ffffff);\n  position: relative;\n  overflow: hidden;\n}\n\n.drop-zone-active {\n  border-color: var(--primary-color, #5470c6);\n  background-color: rgba(84, 112, 198, 0.05);\n  transform: scale(1.02);\n  box-shadow: 0 4px 20px rgba(84, 112, 198, 0.15);\n  border-style: solid;\n}\n\n.drop-zone-filled {\n  border-color: var(--success-color, #28a745);\n  background-color: rgba(40, 167, 69, 0.05);\n  transform: scale(1.01);\n}\n\n.drop-zone-error {\n  border-color: var(--error-color, #dc3545);\n  background-color: rgba(220, 53, 69, 0.05);\n  animation: shake 0.5s ease-in-out;\n}\n\n.drop-zone-disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n  border-color: var(--disabled-color, #a8a8a8);\n}\n\n@keyframes shake {\n  0%, 100% { transform: translateX(0); }\n  25% { transform: translateX(-4px); }\n  75% { transform: translateX(4px); }\n}\n\n.drop-placeholder {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--text-secondary, #666666);\n  transition: all 0.3s ease;\n}\n\n.drop-icon {\n  font-size: 16px;\n  font-weight: bold;\n  transition: transform 0.3s ease;\n}\n\n.drop-text {\n  font-size: 12px;\n  transition: color 0.3s ease;\n}\n\n.drop-zone:hover .drop-placeholder {\n  color: var(--primary-color, #5470c6);\n  transform: scale(1.05);\n}\n\n.drop-zone:hover .drop-icon {\n  animation: bounceArrow 0.6s ease;\n}\n\n@keyframes bounceArrow {\n  0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\n  40% { transform: translateY(-3px); }\n  60% { transform: translateY(-2px); }\n}\n\n.mapped-field {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 8px 12px;\n  background: var(--bg-secondary, #f8f9fa);\n  border-radius: 6px;\n  position: relative;\n  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);\n  animation: slideInDown 0.4s ease;\n  overflow: hidden;\n}\n\n@keyframes slideInDown {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.mapped-field:hover {\n  background: var(--bg-tertiary, #e9ecef);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px var(--shadow-color, rgba(0, 0, 0, 0.1));\n}\n\n.mapped-series {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n}\n\n.field-info {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n}\n\n.field-name {\n  font-size: 13px;\n  font-weight: 500;\n  color: var(--text-color, #333333);\n}\n\n.field-type {\n  font-size: 11px;\n  color: var(--text-secondary, #666666);\n  text-transform: uppercase;\n}\n\n.remove-btn {\n  background: var(--error-color, #dc3545);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 12px;\n  transition: all 0.3s ease;\n  opacity: 0.7;\n}\n\n.remove-btn:hover {\n  background: var(--error-hover, #c82333);\n  transform: scale(1.1) rotate(90deg);\n  opacity: 1;\n  box-shadow: 0 0 10px rgba(220, 53, 69, 0.5);\n}\n\n/* 暗色主题适配 */\n[data-theme=\"dark\"] .mapping-type-tag,\n:root.dark .mapping-type-tag {\n  background: var(--bg-tertiary, #3d3d3d);\n  color: var(--text-secondary, #b0b0b0);\n  border-color: var(--border-color, #404040);\n}\n\n[data-theme=\"dark\"] .drop-zone,\n:root.dark .drop-zone {\n  border-color: var(--border-color, #555555);\n  background: var(--bg-color, #1e1e1e);\n}\n\n[data-theme=\"dark\"] .mapped-field,\n:root.dark .mapped-field {\n  background: var(--bg-secondary, #2d2d2d);\n}\n\n[data-theme=\"dark\"] .mapped-field:hover,\n:root.dark .mapped-field:hover {\n  background: var(--bg-tertiary, #3d3d3d);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}