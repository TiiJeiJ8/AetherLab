{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\n/**\n * 图表字段映射配置\n * 这个文件定义了每种图表类型所需的字段映射规则\n */\n\nimport { CHART_TYPES } from './chartTypes.js';\nimport { DATA_TYPES, FIELD_ROLES } from './dataTypes.js';\n\n// 字段映射定义\nexport const FIELD_MAPPINGS = {\n  [CHART_TYPES.BAR]: {\n    required: [{\n      name: 'x_axis',\n      role: FIELD_ROLES.X_AXIS,\n      label: 'X轴（分类）',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.TEMPORAL],\n      multiple: false,\n      description: '用于分类的字段，如产品名称、日期等'\n    }, {\n      name: 'y_axis',\n      role: FIELD_ROLES.Y_AXIS,\n      label: 'Y轴（数值）',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '用于显示数值的字段，如销售额、数量等'\n    }],\n    optional: [{\n      name: 'series',\n      role: FIELD_ROLES.SERIES,\n      label: '系列',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '用于分组的字段，创建多个系列'\n    }, {\n      name: 'color',\n      role: FIELD_ROLES.COLOR,\n      label: '颜色',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.NUMERIC],\n      multiple: false,\n      description: '用于控制颜色的字段'\n    }]\n  },\n  [CHART_TYPES.LINE]: {\n    required: [{\n      name: 'x_axis',\n      role: FIELD_ROLES.X_AXIS,\n      label: 'X轴（时间/分类）',\n      dataTypes: [DATA_TYPES.TEMPORAL, DATA_TYPES.CATEGORY, DATA_TYPES.NUMERIC],\n      multiple: false,\n      description: '通常为时间字段或有序分类'\n    }, {\n      name: 'y_axis',\n      role: FIELD_ROLES.Y_AXIS,\n      label: 'Y轴（数值）',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '要显示趋势的数值字段'\n    }],\n    optional: [{\n      name: 'series',\n      role: FIELD_ROLES.SERIES,\n      label: '系列',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '用于创建多条线的分组字段'\n    }, {\n      name: 'color',\n      role: FIELD_ROLES.COLOR,\n      label: '颜色',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.NUMERIC],\n      multiple: false,\n      description: '用于控制线条颜色的字段'\n    }]\n  },\n  [CHART_TYPES.PIE]: {\n    required: [{\n      name: 'dimension',\n      role: FIELD_ROLES.DIMENSION,\n      label: '维度（分类）',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '用于分割饼图的分类字段'\n    }, {\n      name: 'value',\n      role: FIELD_ROLES.VALUE,\n      label: '值（数值）',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '用于确定每个扇区大小的数值字段'\n    }],\n    optional: [{\n      name: 'color',\n      role: FIELD_ROLES.COLOR,\n      label: '颜色',\n      dataTypes: [DATA_TYPES.CATEGORY],\n      multiple: false,\n      description: '用于控制扇区颜色的字段'\n    }]\n  },\n  [CHART_TYPES.SCATTER]: {\n    required: [{\n      name: 'x_axis',\n      role: FIELD_ROLES.X_AXIS,\n      label: 'X轴（数值）',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '横轴数值字段'\n    }, {\n      name: 'y_axis',\n      role: FIELD_ROLES.Y_AXIS,\n      label: 'Y轴（数值）',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '纵轴数值字段'\n    }],\n    optional: [{\n      name: 'size',\n      role: FIELD_ROLES.SIZE,\n      label: '大小',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '用于控制点大小的数值字段'\n    }, {\n      name: 'color',\n      role: FIELD_ROLES.COLOR,\n      label: '颜色',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.NUMERIC],\n      multiple: false,\n      description: '用于控制点颜色的字段'\n    }]\n  },\n  [CHART_TYPES.AREA]: {\n    required: [{\n      name: 'x_axis',\n      role: FIELD_ROLES.X_AXIS,\n      label: 'X轴（时间/分类）',\n      dataTypes: [DATA_TYPES.TEMPORAL, DATA_TYPES.CATEGORY, DATA_TYPES.NUMERIC],\n      multiple: false,\n      description: '通常为时间字段或有序分类'\n    }, {\n      name: 'y_axis',\n      role: FIELD_ROLES.Y_AXIS,\n      label: 'Y轴（数值）',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '要显示面积的数值字段'\n    }],\n    optional: [{\n      name: 'series',\n      role: FIELD_ROLES.SERIES,\n      label: '系列',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '用于创建多个面积层的分组字段'\n    }]\n  },\n  [CHART_TYPES.HEATMAP]: {\n    required: [{\n      name: 'x_axis',\n      role: FIELD_ROLES.X_AXIS,\n      label: 'X轴（分类）',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '热力图的横轴分类字段'\n    }, {\n      name: 'y_axis',\n      role: FIELD_ROLES.Y_AXIS,\n      label: 'Y轴（分类）',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '热力图的纵轴分类字段'\n    }, {\n      name: 'value',\n      role: FIELD_ROLES.VALUE,\n      label: '值（数值）',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '用于确定颜色深浅的数值字段'\n    }]\n  },\n  [CHART_TYPES.RADAR]: {\n    required: [{\n      name: 'dimension',\n      role: FIELD_ROLES.DIMENSION,\n      label: '维度',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '雷达图的各个维度字段'\n    }, {\n      name: 'value',\n      role: FIELD_ROLES.VALUE,\n      label: '值',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: true,\n      description: '各个维度对应的数值字段'\n    }],\n    optional: [{\n      name: 'series',\n      role: FIELD_ROLES.SERIES,\n      label: '系列',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '用于创建多个雷达的分组字段'\n    }]\n  },\n  [CHART_TYPES.TREEMAP]: {\n    required: [{\n      name: 'dimension',\n      role: FIELD_ROLES.DIMENSION,\n      label: '维度（分类）',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '用于分割矩形的分类字段'\n    }, {\n      name: 'value',\n      role: FIELD_ROLES.VALUE,\n      label: '值（数值）',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '用于确定矩形大小的数值字段'\n    }],\n    optional: [{\n      name: 'parent',\n      role: FIELD_ROLES.PARENT,\n      label: '父级',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '用于构建层次结构的父级字段'\n    }]\n  },\n  [CHART_TYPES.SUNBURST]: {\n    required: [{\n      name: 'dimension',\n      role: FIELD_ROLES.DIMENSION,\n      label: '维度（分类）',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '用于分割扇区的分类字段'\n    }, {\n      name: 'value',\n      role: FIELD_ROLES.VALUE,\n      label: '值（数值）',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '用于确定扇区大小的数值字段'\n    }],\n    optional: [{\n      name: 'parent',\n      role: FIELD_ROLES.PARENT,\n      label: '父级',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '用于构建层次结构的父级字段'\n    }]\n  },\n  [CHART_TYPES.GAUGE]: {\n    required: [{\n      name: 'value',\n      role: FIELD_ROLES.VALUE,\n      label: '当前值',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '要显示的当前值'\n    }],\n    optional: [{\n      name: 'target',\n      role: FIELD_ROLES.VALUE,\n      label: '目标值',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '目标值或最大值'\n    }]\n  },\n  [CHART_TYPES.CANDLESTICK]: {\n    required: [{\n      name: 'time',\n      role: FIELD_ROLES.X_AXIS,\n      label: '时间',\n      dataTypes: [DATA_TYPES.TEMPORAL],\n      multiple: false,\n      description: '时间字段'\n    }, {\n      name: 'open',\n      role: FIELD_ROLES.VALUE,\n      label: '开盘价',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '开盘价格'\n    }, {\n      name: 'high',\n      role: FIELD_ROLES.VALUE,\n      label: '最高价',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '最高价格'\n    }, {\n      name: 'low',\n      role: FIELD_ROLES.VALUE,\n      label: '最低价',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '最低价格'\n    }, {\n      name: 'close',\n      role: FIELD_ROLES.VALUE,\n      label: '收盘价',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '收盘价格'\n    }],\n    optional: [{\n      name: 'volume',\n      role: FIELD_ROLES.VALUE,\n      label: '成交量',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '成交量'\n    }]\n  },\n  [CHART_TYPES.WATERFALL]: {\n    required: [{\n      name: 'category',\n      role: FIELD_ROLES.X_AXIS,\n      label: '分类',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '步骤或分类字段'\n    }, {\n      name: 'value',\n      role: FIELD_ROLES.VALUE,\n      label: '变化值',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '每个步骤的变化值'\n    }],\n    optional: [{\n      name: 'total',\n      role: FIELD_ROLES.VALUE,\n      label: '累计值',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '累计总值'\n    }]\n  },\n  [CHART_TYPES.SANKEY]: {\n    required: [{\n      name: 'source',\n      role: FIELD_ROLES.SOURCE,\n      label: '源节点',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '流向的起始节点'\n    }, {\n      name: 'target',\n      role: FIELD_ROLES.TARGET,\n      label: '目标节点',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '流向的目标节点'\n    }, {\n      name: 'value',\n      role: FIELD_ROLES.VALUE,\n      label: '流量',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '流量大小'\n    }]\n  },\n  [CHART_TYPES.NETWORK]: {\n    required: [{\n      name: 'source',\n      role: FIELD_ROLES.SOURCE,\n      label: '源节点',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '关系的源节点'\n    }, {\n      name: 'target',\n      role: FIELD_ROLES.TARGET,\n      label: '目标节点',\n      dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n      multiple: false,\n      description: '关系的目标节点'\n    }],\n    optional: [{\n      name: 'weight',\n      role: FIELD_ROLES.WEIGHT,\n      label: '权重',\n      dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n      multiple: false,\n      description: '关系的权重或强度'\n    }]\n  }\n};\n\n// 获取图表字段映射配置\nexport function getFieldMapping(chartType) {\n  return FIELD_MAPPINGS[chartType] || FIELD_MAPPINGS[CHART_TYPES.BAR];\n}\n\n// 验证字段映射\nexport function validateFieldMapping(chartType, fieldName, dataType) {\n  const mapping = getFieldMapping(chartType);\n  const allFields = [...mapping.required, ...mapping.optional];\n  const field = allFields.find(f => f.name === fieldName);\n  if (!field) {\n    return {\n      valid: false,\n      reason: '未知的字段名称'\n    };\n  }\n  if (!field.dataTypes.includes(dataType)) {\n    return {\n      valid: false,\n      reason: `字段 \"${fieldName}\" 不支持数据类型 \"${dataType}\"，支持的类型：${field.dataTypes.join(', ')}`\n    };\n  }\n  return {\n    valid: true\n  };\n}\n\n// 检查必需字段是否完整\nexport function validateRequiredFields(chartType, fieldMappings) {\n  const mapping = getFieldMapping(chartType);\n  const missingFields = [];\n  mapping.required.forEach(field => {\n    if (!fieldMappings[field.name] || !fieldMappings[field.name].field) {\n      missingFields.push(field.name);\n    }\n  });\n  return {\n    valid: missingFields.length === 0,\n    missingFields,\n    message: missingFields.length > 0 ? `缺少必需字段：${missingFields.join(', ')}` : '所有必需字段已配置'\n  };\n}\n\n// 获取字段建议\nexport function getFieldSuggestions(chartType, availableColumns) {\n  const mapping = getFieldMapping(chartType);\n  const suggestions = {};\n  const allFields = [...mapping.required, ...mapping.optional];\n  allFields.forEach(field => {\n    const compatibleColumns = availableColumns.filter(column => field.dataTypes.includes(column.dataType));\n    if (compatibleColumns.length > 0) {\n      suggestions[field.name] = {\n        field: field,\n        suggestions: compatibleColumns.map(col => ({\n          column: col,\n          confidence: calculateConfidence(field, col)\n        })).sort((a, b) => b.confidence - a.confidence)\n      };\n    }\n  });\n  return suggestions;\n}\n\n// 计算字段匹配置信度\nfunction calculateConfidence(fieldDef, column) {\n  let confidence = 0.5; // 基础置信度\n\n  // 基于数据类型匹配度\n  if (fieldDef.dataTypes.includes(column.dataType)) {\n    confidence += 0.3;\n  }\n\n  // 基于字段名称相似度\n  const fieldNameLower = fieldDef.name.toLowerCase();\n  const columnNameLower = column.name.toLowerCase();\n  if (columnNameLower.includes(fieldNameLower) || fieldNameLower.includes(columnNameLower)) {\n    confidence += 0.2;\n  }\n\n  // 基于字段角色匹配\n  const roleKeywords = {\n    [FIELD_ROLES.X_AXIS]: ['x', 'horizontal', 'category', 'group'],\n    [FIELD_ROLES.Y_AXIS]: ['y', 'vertical', 'value', 'amount'],\n    [FIELD_ROLES.VALUE]: ['value', 'amount', 'count', 'sum'],\n    [FIELD_ROLES.DIMENSION]: ['category', 'group', 'type', 'class'],\n    [FIELD_ROLES.TEMPORAL]: ['time', 'date', 'timestamp', 'year', 'month']\n  };\n  const keywords = roleKeywords[fieldDef.role] || [];\n  if (keywords.some(keyword => columnNameLower.includes(keyword))) {\n    confidence += 0.1;\n  }\n  return Math.min(confidence, 1.0);\n}","map":{"version":3,"names":["CHART_TYPES","DATA_TYPES","FIELD_ROLES","FIELD_MAPPINGS","BAR","required","name","role","X_AXIS","label","dataTypes","CATEGORY","TEMPORAL","multiple","description","Y_AXIS","NUMERIC","MEASURE","optional","SERIES","DIMENSION","COLOR","LINE","PIE","VALUE","SCATTER","SIZE","AREA","HEATMAP","RADAR","TREEMAP","PARENT","SUNBURST","GAUGE","CANDLESTICK","WATERFALL","SANKEY","SOURCE","TARGET","NETWORK","WEIGHT","getFieldMapping","chartType","validateFieldMapping","fieldName","dataType","mapping","allFields","field","find","f","valid","reason","includes","join","validateRequiredFields","fieldMappings","missingFields","forEach","push","length","message","getFieldSuggestions","availableColumns","suggestions","compatibleColumns","filter","column","map","col","confidence","calculateConfidence","sort","a","b","fieldDef","fieldNameLower","toLowerCase","columnNameLower","roleKeywords","keywords","some","keyword","Math","min"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/configs/fieldMappings.js"],"sourcesContent":["/**\n * 图表字段映射配置\n * 这个文件定义了每种图表类型所需的字段映射规则\n */\n\nimport { CHART_TYPES } from './chartTypes.js'\nimport { DATA_TYPES, FIELD_ROLES } from './dataTypes.js'\n\n// 字段映射定义\nexport const FIELD_MAPPINGS = {\n  [CHART_TYPES.BAR]: {\n    required: [\n      {\n        name: 'x_axis',\n        role: FIELD_ROLES.X_AXIS,\n        label: 'X轴（分类）',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.TEMPORAL],\n        multiple: false,\n        description: '用于分类的字段，如产品名称、日期等'\n      },\n      {\n        name: 'y_axis',\n        role: FIELD_ROLES.Y_AXIS,\n        label: 'Y轴（数值）',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '用于显示数值的字段，如销售额、数量等'\n      }\n    ],\n    optional: [\n      {\n        name: 'series',\n        role: FIELD_ROLES.SERIES,\n        label: '系列',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '用于分组的字段，创建多个系列'\n      },\n      {\n        name: 'color',\n        role: FIELD_ROLES.COLOR,\n        label: '颜色',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.NUMERIC],\n        multiple: false,\n        description: '用于控制颜色的字段'\n      }\n    ]\n  },\n\n  [CHART_TYPES.LINE]: {\n    required: [\n      {\n        name: 'x_axis',\n        role: FIELD_ROLES.X_AXIS,\n        label: 'X轴（时间/分类）',\n        dataTypes: [DATA_TYPES.TEMPORAL, DATA_TYPES.CATEGORY, DATA_TYPES.NUMERIC],\n        multiple: false,\n        description: '通常为时间字段或有序分类'\n      },\n      {\n        name: 'y_axis',\n        role: FIELD_ROLES.Y_AXIS,\n        label: 'Y轴（数值）',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '要显示趋势的数值字段'\n      }\n    ],\n    optional: [\n      {\n        name: 'series',\n        role: FIELD_ROLES.SERIES,\n        label: '系列',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '用于创建多条线的分组字段'\n      },\n      {\n        name: 'color',\n        role: FIELD_ROLES.COLOR,\n        label: '颜色',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.NUMERIC],\n        multiple: false,\n        description: '用于控制线条颜色的字段'\n      }\n    ]\n  },\n\n  [CHART_TYPES.PIE]: {\n    required: [\n      {\n        name: 'dimension',\n        role: FIELD_ROLES.DIMENSION,\n        label: '维度（分类）',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '用于分割饼图的分类字段'\n      },\n      {\n        name: 'value',\n        role: FIELD_ROLES.VALUE,\n        label: '值（数值）',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '用于确定每个扇区大小的数值字段'\n      }\n    ],\n    optional: [\n      {\n        name: 'color',\n        role: FIELD_ROLES.COLOR,\n        label: '颜色',\n        dataTypes: [DATA_TYPES.CATEGORY],\n        multiple: false,\n        description: '用于控制扇区颜色的字段'\n      }\n    ]\n  },\n\n  [CHART_TYPES.SCATTER]: {\n    required: [\n      {\n        name: 'x_axis',\n        role: FIELD_ROLES.X_AXIS,\n        label: 'X轴（数值）',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '横轴数值字段'\n      },\n      {\n        name: 'y_axis',\n        role: FIELD_ROLES.Y_AXIS,\n        label: 'Y轴（数值）',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '纵轴数值字段'\n      }\n    ],\n    optional: [\n      {\n        name: 'size',\n        role: FIELD_ROLES.SIZE,\n        label: '大小',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '用于控制点大小的数值字段'\n      },\n      {\n        name: 'color',\n        role: FIELD_ROLES.COLOR,\n        label: '颜色',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.NUMERIC],\n        multiple: false,\n        description: '用于控制点颜色的字段'\n      }\n    ]\n  },\n\n  [CHART_TYPES.AREA]: {\n    required: [\n      {\n        name: 'x_axis',\n        role: FIELD_ROLES.X_AXIS,\n        label: 'X轴（时间/分类）',\n        dataTypes: [DATA_TYPES.TEMPORAL, DATA_TYPES.CATEGORY, DATA_TYPES.NUMERIC],\n        multiple: false,\n        description: '通常为时间字段或有序分类'\n      },\n      {\n        name: 'y_axis',\n        role: FIELD_ROLES.Y_AXIS,\n        label: 'Y轴（数值）',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '要显示面积的数值字段'\n      }\n    ],\n    optional: [\n      {\n        name: 'series',\n        role: FIELD_ROLES.SERIES,\n        label: '系列',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '用于创建多个面积层的分组字段'\n      }\n    ]\n  },\n\n  [CHART_TYPES.HEATMAP]: {\n    required: [\n      {\n        name: 'x_axis',\n        role: FIELD_ROLES.X_AXIS,\n        label: 'X轴（分类）',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '热力图的横轴分类字段'\n      },\n      {\n        name: 'y_axis',\n        role: FIELD_ROLES.Y_AXIS,\n        label: 'Y轴（分类）',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '热力图的纵轴分类字段'\n      },\n      {\n        name: 'value',\n        role: FIELD_ROLES.VALUE,\n        label: '值（数值）',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '用于确定颜色深浅的数值字段'\n      }\n    ]\n  },\n\n  [CHART_TYPES.RADAR]: {\n    required: [\n      {\n        name: 'dimension',\n        role: FIELD_ROLES.DIMENSION,\n        label: '维度',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '雷达图的各个维度字段'\n      },\n      {\n        name: 'value',\n        role: FIELD_ROLES.VALUE,\n        label: '值',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: true,\n        description: '各个维度对应的数值字段'\n      }\n    ],\n    optional: [\n      {\n        name: 'series',\n        role: FIELD_ROLES.SERIES,\n        label: '系列',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '用于创建多个雷达的分组字段'\n      }\n    ]\n  },\n\n  [CHART_TYPES.TREEMAP]: {\n    required: [\n      {\n        name: 'dimension',\n        role: FIELD_ROLES.DIMENSION,\n        label: '维度（分类）',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '用于分割矩形的分类字段'\n      },\n      {\n        name: 'value',\n        role: FIELD_ROLES.VALUE,\n        label: '值（数值）',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '用于确定矩形大小的数值字段'\n      }\n    ],\n    optional: [\n      {\n        name: 'parent',\n        role: FIELD_ROLES.PARENT,\n        label: '父级',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '用于构建层次结构的父级字段'\n      }\n    ]\n  },\n\n  [CHART_TYPES.SUNBURST]: {\n    required: [\n      {\n        name: 'dimension',\n        role: FIELD_ROLES.DIMENSION,\n        label: '维度（分类）',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '用于分割扇区的分类字段'\n      },\n      {\n        name: 'value',\n        role: FIELD_ROLES.VALUE,\n        label: '值（数值）',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '用于确定扇区大小的数值字段'\n      }\n    ],\n    optional: [\n      {\n        name: 'parent',\n        role: FIELD_ROLES.PARENT,\n        label: '父级',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '用于构建层次结构的父级字段'\n      }\n    ]\n  },\n\n  [CHART_TYPES.GAUGE]: {\n    required: [\n      {\n        name: 'value',\n        role: FIELD_ROLES.VALUE,\n        label: '当前值',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '要显示的当前值'\n      }\n    ],\n    optional: [\n      {\n        name: 'target',\n        role: FIELD_ROLES.VALUE,\n        label: '目标值',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '目标值或最大值'\n      }\n    ]\n  },\n\n  [CHART_TYPES.CANDLESTICK]: {\n    required: [\n      {\n        name: 'time',\n        role: FIELD_ROLES.X_AXIS,\n        label: '时间',\n        dataTypes: [DATA_TYPES.TEMPORAL],\n        multiple: false,\n        description: '时间字段'\n      },\n      {\n        name: 'open',\n        role: FIELD_ROLES.VALUE,\n        label: '开盘价',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '开盘价格'\n      },\n      {\n        name: 'high',\n        role: FIELD_ROLES.VALUE,\n        label: '最高价',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '最高价格'\n      },\n      {\n        name: 'low',\n        role: FIELD_ROLES.VALUE,\n        label: '最低价',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '最低价格'\n      },\n      {\n        name: 'close',\n        role: FIELD_ROLES.VALUE,\n        label: '收盘价',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '收盘价格'\n      }\n    ],\n    optional: [\n      {\n        name: 'volume',\n        role: FIELD_ROLES.VALUE,\n        label: '成交量',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '成交量'\n      }\n    ]\n  },\n\n  [CHART_TYPES.WATERFALL]: {\n    required: [\n      {\n        name: 'category',\n        role: FIELD_ROLES.X_AXIS,\n        label: '分类',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '步骤或分类字段'\n      },\n      {\n        name: 'value',\n        role: FIELD_ROLES.VALUE,\n        label: '变化值',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '每个步骤的变化值'\n      }\n    ],\n    optional: [\n      {\n        name: 'total',\n        role: FIELD_ROLES.VALUE,\n        label: '累计值',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '累计总值'\n      }\n    ]\n  },\n\n  [CHART_TYPES.SANKEY]: {\n    required: [\n      {\n        name: 'source',\n        role: FIELD_ROLES.SOURCE,\n        label: '源节点',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '流向的起始节点'\n      },\n      {\n        name: 'target',\n        role: FIELD_ROLES.TARGET,\n        label: '目标节点',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '流向的目标节点'\n      },\n      {\n        name: 'value',\n        role: FIELD_ROLES.VALUE,\n        label: '流量',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '流量大小'\n      }\n    ]\n  },\n\n  [CHART_TYPES.NETWORK]: {\n    required: [\n      {\n        name: 'source',\n        role: FIELD_ROLES.SOURCE,\n        label: '源节点',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '关系的源节点'\n      },\n      {\n        name: 'target',\n        role: FIELD_ROLES.TARGET,\n        label: '目标节点',\n        dataTypes: [DATA_TYPES.CATEGORY, DATA_TYPES.DIMENSION],\n        multiple: false,\n        description: '关系的目标节点'\n      }\n    ],\n    optional: [\n      {\n        name: 'weight',\n        role: FIELD_ROLES.WEIGHT,\n        label: '权重',\n        dataTypes: [DATA_TYPES.NUMERIC, DATA_TYPES.MEASURE],\n        multiple: false,\n        description: '关系的权重或强度'\n      }\n    ]\n  }\n}\n\n// 获取图表字段映射配置\nexport function getFieldMapping(chartType) {\n  return FIELD_MAPPINGS[chartType] || FIELD_MAPPINGS[CHART_TYPES.BAR]\n}\n\n// 验证字段映射\nexport function validateFieldMapping(chartType, fieldName, dataType) {\n  const mapping = getFieldMapping(chartType)\n  const allFields = [...mapping.required, ...mapping.optional]\n  \n  const field = allFields.find(f => f.name === fieldName)\n  if (!field) {\n    return { valid: false, reason: '未知的字段名称' }\n  }\n  \n  if (!field.dataTypes.includes(dataType)) {\n    return { \n      valid: false, \n      reason: `字段 \"${fieldName}\" 不支持数据类型 \"${dataType}\"，支持的类型：${field.dataTypes.join(', ')}` \n    }\n  }\n  \n  return { valid: true }\n}\n\n// 检查必需字段是否完整\nexport function validateRequiredFields(chartType, fieldMappings) {\n  const mapping = getFieldMapping(chartType)\n  const missingFields = []\n  \n  mapping.required.forEach(field => {\n    if (!fieldMappings[field.name] || !fieldMappings[field.name].field) {\n      missingFields.push(field.name)\n    }\n  })\n  \n  return {\n    valid: missingFields.length === 0,\n    missingFields,\n    message: missingFields.length > 0 ? `缺少必需字段：${missingFields.join(', ')}` : '所有必需字段已配置'\n  }\n}\n\n// 获取字段建议\nexport function getFieldSuggestions(chartType, availableColumns) {\n  const mapping = getFieldMapping(chartType)\n  const suggestions = {}\n  \n  const allFields = [...mapping.required, ...mapping.optional]\n  \n  allFields.forEach(field => {\n    const compatibleColumns = availableColumns.filter(column => \n      field.dataTypes.includes(column.dataType)\n    )\n    \n    if (compatibleColumns.length > 0) {\n      suggestions[field.name] = {\n        field: field,\n        suggestions: compatibleColumns.map(col => ({\n          column: col,\n          confidence: calculateConfidence(field, col)\n        })).sort((a, b) => b.confidence - a.confidence)\n      }\n    }\n  })\n  \n  return suggestions\n}\n\n// 计算字段匹配置信度\nfunction calculateConfidence(fieldDef, column) {\n  let confidence = 0.5 // 基础置信度\n  \n  // 基于数据类型匹配度\n  if (fieldDef.dataTypes.includes(column.dataType)) {\n    confidence += 0.3\n  }\n  \n  // 基于字段名称相似度\n  const fieldNameLower = fieldDef.name.toLowerCase()\n  const columnNameLower = column.name.toLowerCase()\n  \n  if (columnNameLower.includes(fieldNameLower) || fieldNameLower.includes(columnNameLower)) {\n    confidence += 0.2\n  }\n  \n  // 基于字段角色匹配\n  const roleKeywords = {\n    [FIELD_ROLES.X_AXIS]: ['x', 'horizontal', 'category', 'group'],\n    [FIELD_ROLES.Y_AXIS]: ['y', 'vertical', 'value', 'amount'],\n    [FIELD_ROLES.VALUE]: ['value', 'amount', 'count', 'sum'],\n    [FIELD_ROLES.DIMENSION]: ['category', 'group', 'type', 'class'],\n    [FIELD_ROLES.TEMPORAL]: ['time', 'date', 'timestamp', 'year', 'month']\n  }\n  \n  const keywords = roleKeywords[fieldDef.role] || []\n  if (keywords.some(keyword => columnNameLower.includes(keyword))) {\n    confidence += 0.1\n  }\n  \n  return Math.min(confidence, 1.0)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}