{"ast":null,"code":"/* eslint-disable */\n/**\n * 文件上传与管理相关的 API 服务\n */\n\nconst API_BASE_URL = '/api';\n\n/**\n * 上传文件到服务器\n * @param {File} file - 要上传的文件对象\n * @returns {Promise} 上传结果\n */\nexport async function uploadFile(file) {\n  const formData = new FormData();\n  formData.append('file', file);\n  try {\n    const response = await fetch(`${API_BASE_URL}/files/upload`, {\n      method: 'POST',\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error('Upload failed');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('文件上传失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 获取文件预览数据\n * @param {string} fileId - 文件ID\n * @returns {Promise} 文件预览数据\n */\nexport async function getFilePreview(fileId) {\n  try {\n    const response = await fetch(`${API_BASE_URL}/files/${fileId}/preview`);\n    if (!response.ok) {\n      throw new Error('Failed to get preview');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('获取文件预览失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 从服务器删除文件\n * @param {string} fileId - 要删除的文件ID\n */\nexport async function deleteFile(fileId) {\n  try {\n    const response = await fetch(`${API_BASE_URL}/files/${fileId}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      throw new Error('Delete failed');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('删除文件失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 重命名文件\n * @param {string} fileId - 文件ID\n * @param {string} newName - 新文件名\n */\nexport async function renameFile(fileId, newName) {\n  try {\n    const response = await fetch(`${API_BASE_URL}/files/${fileId}/rename`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: newName\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Rename failed');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('重命名文件失败:', error);\n    throw error;\n  }\n}","map":{"version":3,"names":["API_BASE_URL","uploadFile","file","formData","FormData","append","response","fetch","method","body","ok","Error","json","error","console","getFilePreview","fileId","deleteFile","renameFile","newName","headers","JSON","stringify","name"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/services/FileServices.js"],"sourcesContent":["/* eslint-disable */\n/**\n * 文件上传与管理相关的 API 服务\n */\n\nconst API_BASE_URL = '/api'\n\n/**\n * 上传文件到服务器\n * @param {File} file - 要上传的文件对象\n * @returns {Promise} 上传结果\n */\nexport async function uploadFile(file) {\n    const formData = new FormData()\n    formData.append('file', file)\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/files/upload`, {\n            method: 'POST',\n            body: formData\n        })\n\n        if (!response.ok) {\n            throw new Error('Upload failed')\n        }\n\n        return await response.json()\n    } catch (error) {\n        console.error('文件上传失败:', error)\n        throw error\n    }\n}\n\n/**\n * 获取文件预览数据\n * @param {string} fileId - 文件ID\n * @returns {Promise} 文件预览数据\n */\nexport async function getFilePreview(fileId) {\n    try {\n        const response = await fetch(`${API_BASE_URL}/files/${fileId}/preview`)\n        if (!response.ok) {\n            throw new Error('Failed to get preview')\n        }\n        return await response.json()\n    } catch (error) {\n        console.error('获取文件预览失败:', error)\n        throw error\n    }\n}\n\n/**\n * 从服务器删除文件\n * @param {string} fileId - 要删除的文件ID\n */\nexport async function deleteFile(fileId) {\n    try {\n        const response = await fetch(`${API_BASE_URL}/files/${fileId}`, {\n            method: 'DELETE'\n        })\n        if (!response.ok) {\n            throw new Error('Delete failed')\n        }\n        return await response.json()\n    } catch (error) {\n        console.error('删除文件失败:', error)\n        throw error\n    }\n}\n\n/**\n * 重命名文件\n * @param {string} fileId - 文件ID\n * @param {string} newName - 新文件名\n */\nexport async function renameFile(fileId, newName) {\n    try {\n        const response = await fetch(`${API_BASE_URL}/files/${fileId}/rename`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ name: newName })\n        })\n        if (!response.ok) {\n            throw new Error('Rename failed')\n        }\n        return await response.json()\n    } catch (error) {\n        console.error('重命名文件失败:', error)\n        throw error\n    }\n}"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,MAAMA,YAAY,GAAG,MAAM;;AAE3B;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,UAAUA,CAACC,IAAI,EAAE;EACnC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAE7B,IAAI;IACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,YAAY,eAAe,EAAE;MACzDQ,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACV,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IACpC;IAEA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IAC/B,MAAMA,KAAK;EACf;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeE,cAAcA,CAACC,MAAM,EAAE;EACzC,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,YAAY,UAAUgB,MAAM,UAAU,CAAC;IACvE,IAAI,CAACV,QAAQ,CAACI,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC5C;IACA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;IACjC,MAAMA,KAAK;EACf;AACJ;;AAEA;AACA;AACA;AACA;AACA,OAAO,eAAeI,UAAUA,CAACD,MAAM,EAAE;EACrC,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,YAAY,UAAUgB,MAAM,EAAE,EAAE;MAC5DR,MAAM,EAAE;IACZ,CAAC,CAAC;IACF,IAAI,CAACF,QAAQ,CAACI,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IACpC;IACA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IAC/B,MAAMA,KAAK;EACf;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeK,UAAUA,CAACF,MAAM,EAAEG,OAAO,EAAE;EAC9C,IAAI;IACA,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,YAAY,UAAUgB,MAAM,SAAS,EAAE;MACnER,MAAM,EAAE,KAAK;MACbY,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDX,IAAI,EAAEY,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEJ;MAAQ,CAAC;IAC1C,CAAC,CAAC;IACF,IAAI,CAACb,QAAQ,CAACI,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IACpC;IACA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAChC,MAAMA,KAAK;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}