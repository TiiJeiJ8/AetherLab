{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport TopBar from '../components/TopBar.vue';\nimport SideBar from '../components/SideBar.vue';\nimport ChartTypeSelector from '../components/ChartIcon.vue';\nimport ChartDisplay from '../components/ChartDisplay.vue';\nimport ChartHistoryModal from '../components/ChartHistoryModal.vue';\nimport FileUploadModal from '../components/FileUploadModal.vue';\nimport DataPreviewModal from '../components/DataPreviewModal.vue';\nimport FileWorkspace from '../components/FileWorkspace.vue';\nimport FileStructurePanel from '../components/FileStructurePanel.vue';\nimport ChartConfigPanel from '../components/ChartConfigPanel.vue';\nimport { getFilePreview } from '../assets/JS/services/FileServices.js';\nimport { ref, nextTick } from 'vue';\n\n// 文件上传相关\n\nexport default {\n  __name: 'ChartVisualizations',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const showFileUpload = ref(false);\n    function UploadFiles() {\n      showFileUpload.value = true;\n    }\n\n    // 数据预览相关\n    const showDataPreview = ref(false);\n    const currentDataFile = ref(null);\n    const previewData = ref([]);\n\n    // 工作区相关\n    const workspaceFiles = ref([]);\n\n    // 文件结构面板相关\n    const showStructurePanel = ref(false);\n    const currentStructureFile = ref(null);\n\n    // 图表配置相关\n    const selectedChartType = ref('Bar'); // 使用首字母大写格式与chartIcons.js一致\n    const chartConfig = ref(null);\n\n    // 测试图表绘制\n    const chartOption = ref({\n      title: {\n        text: '示例图表'\n      },\n      tooltip: {},\n      xAxis: {\n        data: ['A', 'B', 'C', 'D']\n      },\n      yAxis: {},\n      series: [{\n        type: 'line',\n        data: [23, 45, 12, 37]\n      }]\n    });\n\n    // 图表存储区（可从后端获取）\n    const chartHistory = ref([{\n      title: '销售柱状图',\n      option: {\n        title: {\n          text: '销售柱状图'\n        },\n        tooltip: {},\n        xAxis: {\n          data: ['一季度', '二季度', '三季度', '四季度']\n        },\n        yAxis: {},\n        series: [{\n          type: 'bar',\n          data: [120, 200, 150, 80]\n        }]\n      }\n    }, {\n      title: '折线趋势',\n      option: {\n        title: {\n          text: '折线趋势'\n        },\n        tooltip: {},\n        xAxis: {\n          data: ['1月', '2月', '3月', '4月']\n        },\n        yAxis: {},\n        series: [{\n          type: 'line',\n          data: [30, 50, 80, 65]\n        }]\n      }\n    }, {\n      title: '饼图示例',\n      option: {\n        title: {\n          text: '饼图示例'\n        },\n        tooltip: {},\n        series: [{\n          type: 'pie',\n          radius: '60%',\n          data: [{\n            value: 40,\n            name: 'A类'\n          }, {\n            value: 32,\n            name: 'B类'\n          }, {\n            value: 28,\n            name: 'C类'\n          }]\n        }]\n      }\n    }]);\n    const showHistory = ref(false);\n    function openHistory() {\n      showHistory.value = true;\n    }\n    function previewChart(item) {\n      chartOption.value = null;\n      nextTick(() => {\n        chartOption.value = JSON.parse(JSON.stringify(item.option));\n        showHistory.value = false;\n      });\n    }\n    function deleteChart(idx) {\n      chartHistory.value.splice(idx, 1);\n    }\n\n    // 图表选择\n    function onChartTypeSelect(type) {\n      console.log(`Selected chart type: ${type}`);\n      selectedChartType.value = type;\n      // 可添加处理为加载图表类型、切换组件等功能\n    }\n\n    //TODO 工作区相关方法\n    function handleWorkspaceUpdate(files) {\n      workspaceFiles.value = [...files];\n      console.log('Workspace updated:', workspaceFiles.value.length, 'files');\n    }\n    function handleWorkspaceRemove(file) {\n      console.log('File removed from workspace:', file.name);\n      // 从工作区数组中移除文件\n      const index = workspaceFiles.value.findIndex(f => f.id === file.id);\n      if (index !== -1) {\n        workspaceFiles.value.splice(index, 1);\n      }\n    }\n    function handleWorkspacePreview(file) {\n      // 预览工作区中的文件\n      console.log('Preview workspace file:', file.name);\n      currentDataFile.value = file;\n\n      // 使用与 FileUploadModal 相同的预览逻辑\n      if (file.previewData) {\n        // 如果文件已经有预览数据，直接使用\n        previewData.value = file.previewData;\n        showDataPreview.value = true;\n      } else {\n        // 否则读取文件内容\n        loadFilePreview(file);\n      }\n    }\n\n    // 加载文件预览数据\n    async function loadFilePreview(file) {\n      try {\n        const previewResult = await getFilePreview(file.id);\n        previewData.value = previewResult.data;\n        showDataPreview.value = true;\n      } catch (error) {\n        console.error('Preview failed:', error);\n        alert('Preview failed: ' + error.message);\n      }\n    }\n    function handleWorkspaceClear() {\n      console.log('Workspace cleared');\n      workspaceFiles.value = [];\n    }\n\n    //TODO 文件结构面板处理方法\n    function handleShowStructure(file) {\n      console.log('Showing structure for file:', file.name);\n      currentStructureFile.value = file;\n      showStructurePanel.value = true;\n    }\n    function handleStructureMinimize(isMinimized) {\n      console.log('Structure panel minimized:', isMinimized);\n    }\n    function handleColumnDrag(dragInfo) {\n      console.log('Column drag event:', dragInfo);\n      // 这里将来会处理列拖拽到图表配置的逻辑\n      if (dragInfo.action === 'start') {\n        console.log('Started dragging column:', dragInfo.column.name);\n      } else if (dragInfo.action === 'end') {\n        console.log('Finished dragging column');\n      }\n    }\n\n    //TODO 图表配置处理方法\n    function handleConfigChange(config) {\n      console.log('Chart config changed:', config);\n      chartConfig.value = config;\n    }\n    function handleGenerateChart(config) {\n      console.log('Generating chart with config:', config);\n      if (!currentStructureFile.value || !currentStructureFile.value.parsedData) {\n        alert('Please select and analyze a data file first');\n        return;\n      }\n\n      // 根据配置生成ECharts图表\n      const newChartOption = generateEChartOption(config, currentStructureFile.value.parsedData);\n      if (newChartOption) {\n        chartOption.value = null;\n        nextTick(() => {\n          chartOption.value = newChartOption;\n        });\n      }\n    }\n\n    //TODO 生成ECharts配置\n    function generateEChartOption(config, data) {\n      const {\n        xAxis,\n        yAxis,\n        series,\n        title,\n        colorScheme,\n        animation\n      } = config;\n      if (!data || data.length === 0) {\n        alert('数据为空，无法生成图表');\n        return null;\n      }\n\n      // 提取数据\n      const xData = data.map(row => row[xAxis.field]);\n      const yData = data.map(row => parseFloat(row[yAxis.field]) || 0);\n\n      // 基础配置\n      const option = {\n        title: {\n          text: title || `${yAxis.field} vs ${xAxis.field}`,\n          left: 'center',\n          textStyle: {\n            fontSize: 16,\n            fontWeight: 'bold'\n          }\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: function (params) {\n            return `${params[0].axisValue}: ${params[0].value}`;\n          }\n        },\n        legend: {\n          data: [yAxis.field],\n          top: 'bottom'\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            dataView: {\n              show: true,\n              readOnly: false\n            },\n            magicType: {\n              show: true,\n              type: ['line', 'bar']\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: xData,\n          axisLabel: {\n            interval: 0,\n            rotate: xData.length > 10 ? 45 : 0\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: yAxis.field\n        },\n        series: [{\n          name: yAxis.field,\n          type: selectedChartType.value.toLowerCase(),\n          // 转换为小写供ECharts使用\n          data: yData,\n          animationDuration: animation ? 1500 : 0,\n          itemStyle: {\n            color: getColorByScheme(colorScheme)\n          }\n        }],\n        animation: animation,\n        animationDuration: animation ? 1500 : 0\n      };\n\n      // 根据图表类型调整配置\n      if (selectedChartType.value === 'Pie' || selectedChartType.value === 'pie') {\n        option.series[0] = {\n          name: yAxis.field,\n          type: 'pie',\n          radius: '60%',\n          data: xData.map((name, index) => ({\n            name,\n            value: yData[index]\n          })),\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        };\n        delete option.xAxis;\n        delete option.yAxis;\n      }\n      return option;\n    }\n\n    // 根据配色方案获取颜色\n    function getColorByScheme(scheme) {\n      const colorSchemes = {\n        default: '#5470c6',\n        blue: '#1890ff',\n        green: '#52c41a',\n        warm: '#fa8c16',\n        cool: '#13c2c2'\n      };\n      return colorSchemes[scheme] || colorSchemes.default;\n    }\n    const __returned__ = {\n      showFileUpload,\n      UploadFiles,\n      showDataPreview,\n      currentDataFile,\n      previewData,\n      workspaceFiles,\n      showStructurePanel,\n      currentStructureFile,\n      selectedChartType,\n      chartConfig,\n      chartOption,\n      chartHistory,\n      showHistory,\n      openHistory,\n      previewChart,\n      deleteChart,\n      onChartTypeSelect,\n      handleWorkspaceUpdate,\n      handleWorkspaceRemove,\n      handleWorkspacePreview,\n      loadFilePreview,\n      handleWorkspaceClear,\n      handleShowStructure,\n      handleStructureMinimize,\n      handleColumnDrag,\n      handleConfigChange,\n      handleGenerateChart,\n      generateEChartOption,\n      getColorByScheme,\n      TopBar,\n      SideBar,\n      ChartTypeSelector,\n      ChartDisplay,\n      ChartHistoryModal,\n      FileUploadModal,\n      DataPreviewModal,\n      FileWorkspace,\n      FileStructurePanel,\n      ChartConfigPanel,\n      get getFilePreview() {\n        return getFilePreview;\n      },\n      ref,\n      nextTick\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["TopBar","SideBar","ChartTypeSelector","ChartDisplay","ChartHistoryModal","FileUploadModal","DataPreviewModal","FileWorkspace","FileStructurePanel","ChartConfigPanel","getFilePreview","ref","nextTick","showFileUpload","UploadFiles","value","showDataPreview","currentDataFile","previewData","workspaceFiles","showStructurePanel","currentStructureFile","selectedChartType","chartConfig","chartOption","title","text","tooltip","xAxis","data","yAxis","series","type","chartHistory","option","radius","name","showHistory","openHistory","previewChart","item","JSON","parse","stringify","deleteChart","idx","splice","onChartTypeSelect","console","log","handleWorkspaceUpdate","files","length","handleWorkspaceRemove","file","index","findIndex","f","id","handleWorkspacePreview","loadFilePreview","previewResult","error","alert","message","handleWorkspaceClear","handleShowStructure","handleStructureMinimize","isMinimized","handleColumnDrag","dragInfo","action","column","handleConfigChange","config","handleGenerateChart","parsedData","newChartOption","generateEChartOption","colorScheme","animation","xData","map","row","field","yData","parseFloat","left","textStyle","fontSize","fontWeight","trigger","formatter","params","axisValue","legend","top","toolbox","show","feature","dataView","readOnly","magicType","restore","saveAsImage","axisLabel","interval","rotate","toLowerCase","animationDuration","itemStyle","color","getColorByScheme","emphasis","shadowBlur","shadowOffsetX","shadowColor","scheme","colorSchemes","default","blue","green","warm","cool"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/views/ChartVisualizations.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"py-5\">\n      <TopBar :actions=\"[\n        { type: 'button', label: 'Files', onClick: UploadFiles },\n        { type: 'button', label: 'Chart History', onClick: openHistory},\n        { type: 'button', label: 'Dashboard', },\n        { type: 'button', label: 'Instruction', to: '/under-construction'},\n        { type: 'button', label: 'Back2Home', to: '/'},\n      ]\"/>\n    </div>\n\n    <!-- 左侧边栏 -->\n    <SideBar\n      position=\"left\"\n      :collapsedWidth=\"40\"\n      :expandedWidth=\"180\">\n      <ChartTypeSelector @select=\"onChartTypeSelect\" />\n    </SideBar>\n\n    <!-- 右侧边栏 -->\n    <SideBar\n      position=\"right\"\n      :collapsedWidth=\"40\"\n      :expandedWidth=\"400\">\n      <ChartConfigPanel\n        :selectedChartType=\"selectedChartType\"\n        :currentFile=\"currentStructureFile\"\n        @config-change=\"handleConfigChange\"\n        @generate-chart=\"handleGenerateChart\"\n      />\n    </SideBar>\n\n    <!-- 绘制区 -->\n    <div class=\"main-content\">\n      <section class=\"chart-workspace\">\n        <ChartDisplay v-if=\"chartOption\" :option=\"chartOption\" />\n      </section>\n    </div>\n\n    <!-- 图表存储区 -->\n    <ChartHistoryModal\n      :show=\"showHistory\"\n      :chartHistory=\"chartHistory\"\n      @close=\"showHistory = false\"\n      @preview=\"previewChart\"\n      @delete=\"deleteChart\"\n    />\n\n    <!-- 文件上传弹窗 -->\n    <FileUploadModal\n      v-if=\"showFileUpload\"\n      :show=\"showFileUpload\"\n      :workspaceFiles=\"workspaceFiles\"\n      @close=\"showFileUpload = false\"\n      @workspace-updated=\"handleWorkspaceUpdate\"\n    />\n\n    <!-- 数据预览弹窗 -->\n    <DataPreviewModal\n      v-if=\"showDataPreview\"\n      :show=\"showDataPreview\"\n      :current-file=\"currentDataFile\"\n      :preview-data=\"previewData\"\n      @close=\"showDataPreview = false\"\n    />\n\n    <!-- 文件工作区 -->\n    <FileWorkspace\n      :files=\"workspaceFiles\"\n      @remove=\"handleWorkspaceRemove\"\n      @preview=\"handleWorkspacePreview\"\n      @clear=\"handleWorkspaceClear\"\n      @show-structure=\"handleShowStructure\"\n    />\n\n    <!-- 文件结构面板 -->\n    <FileStructurePanel\n      :fileInfo=\"currentStructureFile\"\n      :visible=\"showStructurePanel\"\n      :current-file=\"fileInfo.name\"\n      @close=\"showStructurePanel = false\"\n      @minimize=\"handleStructureMinimize\"\n      @column-drag=\"handleColumnDrag\"\n    />\n  </div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport TopBar from '../components/TopBar.vue'\nimport SideBar from '../components/SideBar.vue'\nimport ChartTypeSelector from '../components/ChartIcon.vue'\nimport ChartDisplay from '../components/ChartDisplay.vue'\nimport ChartHistoryModal from '../components/ChartHistoryModal.vue'\nimport FileUploadModal from '../components/FileUploadModal.vue'\nimport DataPreviewModal from '../components/DataPreviewModal.vue'\nimport FileWorkspace from '../components/FileWorkspace.vue'\nimport FileStructurePanel from '../components/FileStructurePanel.vue'\nimport ChartConfigPanel from '../components/ChartConfigPanel.vue'\nimport { getFilePreview } from '../assets/JS/services/FileServices.js'\nimport {ref, nextTick} from 'vue'\n\n// 文件上传相关\nconst showFileUpload = ref(false)\nfunction UploadFiles() {\n  showFileUpload.value = true\n}\n\n// 数据预览相关\nconst showDataPreview = ref(false)\nconst currentDataFile = ref(null)\nconst previewData = ref([])\n\n// 工作区相关\nconst workspaceFiles = ref([])\n\n// 文件结构面板相关\nconst showStructurePanel = ref(false)\nconst currentStructureFile = ref(null)\n\n// 图表配置相关\nconst selectedChartType = ref('Bar') // 使用首字母大写格式与chartIcons.js一致\nconst chartConfig = ref(null)\n\n// 测试图表绘制\nconst chartOption = ref({\n  title: { text: '示例图表' },\n  tooltip: {},\n  xAxis: { data: ['A', 'B', 'C', 'D'] },\n  yAxis: {},\n  series: [{ type: 'line', data: [23, 45, 12, 37] }]\n})\n\n// 图表存储区（可从后端获取）\nconst chartHistory = ref([\n  {\n    title: '销售柱状图',\n    option: {\n      title: { text: '销售柱状图' },\n      tooltip: {},\n      xAxis: { data: ['一季度', '二季度', '三季度', '四季度'] },\n      yAxis: {},\n      series: [{ type: 'bar', data: [120, 200, 150, 80] }]\n    }\n  },\n  {\n    title: '折线趋势',\n    option: {\n      title: { text: '折线趋势' },\n      tooltip: {},\n      xAxis: { data: ['1月', '2月', '3月', '4月'] },\n      yAxis: {},\n      series: [{ type: 'line', data: [30, 50, 80, 65] }]\n    }\n  },\n  {\n    title: '饼图示例',\n    option: {\n      title: { text: '饼图示例' },\n      tooltip: {},\n      series: [\n        {\n          type: 'pie',\n          radius: '60%',\n          data: [\n            { value: 40, name: 'A类' },\n            { value: 32, name: 'B类' },\n            { value: 28, name: 'C类' }\n          ]\n        }\n      ]\n    }\n  }\n])\n\nconst showHistory = ref(false)\nfunction openHistory() {\n  showHistory.value = true\n}\nfunction previewChart(item) {\n  chartOption.value = null\n  nextTick(() => {\n    chartOption.value = JSON.parse(JSON.stringify(item.option))\n    showHistory.value = false\n  })\n}\nfunction deleteChart(idx) {\n  chartHistory.value.splice(idx, 1)\n}\n\n// 图表选择\nfunction onChartTypeSelect(type) {\n    console.log(`Selected chart type: ${type}`)\n    selectedChartType.value = type\n    // 可添加处理为加载图表类型、切换组件等功能\n}\n\n//TODO 工作区相关方法\nfunction handleWorkspaceUpdate(files) {\n    workspaceFiles.value = [...files]\n    console.log('Workspace updated:', workspaceFiles.value.length, 'files')\n}\n\nfunction handleWorkspaceRemove(file) {\n    console.log('File removed from workspace:', file.name)\n    // 从工作区数组中移除文件\n    const index = workspaceFiles.value.findIndex(f => f.id === file.id)\n    if (index !== -1) {\n        workspaceFiles.value.splice(index, 1)\n    }\n}\n\nfunction handleWorkspacePreview(file) {\n    // 预览工作区中的文件\n    console.log('Preview workspace file:', file.name)\n    currentDataFile.value = file\n    \n    // 使用与 FileUploadModal 相同的预览逻辑\n    if (file.previewData) {\n        // 如果文件已经有预览数据，直接使用\n        previewData.value = file.previewData\n        showDataPreview.value = true\n    } else {\n        // 否则读取文件内容\n        loadFilePreview(file)\n    }\n}\n\n// 加载文件预览数据\nasync function loadFilePreview(file) {\n    try {\n        const previewResult = await getFilePreview(file.id)\n        previewData.value = previewResult.data\n        showDataPreview.value = true\n    } catch (error) {\n        console.error('Preview failed:', error)\n        alert('Preview failed: ' + error.message)\n    }\n}\n\nfunction handleWorkspaceClear() {\n    console.log('Workspace cleared')\n    workspaceFiles.value = []\n}\n\n//TODO 文件结构面板处理方法\nfunction handleShowStructure(file) {\n    console.log('Showing structure for file:', file.name)\n    currentStructureFile.value = file\n    showStructurePanel.value = true\n}\n\nfunction handleStructureMinimize(isMinimized) {\n    console.log('Structure panel minimized:', isMinimized)\n}\n\nfunction handleColumnDrag(dragInfo) {\n    console.log('Column drag event:', dragInfo)\n    // 这里将来会处理列拖拽到图表配置的逻辑\n    if (dragInfo.action === 'start') {\n        console.log('Started dragging column:', dragInfo.column.name)\n    } else if (dragInfo.action === 'end') {\n        console.log('Finished dragging column')\n    }\n}\n\n//TODO 图表配置处理方法\nfunction handleConfigChange(config) {\n    console.log('Chart config changed:', config)\n    chartConfig.value = config\n}\n\nfunction handleGenerateChart(config) {\n    console.log('Generating chart with config:', config)\n    \n    if (!currentStructureFile.value || !currentStructureFile.value.parsedData) {\n        alert('Please select and analyze a data file first')\n        return\n    }\n    \n    // 根据配置生成ECharts图表\n    const newChartOption = generateEChartOption(config, currentStructureFile.value.parsedData)\n    \n    if (newChartOption) {\n        chartOption.value = null\n        nextTick(() => {\n            chartOption.value = newChartOption\n        })\n    }\n}\n\n//TODO 生成ECharts配置\nfunction generateEChartOption(config, data) {\n    const { xAxis, yAxis, series, title, colorScheme, animation } = config\n    \n    if (!data || data.length === 0) {\n        alert('数据为空，无法生成图表')\n        return null\n    }\n    \n    // 提取数据\n    const xData = data.map(row => row[xAxis.field])\n    const yData = data.map(row => parseFloat(row[yAxis.field]) || 0)\n    \n    // 基础配置\n    const option = {\n        title: {\n            text: title || `${yAxis.field} vs ${xAxis.field}`,\n            left: 'center',\n            textStyle: {\n                fontSize: 16,\n                fontWeight: 'bold'\n            }\n        },\n        tooltip: {\n            trigger: 'axis',\n            formatter: function(params) {\n                return `${params[0].axisValue}: ${params[0].value}`\n            }\n        },\n        legend: {\n            data: [yAxis.field],\n            top: 'bottom'\n        },\n        toolbox: {\n            show: true,\n            feature: {\n                dataView: { show: true, readOnly: false },\n                magicType: { show: true, type: ['line', 'bar'] },\n                restore: { show: true },\n                saveAsImage: { show: true }\n            }\n        },\n        xAxis: {\n            type: 'category',\n            data: xData,\n            axisLabel: {\n                interval: 0,\n                rotate: xData.length > 10 ? 45 : 0\n            }\n        },\n        yAxis: {\n            type: 'value',\n            name: yAxis.field\n        },\n        series: [{\n            name: yAxis.field,\n            type: selectedChartType.value.toLowerCase(), // 转换为小写供ECharts使用\n            data: yData,\n            animationDuration: animation ? 1500 : 0,\n            itemStyle: {\n                color: getColorByScheme(colorScheme)\n            }\n        }],\n        animation: animation,\n        animationDuration: animation ? 1500 : 0\n    }\n    \n    // 根据图表类型调整配置\n    if (selectedChartType.value === 'Pie' || selectedChartType.value === 'pie') {\n        option.series[0] = {\n            name: yAxis.field,\n            type: 'pie',\n            radius: '60%',\n            data: xData.map((name, index) => ({\n                name,\n                value: yData[index]\n            })),\n            emphasis: {\n                itemStyle: {\n                    shadowBlur: 10,\n                    shadowOffsetX: 0,\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n            }\n        }\n        delete option.xAxis\n        delete option.yAxis\n    }\n    \n    return option\n}\n\n// 根据配色方案获取颜色\nfunction getColorByScheme(scheme) {\n    const colorSchemes = {\n        default: '#5470c6',\n        blue: '#1890ff',\n        green: '#52c41a',\n        warm: '#fa8c16',\n        cool: '#13c2c2'\n    }\n    return colorSchemes[scheme] || colorSchemes.default\n}\n</script>\n\n<style scoped>\n.sideBar-btn {\nbackground: transparent;\nborder: none;\nfont-size: 1.1rem;\nfont-weight: 600;\ncursor: pointer;\ncolor: var(--text-color);\npadding: 6px 14px;\nborder-radius: 8px;\ntransition:\n    background-color 0.3s cubic-bezier(.4,2,.6,1),\n    transform 0.2s cubic-bezier(.4,2,.6,1),\n    box-shadow 0.2s;\ntext-align: center;\ntext-decoration: none;\n}\n.sideBar-btn:hover {\nbackground-color: rgba(136, 133, 133, 0.1);\ntransform: translateY(-2px) scale(1.02);\nbox-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 图表绘制区 */\n.main-content {\ndisplay: flex;\ngap: 32px;\nmargin: 40px 60px 0 220px;\nmin-height: 500px;\n}\n@media (max-width: 767px) {\n  .main-content {\n    margin: 20px 30px 0 80px;\n    gap: 16px;\n    min-height: auto;\n  }\n}\n.chart-workspace {\nflex: 1;\nmin-width: 0;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n}\n\n/* 图表缓存区 */\n.chart-history {\nwidth: 220px;\nbackground: var(--bg-color, #fff);\nborder-radius: 10px;\nbox-shadow: 0 0px 1px var(--text-color);\npadding: 16px;\nflex-shrink: 0;\n}\n.chart-history-item {\npadding: 8px 0;\ncursor: pointer;\nborder-bottom: 1px solid #747272;\ntransition: background 0.2s;\n}\n.chart-history-item:hover {\nbackground: rgba(136, 133, 133, 0.1);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}