{"ast":null,"code":"/* eslint-disable */\n\n// 引入主题视觉编码分发器\nimport { getVisualMapInRangeColor } from \"../utils/themeDispatcher\";\n\n// 矩形树图图生成器\nexport default function treemapOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  // 获取视觉编码色\n  let visualColors = getVisualMapInRangeColor(config.colorScheme);\n  let visualMap = {};\n  const valueRange = getValueRange(seriesData);\n  if (config.legendVisible === true) {\n    visualMap = config.visualMap || {\n      show: true,\n      type: 'continuous',\n      inRange: {\n        color: visualColors\n      },\n      min: valueRange.min,\n      max: valueRange.max,\n      dimension: 'value',\n      orient,\n      left: 'center',\n      top: config.legendPosition || 'bottom'\n    };\n  } else {\n    visualMap = {\n      show: false,\n      type: 'continuous',\n      min: valueRange.min,\n      max: valueRange.max,\n      dimension: 'value',\n      orient,\n      left: 'center',\n      top: config.legendPosition || 'bottom'\n    };\n  }\n  return {\n    title: {\n      text: config.title || 'Chart of Treemap',\n      subtext: config.subtext || '',\n      left: 'center',\n      top: 'top',\n      textStyle: {\n        fontSize: 16,\n        fontWeight: 'bold'\n      },\n      subtextStyle: {\n        fontSize: 12\n      }\n    },\n    toolbox: {\n      show: true,\n      feature: {\n        dataView: {\n          show: true,\n          readOnly: false\n        },\n        restore: {\n          show: true\n        },\n        saveAsImage: {\n          show: true\n        }\n      }\n    },\n    tooltip: {},\n    series: [{\n      type: 'treemap',\n      data: seriesData,\n      layoutAlgorithm: 'squarify',\n      visibleMin: config.visibleMin || 300,\n      // 最小可见面积\n      leafDepth: config.leafDepth || 2,\n      // 叶子节点的深度\n      label: {\n        show: true,\n        formatter: '{b}'\n      }\n    }],\n    ...customOption\n  };\n}","map":{"version":3,"names":["getVisualMapInRangeColor","treemapOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","visualColors","colorScheme","visualMap","valueRange","getValueRange","legendVisible","show","type","inRange","color","min","max","dimension","orient","left","top","legendPosition","title","text","subtext","textStyle","fontSize","fontWeight","subtextStyle","toolbox","feature","dataView","readOnly","restore","saveAsImage","tooltip","series","data","layoutAlgorithm","visibleMin","leafDepth","label","formatter"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/chartOptions/treemap.js"],"sourcesContent":["/* eslint-disable */\n\n// 引入主题视觉编码分发器\nimport { getVisualMapInRangeColor } from \"../utils/themeDispatcher\"\n\n// 矩形树图图生成器\nexport default function treemapOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    // 获取视觉编码色\n    let visualColors = getVisualMapInRangeColor(config.colorScheme);\n\n    let visualMap = {};\n    const valueRange = getValueRange(seriesData);\n    if (config.legendVisible === true) {\n        visualMap = config.visualMap || {\n            show: true,\n            type: 'continuous',\n            inRange: {\n                color: visualColors\n            },\n            min: valueRange.min,\n            max: valueRange.max,\n            dimension: 'value',\n            orient,\n            left: 'center',\n            top: config.legendPosition || 'bottom',\n        };\n    }\n    else {\n        visualMap = {\n            show: false,\n            type: 'continuous',\n            min: valueRange.min,\n            max: valueRange.max,\n            dimension: 'value',\n            orient,\n            left: 'center',\n            top: config.legendPosition || 'bottom',\n        };\n    }\n\n    return {\n        title: {\n            text: config.title || 'Chart of Treemap',\n            subtext: config.subtext || '',\n            left: 'center',\n            top: 'top',\n            textStyle: {\n                fontSize: 16,\n                fontWeight: 'bold',\n            },\n            subtextStyle: {\n                fontSize: 12,\n            },\n        },\n        toolbox: {\n            show: true,\n            feature: {\n                dataView: { show: true, readOnly: false },\n                restore: { show: true },\n                saveAsImage: { show: true },\n            }\n        },\n        tooltip: {},\n        series: [\n            {\n                type: 'treemap',\n                data: seriesData,\n                layoutAlgorithm: 'squarify',\n                visibleMin: config.visibleMin || 300, // 最小可见面积\n                leafDepth: config.leafDepth || 2, // 叶子节点的深度\n                label: {\n                    show: true,\n                    formatter: '{b}',\n                },\n            },\n        ],\n        ...customOption,\n    }\n}"],"mappings":"AAAA;;AAEA;AACA,SAASA,wBAAwB,QAAQ,0BAA0B;;AAEnE;AACA,eAAe,SAASC,aAAaA,CAACC,MAAM,EAAEC,WAAW,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,YAAY,GAAG,CAAC,CAAC,EAAE;EAC1H;EACA,IAAIC,YAAY,GAAGT,wBAAwB,CAACE,MAAM,CAACQ,WAAW,CAAC;EAE/D,IAAIC,SAAS,GAAG,CAAC,CAAC;EAClB,MAAMC,UAAU,GAAGC,aAAa,CAACN,UAAU,CAAC;EAC5C,IAAIL,MAAM,CAACY,aAAa,KAAK,IAAI,EAAE;IAC/BH,SAAS,GAAGT,MAAM,CAACS,SAAS,IAAI;MAC5BI,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE,YAAY;MAClBC,OAAO,EAAE;QACLC,KAAK,EAAET;MACX,CAAC;MACDU,GAAG,EAAEP,UAAU,CAACO,GAAG;MACnBC,GAAG,EAAER,UAAU,CAACQ,GAAG;MACnBC,SAAS,EAAE,OAAO;MAClBC,MAAM;MACNC,IAAI,EAAE,QAAQ;MACdC,GAAG,EAAEtB,MAAM,CAACuB,cAAc,IAAI;IAClC,CAAC;EACL,CAAC,MACI;IACDd,SAAS,GAAG;MACRI,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,YAAY;MAClBG,GAAG,EAAEP,UAAU,CAACO,GAAG;MACnBC,GAAG,EAAER,UAAU,CAACQ,GAAG;MACnBC,SAAS,EAAE,OAAO;MAClBC,MAAM;MACNC,IAAI,EAAE,QAAQ;MACdC,GAAG,EAAEtB,MAAM,CAACuB,cAAc,IAAI;IAClC,CAAC;EACL;EAEA,OAAO;IACHC,KAAK,EAAE;MACHC,IAAI,EAAEzB,MAAM,CAACwB,KAAK,IAAI,kBAAkB;MACxCE,OAAO,EAAE1B,MAAM,CAAC0B,OAAO,IAAI,EAAE;MAC7BL,IAAI,EAAE,QAAQ;MACdC,GAAG,EAAE,KAAK;MACVK,SAAS,EAAE;QACPC,QAAQ,EAAE,EAAE;QACZC,UAAU,EAAE;MAChB,CAAC;MACDC,YAAY,EAAE;QACVF,QAAQ,EAAE;MACd;IACJ,CAAC;IACDG,OAAO,EAAE;MACLlB,IAAI,EAAE,IAAI;MACVmB,OAAO,EAAE;QACLC,QAAQ,EAAE;UAAEpB,IAAI,EAAE,IAAI;UAAEqB,QAAQ,EAAE;QAAM,CAAC;QACzCC,OAAO,EAAE;UAAEtB,IAAI,EAAE;QAAK,CAAC;QACvBuB,WAAW,EAAE;UAAEvB,IAAI,EAAE;QAAK;MAC9B;IACJ,CAAC;IACDwB,OAAO,EAAE,CAAC,CAAC;IACXC,MAAM,EAAE,CACJ;MACIxB,IAAI,EAAE,SAAS;MACfyB,IAAI,EAAElC,UAAU;MAChBmC,eAAe,EAAE,UAAU;MAC3BC,UAAU,EAAEzC,MAAM,CAACyC,UAAU,IAAI,GAAG;MAAE;MACtCC,SAAS,EAAE1C,MAAM,CAAC0C,SAAS,IAAI,CAAC;MAAE;MAClCC,KAAK,EAAE;QACH9B,IAAI,EAAE,IAAI;QACV+B,SAAS,EAAE;MACf;IACJ,CAAC,CACJ;IACD,GAAGtC;EACP,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}