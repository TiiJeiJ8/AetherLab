{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { unref as _unref, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"panel-title\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = {\n  class: \"panel-controls\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"panel-content\"\n};\nconst _hoisted_7 = {\n  class: \"file-summary\"\n};\nconst _hoisted_8 = {\n  class: \"summary-item\"\n};\nconst _hoisted_9 = {\n  class: \"summary-value\"\n};\nconst _hoisted_10 = {\n  class: \"summary-item\"\n};\nconst _hoisted_11 = {\n  class: \"summary-value\"\n};\nconst _hoisted_12 = {\n  class: \"summary-item\"\n};\nconst _hoisted_13 = {\n  class: \"summary-value\"\n};\nconst _hoisted_14 = {\n  class: \"columns-container\"\n};\nconst _hoisted_15 = {\n  class: \"columns-header\"\n};\nconst _hoisted_16 = {\n  class: \"columns-count\"\n};\nconst _hoisted_17 = {\n  class: \"columns-list\"\n};\nconst _hoisted_18 = [\"onDragstart\"];\nconst _hoisted_19 = {\n  class: \"column-info\"\n};\nconst _hoisted_20 = {\n  class: \"column-header\"\n};\nconst _hoisted_21 = {\n  class: \"column-name\"\n};\nconst _hoisted_22 = {\n  class: \"column-details\"\n};\nconst _hoisted_23 = {\n  class: \"sample-data\"\n};\nconst _hoisted_24 = {\n  class: \"sample-value\"\n};\nconst _hoisted_25 = {\n  key: 0,\n  class: \"column-stats\"\n};\nconst _hoisted_26 = {\n  key: 0,\n  class: \"stat-item\"\n};\nconst _hoisted_27 = {\n  key: 1,\n  class: \"stat-item\"\n};\nconst _hoisted_28 = {\n  class: \"drag-handle\",\n  title: \"Drag to configure chart\"\n};\nconst _hoisted_29 = [\"innerHTML\"];\nimport { ref, computed, watch, onMounted, onUnmounted, nextTick } from 'vue';\nimport { getThemeIcon } from '@/assets/JS/icons.js';\n\n// Props\n\nexport default {\n  __name: 'FileStructurePanel',\n  props: {\n    fileInfo: {\n      type: Object,\n      required: true\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['close', 'minimize', 'column-drag'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    /* eslint-disable */\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 面板状态\n    const isVisible = ref(false);\n    const isMinimized = ref(false);\n    const isFocused = ref(true);\n    const isDragging = ref(false);\n    const draggedColumn = ref(null);\n\n    // 拖拽相关状态\n    const dragOffset = ref({\n      x: 0,\n      y: 0\n    });\n    const panelPosition = ref({\n      position: 'fixed',\n      top: '120px',\n      right: '20px',\n      width: '380px',\n      maxHeight: '70vh'\n    });\n\n    // DOM 引用\n    const panelRef = ref(null);\n\n    // 文件列结构数据\n    const columns = ref([]);\n\n    // 计算实际数据行数（排除标题行）\n    const dataRows = computed(() => {\n      if (!props.fileInfo || !props.fileInfo.data || !Array.isArray(props.fileInfo.data)) {\n        return 0;\n      }\n      return Math.max(0, props.fileInfo.data.length - 1); // 减去标题行\n    });\n\n    // 监听 visible 属性变化\n    watch(() => props.visible, newVal => {\n      isVisible.value = newVal;\n      if (newVal) {\n        isFocused.value = true;\n        isMinimized.value = false;\n        nextTick(() => {\n          analyzeFileStructure();\n        });\n      }\n    }, {\n      immediate: true\n    });\n\n    // 监听文件信息变化\n    watch(() => props.fileInfo, newFileInfo => {\n      if (newFileInfo && isVisible.value) {\n        analyzeFileStructure();\n      }\n    }, {\n      deep: true\n    });\n\n    // 分析文件结构\n    async function analyzeFileStructure() {\n      if (!props.fileInfo || !props.fileInfo.data) {\n        console.warn('No file data available for structure analysis');\n        return;\n      }\n      const data = props.fileInfo.data;\n      if (!Array.isArray(data) || data.length === 0) {\n        console.warn('Invalid data format for structure analysis');\n        return;\n      }\n\n      // 使用第一行作为列名（如果是表头）\n      const headers = props.fileInfo.headers || Object.keys(data[0]);\n\n      // 分析每列的数据类型和样本\n      const analyzedColumns = headers.map((header, index) => {\n        const columnData = data.slice(1).map(row => {\n          // 跳过第一行（标题行）\n          if (Array.isArray(row)) {\n            return row[index];\n          } else if (typeof row === 'object') {\n            return row[header];\n          }\n          return null;\n        }).filter(val => val !== null && val !== undefined && val !== '');\n\n        // 推断数据类型\n        const type = inferDataType(columnData);\n\n        // 获取样本数据（跳过标题行）\n        const sample = columnData.slice(0, 3).join(', ') || 'No data';\n\n        // 统计信息（总行数需要减去标题行）\n        const stats = calculateColumnStats(columnData, data.length - 1);\n        return {\n          name: header,\n          type: type,\n          sample: sample,\n          stats: stats,\n          index: index\n        };\n      });\n      columns.value = analyzedColumns;\n    }\n\n    // 推断数据类型\n    function inferDataType(columnData) {\n      if (columnData.length === 0) return 'unknown';\n      const sample = columnData.slice(0, Math.min(20, columnData.length)); // 取更多样本进行分析\n      const uniqueValues = [...new Set(sample)];\n      const uniqueCount = uniqueValues.length;\n\n      // 检查是否为明确的布尔值（true/false字符串）\n      const isTrueFalseBool = sample.every(val => {\n        const str = String(val).toLowerCase();\n        return str === 'true' || str === 'false' || val === true || val === false;\n      });\n      if (isTrueFalseBool && uniqueCount <= 2) {\n        return 'boolean';\n      }\n\n      // 检查是否为数字\n      const isNumeric = sample.every(val => !isNaN(val) && !isNaN(parseFloat(val)));\n      if (isNumeric) {\n        const isInteger = sample.every(val => Number.isInteger(parseFloat(val)));\n        if (isInteger) {\n          // 对于整数，需要智能判断是布尔值、类别值还是普通整数\n          if (uniqueCount === 2 && uniqueValues.every(val => val === 0 || val === 1 || val === '0' || val === '1')) {\n            // 只有两个唯一值且都是0/1，可能是布尔值\n            // 但需要考虑数据的语义上下文，这里倾向于认为是布尔值\n            return 'boolean';\n          } else if (uniqueCount <= 10 && uniqueCount < sample.length * 0.5) {\n            // 唯一值较少且明显少于样本数量的一半，可能是类别值\n            return 'category';\n          } else {\n            return 'integer';\n          }\n        } else {\n          return 'number';\n        }\n      }\n\n      // 检查是否为日期\n      const isDate = sample.some(val => !isNaN(Date.parse(val)));\n      if (isDate) return 'date';\n\n      // 检查是否为类别值（字符串类型的类别）\n      if (uniqueCount <= 10 && uniqueCount < sample.length * 0.5) {\n        return 'category';\n      }\n\n      // 默认为字符串\n      return 'string';\n    }\n\n    // 计算列统计信息\n    function calculateColumnStats(columnData, totalRows) {\n      const nonEmptyCount = columnData.length;\n      const nullCount = totalRows - nonEmptyCount;\n      const uniqueCount = new Set(columnData).size;\n      return {\n        nullCount,\n        uniqueCount,\n        fillRate: Math.round(nonEmptyCount / totalRows * 100)\n      };\n    }\n\n    // 获取列类型样式类\n    function getColumnTypeClass(type) {\n      const typeClasses = {\n        'string': 'type-string',\n        'number': 'type-number',\n        'integer': 'type-integer',\n        'date': 'type-date',\n        'boolean': 'type-boolean',\n        'unknown': 'type-unknown'\n      };\n      return typeClasses[type] || 'type-unknown';\n    }\n\n    // 格式化文件大小\n    function formatFileSize(bytes) {\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n\n    // 鼠标事件处理\n    function handleMouseEnter() {\n      isFocused.value = true;\n    }\n    function handleMouseLeave() {\n      if (!isDragging.value) {\n        isFocused.value = false;\n      }\n    }\n    function handleMouseDown() {\n      isFocused.value = true;\n    }\n\n    // 面板拖拽功能\n    function startDrag(event) {\n      isDragging.value = true;\n      isFocused.value = true;\n      const rect = panelRef.value.getBoundingClientRect();\n      dragOffset.value = {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n      };\n      document.addEventListener('mousemove', handlePanelDrag, {\n        passive: false\n      });\n      document.addEventListener('mouseup', stopDrag, {\n        passive: false\n      });\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    function handlePanelDrag(event) {\n      if (!isDragging.value) return;\n      requestAnimationFrame(() => {\n        const newX = event.clientX - dragOffset.value.x;\n        const newY = event.clientY - dragOffset.value.y;\n\n        // 确保面板不会拖拽到屏幕外\n        const maxX = window.innerWidth - 400;\n        const maxY = window.innerHeight - 300;\n        const clampedX = Math.max(0, Math.min(newX, maxX));\n        const clampedY = Math.max(0, Math.min(newY, maxY));\n        panelPosition.value = {\n          ...panelPosition.value,\n          top: `${clampedY}px`,\n          left: `${clampedX}px`,\n          right: 'auto'\n        };\n      });\n      event.preventDefault();\n    }\n    function stopDrag(event) {\n      isDragging.value = false;\n      document.removeEventListener('mousemove', handlePanelDrag);\n      document.removeEventListener('mouseup', stopDrag);\n      setTimeout(() => {\n        if (!isDragging.value) {\n          isFocused.value = false;\n        }\n      }, 150);\n      event.preventDefault();\n    }\n\n    // 列拖拽功能\n    function handleDragStart(column, index, event) {\n      draggedColumn.value = index;\n\n      // 设置拖拽数据\n      const dragData = {\n        type: 'column',\n        column: column,\n        source: 'file-structure'\n      };\n      event.dataTransfer.setData('application/json', JSON.stringify(dragData));\n      event.dataTransfer.effectAllowed = 'copy';\n\n      // 自定义拖拽图像\n      const dragImage = createDragImage(column);\n      event.dataTransfer.setDragImage(dragImage, 0, 0);\n      emit('column-drag', {\n        action: 'start',\n        column,\n        index\n      });\n    }\n    function handleDragEnd() {\n      draggedColumn.value = null;\n      emit('column-drag', {\n        action: 'end'\n      });\n    }\n\n    // 创建拖拽图像\n    function createDragImage(column) {\n      const dragElement = document.createElement('div');\n      dragElement.className = 'drag-preview';\n      dragElement.innerHTML = `\n    <div class=\"drag-preview-content\">\n      <span class=\"drag-column-name\">${column.name}</span>\n      <span class=\"drag-column-type\">${column.type}</span>\n    </div>\n  `;\n\n      // 添加样式\n      dragElement.style.cssText = `\n    position: absolute;\n    top: -1000px;\n    left: -1000px;\n    background: rgba(59, 130, 246, 0.9);\n    color: white;\n    padding: 8px 12px;\n    border-radius: 6px;\n    font-size: 12px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n    pointer-events: none;\n    z-index: 10000;\n  `;\n      document.body.appendChild(dragElement);\n\n      // 清理\n      setTimeout(() => {\n        document.body.removeChild(dragElement);\n      }, 100);\n      return dragElement;\n    }\n\n    // 面板控制\n    function minimize() {\n      isMinimized.value = !isMinimized.value;\n      emit('minimize', isMinimized.value);\n    }\n    function close() {\n      isVisible.value = false;\n      emit('close');\n    }\n\n    // 组件挂载时添加全局点击监听\n    onMounted(() => {\n      document.addEventListener('click', handleGlobalClick);\n    });\n    onUnmounted(() => {\n      document.removeEventListener('click', handleGlobalClick);\n      document.removeEventListener('mousemove', handlePanelDrag);\n      document.removeEventListener('mouseup', stopDrag);\n    });\n\n    // 全局点击处理\n    function handleGlobalClick(event) {\n      if (panelRef.value && !panelRef.value.contains(event.target)) {\n        isFocused.value = false;\n      }\n    }\n    return (_ctx, _cache) => {\n      return isVisible.value ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass([\"file-structure-panel\", {\n          'is-focused': isFocused.value,\n          'dragging': isDragging.value\n        }]),\n        style: _normalizeStyle(panelPosition.value),\n        onMouseenter: handleMouseEnter,\n        onMouseleave: handleMouseLeave,\n        onMousedown: handleMouseDown,\n        ref_key: \"panelRef\",\n        ref: panelRef\n      }, [_createElementVNode(\"div\", {\n        class: \"panel-header\",\n        onMousedown: _withModifiers(startDrag, [\"prevent\"])\n      }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"span\", {\n        class: \"panel-icon\",\n        innerHTML: _unref(getThemeIcon)('structure')\n      }, null, 8, _hoisted_2), _createElementVNode(\"span\", null, _toDisplayString(__props.fileInfo.name) + \" - Structure\", 1)]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n        class: \"control-btn minimize-btn\",\n        onClick: minimize,\n        title: \"Minimize\"\n      }, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('minimize')\n      }, null, 8, _hoisted_4)]), _createElementVNode(\"button\", {\n        class: \"control-btn close-btn\",\n        onClick: close,\n        title: \"Close\"\n      }, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('close')\n      }, null, 8, _hoisted_5)])])], 32), !isMinimized.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_cache[0] || (_cache[0] = _createElementVNode(\"span\", {\n        class: \"summary-label\"\n      }, \"Rows:\", -1)), _createElementVNode(\"span\", _hoisted_9, _toDisplayString(dataRows.value), 1)]), _createElementVNode(\"div\", _hoisted_10, [_cache[1] || (_cache[1] = _createElementVNode(\"span\", {\n        class: \"summary-label\"\n      }, \"Columns:\", -1)), _createElementVNode(\"span\", _hoisted_11, _toDisplayString(__props.fileInfo.columns || 0), 1)]), _createElementVNode(\"div\", _hoisted_12, [_cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n        class: \"summary-label\"\n      }, \"Size:\", -1)), _createElementVNode(\"span\", _hoisted_13, _toDisplayString(formatFileSize(__props.fileInfo.size)), 1)])]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_cache[3] || (_cache[3] = _createElementVNode(\"h4\", null, \"Data Columns\", -1)), _createElementVNode(\"span\", _hoisted_16, _toDisplayString(columns.value.length) + \" columns\", 1)]), _createElementVNode(\"div\", _hoisted_17, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(columns.value, (column, index) => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: index,\n          class: _normalizeClass([\"column-item\", {\n            'dragging': draggedColumn.value === index\n          }]),\n          draggable: \"true\",\n          onDragstart: $event => handleDragStart(column, index, $event),\n          onDragend: handleDragEnd\n        }, [_createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"span\", _hoisted_21, _toDisplayString(column.name), 1), _createElementVNode(\"span\", {\n          class: _normalizeClass([\"column-type\", getColumnTypeClass(column.type)])\n        }, _toDisplayString(column.type), 3)]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n          class: \"sample-label\"\n        }, \"Sample:\", -1)), _createElementVNode(\"span\", _hoisted_24, _toDisplayString(column.sample), 1)]), column.stats ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [column.stats.nullCount !== undefined ? (_openBlock(), _createElementBlock(\"span\", _hoisted_26, \" Nulls: \" + _toDisplayString(column.stats.nullCount), 1)) : _createCommentVNode(\"\", true), column.stats.uniqueCount !== undefined ? (_openBlock(), _createElementBlock(\"span\", _hoisted_27, \" Unique: \" + _toDisplayString(column.stats.uniqueCount), 1)) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"span\", {\n          innerHTML: _unref(getThemeIcon)('drag')\n        }, null, 8, _hoisted_29)])], 42, _hoisted_18);\n      }), 128))])])])) : _createCommentVNode(\"\", true)], 38)) : _createCommentVNode(\"\", true);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","onUnmounted","nextTick","getThemeIcon","props","__props","emit","__emit","isVisible","isMinimized","isFocused","isDragging","draggedColumn","dragOffset","x","y","panelPosition","position","top","right","width","maxHeight","panelRef","columns","dataRows","fileInfo","data","Array","isArray","Math","max","length","visible","newVal","value","analyzeFileStructure","immediate","newFileInfo","deep","console","warn","headers","Object","keys","analyzedColumns","map","header","index","columnData","slice","row","filter","val","undefined","type","inferDataType","sample","join","stats","calculateColumnStats","name","min","uniqueValues","Set","uniqueCount","isTrueFalseBool","every","str","String","toLowerCase","isNumeric","isNaN","parseFloat","isInteger","Number","isDate","some","Date","parse","totalRows","nonEmptyCount","nullCount","size","fillRate","round","getColumnTypeClass","typeClasses","formatFileSize","bytes","k","sizes","i","floor","log","pow","toFixed","handleMouseEnter","handleMouseLeave","handleMouseDown","startDrag","event","rect","getBoundingClientRect","clientX","left","clientY","document","addEventListener","handlePanelDrag","passive","stopDrag","preventDefault","stopPropagation","requestAnimationFrame","newX","newY","maxX","window","innerWidth","maxY","innerHeight","clampedX","clampedY","removeEventListener","setTimeout","handleDragStart","column","dragData","source","dataTransfer","setData","JSON","stringify","effectAllowed","dragImage","createDragImage","setDragImage","action","handleDragEnd","dragElement","createElement","className","innerHTML","style","cssText","body","appendChild","removeChild","minimize","close","handleGlobalClick","contains","target"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/FileStructurePanel.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"isVisible\"\n    class=\"file-structure-panel\"\n    :class=\"{\n      'is-focused': isFocused,\n      'dragging': isDragging\n    }\"\n    :style=\"panelPosition\"\n    @mouseenter=\"handleMouseEnter\"\n    @mouseleave=\"handleMouseLeave\"\n    @mousedown=\"handleMouseDown\"\n    ref=\"panelRef\">\n    <!-- 面板头部 -->\n    <div\n      class=\"panel-header\"\n      @mousedown.prevent=\"startDrag\">\n      <div class=\"panel-title\">\n        <span class=\"panel-icon\" v-html=\"getThemeIcon('structure')\"></span>\n        <span>{{ fileInfo.name }} - Structure</span>\n      </div>\n      <div class=\"panel-controls\">\n        <button class=\"control-btn minimize-btn\" @click=\"minimize\" title=\"Minimize\">\n          <span v-html=\"getThemeIcon('minimize')\"></span>\n        </button>\n        <button class=\"control-btn close-btn\" @click=\"close\" title=\"Close\">\n          <span v-html=\"getThemeIcon('close')\"></span>\n        </button>\n      </div>\n    </div>\n\n    <!-- 面板内容 -->\n    <div class=\"panel-content\" v-if=\"!isMinimized\">\n      <!-- 文件信息摘要 -->\n      <div class=\"file-summary\">\n        <div class=\"summary-item\">\n          <span class=\"summary-label\">Rows:</span>\n          <span class=\"summary-value\">{{ dataRows }}</span>\n        </div>\n        <div class=\"summary-item\">\n          <span class=\"summary-label\">Columns:</span>\n          <span class=\"summary-value\">{{ fileInfo.columns || 0 }}</span>\n        </div>\n        <div class=\"summary-item\">\n          <span class=\"summary-label\">Size:</span>\n          <span class=\"summary-value\">{{ formatFileSize(fileInfo.size) }}</span>\n        </div>\n      </div>\n\n      <!-- 列结构列表 -->\n      <div class=\"columns-container\">\n        <div class=\"columns-header\">\n          <h4>Data Columns</h4>\n          <span class=\"columns-count\">{{ columns.length }} columns</span>\n        </div>\n        <div class=\"columns-list\">\n          <div\n            v-for=\"(column, index) in columns\"\n            :key=\"index\"\n            class=\"column-item\"\n            :class=\"{ 'dragging': draggedColumn === index }\"\n            draggable=\"true\"\n            @dragstart=\"handleDragStart(column, index, $event)\"\n            @dragend=\"handleDragEnd\">\n            <div class=\"column-info\">\n              <div class=\"column-header\">\n                <span class=\"column-name\">{{ column.name }}</span>\n                <span class=\"column-type\" :class=\"getColumnTypeClass(column.type)\">\n                  {{ column.type }}\n                </span>\n              </div>\n              <div class=\"column-details\">\n                <div class=\"sample-data\">\n                  <span class=\"sample-label\">Sample:</span>\n                  <span class=\"sample-value\">{{ column.sample }}</span>\n                </div>\n                <div class=\"column-stats\" v-if=\"column.stats\">\n                  <span class=\"stat-item\" v-if=\"column.stats.nullCount !== undefined\">\n                    Nulls: {{ column.stats.nullCount }}\n                  </span>\n                  <span class=\"stat-item\" v-if=\"column.stats.uniqueCount !== undefined\">\n                    Unique: {{ column.stats.uniqueCount }}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div class=\"drag-handle\" title=\"Drag to configure chart\">\n              <span v-html=\"getThemeIcon('drag')\"></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch, onMounted, onUnmounted, nextTick } from 'vue'\nimport { getThemeIcon } from '@/assets/JS/icons.js'\n\n// Props\nconst props = defineProps({\n  fileInfo: {\n    type: Object,\n    required: true\n  },\n  visible: {\n    type: Boolean,\n    default: false\n  }\n})\n\n// Emits\nconst emit = defineEmits(['close', 'minimize', 'column-drag'])\n\n// 面板状态\nconst isVisible = ref(false)\nconst isMinimized = ref(false)\nconst isFocused = ref(true)\nconst isDragging = ref(false)\nconst draggedColumn = ref(null)\n\n// 拖拽相关状态\nconst dragOffset = ref({ x: 0, y: 0 })\nconst panelPosition = ref({\n  position: 'fixed',\n  top: '120px',\n  right: '20px',\n  width: '380px',\n  maxHeight: '70vh'\n})\n\n// DOM 引用\nconst panelRef = ref(null)\n\n// 文件列结构数据\nconst columns = ref([])\n\n// 计算实际数据行数（排除标题行）\nconst dataRows = computed(() => {\n  if (!props.fileInfo || !props.fileInfo.data || !Array.isArray(props.fileInfo.data)) {\n    return 0\n  }\n  return Math.max(0, props.fileInfo.data.length - 1) // 减去标题行\n})\n\n// 监听 visible 属性变化\nwatch(() => props.visible, (newVal) => {\n  isVisible.value = newVal\n  if (newVal) {\n    isFocused.value = true\n    isMinimized.value = false\n    nextTick(() => {\n      analyzeFileStructure()\n    })\n  }\n}, { immediate: true })\n\n// 监听文件信息变化\nwatch(() => props.fileInfo, (newFileInfo) => {\n  if (newFileInfo && isVisible.value) {\n    analyzeFileStructure()\n  }\n}, { deep: true })\n\n// 分析文件结构\nasync function analyzeFileStructure() {\n  if (!props.fileInfo || !props.fileInfo.data) {\n    console.warn('No file data available for structure analysis')\n    return\n  }\n\n  const data = props.fileInfo.data\n  if (!Array.isArray(data) || data.length === 0) {\n    console.warn('Invalid data format for structure analysis')\n    return\n  }\n\n  // 使用第一行作为列名（如果是表头）\n  const headers = props.fileInfo.headers || Object.keys(data[0])\n  \n  // 分析每列的数据类型和样本\n  const analyzedColumns = headers.map((header, index) => {\n    const columnData = data.slice(1).map(row => { // 跳过第一行（标题行）\n      if (Array.isArray(row)) {\n        return row[index]\n      } else if (typeof row === 'object') {\n        return row[header]\n      }\n      return null\n    }).filter(val => val !== null && val !== undefined && val !== '')\n\n    // 推断数据类型\n    const type = inferDataType(columnData)\n    \n    // 获取样本数据（跳过标题行）\n    const sample = columnData.slice(0, 3).join(', ') || 'No data'\n    \n    // 统计信息（总行数需要减去标题行）\n    const stats = calculateColumnStats(columnData, data.length - 1)\n\n    return {\n      name: header,\n      type: type,\n      sample: sample,\n      stats: stats,\n      index: index\n    }\n  })\n\n  columns.value = analyzedColumns\n}\n\n// 推断数据类型\nfunction inferDataType(columnData) {\n  if (columnData.length === 0) return 'unknown'\n  \n  const sample = columnData.slice(0, Math.min(20, columnData.length)) // 取更多样本进行分析\n  const uniqueValues = [...new Set(sample)]\n  const uniqueCount = uniqueValues.length\n  \n  // 检查是否为明确的布尔值（true/false字符串）\n  const isTrueFalseBool = sample.every(val => {\n    const str = String(val).toLowerCase()\n    return str === 'true' || str === 'false' || val === true || val === false\n  })\n  \n  if (isTrueFalseBool && uniqueCount <= 2) {\n    return 'boolean'\n  }\n  \n  // 检查是否为数字\n  const isNumeric = sample.every(val => !isNaN(val) && !isNaN(parseFloat(val)))\n  \n  if (isNumeric) {\n    const isInteger = sample.every(val => Number.isInteger(parseFloat(val)))\n    \n    if (isInteger) {\n      // 对于整数，需要智能判断是布尔值、类别值还是普通整数\n      if (uniqueCount === 2 && uniqueValues.every(val => val === 0 || val === 1 || val === '0' || val === '1')) {\n        // 只有两个唯一值且都是0/1，可能是布尔值\n        // 但需要考虑数据的语义上下文，这里倾向于认为是布尔值\n        return 'boolean'\n      } else if (uniqueCount <= 10 && uniqueCount < sample.length * 0.5) {\n        // 唯一值较少且明显少于样本数量的一半，可能是类别值\n        return 'category'\n      } else {\n        return 'integer'\n      }\n    } else {\n      return 'number'\n    }\n  }\n  \n  // 检查是否为日期\n  const isDate = sample.some(val => !isNaN(Date.parse(val)))\n  if (isDate) return 'date'\n  \n  // 检查是否为类别值（字符串类型的类别）\n  if (uniqueCount <= 10 && uniqueCount < sample.length * 0.5) {\n    return 'category'\n  }\n  \n  // 默认为字符串\n  return 'string'\n}\n\n// 计算列统计信息\nfunction calculateColumnStats(columnData, totalRows) {\n  const nonEmptyCount = columnData.length\n  const nullCount = totalRows - nonEmptyCount\n  const uniqueCount = new Set(columnData).size\n  \n  return {\n    nullCount,\n    uniqueCount,\n    fillRate: Math.round((nonEmptyCount / totalRows) * 100)\n  }\n}\n\n// 获取列类型样式类\nfunction getColumnTypeClass(type) {\n  const typeClasses = {\n    'string': 'type-string',\n    'number': 'type-number',\n    'integer': 'type-integer',\n    'date': 'type-date',\n    'boolean': 'type-boolean',\n    'unknown': 'type-unknown'\n  }\n  return typeClasses[type] || 'type-unknown'\n}\n\n// 格式化文件大小\nfunction formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes'\n  const k = 1024\n  const sizes = ['Bytes', 'KB', 'MB', 'GB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\n// 鼠标事件处理\nfunction handleMouseEnter() {\n  isFocused.value = true\n}\n\nfunction handleMouseLeave() {\n  if (!isDragging.value) {\n    isFocused.value = false\n  }\n}\n\nfunction handleMouseDown() {\n  isFocused.value = true\n}\n\n// 面板拖拽功能\nfunction startDrag(event) {\n  isDragging.value = true\n  isFocused.value = true\n  \n  const rect = panelRef.value.getBoundingClientRect()\n  dragOffset.value = {\n    x: event.clientX - rect.left,\n    y: event.clientY - rect.top\n  }\n  \n  document.addEventListener('mousemove', handlePanelDrag, { passive: false })\n  document.addEventListener('mouseup', stopDrag, { passive: false })\n  \n  event.preventDefault()\n  event.stopPropagation()\n}\n\nfunction handlePanelDrag(event) {\n  if (!isDragging.value) return\n  \n  requestAnimationFrame(() => {\n    const newX = event.clientX - dragOffset.value.x\n    const newY = event.clientY - dragOffset.value.y\n    \n    // 确保面板不会拖拽到屏幕外\n    const maxX = window.innerWidth - 400\n    const maxY = window.innerHeight - 300\n    \n    const clampedX = Math.max(0, Math.min(newX, maxX))\n    const clampedY = Math.max(0, Math.min(newY, maxY))\n    \n    panelPosition.value = {\n      ...panelPosition.value,\n      top: `${clampedY}px`,\n      left: `${clampedX}px`,\n      right: 'auto'\n    }\n  })\n  \n  event.preventDefault()\n}\n\nfunction stopDrag(event) {\n  isDragging.value = false\n  \n  document.removeEventListener('mousemove', handlePanelDrag)\n  document.removeEventListener('mouseup', stopDrag)\n  \n  setTimeout(() => {\n    if (!isDragging.value) {\n      isFocused.value = false\n    }\n  }, 150)\n  \n  event.preventDefault()\n}\n\n// 列拖拽功能\nfunction handleDragStart(column, index, event) {\n  draggedColumn.value = index\n  \n  // 设置拖拽数据\n  const dragData = {\n    type: 'column',\n    column: column,\n    source: 'file-structure'\n  }\n  \n  event.dataTransfer.setData('application/json', JSON.stringify(dragData))\n  event.dataTransfer.effectAllowed = 'copy'\n  \n  // 自定义拖拽图像\n  const dragImage = createDragImage(column)\n  event.dataTransfer.setDragImage(dragImage, 0, 0)\n  \n  emit('column-drag', { action: 'start', column, index })\n}\n\nfunction handleDragEnd() {\n  draggedColumn.value = null\n  emit('column-drag', { action: 'end' })\n}\n\n// 创建拖拽图像\nfunction createDragImage(column) {\n  const dragElement = document.createElement('div')\n  dragElement.className = 'drag-preview'\n  dragElement.innerHTML = `\n    <div class=\"drag-preview-content\">\n      <span class=\"drag-column-name\">${column.name}</span>\n      <span class=\"drag-column-type\">${column.type}</span>\n    </div>\n  `\n  \n  // 添加样式\n  dragElement.style.cssText = `\n    position: absolute;\n    top: -1000px;\n    left: -1000px;\n    background: rgba(59, 130, 246, 0.9);\n    color: white;\n    padding: 8px 12px;\n    border-radius: 6px;\n    font-size: 12px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n    pointer-events: none;\n    z-index: 10000;\n  `\n  \n  document.body.appendChild(dragElement)\n  \n  // 清理\n  setTimeout(() => {\n    document.body.removeChild(dragElement)\n  }, 100)\n  \n  return dragElement\n}\n\n// 面板控制\nfunction minimize() {\n  isMinimized.value = !isMinimized.value\n  emit('minimize', isMinimized.value)\n}\n\nfunction close() {\n  isVisible.value = false\n  emit('close')\n}\n\n// 组件挂载时添加全局点击监听\nonMounted(() => {\n  document.addEventListener('click', handleGlobalClick)\n})\n\nonUnmounted(() => {\n  document.removeEventListener('click', handleGlobalClick)\n  document.removeEventListener('mousemove', handlePanelDrag)\n  document.removeEventListener('mouseup', stopDrag)\n})\n\n// 全局点击处理\nfunction handleGlobalClick(event) {\n  if (panelRef.value && !panelRef.value.contains(event.target)) {\n    isFocused.value = false\n  }\n}\n</script>\n\n<style scoped>\n.file-structure-panel {\n  position: fixed;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(20px);\n  border-radius: 12px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  z-index: 10001;\n  overflow: hidden;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  user-select: none;\n  will-change: transform, opacity;\n}\n\n.file-structure-panel.is-focused {\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.18);\n  transform: translateY(-2px);\n}\n\n.file-structure-panel:not(.is-focused) {\n  opacity: 0.85;\n}\n\n.file-structure-panel.dragging {\n  z-index: 10002;\n  transform: rotate(1deg) scale(1.02);\n  box-shadow: 0 16px 48px rgba(0, 0, 0, 0.25);\n  transition: none !important;\n}\n\n/* 暗黑模式适配 */\n[data-theme=\"dark\"] .file-structure-panel {\n  background: rgba(31, 41, 55, 0.95);\n  border: 1px solid rgba(55, 65, 81, 0.3);\n}\n\n/* 面板头部 */\n.panel-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 16px;\n  background: linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(139, 92, 246, 0.1) 100%);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n  cursor: move;\n  transition: background 0.2s ease;\n}\n\n.panel-header:hover {\n  background: linear-gradient(135deg, rgba(59, 130, 246, 0.15) 0%, rgba(139, 92, 246, 0.15) 100%);\n}\n\n.panel-header:active {\n  cursor: grabbing;\n}\n\n[data-theme=\"dark\"] .panel-header {\n  background: linear-gradient(135deg, rgba(59, 130, 246, 0.2) 0%, rgba(139, 92, 246, 0.2) 100%);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.06);\n}\n\n.panel-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n  font-weight: 600;\n  color: var(--text-color);\n  pointer-events: none;\n}\n\n.panel-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 18px;\n  height: 18px;\n}\n\n.panel-icon svg {\n  width: 16px;\n  height: 16px;\n}\n\n.panel-controls {\n  display: flex;\n  gap: 4px;\n}\n\n.control-btn {\n  background: none;\n  border: none;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n  color: var(--text-secondary);\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.control-btn:hover {\n  background: rgba(0, 0, 0, 0.05);\n  color: var(--text-color);\n}\n\n.close-btn:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: #ef4444;\n}\n\n[data-theme=\"dark\"] .control-btn:hover {\n  background: rgba(255, 255, 255, 0.05);\n}\n\n[data-theme=\"dark\"] .close-btn:hover {\n  background: rgba(239, 68, 68, 0.2);\n  color: #f87171;\n}\n\n.control-btn svg {\n  width: 14px;\n  height: 14px;\n}\n\n/* 面板内容 */\n.panel-content {\n  padding: 16px;\n  max-height: calc(70vh - 60px);\n  overflow-y: auto;\n}\n\n/* 文件摘要 */\n.file-summary {\n  display: flex;\n  gap: 16px;\n  margin-bottom: 16px;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.02);\n  border-radius: 8px;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n[data-theme=\"dark\"] .file-summary {\n  background: rgba(255, 255, 255, 0.02);\n  border: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n.summary-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2px;\n}\n\n.summary-label {\n  font-size: 11px;\n  color: var(--text-secondary);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.summary-value {\n  font-size: 14px;\n  font-weight: 600;\n  color: var(--text-color);\n}\n\n/* 列容器 */\n.columns-container {\n  flex: 1;\n}\n\n.columns-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n}\n\n[data-theme=\"dark\"] .columns-header {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n}\n\n.columns-header h4 {\n  margin: 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: var(--text-color);\n}\n\n.columns-count {\n  font-size: 12px;\n  color: var(--text-secondary);\n  background: rgba(59, 130, 246, 0.1);\n  padding: 2px 6px;\n  border-radius: 4px;\n}\n\n/* 列列表 */\n.columns-list {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.column-item {\n  display: flex;\n  align-items: center;\n  padding: 12px;\n  background: rgba(255, 255, 255, 0.6);\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 8px;\n  cursor: grab;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n}\n\n.column-item:hover {\n  background: rgba(255, 255, 255, 0.8);\n  border-color: rgba(59, 130, 246, 0.3);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n}\n\n.column-item:active,\n.column-item.dragging {\n  cursor: grabbing;\n  transform: scale(1.02);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);\n  background: rgba(59, 130, 246, 0.1);\n  border-color: rgba(59, 130, 246, 0.4);\n}\n\n[data-theme=\"dark\"] .column-item {\n  background: rgba(55, 65, 81, 0.6);\n  border: 1px solid rgba(255, 255, 255, 0.06);\n}\n\n[data-theme=\"dark\"] .column-item:hover {\n  background: rgba(55, 65, 81, 0.8);\n  border-color: rgba(59, 130, 246, 0.4);\n}\n\n[data-theme=\"dark\"] .column-item:active,\n[data-theme=\"dark\"] .column-item.dragging {\n  background: rgba(59, 130, 246, 0.2);\n  border-color: rgba(59, 130, 246, 0.5);\n}\n\n.column-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.column-header {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 6px;\n}\n\n.column-name {\n  font-size: 13px;\n  font-weight: 600;\n  color: var(--text-color);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 200px;\n}\n\n.column-type {\n  font-size: 10px;\n  font-weight: 500;\n  padding: 2px 6px;\n  border-radius: 4px;\n  text-transform: uppercase;\n  letter-spacing: 0.3px;\n}\n\n/* 列类型样式 */\n.type-string {\n  background: rgba(34, 197, 94, 0.15);\n  color: #059669;\n}\n\n.type-number,\n.type-integer {\n  background: rgba(59, 130, 246, 0.15);\n  color: #1d4ed8;\n}\n\n.type-date {\n  background: rgba(245, 158, 11, 0.15);\n  color: #d97706;\n}\n\n.type-boolean {\n  background: rgba(139, 92, 246, 0.15);\n  color: #7c3aed;\n}\n\n.type-unknown {\n  background: rgba(107, 114, 128, 0.15);\n  color: #4b5563;\n}\n\n[data-theme=\"dark\"] .type-string {\n  background: rgba(34, 197, 94, 0.25);\n  color: #22c55e;\n}\n\n[data-theme=\"dark\"] .type-number,\n[data-theme=\"dark\"] .type-integer {\n  background: rgba(59, 130, 246, 0.25);\n  color: #60a5fa;\n}\n\n[data-theme=\"dark\"] .type-date {\n  background: rgba(245, 158, 11, 0.25);\n  color: #fbbf24;\n}\n\n[data-theme=\"dark\"] .type-boolean {\n  background: rgba(139, 92, 246, 0.25);\n  color: #a78bfa;\n}\n\n[data-theme=\"dark\"] .type-unknown {\n  background: rgba(107, 114, 128, 0.25);\n  color: #9ca3af;\n}\n\n.column-details {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.sample-data {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.sample-label {\n  font-size: 10px;\n  color: var(--text-secondary);\n  min-width: 45px;\n}\n\n.sample-value {\n  font-size: 11px;\n  color: var(--text-color);\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  background: rgba(0, 0, 0, 0.05);\n  padding: 2px 4px;\n  border-radius: 3px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 180px;\n}\n\n[data-theme=\"dark\"] .sample-value {\n  background: rgba(255, 255, 255, 0.05);\n}\n\n.column-stats {\n  display: flex;\n  gap: 8px;\n}\n\n.stat-item {\n  font-size: 10px;\n  color: var(--text-secondary);\n  background: rgba(0, 0, 0, 0.03);\n  padding: 1px 4px;\n  border-radius: 3px;\n}\n\n[data-theme=\"dark\"] .stat-item {\n  background: rgba(255, 255, 255, 0.03);\n}\n\n/* 拖拽手柄 */\n.drag-handle {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  color: var(--text-secondary);\n  transition: all 0.2s ease;\n  opacity: 0.5;\n}\n\n.column-item:hover .drag-handle {\n  opacity: 1;\n  color: #3b82f6;\n}\n\n.drag-handle svg {\n  width: 16px;\n  height: 16px;\n}\n\n/* 拖拽预览样式 */\n.drag-preview {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n}\n\n.drag-preview-content {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.drag-column-name {\n  font-weight: 600;\n}\n\n.drag-column-type {\n  font-size: 10px;\n  opacity: 0.8;\n  text-transform: uppercase;\n}\n\n/* 滚动条样式 */\n.panel-content::-webkit-scrollbar {\n  width: 6px;\n}\n\n.panel-content::-webkit-scrollbar-track {\n  background: rgba(0, 0, 0, 0.05);\n  border-radius: 3px;\n}\n\n.panel-content::-webkit-scrollbar-thumb {\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 3px;\n}\n\n.panel-content::-webkit-scrollbar-thumb:hover {\n  background: rgba(0, 0, 0, 0.3);\n}\n\n[data-theme=\"dark\"] .panel-content::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.05);\n}\n\n[data-theme=\"dark\"] .panel-content::-webkit-scrollbar-thumb {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n[data-theme=\"dark\"] .panel-content::-webkit-scrollbar-thumb:hover {\n  background: rgba(255, 255, 255, 0.3);\n}\n\n/* 响应式适配 */\n@media (max-width: 768px) {\n  .file-structure-panel {\n    width: calc(100vw - 40px) !important;\n    max-width: 380px;\n    left: 20px !important;\n    right: 20px !important;\n  }\n  \n  .panel-content {\n    max-height: 50vh;\n  }\n  \n  .file-summary {\n    flex-wrap: wrap;\n    gap: 8px;\n  }\n  \n  .column-name {\n    max-width: 120px;\n  }\n  \n  .sample-value {\n    max-width: 100px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}