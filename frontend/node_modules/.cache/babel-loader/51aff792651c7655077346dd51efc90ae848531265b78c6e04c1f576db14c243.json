{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-type-panel\"\n};\nconst _hoisted_2 = [\"innerHTML\", \"onClick\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.types, type => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: type,\n      class: \"sideBar-btn\",\n      innerHTML: _ctx.renderButton(type),\n      onClick: $event => _ctx.handleClick(type)\n    }, null, 8 /* PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","_ctx","types","type","key","innerHTML","renderButton","onClick","$event","handleClick","_hoisted_2"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\newArchitecture\\frontend_vue_design\\src\\components\\ChartIcons.vue"],"sourcesContent":["<template>\n<div class=\"chart-type-panel\">\n    <button\n    v-for=\"type in types\"\n    :key=\"type\"\n    class=\"sideBar-btn\"\n    v-html=\"renderButton(type)\"\n    @click=\"handleClick(type)\"\n    ></button>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { chartTypes, chartIcons } from '../assets/JS/chartIcons.js'\nimport { defineProps, defineEmits, watch } from 'vue'\n\nconst props = defineProps({\n    types: {\n        type: Array,\n        default: () => chartTypes\n    },\n\n    modelValue: {\n        type: String,\n        default: ''\n    }\n})\n\nconst emit = defineEmits(['select', 'update:modelValue'])\n\nconst selectedType = ref(props.modelValue)\n\nfunction renderButton(type) {\n    const icon = chartIcons[type] || ''\n    return `${icon}<span class=\"label\">${type}</span>`\n}\n\nfunction handleClick(type) {\n    selectedType.value = type\n    emit('select', type)\n    emit('update:modelValue', type)\n}\n\nwatch() => props.modelValue\n</script>\n\n<style scoped>\n.chart-type-panel {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n.sideBar-btn {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    background: transparent;\n    border: none;\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    color: var(--text-color);\n    padding: 6px 14px;\n    border-radius: 8px;\n    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s;\n}\n.sideBar-btn:hover {\n    background-color: rgba(136, 133, 133, 0.1);\n    transform: translateY(-2px) scale(1.02);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n.sideBar-btn svg {\n    fill: currentColor;\n}\n.label {\n    white-space: nowrap;\n}\n</style>\n\n<style>\n.chart-icon-svg {\n    width: 1.6em;\n    height: 1.6em;\n    min-width: 24px;\n    min-height: 24px;\n    max-width: 32px;\n    max-height: 32px;\n    color: var(--text-color);\n    fill: currentColor;\n    vertical-align: middle;\n    display: inline-block;\n}\n</style>\n"],"mappings":";;EACKA,KAAK,EAAC;AAAkB;mBAD7B;;uBACAC,mBAAA,CAQM,OARNC,UAQM,I,kBAPFD,mBAAA,CAMUE,SAAA,QARdC,WAAA,CAGmBC,IAAA,CAAAC,KAAK,EAAbC,IAAI;yBADXN,mBAAA,CAMU;MAJTO,GAAG,EAAED,IAAI;MACVP,KAAK,EAAC,aAAa;MACnBS,SAA2B,EAAnBJ,IAAA,CAAAK,YAAY,CAACH,IAAI;MACxBI,OAAK,EAAAC,MAAA,IAAEP,IAAA,CAAAQ,WAAW,CAACN,IAAI;4BAP5BO,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}