{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/* eslint-disable */\n\n// 生成ECharts配置，支持多文件数据查找和主键/行号对齐\nexport function generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData) {\n  const {\n    yAxis,\n    title,\n    colorScheme,\n    animation\n  } = config;\n  // 饼图特殊处理：优先用 seriesData\n  if (selectedChartType.value === 'Pie' || selectedChartType.value === 'pie') {\n    const pieSeries = Array.isArray(seriesData) && seriesData.length > 0 ? seriesData : xData.map((name, i) => ({\n      name,\n      value: yDataArr[0][i]\n    }));\n    const option = {\n      title: {\n        text: title || '',\n        left: 'center',\n        textStyle: {\n          fontSize: 16,\n          fontWeight: 'bold'\n        }\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        top: 'bottom'\n      },\n      series: [{\n        name: title || '',\n        type: 'pie',\n        radius: '60%',\n        data: pieSeries,\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        },\n        animation: animation,\n        animationDuration: animation ? 1500 : 0\n      }]\n    };\n    // 调试输出\n    console.log('[generateEChartOption] option:', option);\n    return option;\n  }\n  // series配置\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  const seriesArr = yArr.map((y, idx) => ({\n    name: y.field,\n    type: selectedChartType.value.toLowerCase(),\n    data: yDataArr[idx],\n    animationDuration: animation ? 1500 : 0,\n    itemStyle: {\n      color: getColorByScheme(colorScheme)\n    }\n  }));\n  // 基础option\n  const option = {\n    title: {\n      text: title || `${yArr.map(y => y.field).join(',')} vs ${config.xAxis.field}`,\n      left: 'center',\n      textStyle: {\n        fontSize: 16,\n        fontWeight: 'bold'\n      }\n    },\n    tooltip: {\n      trigger: 'axis'\n    },\n    legend: {\n      data: yArr.map(y => y.field),\n      top: 'bottom'\n    },\n    toolbox: {\n      show: true,\n      feature: {\n        dataView: {\n          show: true,\n          readOnly: false\n        },\n        magicType: {\n          show: true,\n          type: ['line', 'bar']\n        },\n        restore: {\n          show: true\n        },\n        saveAsImage: {\n          show: true\n        }\n      }\n    },\n    xAxis: {\n      type: 'category',\n      data: xData,\n      axisLabel: {\n        interval: 0,\n        rotate: xData.length > 10 ? 45 : 0\n      }\n    },\n    yAxis: {\n      type: 'value',\n      name: yArr.map(y => y.field).join(',')\n    },\n    series: seriesArr,\n    animation: animation,\n    animationDuration: animation ? 1500 : 0\n  };\n  // 饼图特殊处理\n  if (selectedChartType.value === 'Pie' || selectedChartType.value === 'pie') {\n    option.series = [{\n      name: yArr.map(y => y.field).join(','),\n      type: 'pie',\n      radius: '60%',\n      data: xData.map((name, i) => ({\n        name,\n        value: yDataArr[0][i]\n      })),\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }];\n    delete option.xAxis;\n    delete option.yAxis;\n  }\n  // 调试输出\n  console.log('[generateEChartOption] option:', option);\n  return option;\n}\n\n// 根据配色方案获取颜色\nexport function getColorByScheme(scheme) {\n  const colorSchemes = {\n    default: '#5470c6',\n    blue: '#1890ff',\n    green: '#52c41a',\n    warm: '#fa8c16',\n    cool: '#13c2c2'\n  };\n  return colorSchemes[scheme] || colorSchemes.default;\n}","map":{"version":3,"names":["generateEChartOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","yAxis","title","colorScheme","animation","value","pieSeries","Array","isArray","length","map","name","i","option","text","left","textStyle","fontSize","fontWeight","tooltip","trigger","legend","top","series","type","radius","data","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","animationDuration","console","log","yArr","seriesArr","y","idx","field","toLowerCase","color","getColorByScheme","join","xAxis","toolbox","show","feature","dataView","readOnly","magicType","restore","saveAsImage","axisLabel","interval","rotate","scheme","colorSchemes","default","blue","green","warm","cool"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/utils/echartOptionUtils.js"],"sourcesContent":["/* eslint-disable */\n\n// 生成ECharts配置，支持多文件数据查找和主键/行号对齐\nexport function generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData) {\n    const { yAxis, title, colorScheme, animation } = config;\n    // 饼图特殊处理：优先用 seriesData\n    if (selectedChartType.value === 'Pie' || selectedChartType.value === 'pie') {\n        const pieSeries = Array.isArray(seriesData) && seriesData.length > 0 ? seriesData : (xData.map((name, i) => ({ name, value: yDataArr[0][i] })));\n        const option = {\n            title: {\n                text: title || '',\n                left: 'center',\n                textStyle: { fontSize: 16, fontWeight: 'bold' }\n            },\n            tooltip: { trigger: 'item' },\n            legend: { top: 'bottom' },\n            series: [\n                {\n                    name: title || '',\n                    type: 'pie',\n                    radius: '60%',\n                    data: pieSeries,\n                    emphasis: {\n                        itemStyle: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\n                        }\n                    },\n                    animation: animation,\n                    animationDuration: animation ? 1500 : 0\n                }\n            ]\n        };\n        // 调试输出\n        console.log('[generateEChartOption] option:', option);\n        return option;\n    }\n    // series配置\n    const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n    const seriesArr = yArr.map((y, idx) => ({\n        name: y.field,\n        type: selectedChartType.value.toLowerCase(),\n        data: yDataArr[idx],\n        animationDuration: animation ? 1500 : 0,\n        itemStyle: { color: getColorByScheme(colorScheme) }\n    }));\n    // 基础option\n    const option = {\n        title: {\n            text: title || `${yArr.map(y => y.field).join(',')} vs ${config.xAxis.field}`,\n            left: 'center',\n            textStyle: { fontSize: 16, fontWeight: 'bold' }\n        },\n        tooltip: { trigger: 'axis' },\n        legend: { data: yArr.map(y => y.field), top: 'bottom' },\n        toolbox: {\n            show: true,\n            feature: {\n                dataView: { show: true, readOnly: false },\n                magicType: { show: true, type: ['line', 'bar'] },\n                restore: { show: true },\n                saveAsImage: { show: true }\n            }\n        },\n        xAxis: {\n            type: 'category',\n            data: xData,\n            axisLabel: { interval: 0, rotate: xData.length > 10 ? 45 : 0 }\n        },\n        yAxis: { type: 'value', name: yArr.map(y => y.field).join(',') },\n        series: seriesArr,\n        animation: animation,\n        animationDuration: animation ? 1500 : 0\n    };\n    // 饼图特殊处理\n    if (selectedChartType.value === 'Pie' || selectedChartType.value === 'pie') {\n        option.series = [\n            {\n                name: yArr.map(y => y.field).join(','),\n                type: 'pie',\n                radius: '60%',\n                data: xData.map((name, i) => ({ name, value: yDataArr[0][i] })),\n                emphasis: {\n                    itemStyle: {\n                        shadowBlur: 10,\n                        shadowOffsetX: 0,\n                        shadowColor: 'rgba(0, 0, 0, 0.5)'\n                    }\n                }\n            }\n        ];\n        delete option.xAxis;\n        delete option.yAxis;\n    }\n    // 调试输出\n    console.log('[generateEChartOption] option:', option);\n    return option;\n}\n\n// 根据配色方案获取颜色\nexport function getColorByScheme(scheme) {\n    const colorSchemes = {\n        default: '#5470c6',\n        blue: '#1890ff',\n        green: '#52c41a',\n        warm: '#fa8c16',\n        cool: '#13c2c2'\n    }\n    return colorSchemes[scheme] || colorSchemes.default\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}