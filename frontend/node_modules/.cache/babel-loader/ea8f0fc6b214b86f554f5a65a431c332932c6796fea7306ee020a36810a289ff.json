{"ast":null,"code":"import { unref as _unref, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-mapping-basic\"\n};\nconst _hoisted_2 = {\n  class: \"slot-header\"\n};\nconst _hoisted_3 = [\"innerHTML\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"mapped-field\"\n};\nconst _hoisted_5 = {\n  class: \"field-info\"\n};\nconst _hoisted_6 = {\n  class: \"field-name\"\n};\nconst _hoisted_7 = [\"innerHTML\"];\nconst _hoisted_8 = {\n  key: 1,\n  class: \"empty-slot\"\n};\nconst _hoisted_9 = {\n  class: \"slot-header\"\n};\nconst _hoisted_10 = [\"innerHTML\"];\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mapped-field\"\n};\nconst _hoisted_12 = {\n  class: \"field-info\"\n};\nconst _hoisted_13 = {\n  class: \"field-name\"\n};\nconst _hoisted_14 = [\"innerHTML\"];\nconst _hoisted_15 = {\n  key: 1,\n  class: \"empty-slot\"\n};\nconst _hoisted_16 = {\n  class: \"slot-header\"\n};\nconst _hoisted_17 = [\"innerHTML\"];\nconst _hoisted_18 = {\n  key: 0,\n  class: \"mapped-field\"\n};\nconst _hoisted_19 = {\n  class: \"field-info\"\n};\nconst _hoisted_20 = {\n  class: \"field-name\"\n};\nconst _hoisted_21 = [\"innerHTML\"];\nconst _hoisted_22 = {\n  key: 1,\n  class: \"empty-slot\"\n};\nimport { ref, computed } from 'vue';\nimport { getThemeIcon } from '@/assets/JS/icons.js';\n\n// Props\n\nexport default {\n  __name: 'ChartMappingBasic',\n  props: {\n    chartType: {\n      type: String,\n      required: true\n    }\n  },\n  emits: ['field-mapped', 'field-removed'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    /* eslint-disable */\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 映射数据\n    const mappings = ref({\n      xAxis: null,\n      yAxis: null,\n      series: null\n    });\n\n    // 拖拽状态\n    const dragOverSlot = ref(null);\n\n    // 是否显示系列映射\n    const showSeriesMapping = computed(() => {\n      return ['bar', 'line', 'area'].includes(props.chartType);\n    });\n\n    // 处理拖放\n    function handleDrop(event, slotType) {\n      event.preventDefault();\n      dragOverSlot.value = null;\n      try {\n        const dragData = JSON.parse(event.dataTransfer.getData('application/json'));\n        if (dragData.type === 'column') {\n          const column = dragData.column;\n\n          // 验证字段类型兼容性\n          if (isFieldCompatible(column, slotType)) {\n            mappings.value[slotType] = column;\n            emit('field-mapped', {\n              [slotType]: column\n            });\n          } else {\n            showFieldTypeError(column.type, slotType);\n          }\n        }\n      } catch (error) {\n        console.error('Failed to process drop data:', error);\n      }\n    }\n\n    // 处理拖拽悬停\n    function handleDragOver(event, slotType) {\n      event.preventDefault();\n      dragOverSlot.value = slotType;\n    }\n\n    // 处理拖拽离开\n    function handleDragLeave() {\n      dragOverSlot.value = null;\n    }\n\n    // 移除字段\n    function removeField(slotType) {\n      mappings.value[slotType] = null;\n      emit('field-removed', slotType);\n    }\n\n    // 检查字段类型兼容性\n    function isFieldCompatible(column, slotType) {\n      const fieldType = column.type;\n      switch (slotType) {\n        case 'xAxis':\n          return ['string', 'category', 'date'].includes(fieldType);\n        case 'yAxis':\n          return ['number', 'integer'].includes(fieldType);\n        case 'series':\n          return ['string', 'category', 'boolean'].includes(fieldType);\n        default:\n          return true;\n      }\n    }\n\n    // 显示字段类型错误\n    function showFieldTypeError(fieldType, slotType) {\n      const slotNames = {\n        xAxis: 'X-Axis',\n        yAxis: 'Y-Axis',\n        series: 'Series/Group'\n      };\n      const expectedTypes = {\n        xAxis: 'category or text',\n        yAxis: 'numeric',\n        series: 'category or text'\n      };\n      alert(`Cannot assign ${fieldType} field to ${slotNames[slotType]}. Expected ${expectedTypes[slotType]} field.`);\n    }\n\n    // 获取字段类型样式类\n    function getFieldTypeClass(type) {\n      const typeClasses = {\n        'string': 'field-type-string',\n        'number': 'field-type-number',\n        'integer': 'field-type-integer',\n        'date': 'field-type-date',\n        'boolean': 'field-type-boolean',\n        'category': 'field-type-category',\n        'unknown': 'field-type-unknown'\n      };\n      return typeClasses[type] || 'field-type-unknown';\n    }\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n        class: _normalizeClass([\"mapping-slot\", {\n          'has-field': mappings.value.xAxis,\n          'drag-over': dragOverSlot.value === 'xAxis'\n        }]),\n        onDrop: _cache[1] || (_cache[1] = $event => handleDrop($event, 'xAxis')),\n        onDragover: _cache[2] || (_cache[2] = $event => handleDragOver($event, 'xAxis')),\n        onDragleave: handleDragLeave,\n        onDragenter: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"prevent\"]))\n      }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", {\n        class: \"slot-icon\",\n        innerHTML: _unref(getThemeIcon)('x-axis')\n      }, null, 8, _hoisted_3), _cache[12] || (_cache[12] = _createElementVNode(\"span\", {\n        class: \"slot-label\"\n      }, \"X-Axis\", -1)), _cache[13] || (_cache[13] = _createElementVNode(\"span\", {\n        class: \"slot-type\"\n      }, \"Category/String\", -1))]), mappings.value.xAxis ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", _hoisted_6, _toDisplayString(mappings.value.xAxis.name), 1), _createElementVNode(\"span\", {\n        class: _normalizeClass([\"field-type\", getFieldTypeClass(mappings.value.xAxis.type)])\n      }, _toDisplayString(mappings.value.xAxis.type), 3)]), _createElementVNode(\"button\", {\n        class: \"remove-field-btn\",\n        onClick: _cache[0] || (_cache[0] = $event => removeField('xAxis')),\n        title: \"Remove field\"\n      }, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('close')\n      }, null, 8, _hoisted_7)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _cache[14] || (_cache[14] = [_createElementVNode(\"span\", {\n        class: \"drop-hint\"\n      }, \"Drop a column here for X-axis\", -1)])))], 34), _createElementVNode(\"div\", {\n        class: _normalizeClass([\"mapping-slot\", {\n          'has-field': mappings.value.yAxis,\n          'drag-over': dragOverSlot.value === 'yAxis'\n        }]),\n        onDrop: _cache[5] || (_cache[5] = $event => handleDrop($event, 'yAxis')),\n        onDragover: _cache[6] || (_cache[6] = $event => handleDragOver($event, 'yAxis')),\n        onDragleave: handleDragLeave,\n        onDragenter: _cache[7] || (_cache[7] = _withModifiers(() => {}, [\"prevent\"]))\n      }, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", {\n        class: \"slot-icon\",\n        innerHTML: _unref(getThemeIcon)('y-axis')\n      }, null, 8, _hoisted_10), _cache[15] || (_cache[15] = _createElementVNode(\"span\", {\n        class: \"slot-label\"\n      }, \"Y-Axis\", -1)), _cache[16] || (_cache[16] = _createElementVNode(\"span\", {\n        class: \"slot-type\"\n      }, \"Numeric\", -1))]), mappings.value.yAxis ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"span\", _hoisted_13, _toDisplayString(mappings.value.yAxis.name), 1), _createElementVNode(\"span\", {\n        class: _normalizeClass([\"field-type\", getFieldTypeClass(mappings.value.yAxis.type)])\n      }, _toDisplayString(mappings.value.yAxis.type), 3)]), _createElementVNode(\"button\", {\n        class: \"remove-field-btn\",\n        onClick: _cache[4] || (_cache[4] = $event => removeField('yAxis')),\n        title: \"Remove field\"\n      }, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('close')\n      }, null, 8, _hoisted_14)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _cache[17] || (_cache[17] = [_createElementVNode(\"span\", {\n        class: \"drop-hint\"\n      }, \"Drop a numeric column here for Y-axis\", -1)])))], 34), showSeriesMapping.value ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass([\"mapping-slot optional\", {\n          'has-field': mappings.value.series,\n          'drag-over': dragOverSlot.value === 'series'\n        }]),\n        onDrop: _cache[9] || (_cache[9] = $event => handleDrop($event, 'series')),\n        onDragover: _cache[10] || (_cache[10] = $event => handleDragOver($event, 'series')),\n        onDragleave: handleDragLeave,\n        onDragenter: _cache[11] || (_cache[11] = _withModifiers(() => {}, [\"prevent\"]))\n      }, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"span\", {\n        class: \"slot-icon\",\n        innerHTML: _unref(getThemeIcon)('group')\n      }, null, 8, _hoisted_17), _cache[18] || (_cache[18] = _createElementVNode(\"span\", {\n        class: \"slot-label\"\n      }, \"Series/Group\", -1)), _cache[19] || (_cache[19] = _createElementVNode(\"span\", {\n        class: \"slot-type\"\n      }, \"Category\", -1)), _cache[20] || (_cache[20] = _createElementVNode(\"span\", {\n        class: \"optional-badge\"\n      }, \"Optional\", -1))]), mappings.value.series ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"span\", _hoisted_20, _toDisplayString(mappings.value.series.name), 1), _createElementVNode(\"span\", {\n        class: _normalizeClass([\"field-type\", getFieldTypeClass(mappings.value.series.type)])\n      }, _toDisplayString(mappings.value.series.type), 3)]), _createElementVNode(\"button\", {\n        class: \"remove-field-btn\",\n        onClick: _cache[8] || (_cache[8] = $event => removeField('series')),\n        title: \"Remove field\"\n      }, [_createElementVNode(\"span\", {\n        innerHTML: _unref(getThemeIcon)('close')\n      }, null, 8, _hoisted_21)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_22, _cache[21] || (_cache[21] = [_createElementVNode(\"span\", {\n        class: \"drop-hint\"\n      }, \"Drop a category column for grouping (optional)\", -1)])))], 34)) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","getThemeIcon","props","__props","emit","__emit","mappings","xAxis","yAxis","series","dragOverSlot","showSeriesMapping","includes","chartType","handleDrop","event","slotType","preventDefault","value","dragData","JSON","parse","dataTransfer","getData","type","column","isFieldCompatible","showFieldTypeError","error","console","handleDragOver","handleDragLeave","removeField","fieldType","slotNames","expectedTypes","alert","getFieldTypeClass","typeClasses"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/chart-mappings/ChartMappingBasic.vue"],"sourcesContent":["<template>\n  <div class=\"chart-mapping-basic\">\n    <!-- X轴映射 -->\n    <div class=\"mapping-slot\" :class=\"{ 'has-field': mappings.xAxis, 'drag-over': dragOverSlot === 'xAxis' }\"\n         @drop=\"handleDrop($event, 'xAxis')\"\n         @dragover=\"handleDragOver($event, 'xAxis')\"\n         @dragleave=\"handleDragLeave\"\n         @dragenter.prevent>\n      <div class=\"slot-header\">\n        <span class=\"slot-icon\" v-html=\"getThemeIcon('x-axis')\"></span>\n        <span class=\"slot-label\">X-Axis</span>\n        <span class=\"slot-type\">Category/String</span>\n      </div>\n      \n      <div v-if=\"mappings.xAxis\" class=\"mapped-field\">\n        <div class=\"field-info\">\n          <span class=\"field-name\">{{ mappings.xAxis.name }}</span>\n          <span class=\"field-type\" :class=\"getFieldTypeClass(mappings.xAxis.type)\">\n            {{ mappings.xAxis.type }}\n          </span>\n        </div>\n        <button class=\"remove-field-btn\" @click=\"removeField('xAxis')\" title=\"Remove field\">\n          <span v-html=\"getThemeIcon('close')\"></span>\n        </button>\n      </div>\n      \n      <div v-else class=\"empty-slot\">\n        <span class=\"drop-hint\">Drop a column here for X-axis</span>\n      </div>\n    </div>\n\n    <!-- Y轴映射 -->\n    <div class=\"mapping-slot\" :class=\"{ 'has-field': mappings.yAxis, 'drag-over': dragOverSlot === 'yAxis' }\"\n         @drop=\"handleDrop($event, 'yAxis')\"\n         @dragover=\"handleDragOver($event, 'yAxis')\"\n         @dragleave=\"handleDragLeave\"\n         @dragenter.prevent>\n      <div class=\"slot-header\">\n        <span class=\"slot-icon\" v-html=\"getThemeIcon('y-axis')\"></span>\n        <span class=\"slot-label\">Y-Axis</span>\n        <span class=\"slot-type\">Numeric</span>\n      </div>\n      \n      <div v-if=\"mappings.yAxis\" class=\"mapped-field\">\n        <div class=\"field-info\">\n          <span class=\"field-name\">{{ mappings.yAxis.name }}</span>\n          <span class=\"field-type\" :class=\"getFieldTypeClass(mappings.yAxis.type)\">\n            {{ mappings.yAxis.type }}\n          </span>\n        </div>\n        <button class=\"remove-field-btn\" @click=\"removeField('yAxis')\" title=\"Remove field\">\n          <span v-html=\"getThemeIcon('close')\"></span>\n        </button>\n      </div>\n      \n      <div v-else class=\"empty-slot\">\n        <span class=\"drop-hint\">Drop a numeric column here for Y-axis</span>\n      </div>\n    </div>\n\n    <!-- 系列/分组映射（可选） -->\n    <div v-if=\"showSeriesMapping\" class=\"mapping-slot optional\" \n         :class=\"{ 'has-field': mappings.series, 'drag-over': dragOverSlot === 'series' }\"\n         @drop=\"handleDrop($event, 'series')\"\n         @dragover=\"handleDragOver($event, 'series')\"\n         @dragleave=\"handleDragLeave\"\n         @dragenter.prevent>\n      <div class=\"slot-header\">\n        <span class=\"slot-icon\" v-html=\"getThemeIcon('group')\"></span>\n        <span class=\"slot-label\">Series/Group</span>\n        <span class=\"slot-type\">Category</span>\n        <span class=\"optional-badge\">Optional</span>\n      </div>\n      \n      <div v-if=\"mappings.series\" class=\"mapped-field\">\n        <div class=\"field-info\">\n          <span class=\"field-name\">{{ mappings.series.name }}</span>\n          <span class=\"field-type\" :class=\"getFieldTypeClass(mappings.series.type)\">\n            {{ mappings.series.type }}\n          </span>\n        </div>\n        <button class=\"remove-field-btn\" @click=\"removeField('series')\" title=\"Remove field\">\n          <span v-html=\"getThemeIcon('close')\"></span>\n        </button>\n      </div>\n      \n      <div v-else class=\"empty-slot\">\n        <span class=\"drop-hint\">Drop a category column for grouping (optional)</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed } from 'vue'\nimport { getThemeIcon } from '@/assets/JS/icons.js'\n\n// Props\nconst props = defineProps({\n  chartType: {\n    type: String,\n    required: true\n  }\n})\n\n// Emits\nconst emit = defineEmits(['field-mapped', 'field-removed'])\n\n// 映射数据\nconst mappings = ref({\n  xAxis: null,\n  yAxis: null,\n  series: null\n})\n\n// 拖拽状态\nconst dragOverSlot = ref(null)\n\n// 是否显示系列映射\nconst showSeriesMapping = computed(() => {\n  return ['bar', 'line', 'area'].includes(props.chartType)\n})\n\n// 处理拖放\nfunction handleDrop(event, slotType) {\n  event.preventDefault()\n  dragOverSlot.value = null\n  \n  try {\n    const dragData = JSON.parse(event.dataTransfer.getData('application/json'))\n    \n    if (dragData.type === 'column') {\n      const column = dragData.column\n      \n      // 验证字段类型兼容性\n      if (isFieldCompatible(column, slotType)) {\n        mappings.value[slotType] = column\n        emit('field-mapped', { [slotType]: column })\n      } else {\n        showFieldTypeError(column.type, slotType)\n      }\n    }\n  } catch (error) {\n    console.error('Failed to process drop data:', error)\n  }\n}\n\n// 处理拖拽悬停\nfunction handleDragOver(event, slotType) {\n  event.preventDefault()\n  dragOverSlot.value = slotType\n}\n\n// 处理拖拽离开\nfunction handleDragLeave() {\n  dragOverSlot.value = null\n}\n\n// 移除字段\nfunction removeField(slotType) {\n  mappings.value[slotType] = null\n  emit('field-removed', slotType)\n}\n\n// 检查字段类型兼容性\nfunction isFieldCompatible(column, slotType) {\n  const fieldType = column.type\n  \n  switch (slotType) {\n    case 'xAxis':\n      return ['string', 'category', 'date'].includes(fieldType)\n    case 'yAxis':\n      return ['number', 'integer'].includes(fieldType)\n    case 'series':\n      return ['string', 'category', 'boolean'].includes(fieldType)\n    default:\n      return true\n  }\n}\n\n// 显示字段类型错误\nfunction showFieldTypeError(fieldType, slotType) {\n  const slotNames = {\n    xAxis: 'X-Axis',\n    yAxis: 'Y-Axis',\n    series: 'Series/Group'\n  }\n  \n  const expectedTypes = {\n    xAxis: 'category or text',\n    yAxis: 'numeric',\n    series: 'category or text'\n  }\n  \n  alert(`Cannot assign ${fieldType} field to ${slotNames[slotType]}. Expected ${expectedTypes[slotType]} field.`)\n}\n\n// 获取字段类型样式类\nfunction getFieldTypeClass(type) {\n  const typeClasses = {\n    'string': 'field-type-string',\n    'number': 'field-type-number',\n    'integer': 'field-type-integer',\n    'date': 'field-type-date',\n    'boolean': 'field-type-boolean',\n    'category': 'field-type-category',\n    'unknown': 'field-type-unknown'\n  }\n  return typeClasses[type] || 'field-type-unknown'\n}\n</script>\n\n<style scoped>\n.chart-mapping-basic {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.mapping-slot {\n  border: 2px dashed rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  padding: 16px;\n  transition: all 0.2s ease;\n  background: rgba(0, 0, 0, 0.02);\n}\n\n.mapping-slot.optional {\n  border-style: dotted;\n  opacity: 0.8;\n}\n\n.mapping-slot.drag-over {\n  border-color: #3b82f6;\n  background: rgba(59, 130, 246, 0.05);\n  transform: scale(1.02);\n}\n\n.mapping-slot.has-field {\n  border-color: #10b981;\n  background: rgba(16, 185, 129, 0.05);\n}\n\n[data-theme=\"dark\"] .mapping-slot {\n  border-color: rgba(255, 255, 255, 0.1);\n  background: rgba(255, 255, 255, 0.02);\n}\n\n[data-theme=\"dark\"] .mapping-slot.drag-over {\n  border-color: #60a5fa;\n  background: rgba(96, 165, 250, 0.1);\n}\n\n[data-theme=\"dark\"] .mapping-slot.has-field {\n  border-color: #22c55e;\n  background: rgba(34, 197, 94, 0.1);\n}\n\n.slot-header {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 12px;\n}\n\n.slot-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 16px;\n  height: 16px;\n}\n\n.slot-icon svg {\n  width: 14px;\n  height: 14px;\n}\n\n.slot-label {\n  font-size: 14px;\n  font-weight: 600;\n  color: var(--text-color);\n}\n\n.slot-type {\n  font-size: 11px;\n  color: var(--text-secondary);\n  background: rgba(0, 0, 0, 0.08);\n  padding: 2px 6px;\n  border-radius: 4px;\n}\n\n[data-theme=\"dark\"] .slot-type {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.optional-badge {\n  font-size: 10px;\n  color: #6366f1;\n  background: rgba(99, 102, 241, 0.1);\n  padding: 2px 6px;\n  border-radius: 4px;\n  margin-left: auto;\n}\n\n.mapped-field {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 12px;\n  background: rgba(255, 255, 255, 0.8);\n  border: 1px solid rgba(16, 185, 129, 0.2);\n  border-radius: 6px;\n}\n\n[data-theme=\"dark\"] .mapped-field {\n  background: rgba(55, 65, 81, 0.8);\n  border-color: rgba(34, 197, 94, 0.3);\n}\n\n.field-info {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.field-name {\n  font-size: 13px;\n  font-weight: 500;\n  color: var(--text-color);\n}\n\n.field-type {\n  font-size: 10px;\n  font-weight: 500;\n  padding: 2px 6px;\n  border-radius: 4px;\n  text-transform: uppercase;\n  letter-spacing: 0.3px;\n}\n\n/* 字段类型样式 */\n.field-type-string {\n  background: rgba(34, 197, 94, 0.15);\n  color: #059669;\n}\n\n.field-type-number,\n.field-type-integer {\n  background: rgba(59, 130, 246, 0.15);\n  color: #1d4ed8;\n}\n\n.field-type-date {\n  background: rgba(245, 158, 11, 0.15);\n  color: #d97706;\n}\n\n.field-type-boolean {\n  background: rgba(139, 92, 246, 0.15);\n  color: #7c3aed;\n}\n\n.field-type-category {\n  background: rgba(236, 72, 153, 0.15);\n  color: #be185d;\n}\n\n.field-type-unknown {\n  background: rgba(107, 114, 128, 0.15);\n  color: #4b5563;\n}\n\n[data-theme=\"dark\"] .field-type-string {\n  background: rgba(34, 197, 94, 0.25);\n  color: #22c55e;\n}\n\n[data-theme=\"dark\"] .field-type-number,\n[data-theme=\"dark\"] .field-type-integer {\n  background: rgba(59, 130, 246, 0.25);\n  color: #60a5fa;\n}\n\n[data-theme=\"dark\"] .field-type-date {\n  background: rgba(245, 158, 11, 0.25);\n  color: #fbbf24;\n}\n\n[data-theme=\"dark\"] .field-type-boolean {\n  background: rgba(139, 92, 246, 0.25);\n  color: #a78bfa;\n}\n\n[data-theme=\"dark\"] .field-type-category {\n  background: rgba(236, 72, 153, 0.25);\n  color: #f472b6;\n}\n\n[data-theme=\"dark\"] .field-type-unknown {\n  background: rgba(107, 114, 128, 0.25);\n  color: #9ca3af;\n}\n\n.remove-field-btn {\n  background: none;\n  border: none;\n  padding: 4px;\n  cursor: pointer;\n  color: var(--text-secondary);\n  border-radius: 4px;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.remove-field-btn:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: #ef4444;\n}\n\n.remove-field-btn svg {\n  width: 12px;\n  height: 12px;\n}\n\n.empty-slot {\n  text-align: center;\n  padding: 16px;\n}\n\n.drop-hint {\n  font-size: 12px;\n  color: var(--text-secondary);\n  font-style: italic;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}