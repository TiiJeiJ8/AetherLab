{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"thumbRef\",\n  class: \"chart-thumb\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\Chart\\ChartThumbnail.vue"],"sourcesContent":["<template>\n    <div ref=\"thumbRef\" class=\"chart-thumb\"></div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, watch, onMounted, onBeforeUnmount } from 'vue'\nimport * as echarts from 'echarts'\n\n/**\n * Props\n * @prop {Object} option - ECharts 配置对象，必填\n * @prop {String} colorTheme - 主题名，默认 'default'\n */\nconst props = defineProps({\n    option: { type: Object, required: true },\n    colorTheme: { type: String, default: 'default' }\n})\n\nconst thumbRef = ref(null)\nlet chart = null\nconst themeCache = {}\n\nasync function loadAndRegisterTheme(themeName) {\n    if (themeCache[themeName]) return\n    try {\n        const res = await fetch(`/themes/${themeName}.json`)\n        if (!res.ok) throw new Error('Theme file loads failed')\n        const obj = await res.json()\n        echarts.registerTheme(themeName, obj)\n        themeCache[themeName] = { themeObj: obj }\n    } catch (e) {\n        // 静默失败\n    }\n}\n\nfunction getOptionWithoutTitle(option) {\n    const opt = JSON.parse(JSON.stringify(option))\n    delete opt.title\n    return opt\n}\n\nasync function render() {\n    console.\n    if (!thumbRef.value) return\n    await loadAndRegisterTheme(props.colorTheme)\n    if (!chart) {\n        chart = echarts.init(thumbRef.value, props.colorTheme)\n    }\n    if (chart && props.option) {\n        chart.setOption(getOptionWithoutTitle(props.option), true)\n    }\n}\n\nwatch(() => [props.option, props.colorTheme], render, { deep: true })\nonMounted(render)\nonBeforeUnmount(() => {\n    if (chart) chart.dispose()\n})\n</script>\n\n<style scoped>\n    .chart-thumb {\n        width: 100px;\n        height: 70px;\n        min-width: 100px;\n        min-height: 70px;\n        border-radius: 6px;\n        background: var(--bg-color);\n        box-shadow: 0 0px 1px var(--text-color);\n        margin-bottom: 4px;\n    }\n</style>"],"mappings":";;EACSA,GAAG,EAAC,UAAU;EAACC,KAAK,EAAC;;;uBAA1BC,mBAAA,CAA8C,OAA9CC,UAA8C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}