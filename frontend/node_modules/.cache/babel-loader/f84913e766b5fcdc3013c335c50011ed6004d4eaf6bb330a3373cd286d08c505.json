{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createBlock as _createBlock, Transition as _Transition, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"file-content\"\n};\nconst _hoisted_2 = {\n  class: \"file-header\"\n};\nconst _hoisted_3 = {\n  class: \"header-title\"\n};\nconst _hoisted_4 = {\n  class: \"connection-status\"\n};\nconst _hoisted_5 = {\n  class: \"status-text\"\n};\nconst _hoisted_6 = {\n  class: \"header-actions\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"cache-stats\"\n};\nconst _hoisted_8 = {\n  class: \"upload-tip\"\n};\nconst _hoisted_9 = {\n  class: \"cache-tip\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"file-list\"\n};\nconst _hoisted_11 = {\n  class: \"file-info\"\n};\nconst _hoisted_12 = [\"onDblclick\"];\nconst _hoisted_13 = [\"onUpdate:modelValue\", \"onBlur\", \"onKeyup\"];\nconst _hoisted_14 = {\n  class: \"file-meta\"\n};\nconst _hoisted_15 = {\n  class: \"file-size\"\n};\nconst _hoisted_16 = {\n  class: \"file-actions\"\n};\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = [\"onClick\"];\nconst _hoisted_19 = [\"onClick\"];\nconst _hoisted_20 = [\"onClick\"];\nconst _hoisted_21 = [\"onClick\"];\nconst _hoisted_22 = [\"onClick\"];\nconst _hoisted_23 = {\n  key: 2,\n  class: \"sync-dialog\"\n};\nconst _hoisted_24 = {\n  class: \"sync-dialog-content\"\n};\nconst _hoisted_25 = {\n  class: \"sync-options\"\n};\nconst _hoisted_26 = {\n  class: \"inline-preview-content\"\n};\nconst _hoisted_27 = {\n  class: \"inline-preview-header\"\n};\nconst _hoisted_28 = {\n  class: \"preview-header-actions\"\n};\nconst _hoisted_29 = [\"title\"];\nconst _hoisted_30 = {\n  class: \"inline-preview-table-wrapper\"\n};\nconst _hoisted_31 = {\n  key: 0,\n  class: \"inline-preview-table\"\n};\nconst _hoisted_32 = {\n  key: 1,\n  class: \"inline-preview-empty\"\n};\nconst _hoisted_33 = {\n  class: \"inline-preview-footer\"\n};\nconst _hoisted_34 = {\n  class: \"preview-stats\"\n};\nconst _hoisted_35 = {\n  class: \"preview-actions\"\n};\nexport function render(_ctx, _cache) {\n  const _component_DataPreviewModal = _resolveComponent(\"DataPreviewModal\");\n  return _openBlock(), _createBlock(_Transition, {\n    name: \"fade-slide\"\n  }, {\n    default: _withCtx(() => [_ctx.show ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"file-modal\",\n      onClick: _cache[16] || (_cache[16] = _withModifiers((...args) => _ctx.onClose && _ctx.onClose(...args), [\"self\"]))\n    }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[17] || (_cache[17] = _createElementVNode(\"span\", null, \"Files\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", {\n      class: _normalizeClass([\"status-dot\", {\n        'connected': _ctx.isBackendConnected\n      }])\n    }, null, 2 /* CLASS */), _createElementVNode(\"span\", _hoisted_5, _toDisplayString(_ctx.isBackendConnected ? 'Backend Connected' : 'Offline Mode'), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_6, [!_ctx.isBackendConnected ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.checkConnection && _ctx.checkConnection(...args)),\n      class: \"refresh-btn\",\n      title: \"Check Connection\"\n    }, \"üîÑ\")) : _createCommentVNode(\"v-if\", true), _ctx.hasCachedFiles && _ctx.isBackendConnected ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: _cache[1] || (_cache[1] = $event => _ctx.showSyncDialog = true),\n      class: \"sync-btn\",\n      title: \"Sync to Backend\"\n    }, \"‚òÅÔ∏è\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n      class: \"close-btn\",\n      onClick: _cache[2] || (_cache[2] = (...args) => _ctx.onClose && _ctx.onClose(...args))\n    }, \"√ó\")])]), _createCommentVNode(\" ÁºìÂ≠òÁªüËÆ°‰ø°ÊÅØ \"), _ctx.cacheStats.fileCount > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"span\", null, \"üìÅ \" + _toDisplayString(_ctx.cacheStats.fileCount) + \" files cached (\" + _toDisplayString(_ctx.cacheStats.formattedSize) + \")\", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: _cache[3] || (_cache[3] = (...args) => _ctx.clearCacheAction && _ctx.clearCacheAction(...args)),\n      class: \"clear-cache-btn\"\n    }, \"Clear Cache\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" ÊãñÊãΩ‰∏ä‰º†Âå∫Âüü \"), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"upload-area\", {\n        'dragging': _ctx.isDragging\n      }]),\n      onDrop: _cache[6] || (_cache[6] = _withModifiers((...args) => _ctx.handleDrop && _ctx.handleDrop(...args), [\"prevent\"])),\n      onDragover: _cache[7] || (_cache[7] = _withModifiers($event => _ctx.isDragging = true, [\"prevent\"])),\n      onDragleave: _cache[8] || (_cache[8] = _withModifiers($event => _ctx.isDragging = false, [\"prevent\"]))\n    }, [_createElementVNode(\"input\", {\n      type: \"file\",\n      ref: \"fileInput\",\n      onChange: _cache[4] || (_cache[4] = (...args) => _ctx.handleFileSelect && _ctx.handleFileSelect(...args)),\n      accept: \".csv,.xlsx,.xls\",\n      multiple: \"\",\n      class: \"file-input\"\n    }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createElementVNode(\"div\", _hoisted_8, [_cache[19] || (_cache[19] = _createElementVNode(\"i\", {\n      class: \"upload-icon\"\n    }, \"üìÅ\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, [_cache[18] || (_cache[18] = _createTextVNode(\"Drag files here or \")), _createElementVNode(\"button\", {\n      onClick: _cache[5] || (_cache[5] = (...args) => _ctx.triggerFileInput && _ctx.triggerFileInput(...args))\n    }, \"click to select\")]), _cache[20] || (_cache[20] = _createElementVNode(\"p\", {\n      class: \"sub-tip\"\n    }, \"Supports CSV„ÄÅXLSX„ÄÅXLS formats\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_9, _toDisplayString(_ctx.isBackendConnected ? 'Files will be uploaded to backend' : 'Files will be cached locally'), 1 /* TEXT */)])], 34 /* CLASS, NEED_HYDRATION */), _createCommentVNode(\" Êñá‰ª∂ÂàóË°® \"), _ctx.files.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.files, (file, idx) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: file.id,\n        class: _normalizeClass([\"file-item\", {\n          'uploading': file.status === 'uploading'\n        }])\n      }, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", {\n        class: _normalizeClass([\"file-name\", {\n          'editing': file.isEditing\n        }]),\n        onDblclick: $event => _ctx.startRename(idx)\n      }, [!file.isEditing ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 0\n      }, [_createTextVNode(_toDisplayString(file.name), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n        key: 1,\n        \"onUpdate:modelValue\": $event => file.newName = $event,\n        onBlur: $event => _ctx.finishRename(idx),\n        onKeyup: _withKeys($event => _ctx.finishRename(idx), [\"enter\"]),\n        ref_for: true,\n        ref: \"renameInput\",\n        type: \"text\"\n      }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_13)), [[_vModelText, file.newName]])], 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_12), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"span\", _hoisted_15, _toDisplayString(_ctx.formatFileSize(file.size)), 1 /* TEXT */), _createElementVNode(\"span\", {\n        class: _normalizeClass([\"file-status\", file.status])\n      }, _toDisplayString(_ctx.getStatusText(file.status)), 3 /* TEXT, CLASS */)])]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n        onClick: $event => _ctx.showFileInfo(idx),\n        title: \"File Information\",\n        class: \"file-info-btn\"\n      }, \"‚ÑπÔ∏è\", 8 /* PROPS */, _hoisted_17), _createElementVNode(\"button\", {\n        onClick: $event => _ctx.showDataPreview(idx),\n        title: \"Data Preview\",\n        class: \"data-preview-btn\"\n      }, \"üìä\", 8 /* PROPS */, _hoisted_18), file.status === 'local' ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 0,\n        onClick: $event => _ctx.refreshFilePreview(idx),\n        title: \"Refresh Preview\",\n        class: \"refresh-file-btn\"\n      }, \"üîÑ\", 8 /* PROPS */, _hoisted_19)) : _createCommentVNode(\"v-if\", true), file.status === 'local' && _ctx.isBackendConnected ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 1,\n        onClick: $event => _ctx.syncSingleFile(file.id),\n        title: \"Sync to Backend\"\n      }, \"‚òÅÔ∏è\", 8 /* PROPS */, _hoisted_20)) : _createCommentVNode(\"v-if\", true), file.status === 'local' ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 2,\n        onClick: $event => _ctx.unloadFile(idx),\n        title: \"Remove from cache\"\n      }, \"üóëÔ∏è\", 8 /* PROPS */, _hoisted_21)) : _createCommentVNode(\"v-if\", true), file.status === 'uploaded' ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 3,\n        onClick: $event => _ctx.deleteFileAction(idx),\n        title: \"Delete from Database\"\n      }, \"‚ùå\", 8 /* PROPS */, _hoisted_22)) : _createCommentVNode(\"v-if\", true)])], 2 /* CLASS */);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" ÂêåÊ≠•ÂØπËØùÊ°Ü \"), _ctx.showSyncDialog ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_cache[21] || (_cache[21] = _createElementVNode(\"h3\", null, \"Sync Files to Backend\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString(_ctx.cachedFileCount) + \" files in cache. Do you want to sync them to the backend?\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"button\", {\n      onClick: _cache[9] || (_cache[9] = (...args) => _ctx.syncAllFiles && _ctx.syncAllFiles(...args)),\n      class: \"sync-confirm-btn\"\n    }, \"Sync All\"), _createElementVNode(\"button\", {\n      onClick: _cache[10] || (_cache[10] = $event => _ctx.showSyncDialog = false),\n      class: \"sync-cancel-btn\"\n    }, \"Cancel\")])])])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Êï∞ÊçÆÈ¢ÑËßàÁªÑ‰ª∂ \"), _ctx.currentPreviewFile ? (_openBlock(), _createBlock(_component_DataPreviewModal, {\n      key: 0,\n      show: _ctx.showPreview,\n      \"current-file\": _ctx.currentPreviewFile,\n      \"preview-data\": _ctx.previewData,\n      \"is-side-preview\": true,\n      onClose: _ctx.closePreview\n    }, null, 8 /* PROPS */, [\"show\", \"current-file\", \"preview-data\", \"onClose\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" ÂÜÖÁΩÆÊï∞ÊçÆÈ¢ÑËßàË°®Ê†º \"), _ctx.showInlinePreview ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      class: \"inline-preview-overlay\",\n      onClick: _cache[15] || (_cache[15] = _withModifiers((...args) => _ctx.closeInlinePreview && _ctx.closeInlinePreview(...args), [\"self\"]))\n    }, [_createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"h4\", null, _toDisplayString(_ctx.currentPreviewFile?.name || 'Data Preview'), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"button\", {\n      onClick: _cache[11] || (_cache[11] = (...args) => _ctx.togglePreviewMode && _ctx.togglePreviewMode(...args)),\n      class: \"toggle-mode-btn\",\n      title: _ctx.useModalPreview ? 'Switch to Inline Preview' : 'Switch to Modal Preview'\n    }, _toDisplayString(_ctx.useModalPreview ? 'üìã' : 'üóÇÔ∏è'), 9 /* TEXT, PROPS */, _hoisted_29), _createElementVNode(\"button\", {\n      onClick: _cache[12] || (_cache[12] = (...args) => _ctx.closeInlinePreview && _ctx.closeInlinePreview(...args)),\n      class: \"close-preview-btn\"\n    }, \"√ó\")])]), _createElementVNode(\"div\", _hoisted_30, [_ctx.previewData.length ? (_openBlock(), _createElementBlock(\"table\", _hoisted_31, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.inlineTableHeaders, header => {\n      return _openBlock(), _createElementBlock(\"th\", {\n        key: header\n      }, _toDisplayString(header), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.previewData, (row, idx) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: idx\n      }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.inlineTableHeaders, header => {\n        return _openBlock(), _createElementBlock(\"td\", {\n          key: header\n        }, _toDisplayString(row[header] || ''), 1 /* TEXT */);\n      }), 128 /* KEYED_FRAGMENT */))]);\n    }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_32, _cache[22] || (_cache[22] = [_createElementVNode(\"div\", {\n      class: \"empty-icon\"\n    }, \"üìÑ\", -1 /* HOISTED */), _createElementVNode(\"p\", null, \"No data available for preview.\", -1 /* HOISTED */), _createElementVNode(\"p\", {\n      class: \"empty-sub\"\n    }, \"The file may be empty or in an unsupported format.\", -1 /* HOISTED */)])))]), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"span\", _hoisted_34, _toDisplayString(_ctx.getPreviewStats()), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"button\", {\n      onClick: _cache[13] || (_cache[13] = (...args) => _ctx.exportPreviewData && _ctx.exportPreviewData(...args)),\n      class: \"export-btn\"\n    }, \"üì§ Export\"), _createElementVNode(\"button\", {\n      onClick: _cache[14] || (_cache[14] = (...args) => _ctx.refreshPreview && _ctx.refreshPreview(...args)),\n      class: \"refresh-btn\"\n    }, \"üîÑ Refresh\")])])])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","key","_createBlock","_Transition","name","default","_withCtx","_ctx","show","_createElementBlock","onClick","_cache","_withModifiers","args","onClose","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_normalizeClass","isBackendConnected","_hoisted_5","_toDisplayString","_hoisted_6","checkConnection","title","_createCommentVNode","hasCachedFiles","$event","showSyncDialog","cacheStats","fileCount","_hoisted_7","formattedSize","clearCacheAction","isDragging","onDrop","handleDrop","onDragover","onDragleave","type","ref","onChange","handleFileSelect","accept","multiple","_hoisted_8","_createTextVNode","triggerFileInput","_hoisted_9","files","length","_hoisted_10","_Fragment","_renderList","file","idx","id","status","_hoisted_11","isEditing","onDblclick","startRename","newName","onBlur","finishRename","onKeyup","_withKeys","ref_for","_hoisted_13","_hoisted_12","_hoisted_14","_hoisted_15","formatFileSize","size","getStatusText","_hoisted_16","showFileInfo","_hoisted_17","showDataPreview","_hoisted_18","refreshFilePreview","_hoisted_19","syncSingleFile","_hoisted_20","unloadFile","_hoisted_21","deleteFileAction","_hoisted_22","_hoisted_23","_hoisted_24","cachedFileCount","_hoisted_25","syncAllFiles","currentPreviewFile","_component_DataPreviewModal","showPreview","previewData","closePreview","showInlinePreview","closeInlinePreview","_hoisted_26","_hoisted_27","_hoisted_28","togglePreviewMode","useModalPreview","_hoisted_29","_hoisted_30","_hoisted_31","inlineTableHeaders","header","row","_hoisted_32","_hoisted_33","_hoisted_34","getPreviewStats","_hoisted_35","exportPreviewData","refreshPreview","_"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\newArchitecture\\frontend_vue_design\\src\\components\\FileUploadModal.vue"],"sourcesContent":["<template>\n<transition name=\"fade-slide\">\n    <div v-if=\"show\" class=\"file-modal\" @click.self=\"onClose\">\n        <div class=\"file-content\">\n            <div class=\"file-header\">\n                <div class=\"header-title\">\n                    <span>Files</span>\n                    <div class=\"connection-status\">\n                        <span class=\"status-dot\" :class=\"{ 'connected': isBackendConnected }\"></span>\n                        <span class=\"status-text\">{{ isBackendConnected ? 'Backend Connected' : 'Offline Mode' }}</span>\n                    </div>\n                </div>\n                <div class=\"header-actions\">\n                    <button v-if=\"!isBackendConnected\" @click=\"checkConnection\" class=\"refresh-btn\" title=\"Check Connection\">üîÑ</button>\n                    <button v-if=\"hasCachedFiles && isBackendConnected\" @click=\"showSyncDialog = true\" class=\"sync-btn\" title=\"Sync to Backend\">‚òÅÔ∏è</button>\n                    <button class=\"close-btn\" @click=\"onClose\">√ó</button>\n                </div>\n            </div>\n\n            <!-- ÁºìÂ≠òÁªüËÆ°‰ø°ÊÅØ -->\n            <div v-if=\"cacheStats.fileCount > 0\" class=\"cache-stats\">\n                <span>üìÅ {{ cacheStats.fileCount }} files cached ({{ cacheStats.formattedSize }})</span>\n                <button @click=\"clearCacheAction\" class=\"clear-cache-btn\">Clear Cache</button>\n            </div>\n\n            <!-- ÊãñÊãΩ‰∏ä‰º†Âå∫Âüü -->\n            <div class=\"upload-area\"\n                    :class=\"{ 'dragging': isDragging }\"\n                    @drop.prevent=\"handleDrop\"\n                    @dragover.prevent=\"isDragging = true\"\n                    @dragleave.prevent=\"isDragging = false\">\n                <input type=\"file\"\n                        ref=\"fileInput\"\n                        @change=\"handleFileSelect\"\n                        accept=\".csv,.xlsx,.xls\"\n                        multiple\n                        class=\"file-input\" />\n                <div class=\"upload-tip\">\n                    <i class=\"upload-icon\">üìÅ</i>\n                    <p>Drag files here or <button @click=\"triggerFileInput\">click to select</button></p>\n                    <p class=\"sub-tip\">Supports CSV„ÄÅXLSX„ÄÅXLS formats</p>\n                    <p class=\"cache-tip\">{{ isBackendConnected ? 'Files will be uploaded to backend' : 'Files will be cached locally' }}</p>\n                </div>\n            </div>\n\n            <!-- Êñá‰ª∂ÂàóË°® -->\n            <div class=\"file-list\" v-if=\"files.length\">\n                <div v-for=\"(file, idx) in files\"\n                        :key=\"file.id\"\n                        class=\"file-item\"\n                        :class=\"{ 'uploading': file.status === 'uploading' }\">\n                    <div class=\"file-info\">\n                        <span class=\"file-name\"\n                                :class=\"{ 'editing': file.isEditing }\"\n                                @dblclick=\"startRename(idx)\">\n                            <template v-if=\"!file.isEditing\">\n                                {{ file.name }}\n                            </template>\n                            <input v-else\n                                    v-model=\"file.newName\"\n                                    @blur=\"finishRename(idx)\"\n                                    @keyup.enter=\"finishRename(idx)\"\n                                    ref=\"renameInput\"\n                                    type=\"text\" />\n                        </span>\n                        <div class=\"file-meta\">\n                            <span class=\"file-size\">{{ formatFileSize(file.size) }}</span>\n                            <span class=\"file-status\" :class=\"file.status\">\n                                {{ getStatusText(file.status) }}\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"file-actions\">\n                        <button @click=\"showFileInfo(idx)\"\n                                title=\"File Information\"\n                                class=\"file-info-btn\">‚ÑπÔ∏è</button>\n                        <button @click=\"showDataPreview(idx)\"\n                                title=\"Data Preview\"\n                                class=\"data-preview-btn\">üìä</button>\n                        <button v-if=\"file.status === 'local'\"\n                                @click=\"refreshFilePreview(idx)\"\n                                title=\"Refresh Preview\"\n                                class=\"refresh-file-btn\">üîÑ</button>\n                        <button v-if=\"file.status === 'local' && isBackendConnected\"\n                                @click=\"syncSingleFile(file.id)\"\n                                title=\"Sync to Backend\">‚òÅÔ∏è</button>\n                        <button v-if=\"file.status === 'local'\"\n                                @click=\"unloadFile(idx)\"\n                                title=\"Remove from cache\">üóëÔ∏è</button>\n                        <button v-if=\"file.status === 'uploaded'\"\n                                @click=\"deleteFileAction(idx)\"\n                                title=\"Delete from Database\">‚ùå</button>\n                    </div>\n                </div>\n            </div>\n\n            <!-- ÂêåÊ≠•ÂØπËØùÊ°Ü -->\n            <div v-if=\"showSyncDialog\" class=\"sync-dialog\">\n                <div class=\"sync-dialog-content\">\n                    <h3>Sync Files to Backend</h3>\n                    <p>{{ cachedFileCount }} files in cache. Do you want to sync them to the backend?</p>\n                    <div class=\"sync-options\">\n                        <button @click=\"syncAllFiles\" class=\"sync-confirm-btn\">Sync All</button>\n                        <button @click=\"showSyncDialog = false\" class=\"sync-cancel-btn\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Êï∞ÊçÆÈ¢ÑËßàÁªÑ‰ª∂ -->\n        <DataPreviewModal\n            v-if=\"currentPreviewFile\"\n            :show=\"showPreview\"\n            :current-file=\"currentPreviewFile\"\n            :preview-data=\"previewData\"\n            :is-side-preview=\"true\"\n            @close=\"closePreview\"\n        />\n\n        <!-- ÂÜÖÁΩÆÊï∞ÊçÆÈ¢ÑËßàË°®Ê†º -->\n        <div v-if=\"showInlinePreview\" class=\"inline-preview-overlay\" @click.self=\"closeInlinePreview\">\n            <div class=\"inline-preview-content\">\n                <div class=\"inline-preview-header\">\n                    <h4>{{ currentPreviewFile?.name || 'Data Preview' }}</h4>\n                    <div class=\"preview-header-actions\">\n                        <button @click=\"togglePreviewMode\" class=\"toggle-mode-btn\"\n                                :title=\"useModalPreview ? 'Switch to Inline Preview' : 'Switch to Modal Preview'\">\n                            {{ useModalPreview ? 'üìã' : 'üóÇÔ∏è' }}\n                        </button>\n                        <button @click=\"closeInlinePreview\" class=\"close-preview-btn\">√ó</button>\n                    </div>\n                </div>\n\n                <div class=\"inline-preview-table-wrapper\">\n                    <table v-if=\"previewData.length\" class=\"inline-preview-table\">\n                        <thead>\n                            <tr>\n                                <th v-for=\"header in inlineTableHeaders\"\n                                    :key=\"header\">{{ header }}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"(row, idx) in previewData\"\n                                :key=\"idx\">\n                                <td v-for=\"header in inlineTableHeaders\"\n                                    :key=\"header\">{{ row[header] || '' }}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div v-else class=\"inline-preview-empty\">\n                        <div class=\"empty-icon\">üìÑ</div>\n                        <p>No data available for preview.</p>\n                        <p class=\"empty-sub\">The file may be empty or in an unsupported format.</p>\n                    </div>\n                </div>\n\n                <div class=\"inline-preview-footer\">\n                    <span class=\"preview-stats\">{{ getPreviewStats() }}</span>\n                    <div class=\"preview-actions\">\n                        <button @click=\"exportPreviewData\" class=\"export-btn\">üì§ Export</button>\n                        <button @click=\"refreshPreview\" class=\"refresh-btn\">üîÑ Refresh</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</transition>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, nextTick, onMounted, computed } from 'vue'\nimport DataPreviewModal from './DataPreviewModal.vue'\nimport { \n    uploadFile, \n    deleteFile, \n    renameFile, \n    getFilePreview,\n    refreshFilePreview,\n    getAllFiles,\n    checkBackendConnection,\n    getCacheStats,\n    clearCache,\n    syncCachedFileToBackend,\n    syncAllCachedFilesToBackend\n} from '../services/FileServices.js'\n\nconst props = defineProps({\n    show: Boolean\n})\n\nconst emit = defineEmits(['close', 'filesChanged'])\n\n// ÂìçÂ∫îÂºèÊï∞ÊçÆ\nconst isDragging = ref(false)\nconst files = ref([])\nconst showPreview = ref(false)\nconst currentPreviewFile = ref(null)\nconst previewData = ref([])\nconst isBackendConnected = ref(false)\nconst cacheStats = ref({ fileCount: 0, formattedSize: '0 Bytes' })\nconst showSyncDialog = ref(false)\nconst showInlinePreview = ref(false)\nconst useModalPreview = ref(true)\n\n// ËÆ°ÁÆóÂ±ûÊÄß\nconst hasCachedFiles = computed(() => {\n    return files.value.some(f => f.status === 'local')\n})\n\nconst cachedFileCount = computed(() => {\n    return files.value.filter(f => f.status === 'local').length\n})\n\n// ÂÜÖËÅîÈ¢ÑËßàË°®Â§¥\nconst inlineTableHeaders = computed(() => {\n    if (!previewData.value.length) return []\n    return Object.keys(previewData.value[0])\n})\n\n// ÁîüÂëΩÂë®Êúü\nonMounted(async () => {\n    await loadFiles()\n    await checkConnection()\n    updateCacheStats()\n})\n\n// ÊñπÊ≥ï\nasync function loadFiles() {\n    try {\n        const allFiles = await getAllFiles()\n        files.value = allFiles.map(file => ({\n            ...file,\n            isEditing: false,\n            newName: file.name\n        }))\n    } catch (error) {\n        console.error('Âä†ËΩΩÊñá‰ª∂ÂàóË°®Â§±Ë¥•:', error)\n    }\n}\n\nasync function checkConnection() {\n    isBackendConnected.value = await checkBackendConnection()\n}\n\nfunction updateCacheStats() {\n    cacheStats.value = getCacheStats()\n}\n\nfunction triggerFileInput() {\n    document.querySelector('.file-input').click()\n}\n\n// Â§ÑÁêÜÊñá‰ª∂ÈÄâÊã©\nasync function handleFileSelect(event) {\n    const newFiles = Array.from(event.target.files)\n    await processFiles(newFiles)\n}\n\n// Â§ÑÁêÜÊãñÊãΩ\nasync function handleDrop(event) {\n    isDragging.value = false\n    const newFiles = Array.from(event.dataTransfer.files)\n    await processFiles(newFiles)\n}\n\n// Â§ÑÁêÜÊñá‰ª∂‰∏ä‰º†\nasync function processFiles(newFiles) {\n    const validFiles = newFiles.filter(file => {\n        const ext = file.name.split('.').pop().toLowerCase()\n        return ['csv', 'xlsx', 'xls'].includes(ext)\n    })\n\n    for (const file of validFiles) {\n        try {\n            // Ê∑ªÂä†Âà∞ÂàóË°®‰∏≠ÊòæÁ§∫‰∏ä‰º†Áä∂ÊÄÅ\n            const tempFile = {\n                id: Date.now() + Math.random(),\n                name: file.name,\n                size: file.size,\n                status: 'uploading',\n                isEditing: false,\n                newName: file.name\n            }\n            files.value.push(tempFile)\n            \n            // Ë∞ÉÁî®‰∏ä‰º† API\n            const response = await uploadFile(file)\n            \n            // Êõ¥Êñ∞Êñá‰ª∂Áä∂ÊÄÅ\n            const uploadedFileIndex = files.value.findIndex(f => f.id === tempFile.id)\n            if (uploadedFileIndex >= 0) {\n                files.value[uploadedFileIndex] = {\n                    ...response,\n                    isEditing: false,\n                    newName: response.name\n                }\n            }\n            \n            updateCacheStats()\n            emit('filesChanged', files.value)\n            \n        } catch (error) {\n            console.error('Upload failed:', error)\n            const failedFileIndex = files.value.findIndex(f => f.name === file.name)\n            if (failedFileIndex >= 0) {\n                files.value[failedFileIndex].status = 'error'\n            }\n        }\n    }\n}\n\n// ÈáçÂëΩÂêçÁõ∏ÂÖ≥\nfunction startRename(idx) {\n    files.value[idx].isEditing = true\n    files.value[idx].newName = files.value[idx].name\n    nextTick(() => {\n        document.querySelector('.file-item input')?.focus()\n    })\n}\n\nasync function finishRename(idx) {\n    const file = files.value[idx]\n    if (file.newName && file.newName !== file.name) {\n        try {\n            await renameFile(file.id, file.newName)\n            file.name = file.newName\n            updateCacheStats()\n        } catch (error) {\n            console.error('ÈáçÂëΩÂêçÂ§±Ë¥•:', error)\n        }\n    }\n    file.isEditing = false\n}\n\n// È¢ÑËßàÊñá‰ª∂\nasync function previewFile(idx) {\n    const file = files.value[idx]\n    currentPreviewFile.value = file\n    \n    try {\n        const data = await getFilePreview(file.id)\n        \n        // Â§ÑÁêÜ‰∏çÂêåÁ±ªÂûãÁöÑÈ¢ÑËßàÊï∞ÊçÆ\n        if (data.type === 'csv' && data.preview) {\n            previewData.value = data.preview\n        } else if (Array.isArray(data)) {\n            previewData.value = data\n        } else {\n            // Â¶ÇÊûúÊòØÂÖ∂‰ªñÊ†ºÂºèÔºåÂàõÂª∫‰∏Ä‰∏™ÁÆÄÂçïÁöÑÊòæÁ§∫\n            previewData.value = [\n                { \n                    Property: 'File Name', \n                    Value: file.name \n                },\n                { \n                    Property: 'File Size', \n                    Value: formatFileSize(file.size) \n                },\n                { \n                    Property: 'File Type', \n                    Value: file.name.split('.').pop().toUpperCase() \n                },\n                { \n                    Property: 'Status', \n                    Value: getStatusText(file.status) \n                }\n            ]\n        }\n        \n        // Ê†πÊçÆÈ¢ÑËßàÊ®°ÂºèÈÄâÊã©ÊòæÁ§∫ÊñπÂºè\n        if (useModalPreview.value) {\n            showPreview.value = true\n        } else {\n            showInlinePreview.value = true\n        }\n    } catch (error) {\n        console.error('È¢ÑËßàÂ§±Ë¥•:', error)\n        // ÊòæÁ§∫ÈîôËØØ‰ø°ÊÅØ\n        previewData.value = [\n            { \n                Property: 'Error', \n                Value: 'Failed to load preview data' \n            },\n            { \n                Property: 'File Name', \n                Value: file.name \n            },\n            { \n                Property: 'Reason', \n                Value: error.message || 'Unknown error' \n            }\n        ]\n        \n        if (useModalPreview.value) {\n            showPreview.value = true\n        } else {\n            showInlinePreview.value = true\n        }\n    }\n}\n\nfunction closePreview() {\n    showPreview.value = false\n    currentPreviewFile.value = null\n}\n\nfunction closeInlinePreview() {\n    showInlinePreview.value = false\n    currentPreviewFile.value = null\n}\n\n// ÂàáÊç¢È¢ÑËßàÊ®°Âºè\nfunction togglePreviewMode() {\n    useModalPreview.value = !useModalPreview.value\n    \n    if (showInlinePreview.value) {\n        showInlinePreview.value = false\n        showPreview.value = true\n    } else if (showPreview.value) {\n        showPreview.value = false\n        showInlinePreview.value = true\n    }\n}\n\n// Ëé∑ÂèñÈ¢ÑËßàÁªüËÆ°‰ø°ÊÅØ\nfunction getPreviewStats() {\n    if (!previewData.value.length) return 'No data'\n    \n    const rowCount = previewData.value.length\n    const colCount = inlineTableHeaders.value.length\n    \n    return `${rowCount} rows √ó ${colCount} columns`\n}\n\n// ÂØºÂá∫È¢ÑËßàÊï∞ÊçÆ\nfunction exportPreviewData() {\n    if (!previewData.value.length) return\n    \n    const headers = inlineTableHeaders.value\n    const csvContent = [\n        headers.join(','),\n        ...previewData.value.map(row => \n            headers.map(header => `\"${row[header] || ''}\"`).join(',')\n        )\n    ].join('\\n')\n    \n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' })\n    const link = document.createElement('a')\n    const url = URL.createObjectURL(blob)\n    \n    link.setAttribute('href', url)\n    link.setAttribute('download', `${currentPreviewFile.value?.name || 'preview'}_export.csv`)\n    link.style.visibility = 'hidden'\n    \n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n}\n\n// ÂàáÊç¢È¢ÑËßàÊ®°ÂºèÂπ∂ÊòæÁ§∫\nasync function togglePreviewModeAndShow(idx) {\n    useModalPreview.value = !useModalPreview.value\n    await previewFile(idx)\n}\n\n// Âà∑Êñ∞Êñá‰ª∂È¢ÑËßà\nasync function refreshFilePreview(idx) {\n    const file = files.value[idx]\n    if (!file) return\n    \n    try {\n        // Âº∫Âà∂ÈáçÊñ∞Ëß£ÊûêÊñá‰ª∂\n        const refreshedData = await refreshFilePreview(file.id)\n        \n        // Êõ¥Êñ∞Êñá‰ª∂ÂàóË°®‰∏≠ÁöÑÁä∂ÊÄÅ\n        if (refreshedData) {\n            const fileIndex = files.value.findIndex(f => f.id === file.id)\n            if (fileIndex >= 0) {\n                files.value[fileIndex] = {\n                    ...files.value[fileIndex],\n                    content: refreshedData\n                }\n            }\n        }\n        \n        console.log('Êñá‰ª∂È¢ÑËßàÂà∑Êñ∞ÊàêÂäü:', file.name)\n    } catch (error) {\n        console.error('Âà∑Êñ∞Êñá‰ª∂È¢ÑËßàÂ§±Ë¥•:', error)\n        alert(`Âà∑Êñ∞Êñá‰ª∂È¢ÑËßàÂ§±Ë¥•: ${error.message}`)\n    }\n}\n\n// Âà∑Êñ∞È¢ÑËßàÊï∞ÊçÆ\nasync function refreshPreview() {\n    if (!currentPreviewFile.value) return\n    \n    try {\n        // Âº∫Âà∂ÈáçÊñ∞Ëß£ÊûêÊñá‰ª∂\n        const refreshedData = await refreshFilePreview(currentPreviewFile.value.id)\n        \n        // Â§ÑÁêÜÂà∑Êñ∞ÂêéÁöÑÊï∞ÊçÆ\n        if (refreshedData && refreshedData.type === 'csv' && refreshedData.preview) {\n            previewData.value = refreshedData.preview\n        } else if (refreshedData && refreshedData.type === 'excel' && refreshedData.preview) {\n            previewData.value = refreshedData.preview\n        } else if (Array.isArray(refreshedData)) {\n            previewData.value = refreshedData\n        } else {\n            console.error('Âà∑Êñ∞ÂêéÁöÑÊï∞ÊçÆÊ†ºÂºè‰∏çÊ≠£Á°Æ:', refreshedData)\n        }\n    } catch (error) {\n        console.error('Âà∑Êñ∞È¢ÑËßàÂ§±Ë¥•:', error)\n        // Â¶ÇÊûúÂà∑Êñ∞Â§±Ë¥•ÔºåÂõûÈÄÄÂà∞ÂéüÊù•ÁöÑÊñπÊ≥ï\n        const fileIndex = files.value.findIndex(f => f.id === currentPreviewFile.value.id)\n        if (fileIndex >= 0) {\n            await previewFile(fileIndex)\n        }\n    }\n}\n\n// Âà†Èô§Êñá‰ª∂\nasync function deleteFileAction(idx) {\n    const file = files.value[idx]\n    if (confirm(`Are you sure you want to delete \"${file.name}\"?`)) {\n        try {\n            await deleteFile(file.id)\n            files.value.splice(idx, 1)\n            updateCacheStats()\n            emit('filesChanged', files.value)\n        } catch (error) {\n            console.error('Âà†Èô§Â§±Ë¥•:', error)\n        }\n    }\n}\n\n// ‰ªéÁºìÂ≠ò‰∏≠ÁßªÈô§Êñá‰ª∂\nasync function unloadFile(idx) {\n    const file = files.value[idx]\n    if (confirm(`Remove \"${file.name}\" from cache?`)) {\n        try {\n            await deleteFile(file.id)\n            files.value.splice(idx, 1)\n            updateCacheStats()\n            emit('filesChanged', files.value)\n        } catch (error) {\n            console.error('ÁßªÈô§Â§±Ë¥•:', error)\n        }\n    }\n}\n\n// ÂêåÊ≠•Âçï‰∏™Êñá‰ª∂\nasync function syncSingleFile(fileId) {\n    try {\n        const result = await syncCachedFileToBackend(fileId)\n        const fileIndex = files.value.findIndex(f => f.id === fileId)\n        if (fileIndex >= 0) {\n            files.value[fileIndex].status = 'uploaded'\n            files.value[fileIndex].backendId = result.fileId\n        }\n        updateCacheStats()\n        emit('filesChanged', files.value)\n    } catch (error) {\n        console.error('ÂêåÊ≠•Â§±Ë¥•:', error)\n    }\n}\n\n// ÂêåÊ≠•ÊâÄÊúâÁºìÂ≠òÊñá‰ª∂\nasync function syncAllFiles() {\n    showSyncDialog.value = false\n    \n    try {\n        const results = await syncAllCachedFilesToBackend()\n        \n        // Êõ¥Êñ∞Êñá‰ª∂Áä∂ÊÄÅ\n        results.forEach(result => {\n            if (result.success) {\n                const fileIndex = files.value.findIndex(f => f.id === result.fileId)\n                if (fileIndex >= 0) {\n                    files.value[fileIndex].status = 'uploaded'\n                    files.value[fileIndex].backendId = result.result.fileId\n                }\n            }\n        })\n        \n        updateCacheStats()\n        emit('filesChanged', files.value)\n        \n        const successCount = results.filter(r => r.success).length\n        const failCount = results.filter(r => !r.success).length\n        \n        if (failCount > 0) {\n            alert(`Sync completed: ${successCount} succeeded, ${failCount} failed`)\n        } else {\n            alert(`All ${successCount} files synced successfully!`)\n        }\n    } catch (error) {\n        console.error('ÊâπÈáèÂêåÊ≠•Â§±Ë¥•:', error)\n    }\n}\n\n// Ê∏ÖÁ©∫ÁºìÂ≠ò\nasync function clearCacheAction() {\n    if (confirm('Are you sure you want to clear all cached files?')) {\n        try {\n            await clearCache()\n            files.value = files.value.filter(f => f.status !== 'local')\n            updateCacheStats()\n            emit('filesChanged', files.value)\n        } catch (error) {\n            console.error('Ê∏ÖÁ©∫ÁºìÂ≠òÂ§±Ë¥•:', error)\n        }\n    }\n}\n\nfunction onClose() {\n    emit('close')\n}\n\n// Ëé∑ÂèñÁä∂ÊÄÅÊñáÊú¨\nfunction getStatusText(status) {\n    return {\n        local: 'Cached',\n        uploading: 'Uploading',\n        uploaded: 'Uploaded',\n        error: 'Error'\n    }[status]\n}\n\n// Ê†ºÂºèÂåñÊñá‰ª∂Â§ßÂ∞è\nfunction formatFileSize(bytes) {\n    if (!bytes) return '0 Bytes'\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\n// ÊòæÁ§∫Êñá‰ª∂‰ø°ÊÅØÂºπÁ™ó\nfunction showFileInfo(idx) {\n    const file = files.value[idx]\n    if (!file) return\n    \n    // ÂàõÂª∫Êñá‰ª∂‰ø°ÊÅØÂØπËØùÊ°Ü\n    const fileInfoHtml = `\n        <div style=\"padding: 20px; min-width: 350px; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">\n            <h3 style=\"margin: 0 0 16px 0; color: #333; border-bottom: 1px solid #eee; padding-bottom: 8px; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">\n                üìÅ File Information\n            </h3>\n            <div style=\"display: grid; gap: 12px;\">\n                <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n                    <span style=\"font-weight: 600; color: #555; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">File Name:</span>\n                    <span style=\"color: #333; word-break: break-all; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">${file.name}</span>\n                </div>\n                <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n                    <span style=\"font-weight: 600; color: #555; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">File Size:</span>\n                    <span style=\"color: #333; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">${formatFileSize(file.size)}</span>\n                </div>\n                <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n                    <span style=\"font-weight: 600; color: #555; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">File Type:</span>\n                    <span style=\"color: #333; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">${file.name.split('.').pop().toUpperCase()}</span>\n                </div>\n                <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n                    <span style=\"font-weight: 600; color: #555; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">Status:</span>\n                    <span style=\"color: #333; padding: 2px 8px; border-radius: 12px; font-size: 0.9em; background: ${file.status === 'uploaded' ? '#d4edda' : '#fff3cd'}; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">\n                        ${getStatusText(file.status)}\n                    </span>\n                </div>\n                <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n                    <span style=\"font-weight: 600; color: #555; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">Created:</span>\n                    <span style=\"color: #333; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">${new Date(file.lastModified || Date.now()).toLocaleString()}</span>\n                </div>\n                <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n                    <span style=\"font-weight: 600; color: #555; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">ID:</span>\n                    <span style=\"color: #666; font-family: 'Consolas', 'Monaco', monospace; font-size: 0.9em;\">${file.id}</span>\n                </div>\n            </div>\n        </div>\n    `\n    \n    // ‰ΩøÁî®ÁÆÄÂçïÁöÑalertÊàñËÄÖÂàõÂª∫‰∏Ä‰∏™‰∏¥Êó∂ÁöÑÊ®°ÊÄÅÊ°Ü\n    const modal = document.createElement('div')\n    modal.style.cssText = `\n        position: fixed; top: 0; left: 0; width: 100%; height: 100%; \n        background: rgba(0,0,0,0.5); z-index: 10000; display: flex; \n        align-items: center; justify-content: center;\n    `\n    \n    const content = document.createElement('div')\n    content.style.cssText = `\n        background: white; border-radius: 8px; box-shadow: 0 4px 20px rgba(0,0,0,0.15);\n        max-width: 500px; width: 90vw; max-height: 80vh; overflow: auto;\n    `\n    content.innerHTML = fileInfoHtml + `\n        <div style=\"padding: 16px 20px; border-top: 1px solid #eee; text-align: right;\">\n            <button onclick=\"this.closest('.file-info-modal').remove()\" \n                    style=\"background: #007bff; color: white; border: none; padding: 8px 16px; \n                           border-radius: 4px; cursor: pointer; font-size: 0.9em;\n                           font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">\n                Close\n            </button>\n        </div>\n    `\n    \n    modal.className = 'file-info-modal'\n    modal.appendChild(content)\n    \n    // ÁÇπÂáªËÉåÊôØÂÖ≥Èó≠\n    modal.addEventListener('click', (e) => {\n        if (e.target === modal) {\n            modal.remove()\n        }\n    })\n    \n    document.body.appendChild(modal)\n}\n\n// ÊòæÁ§∫Êï∞ÊçÆÈ¢ÑËßàÂºπÁ™ó\nasync function showDataPreview(idx) {\n    const file = files.value[idx]\n    if (!file) return\n    \n    try {\n        // Âä†ËΩΩÈ¢ÑËßàÊï∞ÊçÆ\n        const data = await getFilePreview(file.id)\n        \n        // Ë∞ÉËØï‰ø°ÊÅØ\n        console.log('Preview data received:', data)\n        console.log('Data type:', typeof data)\n        console.log('Data structure:', data)\n        \n        // Â§ÑÁêÜ‰∏çÂêåÁ±ªÂûãÁöÑÈ¢ÑËßàÊï∞ÊçÆ\n        let actualData = []\n        if (data && data.type === 'csv' && Array.isArray(data.preview)) {\n            // CSV Ê†ºÂºèÁöÑÊï∞ÊçÆ\n            actualData = data.preview\n        } else if (data && data.type === 'excel' && Array.isArray(data.preview)) {\n            // Excel Ê†ºÂºèÁöÑÊï∞ÊçÆ\n            actualData = data.preview\n        } else if (Array.isArray(data)) {\n            // Áõ¥Êé•ÊòØÊï∞ÁªÑÊ†ºÂºè\n            actualData = data\n        } else if (data && typeof data === 'object') {\n            // ÂÖ∂‰ªñÂØπË±°Ê†ºÂºèÔºåËΩ¨Êç¢‰∏∫Êï∞ÁªÑ\n            actualData = [data]\n        } else {\n            // Êó†ÊïàÊï∞ÊçÆ\n            actualData = []\n        }\n        \n        // Á°Æ‰øù actualData ÊòØÊï∞ÁªÑ\n        if (!Array.isArray(actualData)) {\n            console.warn('actualData is not an array:', actualData)\n            actualData = []\n        }\n        \n        // ÈôêÂà∂ÊúÄÂ§ö200Ë°å\n        const limitedData = actualData.slice(0, 200)\n        \n        console.log('Limited data:', limitedData)\n        console.log('Limited data length:', limitedData.length)\n        console.log('Is limitedData array?', Array.isArray(limitedData))\n        \n        if (limitedData.length === 0) {\n            // ÊòæÁ§∫Á©∫Êï∞ÊçÆÊèêÁ§∫\n            const emptyModal = document.createElement('div')\n            emptyModal.style.cssText = `\n                position: fixed; top: 0; left: 0; width: 100%; height: 100%; \n                background: rgba(0,0,0,0.5); z-index: 10000; display: flex; \n                align-items: center; justify-content: center;\n            `\n            \n            const content = document.createElement('div')\n            content.style.cssText = `\n                background: white; border-radius: 8px; box-shadow: 0 4px 20px rgba(0,0,0,0.15);\n                padding: 40px; text-align: center; max-width: 400px; width: 90vw;\n            `\n            content.innerHTML = `\n                <div style=\"font-size: 3em; margin-bottom: 16px;\">üìÑ</div>\n                <h3 style=\"margin: 0 0 8px 0; color: #333; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">No Data Available</h3>\n                <p style=\"margin: 0 0 16px 0; color: #666; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">The file \"${file.name}\" appears to be empty or in an unsupported format.</p>\n                <button onclick=\"this.closest('.data-preview-modal').remove()\" \n                        style=\"background: #007bff; color: white; border: none; padding: 8px 16px; \n                               border-radius: 4px; cursor: pointer; font-size: 0.9em;\n                               font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">\n                    Close\n                </button>\n            `\n            \n            emptyModal.className = 'data-preview-modal'\n            emptyModal.appendChild(content)\n            \n            emptyModal.addEventListener('click', (e) => {\n                if (e.target === emptyModal) {\n                    emptyModal.remove()\n                }\n            })\n            \n            document.body.appendChild(emptyModal)\n            return\n        }\n        \n        // ÂÜçÊ¨°Á°ÆËÆ§Êï∞ÊçÆÊ†ºÂºè\n        if (!Array.isArray(limitedData) || limitedData.length === 0) {\n            throw new Error('Data format error: expected array with data')\n        }\n        \n        // Á°Æ‰øùÁ¨¨‰∏ÄË°åÊï∞ÊçÆÂ≠òÂú®Âπ∂‰∏îÊòØÂØπË±°\n        if (!limitedData[0] || typeof limitedData[0] !== 'object') {\n            throw new Error('Invalid data format: first row should be an object')\n        }\n        \n        // ÂàõÂª∫Êï∞ÊçÆÈ¢ÑËßàË°®Ê†º\n        const headers = Object.keys(limitedData[0])\n        console.log('Headers:', headers)\n        \n        if (headers.length === 0) {\n            throw new Error('No columns found in data')\n        }\n        const tableHtml = `\n            <div style=\"display: flex; flex-direction: column; height: 80vh; max-height: 700px; min-height: 500px;\">\n                <div style=\"padding: 16px 20px; border-bottom: 1px solid #eee; background: #f8f9fa; flex-shrink: 0;\">\n                    <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n                        <h3 style=\"margin: 0; color: #333; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">üìä Data Preview - ${file.name}</h3>\n                        <div style=\"display: flex; gap: 8px; align-items: center;\">\n                            <span style=\"font-size: 0.9em; color: #666; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">\n                                ${limitedData.length} rows ${actualData.length > 200 ? '(limited to 200)' : ''} √ó ${headers.length} columns\n                            </span>\n                            <button onclick=\"this.closest('.data-preview-modal').remove()\" \n                                    style=\"background: none; border: none; font-size: 1.5em; cursor: pointer; color: #666;\">\n                                √ó\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div style=\"flex: 1; overflow: auto; padding: 0; min-height: 0;\">\n                    <table style=\"width: 100%; border-collapse: collapse; font-size: 0.9em; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">\n                        <thead style=\"position: sticky; top: 0; background: #f8f9fa; z-index: 1;\">\n                            <tr>\n                                ${headers.map(header => `\n                                    <th style=\"padding: 12px 8px; border-bottom: 2px solid #dee2e6; \n                                               text-align: left; font-weight: 600; color: #495057; \n                                               background: #f8f9fa; white-space: nowrap; \n                                               font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">\n                                        ${header}\n                                    </th>\n                                `).join('')}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            ${limitedData.map((row, idx) => `\n                                <tr style=\"border-bottom: 1px solid #eee; ${idx % 2 === 0 ? 'background: #fafafa;' : ''}\"\n                                    onmouseover=\"this.style.background='#f0f8ff'\" \n                                    onmouseout=\"this.style.background='${idx % 2 === 0 ? '#fafafa' : 'white'}'\">\n                                    ${headers.map(header => `\n                                        <td style=\"padding: 8px; border-bottom: 1px solid #eee; \n                                                   vertical-align: top; max-width: 200px; overflow: hidden; \n                                                   text-overflow: ellipsis; white-space: nowrap;\n                                                   font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\"\n                                            title=\"${String(row[header] || '').replace(/\"/g, '&quot;')}\">\n                                            ${String(row[header] || '')}\n                                        </td>\n                                    `).join('')}\n                                </tr>\n                            `).join('')}\n                        </tbody>\n                    </table>\n                </div>\n                <div style=\"padding: 12px 20px; border-top: 1px solid #eee; background: #f8f9fa; flex-shrink: 0;\">\n                    <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n                        <span style=\"font-size: 0.9em; color: #666; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">\n                            Data preview for ${file.name}\n                        </span>\n                        <button onclick=\"this.closest('.data-preview-modal').remove()\" \n                                style=\"background: #007bff; color: white; border: none; padding: 8px 16px; \n                                       border-radius: 4px; cursor: pointer; font-size: 0.9em;\n                                       font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">\n                            Close\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `\n        \n        // ÂàõÂª∫Ê®°ÊÄÅÊ°Ü\n        const modal = document.createElement('div')\n        modal.style.cssText = `\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%; \n            background: rgba(0,0,0,0.5); z-index: 10000; display: flex; \n            align-items: center; justify-content: center; padding: 20px;\n        `\n        \n        const content = document.createElement('div')\n        content.style.cssText = `\n            background: white; border-radius: 8px; box-shadow: 0 4px 20px rgba(0,0,0,0.15);\n            width: 90vw; max-width: 1200px; height: 80vh; overflow: hidden;\n        `\n        content.innerHTML = tableHtml\n        \n        modal.className = 'data-preview-modal'\n        modal.appendChild(content)\n        \n        // ÁÇπÂáªËÉåÊôØÂÖ≥Èó≠\n        modal.addEventListener('click', (e) => {\n            if (e.target === modal) {\n                modal.remove()\n            }\n        })\n        \n        document.body.appendChild(modal)\n        \n    } catch (error) {\n        console.error('Data preview failed:', error)\n        \n        // ÊòæÁ§∫ÈîôËØØ‰ø°ÊÅØ\n        const errorModal = document.createElement('div')\n        errorModal.style.cssText = `\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%; \n            background: rgba(0,0,0,0.5); z-index: 10000; display: flex; \n            align-items: center; justify-content: center;\n        `\n        \n        const content = document.createElement('div')\n        content.style.cssText = `\n            background: white; border-radius: 8px; box-shadow: 0 4px 20px rgba(0,0,0,0.15);\n            padding: 40px; text-align: center; max-width: 400px; width: 90vw;\n        `\n        content.innerHTML = `\n            <div style=\"font-size: 3em; margin-bottom: 16px;\">‚ùå</div>\n            <h3 style=\"margin: 0 0 8px 0; color: #333; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">Preview Failed</h3>\n            <p style=\"margin: 0 0 16px 0; color: #666; font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">Unable to preview \"${file.name}\". ${error.message || 'Unknown error occurred.'}</p>\n            <button onclick=\"this.closest('.data-preview-modal').remove()\" \n                    style=\"background: #dc3545; color: white; border: none; padding: 8px 16px; \n                           border-radius: 4px; cursor: pointer; font-size: 0.9em;\n                           font-family: 'Microsoft YaHei', 'PingFang SC', 'Hiragino Sans GB', sans-serif;\">\n                Close\n            </button>\n        `\n        \n        errorModal.className = 'data-preview-modal'\n        errorModal.appendChild(content)\n        \n        errorModal.addEventListener('click', (e) => {\n            if (e.target === errorModal) {\n                errorModal.remove()\n            }\n        })\n        \n        document.body.appendChild(errorModal)\n    }\n}\n</script>\n\n<style scoped>\n/* Ê®°ÊÄÅÊ°ÜÂü∫Á°ÄÊ†∑Âºè */\n.file-modal {\n    position: fixed;\n    top: 0; left: 0; right: 0; bottom: 0;\n    background: rgba(0,0,0,0.18);\n    z-index: 9999;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.file-content {\n    width: min(90vw, 480px);\n    max-height: min(90vh, 600px);\n    background: var(--bg-color, #fff);\n    border-radius: 12px;\n    box-shadow: 0 8px 32px rgba(0,0,0,0.18);\n    padding: clamp(12px, 2vw, 18px);\n    overflow-y: auto;\n}\n\n/* Â§¥ÈÉ®Ê†∑Âºè */\n.file-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-bottom: 16px;\n    border-bottom: 1px solid #eee;\n}\n\n.header-title {\n    display: flex;\n    align-items: center;\n    gap: 16px;\n}\n\n.connection-status {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    font-size: 0.8em;\n    color: #666;\n}\n\n.status-dot {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background: #ccc;\n    transition: background-color 0.3s;\n}\n\n.status-dot.connected {\n    background: #4caf50;\n}\n\n.header-actions {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n.refresh-btn,\n.sync-btn {\n    background: none;\n    border: none;\n    font-size: 1.2em;\n    cursor: pointer;\n    padding: 4px;\n    border-radius: 4px;\n    transition: background-color 0.2s;\n}\n\n.refresh-btn:hover,\n.sync-btn:hover {\n    background: #f0f0f0;\n}\n\n.close-btn {\n    background: none;\n    border: none;\n    font-size: 1.5em;\n    cursor: pointer;\n    color: var(--text-color);\n}\n\n/* ÁºìÂ≠òÁªüËÆ°Ê†∑Âºè */\n.cache-stats {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px 12px;\n    background: #f8f9fa;\n    border-radius: 6px;\n    font-size: 0.9em;\n    color: #666;\n    margin-bottom: 16px;\n}\n\n.clear-cache-btn {\n    background: none;\n    border: 1px solid #ddd;\n    padding: 4px 8px;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 0.8em;\n    transition: all 0.2s;\n}\n\n.clear-cache-btn:hover {\n    background: #f0f0f0;\n    border-color: #bbb;\n}\n\n/* ‰∏ä‰º†Âå∫ÂüüÊ†∑Âºè */\n.upload-area {\n    margin: 20px 0;\n    border: 2px dashed #ddd;\n    border-radius: 8px;\n    padding: clamp(20px, 4vw, 40px);\n    text-align: center;\n    transition: all 0.3s ease;\n}\n\n.upload-area.dragging {\n    border-color: #666;\n    background: #f8f9fa;\n}\n\n.file-input {\n    display: none;\n}\n\n.upload-tip {\n    color: #666;\n}\n\n.upload-icon {\n    font-size: 2em;\n    margin-bottom: 12px;\n    display: block;\n}\n\n.upload-tip button {\n    color: #2196f3;\n    background: none;\n    border: none;\n    cursor: pointer;\n    padding: 0 4px;\n}\n\n.sub-tip {\n    color: #999;\n    font-size: 0.9em;\n    margin-top: 8px;\n}\n\n.cache-tip {\n    color: #666;\n    font-size: 0.85em;\n    margin-top: 4px;\n    font-style: italic;\n}\n\n/* Êñá‰ª∂ÂàóË°®Ê†∑Âºè */\n.file-list {\n    margin-top: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n\n.file-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px;\n    background: #f8f9fa;\n    border-radius: 6px;\n    transition: all 0.2s;\n    position: relative;\n}\n\n.file-item:hover {\n    transform: translateX(4px);\n}\n\n.file-item.uploading {\n    opacity: 0.7;\n}\n\n.file-item.uploading::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 2px;\n    background: linear-gradient(90deg, #2196f3, #4caf50);\n    animation: progress 2s infinite;\n}\n\n@keyframes progress {\n    0% { transform: translateX(-100%); }\n    100% { transform: translateX(100%); }\n}\n\n.file-info {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    flex: 1;\n}\n\n.file-meta {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n}\n\n.file-name {\n    font-size: 0.95em;\n    font-weight: 500;\n}\n\n.file-size {\n    font-size: 0.8em;\n    color: #888;\n}\n\n.file-name.editing input {\n    width: 100%;\n    padding: 4px 8px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: inherit;\n}\n\n.file-status {\n    font-size: 0.8em;\n    padding: 2px 8px;\n    border-radius: 12px;\n    background: #eee;\n    font-weight: 500;\n}\n\n.file-status.local { background: #e3f2fd; color: #1976d2; }\n.file-status.uploading { background: #fff3e0; color: #f57c00; }\n.file-status.uploaded { background: #e8f5e9; color: #388e3c; }\n.file-status.error { background: #ffebee; color: #d32f2f; }\n\n.file-actions {\n    display: flex;\n    gap: 8px;\n}\n\n.file-actions button {\n    background: none;\n    border: none;\n    cursor: pointer;\n    padding: 4px;\n    opacity: 0.7;\n    transition: opacity 0.2s;\n}\n\n.file-actions button:hover {\n    opacity: 1;\n}\n\n.preview-mode-btn {\n    font-size: 0.9em;\n}\n\n/* ÂêåÊ≠•ÂØπËØùÊ°ÜÊ†∑Âºè */\n.sync-dialog {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: white;\n    border-radius: 8px;\n    box-shadow: 0 4px 16px rgba(0,0,0,0.2);\n    z-index: 1000;\n    min-width: 300px;\n}\n\n.sync-dialog-content {\n    padding: 20px;\n    text-align: center;\n}\n\n.sync-dialog-content h3 {\n    margin: 0 0 12px 0;\n    color: #333;\n}\n\n.sync-dialog-content p {\n    margin: 0 0 20px 0;\n    color: #666;\n}\n\n.sync-options {\n    display: flex;\n    gap: 12px;\n    justify-content: center;\n}\n\n.sync-confirm-btn {\n    background: #4caf50;\n    color: white;\n    border: none;\n    padding: 8px 16px;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: background-color 0.2s;\n}\n\n.sync-confirm-btn:hover {\n    background: #45a049;\n}\n\n.sync-cancel-btn {\n    background: #f0f0f0;\n    color: #666;\n    border: none;\n    padding: 8px 16px;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: background-color 0.2s;\n}\n\n.sync-cancel-btn:hover {\n    background: #e0e0e0;\n}\n\n/* ÂÜÖËÅîÊï∞ÊçÆÈ¢ÑËßàÊ†∑Âºè */\n.inline-preview-overlay {\n    position: fixed;\n    top: 0; left: 0; right: 0; bottom: 0;\n    background: rgba(0,0,0,0.5);\n    z-index: 10000;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n}\n\n.inline-preview-content {\n    width: min(95vw, 900px);\n    max-height: min(90vh, 700px);\n    background: white;\n    border-radius: 12px;\n    box-shadow: 0 12px 40px rgba(0,0,0,0.3);\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n}\n\n.inline-preview-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 16px 20px;\n    border-bottom: 1px solid #eee;\n    background: #f8f9fa;\n}\n\n.inline-preview-header h4 {\n    margin: 0;\n    color: #333;\n    font-size: 1.1em;\n}\n\n.preview-header-actions {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n.toggle-mode-btn {\n    background: none;\n    border: 1px solid #ddd;\n    padding: 6px 8px;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 1em;\n    transition: all 0.2s;\n}\n\n.toggle-mode-btn:hover {\n    background: #e0e0e0;\n    border-color: #bbb;\n}\n\n.close-preview-btn {\n    background: none;\n    border: none;\n    font-size: 1.5em;\n    cursor: pointer;\n    color: #666;\n    padding: 0;\n}\n\n.close-preview-btn:hover {\n    color: #333;\n}\n\n.inline-preview-table-wrapper {\n    flex: 1;\n    overflow: auto;\n    padding: 0;\n    min-height: 0;\n    max-height: calc(100vh - 200px);\n}\n\n.inline-preview-table {\n    width: 100%;\n    border-collapse: collapse;\n    font-size: 14px;\n}\n\n.inline-preview-table th,\n.inline-preview-table td {\n    padding: 10px 12px;\n    border-bottom: 1px solid #eee;\n    border-right: 1px solid #eee;\n    text-align: left;\n    vertical-align: top;\n}\n\n.inline-preview-table th {\n    background: #f8f9fa;\n    font-weight: 600;\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    border-bottom: 2px solid #ddd;\n}\n\n.inline-preview-table tr:hover {\n    background: #f8f9fa;\n}\n\n.inline-preview-table td:last-child,\n.inline-preview-table th:last-child {\n    border-right: none;\n}\n\n.inline-preview-empty {\n    text-align: center;\n    color: #999;\n    padding: 60px 20px;\n}\n\n.empty-icon {\n    font-size: 4em;\n    margin-bottom: 20px;\n    opacity: 0.5;\n}\n\n.empty-sub {\n    font-size: 0.9em;\n    color: #bbb;\n    margin-top: 8px;\n}\n\n.inline-preview-footer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px 20px;\n    border-top: 1px solid #eee;\n    background: #f8f9fa;\n}\n\n.preview-stats {\n    font-size: 0.9em;\n    color: #666;\n}\n\n.preview-actions {\n    display: flex;\n    gap: 8px;\n}\n\n.export-btn,\n.refresh-btn {\n    background: #007bff;\n    color: white;\n    border: none;\n    padding: 6px 12px;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 0.85em;\n    transition: background-color 0.2s;\n}\n\n.export-btn:hover,\n.refresh-btn:hover {\n    background: #0056b3;\n}\n\n.refresh-btn {\n    background: #28a745;\n}\n\n.refresh-btn:hover {\n    background: #1e7e34;\n}\n\n/* Êñá‰ª∂‰ø°ÊÅØÂíåÊï∞ÊçÆÈ¢ÑËßàÊåâÈíÆÊ†∑Âºè */\n.file-info-btn, .data-preview-btn {\n    background: none;\n    border: 1px solid #ddd;\n    padding: 4px 8px;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 1em;\n    transition: all 0.2s;\n    margin-right: 4px;\n}\n\n.file-info-btn:hover {\n    background: #e3f2fd;\n    border-color: #2196f3;\n}\n\n.data-preview-btn:hover {\n    background: #e8f5e8;\n    border-color: #4caf50;\n}\n\n/* Êñá‰ª∂‰ø°ÊÅØÊ®°ÊÄÅÊ°ÜÊ†∑Âºè */\n.file-info-modal {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n}\n\n.file-info-modal h3 {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n/* Êï∞ÊçÆÈ¢ÑËßàÊ®°ÊÄÅÊ°ÜÊ†∑Âºè */\n.data-preview-modal {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n}\n\n.data-preview-modal table {\n    font-size: 0.85em;\n}\n\n.data-preview-modal th {\n    background: #f8f9fa !important;\n    position: sticky;\n    top: 0;\n    z-index: 10;\n}\n\n.data-preview-modal td {\n    font-size: 0.9em;\n    color: #333;\n}\n\n.data-preview-modal tr:hover {\n    background: #f5f5f5 !important;\n}\n\n/* Âä®ÁîªÊïàÊûú */\n.fade-slide-enter-active,\n.fade-slide-leave-active {\n    transition: all 0.3s;\n}\n\n.fade-slide-enter-from,\n.fade-slide-leave-to {\n    opacity: 0;\n    transform: scale(0.95);\n}\n\n/* ÂìçÂ∫îÂºèÈÄÇÈÖç */\n@media (max-width: 480px) {\n    .file-content {\n        width: 95vw;\n        margin: 10px;\n    }\n    \n    .upload-area {\n        padding: 15px;\n    }\n    \n    .file-item {\n        padding: 8px;\n    }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}