{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, computed, watch, reactive } from 'vue';\nimport { getThemeIcon } from '@/assets/JS/icons.js';\nimport { chartIcons } from '@/assets/JS/chartIcons.js';\n\n// Props\n\nexport default {\n  __name: 'DataMappingConfig',\n  props: {\n    selectedChartType: {\n      type: String,\n      default: ''\n    }\n  },\n  emits: ['generate-chart', 'preview-chart'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n\n    // 拖拽状态\n    const dragOverZone = ref('');\n\n    // 渲染模式\n    const renderMode = ref('realtime');\n\n    // 数据筛选配置\n    const dataFilter = reactive({\n      rowSelection: 'all',\n      startRow: 1,\n      endRow: 100,\n      conditions: []\n    });\n\n    // 图表配置\n    const chartOptions = reactive({\n      title: '',\n      width: 800,\n      height: 400,\n      theme: 'light'\n    });\n\n    // 预览数据\n    const previewData = ref(null);\n\n    // 图表配置映射\n    const chartConfigMap = {\n      Line: [{\n        key: 'xAxis',\n        label: 'X轴',\n        required: true,\n        acceptTypes: ['string', 'date', 'integer'],\n        multiple: false,\n        columns: []\n      }, {\n        key: 'yAxis',\n        label: 'Y轴',\n        required: true,\n        acceptTypes: ['integer', 'float'],\n        multiple: false,\n        columns: []\n      }, {\n        key: 'series',\n        label: '系列',\n        required: false,\n        acceptTypes: ['string'],\n        multiple: false,\n        columns: []\n      }],\n      Bar: [{\n        key: 'xAxis',\n        label: 'X轴(类别)',\n        required: true,\n        acceptTypes: ['string'],\n        multiple: false,\n        columns: []\n      }, {\n        key: 'yAxis',\n        label: 'Y轴(数值)',\n        required: true,\n        acceptTypes: ['integer', 'float'],\n        multiple: false,\n        columns: []\n      }, {\n        key: 'series',\n        label: '系列',\n        required: false,\n        acceptTypes: ['string'],\n        multiple: false,\n        columns: []\n      }],\n      Pie: [{\n        key: 'category',\n        label: '类别',\n        required: true,\n        acceptTypes: ['string'],\n        multiple: false,\n        columns: []\n      }, {\n        key: 'value',\n        label: '数值',\n        required: true,\n        acceptTypes: ['integer', 'float'],\n        multiple: false,\n        columns: []\n      }],\n      Scatter: [{\n        key: 'xAxis',\n        label: 'X轴',\n        required: true,\n        acceptTypes: ['integer', 'float'],\n        multiple: false,\n        columns: []\n      }, {\n        key: 'yAxis',\n        label: 'Y轴',\n        required: true,\n        acceptTypes: ['integer', 'float'],\n        multiple: false,\n        columns: []\n      }, {\n        key: 'size',\n        label: '大小',\n        required: false,\n        acceptTypes: ['integer', 'float'],\n        multiple: false,\n        columns: []\n      }, {\n        key: 'series',\n        label: '系列',\n        required: false,\n        acceptTypes: ['string'],\n        multiple: false,\n        columns: []\n      }],\n      Heatmap: [{\n        key: 'xAxis',\n        label: 'X轴',\n        required: true,\n        acceptTypes: ['string', 'date'],\n        multiple: false,\n        columns: []\n      }, {\n        key: 'yAxis',\n        label: 'Y轴',\n        required: true,\n        acceptTypes: ['string'],\n        multiple: false,\n        columns: []\n      }, {\n        key: 'value',\n        label: '数值',\n        required: true,\n        acceptTypes: ['integer', 'float'],\n        multiple: false,\n        columns: []\n      }]\n    };\n\n    // 动态图表选项配置\n    const dynamicOptionsMap = {\n      Line: [{\n        key: 'smooth',\n        label: '平滑线条',\n        type: 'switch',\n        default: false\n      }, {\n        key: 'showDataLabels',\n        label: '显示数据标签',\n        type: 'switch',\n        default: false\n      }, {\n        key: 'lineWidth',\n        label: '线条宽度',\n        type: 'number',\n        min: 1,\n        max: 10,\n        default: 2\n      }],\n      Bar: [{\n        key: 'barDirection',\n        label: '柱状图方向',\n        type: 'select',\n        choices: [{\n          value: 'vertical',\n          label: '垂直'\n        }, {\n          value: 'horizontal',\n          label: '水平'\n        }],\n        default: 'vertical'\n      }, {\n        key: 'showDataLabels',\n        label: '显示数据标签',\n        type: 'switch',\n        default: false\n      }, {\n        key: 'barWidth',\n        label: '柱子宽度',\n        type: 'number',\n        min: 10,\n        max: 100,\n        default: 60\n      }],\n      Pie: [{\n        key: 'showPercent',\n        label: '显示百分比',\n        type: 'switch',\n        default: true\n      }, {\n        key: 'radius',\n        label: '半径',\n        type: 'number',\n        min: 30,\n        max: 90,\n        default: 60\n      }, {\n        key: 'roseType',\n        label: '玫瑰图',\n        type: 'select',\n        choices: [{\n          value: 'none',\n          label: '无'\n        }, {\n          value: 'radius',\n          label: '半径模式'\n        }, {\n          value: 'area',\n          label: '面积模式'\n        }],\n        default: 'none'\n      }],\n      'Scatter': [{\n        key: 'symbolSize',\n        label: '点大小',\n        type: 'number',\n        min: 4,\n        max: 20,\n        default: 8\n      }, {\n        key: 'showRegression',\n        label: '显示回归线',\n        type: 'switch',\n        default: false\n      }],\n      'Heatmap': [{\n        key: 'colorScale',\n        label: '颜色方案',\n        type: 'select',\n        choices: [{\n          value: 'blue',\n          label: '蓝色'\n        }, {\n          value: 'red',\n          label: '红色'\n        }, {\n          value: 'green',\n          label: '绿色'\n        }, {\n          value: 'viridis',\n          label: '彩虹色'\n        }],\n        default: 'blue'\n      }]\n    };\n\n    // 当前图表配置\n    const chartConfigs = computed(() => {\n      return chartConfigMap[props.selectedChartType] || [];\n    });\n\n    // 当前动态配置选项\n    const dynamicChartOptions = computed(() => {\n      return dynamicOptionsMap[props.selectedChartType] || [];\n    });\n\n    // 可用列（从所有映射中收集）\n    const availableColumns = computed(() => {\n      const columns = [];\n      chartConfigs.value.forEach(config => {\n        config.columns.forEach(col => {\n          columns.push({\n            key: `${col.fileId}-${col.columnName}`,\n            name: `${col.columnName} (${col.fileName})`,\n            type: col.columnType\n          });\n        });\n      });\n      return columns;\n    });\n\n    // 是否可以预览\n    const canPreview = computed(() => {\n      return chartConfigs.value.some(config => config.columns.length > 0);\n    });\n\n    // 是否可以生成\n    const canGenerate = computed(() => {\n      return chartConfigs.value.filter(config => config.required).every(config => config.columns.length > 0);\n    });\n\n    // 监听图表类型变化，重置配置\n    watch(() => props.selectedChartType, newType => {\n      if (newType) {\n        resetConfigs();\n        initializeChartOptions();\n      }\n    }, {\n      immediate: true\n    });\n\n    // 重置配置\n    function resetConfigs() {\n      chartConfigs.value.forEach(config => {\n        config.columns = [];\n      });\n      dataFilter.conditions = [];\n      previewData.value = null;\n    }\n\n    // 初始化图表选项\n    function initializeChartOptions() {\n      const options = dynamicOptionsMap[props.selectedChartType] || [];\n      options.forEach(option => {\n        if (option.default !== undefined) {\n          chartOptions[option.key] = option.default;\n        }\n      });\n    }\n\n    // 获取图表图标\n    function getChartIcon(chartType) {\n      return chartIcons[chartType] || '';\n    }\n\n    // 获取列类型图标\n    function getColumnIcon(type) {\n      const iconMap = {\n        integer: 'hash',\n        float: 'hash',\n        string: 'type',\n        date: 'calendar',\n        boolean: 'check'\n      };\n      return getThemeIcon(iconMap[type] || 'circle');\n    }\n\n    // 拖拽处理\n    function handleDragOver(configKey, event) {\n      event.preventDefault();\n      dragOverZone.value = configKey;\n    }\n    function handleDragLeave(configKey) {\n      dragOverZone.value = '';\n    }\n    function handleDrop(configKey, event) {\n      event.preventDefault();\n      dragOverZone.value = '';\n      try {\n        const data = JSON.parse(event.dataTransfer.getData('application/json'));\n        if (data.type === 'column') {\n          const config = chartConfigs.value.find(c => c.key === configKey);\n          if (!config) return;\n\n          // 检查类型是否匹配\n          if (!config.acceptTypes.includes(data.columnType)) {\n            alert(`此配置项不接受 ${data.columnType} 类型的列`);\n            return;\n          }\n\n          // 检查是否已存在\n          const exists = config.columns.some(col => col.fileId === data.fileId && col.columnName === data.columnName);\n          if (exists) {\n            alert('该列已经添加过了');\n            return;\n          }\n\n          // 添加列\n          const columnData = {\n            fileId: data.fileId,\n            fileName: data.fileName,\n            columnName: data.columnName,\n            columnType: data.columnType,\n            columnStats: data.columnStats\n          };\n          if (config.multiple) {\n            config.columns.push(columnData);\n          } else {\n            config.columns = [columnData];\n          }\n\n          // 实时渲染模式下自动预览\n          if (renderMode.value === 'realtime') {\n            previewChart();\n          }\n        }\n      } catch (error) {\n        console.error('拖拽数据解析失败:', error);\n      }\n    }\n\n    // 移除列\n    function removeColumn(configKey, index) {\n      const config = chartConfigs.value.find(c => c.key === configKey);\n      if (config) {\n        config.columns.splice(index, 1);\n\n        // 实时渲染模式下自动预览\n        if (renderMode.value === 'realtime') {\n          previewChart();\n        }\n      }\n    }\n\n    // 添加筛选条件\n    function addCondition() {\n      dataFilter.conditions.push({\n        column: '',\n        operator: 'eq',\n        value: ''\n      });\n    }\n\n    // 移除筛选条件\n    function removeCondition(index) {\n      dataFilter.conditions.splice(index, 1);\n    }\n\n    // 预览图表\n    function previewChart() {\n      if (!canPreview.value) return;\n\n      // 生成预览数据\n      generatePreviewData();\n\n      // 发送预览事件\n      emit('preview-chart', {\n        chartType: props.selectedChartType,\n        configs: chartConfigs.value,\n        options: chartOptions,\n        filter: dataFilter\n      });\n    }\n\n    // 生成图表\n    function generateChart() {\n      if (!canGenerate.value) return;\n      emit('generate-chart', {\n        chartType: props.selectedChartType,\n        configs: chartConfigs.value,\n        options: chartOptions,\n        filter: dataFilter\n      });\n    }\n\n    // 生成预览数据\n    function generatePreviewData() {\n      // 模拟生成预览数据\n      const columns = [];\n      const rows = [];\n      chartConfigs.value.forEach(config => {\n        config.columns.forEach(col => {\n          if (!columns.includes(col.columnName)) {\n            columns.push(col.columnName);\n          }\n        });\n      });\n\n      // 生成模拟数据\n      for (let i = 0; i < 10; i++) {\n        const row = {};\n        columns.forEach(col => {\n          row[col] = `示例数据${i + 1}`;\n        });\n        rows.push(row);\n      }\n      previewData.value = {\n        columns,\n        rows,\n        rowCount: rows.length,\n        columnCount: columns.length\n      };\n    }\n\n    // 监听实时渲染模式\n    watch(renderMode, newMode => {\n      if (newMode === 'realtime' && canPreview.value) {\n        previewChart();\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      dragOverZone,\n      renderMode,\n      dataFilter,\n      chartOptions,\n      previewData,\n      chartConfigMap,\n      dynamicOptionsMap,\n      chartConfigs,\n      dynamicChartOptions,\n      availableColumns,\n      canPreview,\n      canGenerate,\n      resetConfigs,\n      initializeChartOptions,\n      getChartIcon,\n      getColumnIcon,\n      handleDragOver,\n      handleDragLeave,\n      handleDrop,\n      removeColumn,\n      addCondition,\n      removeCondition,\n      previewChart,\n      generateChart,\n      generatePreviewData,\n      ref,\n      computed,\n      watch,\n      reactive,\n      get getThemeIcon() {\n        return getThemeIcon;\n      },\n      get chartIcons() {\n        return chartIcons;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","reactive","getThemeIcon","chartIcons","props","__props","emit","__emit","dragOverZone","renderMode","dataFilter","rowSelection","startRow","endRow","conditions","chartOptions","title","width","height","theme","previewData","chartConfigMap","Line","key","label","required","acceptTypes","multiple","columns","Bar","Pie","Scatter","Heatmap","dynamicOptionsMap","type","default","min","max","choices","value","chartConfigs","selectedChartType","dynamicChartOptions","availableColumns","forEach","config","col","push","fileId","columnName","name","fileName","columnType","canPreview","some","length","canGenerate","filter","every","newType","resetConfigs","initializeChartOptions","immediate","options","option","undefined","getChartIcon","chartType","getColumnIcon","iconMap","integer","float","string","date","boolean","handleDragOver","configKey","event","preventDefault","handleDragLeave","handleDrop","data","JSON","parse","dataTransfer","getData","find","c","includes","alert","exists","columnData","columnStats","previewChart","error","console","removeColumn","index","splice","addCondition","column","operator","removeCondition","generatePreviewData","configs","generateChart","rows","i","row","rowCount","columnCount","newMode"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/DataMappingConfig.vue"],"sourcesContent":["<template>\n  <div class=\"data-mapping-config\">\n    <!-- 配置面板头部 -->\n    <div class=\"config-header\">\n      <div class=\"config-title\">\n        <span class=\"title-icon\" v-html=\"getThemeIcon('settings')\"></span>\n        <span>数据映射配置</span>\n      </div>\n      <div class=\"chart-type-indicator\" v-if=\"selectedChartType\">\n        <span class=\"chart-icon\" v-html=\"getChartIcon(selectedChartType)\"></span>\n        <span>{{ selectedChartType }}</span>\n      </div>\n    </div>\n\n    <!-- 图表类型未选择提示 -->\n    <div v-if=\"!selectedChartType\" class=\"no-chart-selected\">\n      <div class=\"hint-icon\" v-html=\"getThemeIcon('info')\"></div>\n      <div class=\"hint-text\">请先在左侧选择图表类型</div>\n    </div>\n\n    <!-- 配置内容 -->\n    <div v-else class=\"config-content\">\n      <!-- 数据映射区域 -->\n      <div class=\"mapping-section\">\n        <h3 class=\"section-title\">数据映射</h3>\n\n        <!-- 动态配置项 -->\n        <div class=\"mapping-items\">\n          <div\n            v-for=\"configItem in chartConfigs\"\n            :key=\"configItem.key\"\n            class=\"mapping-item\"\n            :class=\"{ 'required': configItem.required, 'has-data': configItem.columns.length > 0 }\">\n\n            <div class=\"mapping-header\">\n              <div class=\"mapping-label\">\n                <span class=\"label-text\">{{ configItem.label }}</span>\n                <span v-if=\"configItem.required\" class=\"required-mark\">*</span>\n              </div>\n              <div class=\"mapping-info\">\n                <span class=\"column-count\">{{ configItem.columns.length }}</span>\n                <span class=\"accept-types\">{{ configItem.acceptTypes.join(', ') }}</span>\n              </div>\n            </div>\n\n            <div\n              class=\"mapping-dropzone\"\n              :class=\"{ 'drag-over': dragOverZone === configItem.key }\"\n              @drop=\"handleDrop(configItem.key, $event)\"\n              @dragover.prevent=\"handleDragOver(configItem.key, $event)\"\n              @dragleave=\"handleDragLeave(configItem.key)\">\n\n              <!-- 已映射的列 -->\n              <div v-if=\"configItem.columns.length > 0\" class=\"mapped-columns\">\n                <div\n                  v-for=\"(column, index) in configItem.columns\"\n                  :key=\"`${column.fileId}-${column.columnName}`\"\n                  class=\"mapped-column\">\n                  <div class=\"column-info\">\n                    <span class=\"column-icon\" v-html=\"getColumnIcon(column.columnType)\"></span>\n                    <span class=\"column-name\">{{ column.columnName }}</span>\n                    <span class=\"column-source\">{{ column.fileName }}</span>\n                  </div>\n                  <button\n                    class=\"remove-column-btn\"\n                    @click=\"removeColumn(configItem.key, index)\"\n                    :title=\"'移除 ' + column.columnName\">\n                    <span v-html=\"getThemeIcon('close')\"></span>\n                  </button>\n                </div>\n              </div>\n\n              <!-- 拖拽提示 -->\n              <div v-else class=\"dropzone-hint\">\n                <span class=\"hint-icon\" v-html=\"getThemeIcon('upload')\"></span>\n                <span class=\"hint-text\">\n                  拖拽{{ configItem.acceptTypes.join('或') }}类型的列到此处\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 数据筛选区域 -->\n      <div class=\"filter-section\">\n        <h3 class=\"section-title\">数据筛选</h3>\n        \n        <div class=\"filter-options\">\n          <!-- 行筛选 -->\n          <div class=\"filter-group\">\n            <label class=\"filter-label\">数据行数</label>\n            <select v-model=\"dataFilter.rowSelection\" class=\"filter-select\">\n              <option value=\"all\">全部行</option>\n              <option value=\"range\">范围选择</option>\n              <option value=\"condition\">条件筛选</option>\n            </select>\n          </div>\n\n          <!-- 范围选择 -->\n          <div v-if=\"dataFilter.rowSelection === 'range'\" class=\"range-inputs\">\n            <div class=\"input-group\">\n              <label class=\"input-label\">起始行</label>\n              <input\n                v-model.number=\"dataFilter.startRow\"\n                type=\"number\"\n                min=\"1\"\n                class=\"range-input\">\n            </div>\n            <div class=\"input-group\">\n              <label class=\"input-label\">结束行</label>\n              <input\n                v-model.number=\"dataFilter.endRow\"\n                type=\"number\"\n                min=\"1\"\n                class=\"range-input\">\n            </div>\n          </div>\n\n          <!-- 条件筛选 -->\n          <div v-if=\"dataFilter.rowSelection === 'condition'\" class=\"condition-filters\">\n            <div\n              v-for=\"(condition, index) in dataFilter.conditions\"\n              :key=\"index\"\n              class=\"condition-item\">\n              <select v-model=\"condition.column\" class=\"condition-select\">\n                <option value=\"\">选择列</option>\n                <option\n                  v-for=\"column in availableColumns\"\n                  :key=\"column.key\"\n                  :value=\"column.key\">\n                  {{ column.name }}\n                </option>\n              </select>\n              <select v-model=\"condition.operator\" class=\"condition-select\">\n                <option value=\"eq\">等于</option>\n                <option value=\"ne\">不等于</option>\n                <option value=\"gt\">大于</option>\n                <option value=\"lt\">小于</option>\n                <option value=\"gte\">大于等于</option>\n                <option value=\"lte\">小于等于</option>\n                <option value=\"contains\">包含</option>\n              </select>\n              <input\n                v-model=\"condition.value\"\n                type=\"text\"\n                placeholder=\"筛选值\"\n                class=\"condition-input\">\n              <button\n                class=\"remove-condition-btn\"\n                @click=\"removeCondition(index)\">\n                <span v-html=\"getThemeIcon('close')\"></span>\n              </button>\n            </div>\n            <button class=\"add-condition-btn\" @click=\"addCondition\">\n              <span v-html=\"getThemeIcon('plus')\"></span>\n              添加条件\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 图表配置区域 -->\n      <div class=\"chart-config-section\">\n        <h3 class=\"section-title\">图表配置</h3>\n        \n        <div class=\"chart-options\">\n          <!-- 通用配置 -->\n          <div class=\"option-group\">\n            <label class=\"option-label\">图表标题</label>\n            <input\n              v-model=\"chartOptions.title\"\n              type=\"text\"\n              placeholder=\"输入图表标题\"\n              class=\"option-input\">\n          </div>\n\n          <!-- 动态配置项 -->\n          <div\n            v-for=\"option in dynamicChartOptions\"\n            :key=\"option.key\"\n            class=\"option-group\">\n            <label class=\"option-label\">{{ option.label }}</label>\n\n            <!-- 文本输入 -->\n            <input\n              v-if=\"option.type === 'text'\"\n              v-model=\"chartOptions[option.key]\"\n              type=\"text\"\n              :placeholder=\"option.placeholder || ''\"\n              class=\"option-input\">\n\n            <!-- 数字输入 -->\n            <input\n              v-else-if=\"option.type === 'number'\"\n              v-model.number=\"chartOptions[option.key]\"\n              type=\"number\"\n              :min=\"option.min || 0\"\n              :max=\"option.max || 100\"\n              class=\"option-input\">\n\n            <!-- 选择框 -->\n            <select\n              v-else-if=\"option.type === 'select'\"\n              v-model=\"chartOptions[option.key]\"\n              class=\"option-select\">\n              <option\n                v-for=\"choice in option.choices\"\n                :key=\"choice.value\"\n                :value=\"choice.value\">\n                {{ choice.label }}\n              </option>\n            </select>\n\n            <!-- 开关 -->\n            <div\n              v-else-if=\"option.type === 'switch'\"\n              class=\"option-switch\">\n              <input\n                v-model=\"chartOptions[option.key]\"\n                type=\"checkbox\"\n                :id=\"option.key\"\n                class=\"switch-input\">\n              <label :for=\"option.key\" class=\"switch-label\"></label>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 渲染控制区域 -->\n      <div class=\"render-control-section\">\n        <h3 class=\"section-title\">渲染控制</h3>\n        \n        <div class=\"render-options\">\n          <div class=\"option-group\">\n            <label class=\"option-label\">渲染模式</label>\n            <div class=\"render-mode-toggle\">\n              <button \n                class=\"mode-btn\"\n                :class=\"{ active: renderMode === 'realtime' }\"\n                @click=\"renderMode = 'realtime'\">\n                <span v-html=\"getThemeIcon('zap')\"></span>\n                实时渲染\n              </button>\n              <button \n                class=\"mode-btn\"\n                :class=\"{ active: renderMode === 'manual' }\"\n                @click=\"renderMode = 'manual'\">\n                <span v-html=\"getThemeIcon('play')\"></span>\n                手动渲染\n              </button>\n            </div>\n          </div>\n          \n          <div class=\"render-actions\">\n            <button \n              class=\"action-btn preview-btn\"\n              @click=\"previewChart\"\n              :disabled=\"!canPreview\">\n              <span v-html=\"getThemeIcon('eye')\"></span>\n              预览图表\n            </button>\n            <button \n              class=\"action-btn generate-btn\"\n              @click=\"generateChart\"\n              :disabled=\"!canGenerate\">\n              <span v-html=\"getThemeIcon('image')\"></span>\n              生成图表\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 数据预览区域 -->\n      <div class=\"data-preview-section\" v-if=\"previewData\">\n        <h3 class=\"section-title\">数据预览</h3>\n        <div class=\"preview-stats\">\n          <span class=\"stat-item\">\n            <span class=\"stat-label\">行数:</span>\n            <span class=\"stat-value\">{{ previewData.rowCount }}</span>\n          </span>\n          <span class=\"stat-item\">\n            <span class=\"stat-label\">列数:</span>\n            <span class=\"stat-value\">{{ previewData.columnCount }}</span>\n          </span>\n        </div>\n        \n        <div class=\"preview-table-container\">\n          <table class=\"preview-table\">\n            <thead>\n              <tr>\n                <th v-for=\"column in previewData.columns\" :key=\"column\">\n                  {{ column }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(row, index) in previewData.rows.slice(0, 5)\" :key=\"index\">\n                <td v-for=\"column in previewData.columns\" :key=\"column\">\n                  {{ row[column] }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch, reactive } from 'vue'\nimport { getThemeIcon } from '@/assets/JS/icons.js'\nimport { chartIcons } from '@/assets/JS/chartIcons.js'\n\n// Props\nconst props = defineProps({\n  selectedChartType: {\n    type: String,\n    default: ''\n  }\n})\n\n// Emits\nconst emit = defineEmits(['generate-chart', 'preview-chart'])\n\n// 拖拽状态\nconst dragOverZone = ref('')\n\n// 渲染模式\nconst renderMode = ref('realtime')\n\n// 数据筛选配置\nconst dataFilter = reactive({\n  rowSelection: 'all',\n  startRow: 1,\n  endRow: 100,\n  conditions: []\n})\n\n// 图表配置\nconst chartOptions = reactive({\n  title: '',\n  width: 800,\n  height: 400,\n  theme: 'light'\n})\n\n// 预览数据\nconst previewData = ref(null)\n\n// 图表配置映射\nconst chartConfigMap = {\n  Line: [\n    { key: 'xAxis', label: 'X轴', required: true, acceptTypes: ['string', 'date', 'integer'], multiple: false, columns: [] },\n    { key: 'yAxis', label: 'Y轴', required: true, acceptTypes: ['integer', 'float'], multiple: false, columns: [] },\n    { key: 'series', label: '系列', required: false, acceptTypes: ['string'], multiple: false, columns: [] }\n  ],\n  Bar: [\n    {\n      key: 'xAxis',\n      label: 'X轴(类别)',\n      required: true,\n      acceptTypes: ['string'],\n      multiple: false,\n      columns: []\n    },\n    {\n      key: 'yAxis',\n      label: 'Y轴(数值)',\n      required: true,\n      acceptTypes: ['integer', 'float'],\n      multiple: false,\n      columns: []\n    },\n    {\n      key: 'series',\n      label: '系列',\n      required: false,\n      acceptTypes: ['string'],\n      multiple: false,\n      columns: []\n    }\n  ],\n  Pie: [\n    {\n      key: 'category',\n      label: '类别',\n      required: true,\n      acceptTypes: ['string'],\n      multiple: false,\n      columns: []\n    },\n    {\n      key: 'value',\n      label: '数值',\n      required: true,\n      acceptTypes: ['integer', 'float'],\n      multiple: false,\n      columns: []\n    }\n  ],\n  Scatter: [\n    { key: 'xAxis', label: 'X轴', required: true, acceptTypes: ['integer', 'float'], multiple: false, columns: [] },\n    { key: 'yAxis', label: 'Y轴', required: true, acceptTypes: ['integer', 'float'], multiple: false, columns: [] },\n    { key: 'size', label: '大小', required: false, acceptTypes: ['integer', 'float'], multiple: false, columns: [] },\n    { key: 'series', label: '系列', required: false, acceptTypes: ['string'], multiple: false, columns: [] }\n  ],\n  Heatmap: [\n    {\n      key: 'xAxis',\n      label: 'X轴',\n      required: true,\n      acceptTypes: ['string', 'date'],\n      multiple: false,\n      columns: []\n    },\n    {\n      key: 'yAxis',\n      label: 'Y轴',\n      required: true,\n      acceptTypes: ['string'],\n      multiple: false,\n      columns: []\n    },\n    {\n      key: 'value',\n      label: '数值',\n      required: true,\n      acceptTypes: ['integer', 'float'],\n      multiple: false,\n      columns: []\n    }\n  ]\n}\n\n// 动态图表选项配置\nconst dynamicOptionsMap = {\n  Line: [\n    { key: 'smooth', label: '平滑线条', type: 'switch', default: false },\n    { key: 'showDataLabels', label: '显示数据标签', type: 'switch', default: false },\n    { key: 'lineWidth', label: '线条宽度', type: 'number', min: 1, max: 10, default: 2 }\n  ],\n  Bar: [\n    {\n      key: 'barDirection',\n      label: '柱状图方向',\n      type: 'select',\n      choices: [\n        { value: 'vertical', label: '垂直' },\n        { value: 'horizontal', label: '水平' }\n      ],\n      default: 'vertical'\n    },\n    { key: 'showDataLabels', label: '显示数据标签', type: 'switch', default: false },\n    { key: 'barWidth', label: '柱子宽度', type: 'number', min: 10, max: 100, default: 60 }\n  ],\n  Pie: [\n    { key: 'showPercent', label: '显示百分比', type: 'switch', default: true },\n    { key: 'radius', label: '半径', type: 'number', min: 30, max: 90, default: 60 },\n    {\n      key: 'roseType',\n      label: '玫瑰图',\n      type: 'select',\n      choices: [\n        { value: 'none', label: '无' },\n        { value: 'radius', label: '半径模式' },\n        { value: 'area', label: '面积模式' }\n      ], default: 'none' }\n  ],\n  'Scatter': [\n    { key: 'symbolSize', label: '点大小', type: 'number', min: 4, max: 20, default: 8 },\n    { key: 'showRegression', label: '显示回归线', type: 'switch', default: false }\n  ],\n  'Heatmap': [\n    { key: 'colorScale', label: '颜色方案', type: 'select', choices: [\n      { value: 'blue', label: '蓝色' },\n      { value: 'red', label: '红色' },\n      { value: 'green', label: '绿色' },\n      { value: 'viridis', label: '彩虹色' }\n    ], default: 'blue' }\n  ]\n}\n\n// 当前图表配置\nconst chartConfigs = computed(() => {\n  return chartConfigMap[props.selectedChartType] || []\n})\n\n// 当前动态配置选项\nconst dynamicChartOptions = computed(() => {\n  return dynamicOptionsMap[props.selectedChartType] || []\n})\n\n// 可用列（从所有映射中收集）\nconst availableColumns = computed(() => {\n  const columns = []\n  chartConfigs.value.forEach(config => {\n    config.columns.forEach(col => {\n      columns.push({\n        key: `${col.fileId}-${col.columnName}`,\n        name: `${col.columnName} (${col.fileName})`,\n        type: col.columnType\n      })\n    })\n  })\n  return columns\n})\n\n// 是否可以预览\nconst canPreview = computed(() => {\n  return chartConfigs.value.some(config => config.columns.length > 0)\n})\n\n// 是否可以生成\nconst canGenerate = computed(() => {\n  return chartConfigs.value\n    .filter(config => config.required)\n    .every(config => config.columns.length > 0)\n})\n\n// 监听图表类型变化，重置配置\nwatch(() => props.selectedChartType, (newType) => {\n  if (newType) {\n    resetConfigs()\n    initializeChartOptions()\n  }\n}, { immediate: true })\n\n// 重置配置\nfunction resetConfigs () {\n  chartConfigs.value.forEach(config => {\n    config.columns = []\n  })\n  dataFilter.conditions = []\n  previewData.value = null\n}\n\n// 初始化图表选项\nfunction initializeChartOptions () {\n  const options = dynamicOptionsMap[props.selectedChartType] || []\n  options.forEach(option => {\n    if (option.default !== undefined) {\n      chartOptions[option.key] = option.default\n    }\n  })\n}\n\n// 获取图表图标\nfunction getChartIcon (chartType) {\n  return chartIcons[chartType] || ''\n}\n\n// 获取列类型图标\nfunction getColumnIcon (type) {\n  const iconMap = {\n    integer: 'hash',\n    float: 'hash',\n    string: 'type',\n    date: 'calendar',\n    boolean: 'check'\n  }\n  return getThemeIcon(iconMap[type] || 'circle')\n}\n\n// 拖拽处理\nfunction handleDragOver (configKey, event) {\n  event.preventDefault()\n  dragOverZone.value = configKey\n}\n\nfunction handleDragLeave (configKey) {\n  dragOverZone.value = ''\n}\n\nfunction handleDrop (configKey, event) {\n  event.preventDefault()\n  dragOverZone.value = ''\n  \n  try {\n    const data = JSON.parse(event.dataTransfer.getData('application/json'))\n    \n    if (data.type === 'column') {\n      const config = chartConfigs.value.find(c => c.key === configKey)\n      if (!config) return\n      \n      // 检查类型是否匹配\n      if (!config.acceptTypes.includes(data.columnType)) {\n        alert(`此配置项不接受 ${data.columnType} 类型的列`)\n        return\n      }\n      \n      // 检查是否已存在\n      const exists = config.columns.some(col => \n        col.fileId === data.fileId && col.columnName === data.columnName\n      )\n      \n      if (exists) {\n        alert('该列已经添加过了')\n        return\n      }\n      \n      // 添加列\n      const columnData = {\n        fileId: data.fileId,\n        fileName: data.fileName,\n        columnName: data.columnName,\n        columnType: data.columnType,\n        columnStats: data.columnStats\n      }\n      \n      if (config.multiple) {\n        config.columns.push(columnData)\n      } else {\n        config.columns = [columnData]\n      }\n      \n      // 实时渲染模式下自动预览\n      if (renderMode.value === 'realtime') {\n        previewChart()\n      }\n    }\n  } catch (error) {\n    console.error('拖拽数据解析失败:', error)\n  }\n}\n\n// 移除列\nfunction removeColumn (configKey, index) {\n  const config = chartConfigs.value.find(c => c.key === configKey)\n  if (config) {\n    config.columns.splice(index, 1)\n\n    // 实时渲染模式下自动预览\n    if (renderMode.value === 'realtime') {\n      previewChart()\n    }\n  }\n}\n\n// 添加筛选条件\nfunction addCondition () {\n  dataFilter.conditions.push({\n    column: '',\n    operator: 'eq',\n    value: ''\n  })\n}\n\n// 移除筛选条件\nfunction removeCondition (index) {\n  dataFilter.conditions.splice(index, 1)\n}\n\n// 预览图表\nfunction previewChart () {\n  if (!canPreview.value) return\n\n  // 生成预览数据\n  generatePreviewData()\n\n  // 发送预览事件\n  emit('preview-chart', {\n    chartType: props.selectedChartType,\n    configs: chartConfigs.value,\n    options: chartOptions,\n    filter: dataFilter\n  })\n}\n\n// 生成图表\nfunction generateChart () {\n  if (!canGenerate.value) return\n\n  emit('generate-chart', {\n    chartType: props.selectedChartType,\n    configs: chartConfigs.value,\n    options: chartOptions,\n    filter: dataFilter\n  })\n}\n\n// 生成预览数据\nfunction generatePreviewData () {\n  // 模拟生成预览数据\n  const columns = []\n  const rows = []\n\n  chartConfigs.value.forEach(config => {\n    config.columns.forEach(col => {\n      if (!columns.includes(col.columnName)) {\n        columns.push(col.columnName)\n      }\n    })\n  })\n\n  // 生成模拟数据\n  for (let i = 0; i < 10; i++) {\n    const row = {}\n    columns.forEach(col => {\n      row[col] = `示例数据${i + 1}`\n    })\n    rows.push(row)\n  }\n\n  previewData.value = {\n    columns,\n    rows,\n    rowCount: rows.length,\n    columnCount: columns.length\n  }\n}\n\n// 监听实时渲染模式\nwatch(renderMode, (newMode) => {\n  if (newMode === 'realtime' && canPreview.value) {\n    previewChart()\n  }\n})\n</script>\n\n<style scoped>\n.data-mapping-config {\n  height: 100%;\n  overflow-y: auto;\n  padding: 16px;\n  background: var(--bg-color);\n}\n\n.config-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n[data-theme=\"dark\"] .config-header {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.config-title {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  color: var(--text-color);\n}\n\n.title-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  height: 20px;\n}\n\n.chart-type-indicator {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 4px 8px;\n  background: rgba(59, 130, 246, 0.1);\n  border-radius: 6px;\n  font-size: 12px;\n  color: #3b82f6;\n}\n\n[data-theme=\"dark\"] .chart-type-indicator {\n  background: rgba(96, 165, 250, 0.2);\n  color: #60a5fa;\n}\n\n.chart-icon {\n  width: 16px;\n  height: 16px;\n}\n\n.no-chart-selected {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px 16px;\n  text-align: center;\n  color: var(--text-secondary);\n}\n\n.hint-icon {\n  width: 48px;\n  height: 48px;\n  margin-bottom: 16px;\n  opacity: 0.5;\n}\n\n.hint-text {\n  font-size: 14px;\n}\n\n.config-content {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n}\n\n.section-title {\n  font-size: 14px;\n  font-weight: 600;\n  color: var(--text-color);\n  margin-bottom: 12px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n}\n\n[data-theme=\"dark\"] .section-title {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.08);\n}\n\n.mapping-items {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.mapping-item {\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  padding: 12px;\n  background: rgba(255, 255, 255, 0.5);\n  transition: all 0.2s ease;\n}\n\n.mapping-item.required {\n  border-color: #fbbf24;\n}\n\n.mapping-item.has-data {\n  border-color: #10b981;\n  background: rgba(16, 185, 129, 0.05);\n}\n\n[data-theme=\"dark\"] .mapping-item {\n  background: rgba(55, 65, 81, 0.3);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n[data-theme=\"dark\"] .mapping-item.has-data {\n  background: rgba(16, 185, 129, 0.1);\n}\n\n.mapping-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.mapping-label {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-weight: 500;\n  color: var(--text-color);\n}\n\n.required-mark {\n  color: #ef4444;\n  font-weight: 600;\n}\n\n.mapping-info {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  color: var(--text-secondary);\n}\n\n.column-count {\n  background: rgba(59, 130, 246, 0.1);\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-weight: 500;\n}\n\n.accept-types {\n  font-style: italic;\n}\n\n.mapping-dropzone {\n  min-height: 60px;\n  border: 2px dashed rgba(0, 0, 0, 0.2);\n  border-radius: 6px;\n  padding: 8px;\n  transition: all 0.2s ease;\n  background: rgba(249, 250, 251, 0.5);\n}\n\n.mapping-dropzone.drag-over {\n  border-color: #3b82f6;\n  background: rgba(59, 130, 246, 0.1);\n}\n\n[data-theme=\"dark\"] .mapping-dropzone {\n  border: 2px dashed rgba(255, 255, 255, 0.2);\n  background: rgba(17, 24, 39, 0.3);\n}\n\n[data-theme=\"dark\"] .mapping-dropzone.drag-over {\n  border-color: #60a5fa;\n  background: rgba(96, 165, 250, 0.1);\n}\n\n.dropzone-hint {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: var(--text-secondary);\n  font-size: 12px;\n  text-align: center;\n}\n\n.dropzone-hint .hint-icon {\n  width: 24px;\n  height: 24px;\n  margin-bottom: 4px;\n  opacity: 0.5;\n}\n\n.mapped-columns {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.mapped-column {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 6px 8px;\n  background: rgba(255, 255, 255, 0.8);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-size: 12px;\n}\n\n[data-theme=\"dark\"] .mapped-column {\n  background: rgba(55, 65, 81, 0.5);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.column-info {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  flex: 1;\n}\n\n.column-icon {\n  width: 14px;\n  height: 14px;\n  color: var(--text-secondary);\n}\n\n.column-name {\n  font-weight: 500;\n  color: var(--text-color);\n}\n\n.column-source {\n  color: var(--text-secondary);\n  font-size: 11px;\n}\n\n.remove-column-btn {\n  background: none;\n  border: none;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: var(--text-secondary);\n  border-radius: 2px;\n  transition: all 0.2s ease;\n}\n\n.remove-column-btn:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: #ef4444;\n}\n\n.filter-options {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.filter-group {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.filter-label {\n  font-size: 13px;\n  font-weight: 500;\n  color: var(--text-color);\n  min-width: 80px;\n}\n\n.filter-select {\n  padding: 6px 8px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  background: rgba(255, 255, 255, 0.8);\n  color: var(--text-color);\n  font-size: 12px;\n}\n\n[data-theme=\"dark\"] .filter-select {\n  background: rgba(55, 65, 81, 0.8);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.range-inputs {\n  display: flex;\n  gap: 12px;\n  margin-top: 8px;\n}\n\n.input-group {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  flex: 1;\n}\n\n.input-label {\n  font-size: 12px;\n  color: var(--text-secondary);\n}\n\n.range-input {\n  padding: 6px 8px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  background: rgba(255, 255, 255, 0.8);\n  color: var(--text-color);\n  font-size: 12px;\n}\n\n[data-theme=\"dark\"] .range-input {\n  background: rgba(55, 65, 81, 0.8);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.condition-filters {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 8px;\n}\n\n.condition-item {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n}\n\n.condition-select {\n  padding: 4px 6px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  background: rgba(255, 255, 255, 0.8);\n  color: var(--text-color);\n  font-size: 12px;\n  min-width: 80px;\n}\n\n[data-theme=\"dark\"] .condition-select {\n  background: rgba(55, 65, 81, 0.8);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.condition-input {\n  padding: 4px 6px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  background: rgba(255, 255, 255, 0.8);\n  color: var(--text-color);\n  font-size: 12px;\n  flex: 1;\n}\n\n[data-theme=\"dark\"] .condition-input {\n  background: rgba(55, 65, 81, 0.8);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.remove-condition-btn {\n  background: none;\n  border: none;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: var(--text-secondary);\n  border-radius: 4px;\n  transition: all 0.2s ease;\n}\n\n.remove-condition-btn:hover {\n  background: rgba(239, 68, 68, 0.1);\n  color: #ef4444;\n}\n\n.add-condition-btn {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 6px 8px;\n  background: rgba(59, 130, 246, 0.1);\n  border: 1px solid rgba(59, 130, 246, 0.3);\n  border-radius: 4px;\n  color: #3b82f6;\n  font-size: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.add-condition-btn:hover {\n  background: rgba(59, 130, 246, 0.2);\n}\n\n[data-theme=\"dark\"] .add-condition-btn {\n  background: rgba(96, 165, 250, 0.2);\n  border: 1px solid rgba(96, 165, 250, 0.3);\n  color: #60a5fa;\n}\n\n.chart-options {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.option-group {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.option-label {\n  font-size: 13px;\n  font-weight: 500;\n  color: var(--text-color);\n  min-width: 80px;\n}\n\n.option-input {\n  padding: 6px 8px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  background: rgba(255, 255, 255, 0.8);\n  color: var(--text-color);\n  font-size: 12px;\n  flex: 1;\n}\n\n[data-theme=\"dark\"] .option-input {\n  background: rgba(55, 65, 81, 0.8);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.option-select {\n  padding: 6px 8px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  background: rgba(255, 255, 255, 0.8);\n  color: var(--text-color);\n  font-size: 12px;\n  flex: 1;\n}\n\n[data-theme=\"dark\"] .option-select {\n  background: rgba(55, 65, 81, 0.8);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.option-switch {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.switch-input {\n  display: none;\n}\n\n.switch-label {\n  position: relative;\n  display: inline-block;\n  width: 40px;\n  height: 20px;\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 10px;\n  cursor: pointer;\n  transition: background 0.2s ease;\n}\n\n.switch-label::before {\n  content: '';\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  width: 16px;\n  height: 16px;\n  background: white;\n  border-radius: 50%;\n  transition: transform 0.2s ease;\n}\n\n.switch-input:checked + .switch-label {\n  background: #3b82f6;\n}\n\n.switch-input:checked + .switch-label::before {\n  transform: translateX(20px);\n}\n\n[data-theme=\"dark\"] .switch-label {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n[data-theme=\"dark\"] .switch-input:checked + .switch-label {\n  background: #60a5fa;\n}\n\n.render-options {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.render-mode-toggle {\n  display: flex;\n  gap: 4px;\n  background: rgba(0, 0, 0, 0.05);\n  padding: 2px;\n  border-radius: 6px;\n}\n\n[data-theme=\"dark\"] .render-mode-toggle {\n  background: rgba(255, 255, 255, 0.05);\n}\n\n.mode-btn {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 6px 12px;\n  background: none;\n  border: none;\n  border-radius: 4px;\n  font-size: 12px;\n  color: var(--text-secondary);\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.mode-btn.active {\n  background: rgba(59, 130, 246, 0.1);\n  color: #3b82f6;\n}\n\n[data-theme=\"dark\"] .mode-btn.active {\n  background: rgba(96, 165, 250, 0.2);\n  color: #60a5fa;\n}\n\n.render-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.action-btn {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 6px;\n  background: rgba(255, 255, 255, 0.8);\n  color: var(--text-color);\n  font-size: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.action-btn:hover:not(:disabled) {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.action-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.preview-btn {\n  border-color: #3b82f6;\n  color: #3b82f6;\n}\n\n.preview-btn:hover:not(:disabled) {\n  background: rgba(59, 130, 246, 0.1);\n}\n\n.generate-btn {\n  border-color: #10b981;\n  color: #10b981;\n}\n\n.generate-btn:hover:not(:disabled) {\n  background: rgba(16, 185, 129, 0.1);\n}\n\n[data-theme=\"dark\"] .action-btn {\n  background: rgba(55, 65, 81, 0.8);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n[data-theme=\"dark\"] .preview-btn {\n  border-color: #60a5fa;\n  color: #60a5fa;\n}\n\n[data-theme=\"dark\"] .generate-btn {\n  border-color: #10b981;\n  color: #10b981;\n}\n\n.data-preview-section {\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  padding-top: 16px;\n}\n\n[data-theme=\"dark\"] .data-preview-section {\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.preview-stats {\n  display: flex;\n  gap: 16px;\n  margin-bottom: 12px;\n}\n\n.stat-item {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 12px;\n}\n\n.stat-label {\n  color: var(--text-secondary);\n}\n\n.stat-value {\n  color: var(--text-color);\n  font-weight: 500;\n}\n\n.preview-table-container {\n  overflow-x: auto;\n  border-radius: 6px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n[data-theme=\"dark\"] .preview-table-container {\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.preview-table {\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 12px;\n}\n\n.preview-table th,\n.preview-table td {\n  padding: 6px 8px;\n  text-align: left;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n[data-theme=\"dark\"] .preview-table th,\n[data-theme=\"dark\"] .preview-table td {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n.preview-table th {\n  background: rgba(249, 250, 251, 0.8);\n  font-weight: 600;\n  color: var(--text-color);\n  position: sticky;\n  top: 0;\n}\n\n[data-theme=\"dark\"] .preview-table th {\n  background: rgba(55, 65, 81, 0.8);\n}\n\n.preview-table td {\n  color: var(--text-color);\n}\n\n/* 滚动条样式 */\n.data-mapping-config::-webkit-scrollbar,\n.preview-table-container::-webkit-scrollbar {\n  width: 6px;\n}\n\n.data-mapping-config::-webkit-scrollbar-track,\n.preview-table-container::-webkit-scrollbar-track {\n  background: rgba(0, 0, 0, 0.05);\n}\n\n.data-mapping-config::-webkit-scrollbar-thumb,\n.preview-table-container::-webkit-scrollbar-thumb {\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 3px;\n}\n\n[data-theme=\"dark\"] .data-mapping-config::-webkit-scrollbar-track,\n[data-theme=\"dark\"] .preview-table-container::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.05);\n}\n\n[data-theme=\"dark\"] .data-mapping-config::-webkit-scrollbar-thumb,\n[data-theme=\"dark\"] .preview-table-container::-webkit-scrollbar-thumb {\n  background: rgba(255, 255, 255, 0.2);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}