{"ast":null,"code":"import { chartTypes, chartIcons } from '../assets/JS/chartIcons.js';\nimport { watch, ref, nextTick } from 'vue';\nexport default {\n  __name: 'ChartIcon',\n  props: {\n    types: {\n      type: Array,\n      default: () => chartTypes\n    },\n    modelValue: {\n      type: String,\n      default: ''\n    }\n  },\n  emits: ['select', 'update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n    const emit = __emit;\n    const selectedType = ref(props.modelValue);\n    const tooltipVisible = ref(false);\n    const tooltipData = ref({});\n    const tooltipStyle = ref({});\n    const tooltip = ref(null);\n    let tooltipTimer = null;\n\n    // Chart information data\n    const chartInfo = {\n      Line: {\n        title: 'Line Chart',\n        requirements: ['Time Series', 'Continuous Data', 'Ordered X-axis'],\n        useCases: ['Trend Analysis', 'Time-based Data', 'Performance Tracking']\n      },\n      Bar: {\n        title: 'Bar Chart',\n        requirements: ['Categorical Data', 'Numerical Values', 'Discrete Groups'],\n        useCases: ['Comparison', 'Ranking', 'Distribution Analysis']\n      },\n      Pie: {\n        title: 'Pie Chart',\n        requirements: ['Categorical Data', 'Percentage/Proportion', 'Finite Categories'],\n        useCases: ['Part-to-Whole', 'Composition', 'Market Share']\n      },\n      Scatter: {\n        title: 'Scatter Plot',\n        requirements: ['Two Numerical Variables', 'Continuous Data', 'Paired Values'],\n        useCases: ['Correlation', 'Regression Analysis', 'Outlier Detection']\n      },\n      'GEO/MAP': {\n        title: 'Geographic Map',\n        requirements: ['Location Data', 'Coordinates/Regions', 'Spatial Information'],\n        useCases: ['Geographic Analysis', 'Regional Comparison', 'Spatial Distribution']\n      },\n      Candlestick: {\n        title: 'Candlestick Chart',\n        requirements: ['OHLC Data', 'Time Series', 'Financial Data'],\n        useCases: ['Stock Analysis', 'Price Movement', 'Trading Patterns']\n      },\n      Radar: {\n        title: 'Radar Chart',\n        requirements: ['Multi-dimensional Data', 'Standardized Scale', 'Multiple Metrics'],\n        useCases: ['Performance Comparison', 'Skill Assessment', 'Multi-criteria Analysis']\n      },\n      Boxplot: {\n        title: 'Box Plot',\n        requirements: ['Numerical Data', 'Distribution Data', 'Statistical Summary'],\n        useCases: ['Statistical Analysis', 'Outlier Detection', 'Distribution Comparison']\n      },\n      Heatmap: {\n        title: 'Heatmap',\n        requirements: ['Matrix Data', 'Numerical Values', 'Two Categorical Variables'],\n        useCases: ['Correlation Matrix', 'Pattern Recognition', 'Intensity Mapping']\n      },\n      Graph: {\n        title: 'Network Graph',\n        requirements: ['Node-Edge Data', 'Relationship Data', 'Network Structure'],\n        useCases: ['Social Networks', 'Dependency Analysis', 'Connection Mapping']\n      },\n      Lines: {\n        title: 'Multi-line Chart',\n        requirements: ['Multiple Time Series', 'Continuous Data', 'Grouped Data'],\n        useCases: ['Trend Comparison', 'Multi-variable Analysis', 'Performance Benchmarking']\n      },\n      Tree: {\n        title: 'Tree Diagram',\n        requirements: ['Hierarchical Data', 'Parent-Child Relations', 'Tree Structure'],\n        useCases: ['Organizational Charts', 'Decision Trees', 'Taxonomy Display']\n      },\n      Treemap: {\n        title: 'Treemap',\n        requirements: ['Hierarchical Data', 'Numerical Values', 'Nested Categories'],\n        useCases: ['Hierarchical Comparison', 'Space-efficient Display', 'Proportional Analysis']\n      },\n      Sunburst: {\n        title: 'Sunburst Chart',\n        requirements: ['Hierarchical Data', 'Multi-level Categories', 'Proportional Values'],\n        useCases: ['Hierarchical Visualization', 'Nested Proportions', 'Drill-down Analysis']\n      },\n      Parallel: {\n        title: 'Parallel Coordinates',\n        requirements: ['Multi-dimensional Data', 'Continuous Variables', 'Multiple Attributes'],\n        useCases: ['Multi-variate Analysis', 'Pattern Detection', 'Data Filtering']\n      },\n      Sankey: {\n        title: 'Sankey Diagram',\n        requirements: ['Flow Data', 'Source-Target Relations', 'Quantified Flows'],\n        useCases: ['Flow Analysis', 'Process Visualization', 'Resource Allocation']\n      },\n      Funnel: {\n        title: 'Funnel Chart',\n        requirements: ['Sequential Data', 'Conversion Rates', 'Process Stages'],\n        useCases: ['Conversion Analysis', 'Process Optimization', 'Sales Funnel']\n      },\n      Gauge: {\n        title: 'Gauge Chart',\n        requirements: ['Single Value', 'Range/Scale', 'Target Value'],\n        useCases: ['KPI Display', 'Performance Metrics', 'Goal Tracking']\n      },\n      PictorialBar: {\n        title: 'Pictorial Bar Chart',\n        requirements: ['Categorical Data', 'Numerical Values', 'Visual Symbols'],\n        useCases: ['Engaging Presentations', 'Brand Visualization', 'Story Telling']\n      },\n      ThemeRiver: {\n        title: 'Theme River',\n        requirements: ['Time Series', 'Stacked Data', 'Multiple Categories'],\n        useCases: ['Temporal Flow', 'Trend Evolution', 'Stacked Time Analysis']\n      },\n      Calendar: {\n        title: 'Calendar Heatmap',\n        requirements: ['Date-based Data', 'Daily Values', 'Time Series'],\n        useCases: ['Activity Patterns', 'Seasonal Analysis', 'Daily Tracking']\n      }\n    };\n    function renderButton(type) {\n      const icon = chartIcons[type] || '';\n      return `${icon}<span class=\"label\">${type}</span>`;\n    }\n    function handleClick(type) {\n      selectedType.value = type;\n      emit('select', type);\n      emit('update:modelValue', type);\n    }\n    function showTooltip(type, event) {\n      if (tooltipTimer) {\n        clearTimeout(tooltipTimer);\n      }\n      tooltipTimer = setTimeout(() => {\n        tooltipData.value = chartInfo[type] || {\n          title: type,\n          requirements: ['Data Required'],\n          useCases: ['General Use']\n        };\n        tooltipVisible.value = true;\n        nextTick(() => {\n          if (tooltip.value) {\n            updateTooltipPosition(event);\n          }\n        });\n      }, 1000);\n    }\n    function hideTooltip() {\n      if (tooltipTimer) {\n        clearTimeout(tooltipTimer);\n        tooltipTimer = null;\n      }\n      tooltipVisible.value = false;\n    }\n    function updateTooltipPosition(event) {\n      const tooltipEl = tooltip.value;\n      if (!tooltipEl) return;\n      const rect = tooltipEl.getBoundingClientRect();\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight;\n      let left = event.clientX + 10;\n      let top = event.clientY + 10;\n\n      // Adjust if tooltip goes beyond right edge\n      if (left + rect.width > viewportWidth) {\n        left = event.clientX - rect.width - 10;\n      }\n\n      // Adjust if tooltip goes beyond bottom edge\n      if (top + rect.height > viewportHeight) {\n        top = event.clientY - rect.height - 10;\n      }\n\n      // Ensure tooltip doesn't go beyond left edge\n      if (left < 0) {\n        left = 10;\n      }\n\n      // Ensure tooltip doesn't go beyond top edge\n      if (top < 0) {\n        top = 10;\n      }\n      tooltipStyle.value = {\n        left: `${left}px`,\n        top: `${top}px`\n      };\n    }\n    watch(() => props.modelValue, newValue => {\n      selectedType.value = newValue;\n    });\n    const __returned__ = {\n      props,\n      emit,\n      selectedType,\n      tooltipVisible,\n      tooltipData,\n      tooltipStyle,\n      tooltip,\n      get tooltipTimer() {\n        return tooltipTimer;\n      },\n      set tooltipTimer(v) {\n        tooltipTimer = v;\n      },\n      chartInfo,\n      renderButton,\n      handleClick,\n      showTooltip,\n      hideTooltip,\n      updateTooltipPosition,\n      get chartTypes() {\n        return chartTypes;\n      },\n      get chartIcons() {\n        return chartIcons;\n      },\n      watch,\n      ref,\n      nextTick\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["chartTypes","chartIcons","watch","ref","nextTick","props","__props","emit","__emit","selectedType","modelValue","tooltipVisible","tooltipData","tooltipStyle","tooltip","tooltipTimer","chartInfo","Line","title","requirements","useCases","Bar","Pie","Scatter","Candlestick","Radar","Boxplot","Heatmap","Graph","Lines","Tree","Treemap","Sunburst","Parallel","Sankey","Funnel","Gauge","PictorialBar","ThemeRiver","Calendar","renderButton","type","icon","handleClick","value","showTooltip","event","clearTimeout","setTimeout","updateTooltipPosition","hideTooltip","tooltipEl","rect","getBoundingClientRect","viewportWidth","window","innerWidth","viewportHeight","innerHeight","left","clientX","top","clientY","width","height","newValue"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/ChartIcon.vue"],"sourcesContent":["<template>\n    <div class=\"chart-type-panel\">\n        <button\n        v-for=\"type in types\"\n        :key=\"type\"\n        class=\"sideBar-btn\"\n        :class=\"{ 'selected': selectedType === type }\"\n        v-html=\"renderButton(type)\"\n        @click=\"handleClick(type)\"\n        @mouseenter=\"showTooltip(type, $event)\"\n        @mouseleave=\"hideTooltip\"\n        ></button>\n        \n        <!-- Tooltip -->\n        <div \n            v-if=\"tooltipVisible\" \n            ref=\"tooltip\"\n            class=\"tooltip\"\n            :style=\"tooltipStyle\"\n        >\n            <div class=\"tooltip-title\">{{ tooltipData.title }}</div>\n            <div class=\"tooltip-section\">\n                <div class=\"tooltip-subtitle\">Data Requirements:</div>\n                <div class=\"tooltip-tags\">\n                    <span v-for=\"req in tooltipData.requirements\" :key=\"req\" class=\"tooltip-tag\">\n                        {{ req }}\n                    </span>\n                </div>\n            </div>\n            <div class=\"tooltip-section\">\n                <div class=\"tooltip-subtitle\">Use Cases:</div>\n                <div class=\"tooltip-tags\">\n                    <span v-for=\"useCase in tooltipData.useCases\" :key=\"useCase\" class=\"tooltip-tag\">\n                        {{ useCase }}\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script setup>\n/* eslint-disable */\nimport { chartTypes, chartIcons } from '../assets/JS/chartIcons.js'\nimport { watch, ref, nextTick } from 'vue'\n\nconst props = defineProps({\n    types: {\n        type: Array,\n        default: () => chartTypes\n    },\n\n    modelValue: {\n        type: String,\n        default: ''\n    }\n})\n\nconst emit = defineEmits(['select', 'update:modelValue'])\n\nconst selectedType = ref(props.modelValue)\nconst tooltipVisible = ref(false)\nconst tooltipData = ref({})\nconst tooltipStyle = ref({})\nconst tooltip = ref(null)\nlet tooltipTimer = null\n\n// Chart information data\nconst chartInfo = {\n    Line: {\n        title: 'Line Chart',\n        requirements: ['Time Series', 'Continuous Data', 'Ordered X-axis'],\n        useCases: ['Trend Analysis', 'Time-based Data', 'Performance Tracking']\n    },\n    Bar: {\n        title: 'Bar Chart',\n        requirements: ['Categorical Data', 'Numerical Values', 'Discrete Groups'],\n        useCases: ['Comparison', 'Ranking', 'Distribution Analysis']\n    },\n    Pie: {\n        title: 'Pie Chart',\n        requirements: ['Categorical Data', 'Percentage/Proportion', 'Finite Categories'],\n        useCases: ['Part-to-Whole', 'Composition', 'Market Share']\n    },\n    Scatter: {\n        title: 'Scatter Plot',\n        requirements: ['Two Numerical Variables', 'Continuous Data', 'Paired Values'],\n        useCases: ['Correlation', 'Regression Analysis', 'Outlier Detection']\n    },\n    'GEO/MAP': {\n        title: 'Geographic Map',\n        requirements: ['Location Data', 'Coordinates/Regions', 'Spatial Information'],\n        useCases: ['Geographic Analysis', 'Regional Comparison', 'Spatial Distribution']\n    },\n    Candlestick: {\n        title: 'Candlestick Chart',\n        requirements: ['OHLC Data', 'Time Series', 'Financial Data'],\n        useCases: ['Stock Analysis', 'Price Movement', 'Trading Patterns']\n    },\n    Radar: {\n        title: 'Radar Chart',\n        requirements: ['Multi-dimensional Data', 'Standardized Scale', 'Multiple Metrics'],\n        useCases: ['Performance Comparison', 'Skill Assessment', 'Multi-criteria Analysis']\n    },\n    Boxplot: {\n        title: 'Box Plot',\n        requirements: ['Numerical Data', 'Distribution Data', 'Statistical Summary'],\n        useCases: ['Statistical Analysis', 'Outlier Detection', 'Distribution Comparison']\n    },\n    Heatmap: {\n        title: 'Heatmap',\n        requirements: ['Matrix Data', 'Numerical Values', 'Two Categorical Variables'],\n        useCases: ['Correlation Matrix', 'Pattern Recognition', 'Intensity Mapping']\n    },\n    Graph: {\n        title: 'Network Graph',\n        requirements: ['Node-Edge Data', 'Relationship Data', 'Network Structure'],\n        useCases: ['Social Networks', 'Dependency Analysis', 'Connection Mapping']\n    },\n    Lines: {\n        title: 'Multi-line Chart',\n        requirements: ['Multiple Time Series', 'Continuous Data', 'Grouped Data'],\n        useCases: ['Trend Comparison', 'Multi-variable Analysis', 'Performance Benchmarking']\n    },\n    Tree: {\n        title: 'Tree Diagram',\n        requirements: ['Hierarchical Data', 'Parent-Child Relations', 'Tree Structure'],\n        useCases: ['Organizational Charts', 'Decision Trees', 'Taxonomy Display']\n    },\n    Treemap: {\n        title: 'Treemap',\n        requirements: ['Hierarchical Data', 'Numerical Values', 'Nested Categories'],\n        useCases: ['Hierarchical Comparison', 'Space-efficient Display', 'Proportional Analysis']\n    },\n    Sunburst: {\n        title: 'Sunburst Chart',\n        requirements: ['Hierarchical Data', 'Multi-level Categories', 'Proportional Values'],\n        useCases: ['Hierarchical Visualization', 'Nested Proportions', 'Drill-down Analysis']\n    },\n    Parallel: {\n        title: 'Parallel Coordinates',\n        requirements: ['Multi-dimensional Data', 'Continuous Variables', 'Multiple Attributes'],\n        useCases: ['Multi-variate Analysis', 'Pattern Detection', 'Data Filtering']\n    },\n    Sankey: {\n        title: 'Sankey Diagram',\n        requirements: ['Flow Data', 'Source-Target Relations', 'Quantified Flows'],\n        useCases: ['Flow Analysis', 'Process Visualization', 'Resource Allocation']\n    },\n    Funnel: {\n        title: 'Funnel Chart',\n        requirements: ['Sequential Data', 'Conversion Rates', 'Process Stages'],\n        useCases: ['Conversion Analysis', 'Process Optimization', 'Sales Funnel']\n    },\n    Gauge: {\n        title: 'Gauge Chart',\n        requirements: ['Single Value', 'Range/Scale', 'Target Value'],\n        useCases: ['KPI Display', 'Performance Metrics', 'Goal Tracking']\n    },\n    PictorialBar: {\n        title: 'Pictorial Bar Chart',\n        requirements: ['Categorical Data', 'Numerical Values', 'Visual Symbols'],\n        useCases: ['Engaging Presentations', 'Brand Visualization', 'Story Telling']\n    },\n    ThemeRiver: {\n        title: 'Theme River',\n        requirements: ['Time Series', 'Stacked Data', 'Multiple Categories'],\n        useCases: ['Temporal Flow', 'Trend Evolution', 'Stacked Time Analysis']\n    },\n    Calendar: {\n        title: 'Calendar Heatmap',\n        requirements: ['Date-based Data', 'Daily Values', 'Time Series'],\n        useCases: ['Activity Patterns', 'Seasonal Analysis', 'Daily Tracking']\n    }\n}\n\nfunction renderButton(type) {\n    const icon = chartIcons[type] || ''\n    return `${icon}<span class=\"label\">${type}</span>`\n}\n\nfunction handleClick(type) {\n    selectedType.value = type\n    emit('select', type)\n    emit('update:modelValue', type)\n}\n\nfunction showTooltip(type, event) {\n    if (tooltipTimer) {\n        clearTimeout(tooltipTimer)\n    }\n    \n    tooltipTimer = setTimeout(() => {\n        tooltipData.value = chartInfo[type] || {\n            title: type,\n            requirements: ['Data Required'],\n            useCases: ['General Use']\n        }\n        \n        tooltipVisible.value = true\n        \n        nextTick(() => {\n            if (tooltip.value) {\n                updateTooltipPosition(event)\n            }\n        })\n    }, 1000)\n}\n\nfunction hideTooltip() {\n    if (tooltipTimer) {\n        clearTimeout(tooltipTimer)\n        tooltipTimer = null\n    }\n    tooltipVisible.value = false\n}\n\nfunction updateTooltipPosition(event) {\n    const tooltipEl = tooltip.value\n    if (!tooltipEl) return\n    \n    const rect = tooltipEl.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    \n    let left = event.clientX + 10\n    let top = event.clientY + 10\n    \n    // Adjust if tooltip goes beyond right edge\n    if (left + rect.width > viewportWidth) {\n        left = event.clientX - rect.width - 10\n    }\n    \n    // Adjust if tooltip goes beyond bottom edge\n    if (top + rect.height > viewportHeight) {\n        top = event.clientY - rect.height - 10\n    }\n    \n    // Ensure tooltip doesn't go beyond left edge\n    if (left < 0) {\n        left = 10\n    }\n    \n    // Ensure tooltip doesn't go beyond top edge\n    if (top < 0) {\n        top = 10\n    }\n    \n    tooltipStyle.value = {\n        left: `${left}px`,\n        top: `${top}px`\n    }\n}\n\nwatch(() => props.modelValue, (newValue) => {\n    selectedType.value = newValue\n})\n</script>\n\n<style scoped>\n.chart-type-panel {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    position: relative;\n}\n\n.sideBar-btn {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    background: transparent;\n    border: none;\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    color: var(--text-color);\n    padding: 6px 14px;\n    border-radius: 8px;\n    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s;\n    position: relative;\n    overflow: hidden;\n}\n\n.sideBar-btn::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition: left 0.6s;\n}\n\n.sideBar-btn:hover {\n    background-color: rgba(136, 133, 133, 0.1);\n    transform: translateY(-2px) scale(1.02);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 选中状态的样式 */\n.sideBar-btn.selected {\n    background: linear-gradient(135deg, #3b82f6, #6366f1);\n    color: white;\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.sideBar-btn.selected::before {\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\n}\n\n.sideBar-btn.selected:hover {\n    background: linear-gradient(135deg, #2563eb, #5b21b6);\n    transform: translateY(-3px) scale(1.05);\n    box-shadow: 0 6px 16px rgba(59, 130, 246, 0.4);\n}\n\n.sideBar-btn.selected:hover::before {\n    left: 100%;\n}\n\n/* 点击动画 */\n.sideBar-btn:active {\n    transform: translateY(0) scale(0.98);\n    transition: all 0.1s ease;\n}\n\n.sideBar-btn.selected:active {\n    transform: translateY(-1px) scale(0.98);\n}\n\n.sideBar-btn svg {\n    fill: currentColor;\n    transition: all 0.3s ease;\n}\n\n.sideBar-btn.selected svg {\n    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));\n}\n\n.label {\n    white-space: nowrap;\n    transition: all 0.3s ease;\n}\n\n.sideBar-btn.selected .label {\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n/* 选中状态的动画效果 */\n@keyframes selectedShine {\n    0% {\n        background-position: -100% 0;\n    }\n    100% {\n        background-position: 100% 0;\n    }\n}\n\n.sideBar-btn.selected:hover .chart-icon-svg {\n    transform: scale(1.1);\n    filter: drop-shadow(0 2px 6px rgba(0, 0, 0, 0.3));\n}\n\n.sideBar-btn.selected:hover .label {\n    transform: translateX(2px);\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n}\n\n/* Tooltip styles */\n.tooltip {\n    position: fixed;\n    z-index: 1000;\n    background: var(--bg-color, #ffffff);\n    color: var(--text-color, #333333);\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    border-radius: 12px;\n    padding: 16px;\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);\n    backdrop-filter: blur(10px);\n    max-width: 300px;\n    min-width: 250px;\n    font-size: 14px;\n    line-height: 1.4;\n    animation: tooltipFadeIn 0.2s ease-out;\n}\n\n@keyframes tooltipFadeIn {\n    from {\n        opacity: 0;\n        transform: translateY(-8px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n.tooltip-title {\n    font-weight: 700;\n    font-size: 16px;\n    margin-bottom: 12px;\n    color: var(--text-color, #333333);\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n    padding-bottom: 8px;\n}\n\n.tooltip-section {\n    margin-bottom: 12px;\n}\n\n.tooltip-section:last-child {\n    margin-bottom: 0;\n}\n\n.tooltip-subtitle {\n    font-weight: 600;\n    font-size: 13px;\n    margin-bottom: 6px;\n    color: var(--text-color, #555555);\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n}\n\n.tooltip-tags {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 4px;\n}\n\n.tooltip-tag {\n    background: linear-gradient(135deg, #f1f5f9, #e2e8f0);\n    color: #475569;\n    padding: 4px 8px;\n    border-radius: 6px;\n    font-size: 12px;\n    font-weight: 500;\n    border: 1px solid rgba(0, 0, 0, 0.05);\n    transition: all 0.2s ease;\n}\n\n.tooltip-tag:hover {\n    background: linear-gradient(135deg, #e2e8f0, #cbd5e1);\n    transform: translateY(-1px);\n}\n\n/* Dark mode styles */\n@media (prefers-color-scheme: dark) {\n    .tooltip {\n        background: var(--bg-color, #1f2937);\n        color: var(--text-color, #f9fafb);\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n    }\n    \n    .tooltip-title {\n        color: var(--text-color, #f9fafb);\n        border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n    }\n    \n    .tooltip-subtitle {\n        color: var(--text-color, #d1d5db);\n    }\n    \n    .tooltip-tag {\n        background: linear-gradient(135deg, #374151, #4b5563);\n        color: #e5e7eb;\n        border: 1px solid rgba(255, 255, 255, 0.1);\n    }\n    \n    .tooltip-tag:hover {\n        background: linear-gradient(135deg, #4b5563, #6b7280);\n    }\n}\n\n/* Support for CSS custom properties theme */\n[data-theme=\"dark\"] .tooltip {\n    background: var(--bg-color, #1f2937);\n    color: var(--text-color, #f9fafb);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n}\n\n[data-theme=\"dark\"] .tooltip-title {\n    color: var(--text-color, #f9fafb);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n[data-theme=\"dark\"] .tooltip-subtitle {\n    color: var(--text-color, #d1d5db);\n}\n\n[data-theme=\"dark\"] .tooltip-tag {\n    background: linear-gradient(135deg, #374151, #4b5563);\n    color: #e5e7eb;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n[data-theme=\"dark\"] .tooltip-tag:hover {\n    background: linear-gradient(135deg, #4b5563, #6b7280);\n}\n</style>\n\n<style>\n.chart-icon-svg {\n    width: 1.6em;\n    height: 1.6em;\n    min-width: 24px;\n    min-height: 24px;\n    max-width: 32px;\n    max-height: 32px;\n    color: var(--text-color);\n    fill: currentColor;\n    vertical-align: middle;\n    display: inline-block;\n    transition: all 0.3s ease;\n}\n\n.sideBar-btn.selected .chart-icon-svg {\n    color: white;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}