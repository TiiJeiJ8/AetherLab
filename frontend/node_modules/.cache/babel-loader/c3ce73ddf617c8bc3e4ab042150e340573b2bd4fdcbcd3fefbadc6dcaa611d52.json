{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"block-toggle-group\",\n  style: {\n    \"position\": \"relative\"\n  }\n};\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"block-toggle\", {\n      'checked': $props.modelValue\n    }]),\n    onClick: $setup.toggle\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"block-toggle-slider\", {\n      'right': !$props.modelValue\n    }])\n  }, null, 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"block-toggle-option left\", {\n      active: $props.modelValue\n    }]),\n    onMouseenter: _cache[0] || (_cache[0] = $event => $setup.showToggleTooltip('Auto')),\n    onMouseleave: $setup.hideToggleTooltip\n  }, [_createElementVNode(\"span\", {\n    innerHTML: $setup.getThemeIcon('refresh')\n  }, null, 8 /* PROPS */, _hoisted_2)], 34 /* CLASS, NEED_HYDRATION */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"block-toggle-option right\", {\n      active: !$props.modelValue\n    }]),\n    onMouseenter: _cache[1] || (_cache[1] = $event => $setup.showToggleTooltip('Manual')),\n    onMouseleave: $setup.hideToggleTooltip\n  }, [_createElementVNode(\"span\", {\n    innerHTML: $setup.getThemeIcon('eye')\n  }, null, 8 /* PROPS */, _hoisted_3)], 34 /* CLASS, NEED_HYDRATION */)], 2 /* CLASS */), $setup.toggleTooltip.visible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"toggle-tooltip\",\n    style: _normalizeStyle($setup.toggleTooltip.style)\n  }, _toDisplayString($setup.toggleTooltip.text), 5 /* TEXT, STYLE */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","$props","modelValue","onClick","$setup","toggle","active","onMouseenter","_cache","$event","showToggleTooltip","onMouseleave","hideToggleTooltip","innerHTML","getThemeIcon","_hoisted_2","_hoisted_3","toggleTooltip","visible","key","_normalizeStyle","text","_createCommentVNode"],"sources":["D:\\Learning Material\\Git\\Fuck-Charts\\frontend\\src\\components\\Common\\AutoRenderToggle.vue"],"sourcesContent":["<template>\n<div class=\"block-toggle-group\" style=\"position: relative;\">\n<div class=\"block-toggle\" :class=\"{ 'checked': modelValue }\" @click=\"toggle\">\n    <div class=\"block-toggle-slider\" :class=\"{ 'right': !modelValue }\"></div>\n    <div class=\"block-toggle-option left\" :class=\"{ active: modelValue }\"\n        @mouseenter=\"showToggleTooltip('Auto')\" @mouseleave=\"hideToggleTooltip\">\n    <span v-html=\"getThemeIcon('refresh')\"></span>\n    </div>\n    <div class=\"block-toggle-option right\" :class=\"{ active: !modelValue }\"\n        @mouseenter=\"showToggleTooltip('Manual')\" @mouseleave=\"hideToggleTooltip\">\n    <span v-html=\"getThemeIcon('eye')\"></span>\n    </div>\n</div>\n<div v-if=\"toggleTooltip.visible\" class=\"toggle-tooltip\" :style=\"toggleTooltip.style\">\n    {{ toggleTooltip.text }}\n</div>\n</div>\n</template>\n\n<script setup>\nimport { ref, nextTick, defineProps, defineEmits } from 'vue'\nimport { getThemeIcon } from '@/assets/JS/SVG/icons.js'\n\nconst props = defineProps({\n  modelValue: Boolean\n})\nconst emit = defineEmits(['update:modelValue'])\n\nfunction toggle () {\n  emit('update:modelValue', !props.modelValue)\n}\n\nconst toggleTooltip = ref({ visible: false, text: '', style: {} })\nfunction showToggleTooltip (type) {\n  toggleTooltip.value.text = type === 'Auto' ? 'Real-time Render' : 'Manual Render'\n  toggleTooltip.value.visible = true\n  nextTick(() => {\n    const btn = document.querySelector('.block-toggle .block-toggle-option.' + (type === 'Auto' ? 'left' : 'right'))\n    if (btn) {\n      const rect = btn.getBoundingClientRect()\n      toggleTooltip.value.style = {\n        left: `${rect.left + rect.width / 2 - 50}px`,\n        top: `${rect.bottom + 6}px`,\n        position: 'fixed',\n        zIndex: 2000,\n        minWidth: '100px',\n        textAlign: 'center'\n      }\n    }\n  })\n}\nfunction hideToggleTooltip () {\n  toggleTooltip.value.visible = false\n}\n</script>\n\n<style scoped>\n.block-toggle-group {\n  display: flex;\n  align-items: center;\n  margin-right: 18px;\n  position: relative;\n}\n.block-toggle {\n  position: relative;\n  width: 74px;\n  height: 26px;\n  background: #f5f5f5;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  box-shadow: 0 1px 4px rgba(0,0,0,0.04);\n  transition: background 0.2s;\n  user-select: none;\n  border: 1px solid #e0e0e0;\n}\n.block-toggle-option {\n  flex: 1;\n  text-align: center;\n  z-index: 2;\n  font-size: 0.93em;\n  font-weight: 500;\n  color: #888;\n  transition: color 0.2s, font-weight 0.2s;\n  padding: 0 1px;\n  line-height: 26px;\n  border-radius: 6px;\n  position: relative;\n  letter-spacing: 0.01em;\n}\n.block-toggle-option.active {\n  color: #222;\n  font-weight: 700;\n  background: #e0e0e0;\n}\n.block-toggle-slider {\n  position: absolute;\n  top: 1.5px;\n  left: 2px;\n  width: 32px;\n  height: 21px;\n  background: #e0e0e0;\n  border-radius: 5px;\n  box-shadow: 0 1px 4px rgba(0,0,0,0.06);\n  transition: left 0.18s cubic-bezier(.4,2,.6,1), background 0.2s;\n  z-index: 1;\n}\n.block-toggle-slider.right {\n  left: 40px;\n  background: #e0e0e0;\n}\n.toggle-tooltip {\n  position: fixed;\n  background: #222;\n  color: #fff;\n  border-radius: 5px;\n  padding: 4px 12px;\n  font-size: 0.93em;\n  pointer-events: none;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.13);\n  white-space: nowrap;\n  opacity: 0.97;\n  transition: opacity 0.18s;\n}\n</style>\n"],"mappings":";;EACKA,KAAK,EAAC,oBAAoB;EAACC,KAA2B,EAA3B;IAAA;EAAA;;mBADhC;mBAAA;;uBACAC,mBAAA,CAeM,OAfNC,UAeM,GAdNC,mBAAA,CAUM;IAVDJ,KAAK,EAFVK,eAAA,EAEW,cAAc;MAAA,WAAsBC,MAAA,CAAAC;IAAU;IAAKC,OAAK,EAAEC,MAAA,CAAAC;MACjEN,mBAAA,CAAyE;IAApEJ,KAAK,EAHdK,eAAA,EAGe,qBAAqB;MAAA,UAAqBC,MAAA,CAAAC;IAAU;2BAC/DH,mBAAA,CAGM;IAHDJ,KAAK,EAJdK,eAAA,EAIe,0BAA0B;MAAAM,MAAA,EAAmBL,MAAA,CAAAC;IAAU;IAC7DK,YAAU,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,MAAA,CAAAM,iBAAiB;IAAWC,YAAU,EAAEP,MAAA,CAAAQ;MACzDb,mBAAA,CAA8C;IAAxCc,SAAgC,EAAxBT,MAAA,CAAAU,YAAY;0BAN9BC,UAAA,E,mCAQIhB,mBAAA,CAGM;IAHDJ,KAAK,EARdK,eAAA,EAQe,2BAA2B;MAAAM,MAAA,GAAoBL,MAAA,CAAAC;IAAU;IAC/DK,YAAU,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,MAAA,CAAAM,iBAAiB;IAAaC,YAAU,EAAEP,MAAA,CAAAQ;MAC3Db,mBAAA,CAA0C;IAApCc,SAA4B,EAApBT,MAAA,CAAAU,YAAY;0BAV9BE,UAAA,E,oDAaWZ,MAAA,CAAAa,aAAa,CAACC,OAAO,I,cAAhCrB,mBAAA,CAEM;IAfNsB,GAAA;IAakCxB,KAAK,EAAC,gBAAgB;IAAEC,KAAK,EAb/DwB,eAAA,CAaiEhB,MAAA,CAAAa,aAAa,CAACrB,KAAK;sBAC7EQ,MAAA,CAAAa,aAAa,CAACI,IAAI,2BAdzBC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}