{"ast":null,"code":"// ChartTypeConfig.js\n// 图表类型的动态配置项描述，便于模块化和可扩展\n// 包含数据映射配置项和高级配置项\n\n/* eslint-disable */\nexport const chartTypeConfig = {\n  // 折线图\n  Line: {\n    mapping: [{\n      key: 'xAxis',\n      label: 'X Axis',\n      type: 'dimension',\n      required: true\n    }, {\n      key: 'yAxis',\n      label: 'Y Axis',\n      type: 'measure',\n      required: true,\n      multiple: true\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 柱状图\n  Bar: {\n    mapping: [{\n      key: 'xAxis',\n      label: 'X Axis',\n      type: 'dimension',\n      required: true\n    }, {\n      key: 'yAxis',\n      label: 'Y Axis',\n      type: 'measure',\n      required: true,\n      multiple: true\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 饼图\n  Pie: {\n    mapping: [{\n      key: 'category',\n      label: 'Category',\n      type: 'dimension',\n      required: true\n    }, {\n      key: 'value',\n      label: 'Value',\n      type: 'measure',\n      required: true\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 散点图\n  Scatter: {\n    mapping: [{\n      key: 'xAxis',\n      label: 'X Axis',\n      type: 'dimension',\n      required: true\n    }, {\n      key: 'yAxis',\n      label: 'Y Axis',\n      type: 'measure',\n      required: true,\n      multiple: true\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 地图\n  Geo_Map: {\n    mapping: [\n    // 地域名称\n    {\n      key: 'nameField',\n      label: 'Field Name',\n      type: 'dimension',\n      required: false\n    },\n    // 经纬度字段\n    {\n      key: 'lngField',\n      label: 'Longitude',\n      type: 'dimension',\n      required: false\n    }, {\n      key: 'latField',\n      label: 'Latitude',\n      type: 'dimension',\n      required: false\n    },\n    // 值\n    {\n      key: 'value',\n      label: 'Value',\n      type: 'measure',\n      required: true\n    }],\n    basic: [\n    // 地图类型选择\n    {\n      key: 'mapName',\n      label: 'Map Name',\n      type: 'select',\n      required: true,\n      options: [{\n        label: 'World',\n        value: 'world'\n      }, {\n        label: 'China',\n        value: 'china'\n      }],\n      default: 'World'\n    },\n    // 地图数据源URL\n    {\n      key: 'mapUrl',\n      label: 'GeoJSON URL',\n      type: 'text',\n      placeholder: \"https://xxx/china.json\",\n      required: false\n    },\n    // 地图投影类型\n    {\n      key: 'seriesType',\n      label: 'Series Type',\n      type: 'select',\n      required: true,\n      options: [{\n        label: 'Map',\n        value: 'map'\n      }, {\n        label: 'Scatter',\n        value: 'scatter'\n      }, {\n        label: 'Heatmap',\n        value: 'heatmap'\n      }, {\n        label: 'Lines',\n        value: 'lines'\n      }, {\n        label: 'Bar',\n        value: 'bar'\n      }, {\n        label: 'Pie',\n        value: 'pie'\n      }]\n    }],\n    advanced: []\n  },\n  // K线图\n  Candlestick: {\n    mapping: [\n    // 时间序列\n    {\n      key: 'time',\n      label: 'Time',\n      type: 'dimension',\n      required: true\n    },\n    // 开盘价、收盘价、最高价、最低价\n    {\n      key: 'open',\n      label: 'Open',\n      type: 'measure',\n      required: true\n    }, {\n      key: 'close',\n      label: 'Close',\n      type: 'measure',\n      required: true\n    }, {\n      key: 'high',\n      label: 'High',\n      type: 'measure',\n      required: true\n    }, {\n      key: 'low',\n      label: 'Low',\n      type: 'measure',\n      required: true\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 雷达图\n  Radar: {\n    mapping: [\n    // 维度名称\n    {\n      key: 'indicator',\n      label: 'Indicator',\n      type: 'dimension',\n      required: true,\n      multiple: true\n    },\n    // 系列名称\n    {\n      key: 'name',\n      label: 'Name',\n      type: 'tag',\n      required: false\n    },\n    // 数据值\n    {\n      key: 'value',\n      label: 'Value',\n      type: 'measure',\n      required: true,\n      multiple: true\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 箱线图\n  Boxplot: {\n    mapping: [\n    // 类目\n    {\n      key: 'category',\n      label: 'Category',\n      type: 'dimension',\n      required: true\n    },\n    // 最小值、Q1、Q2（中位数）、Q3、最大值\n    {\n      key: 'min',\n      label: 'Min',\n      type: 'measure',\n      required: true\n    }, {\n      key: 'q1',\n      label: 'Q1',\n      type: 'measure',\n      required: true\n    }, {\n      key: 'median',\n      label: 'Median',\n      type: 'measure',\n      required: true\n    }, {\n      key: 'q3',\n      label: 'Q3',\n      type: 'measure',\n      required: true\n    }, {\n      key: 'max',\n      label: 'Max',\n      type: 'measure',\n      required: true\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 热力图\n  Heatmap: {\n    mapping: [\n    // X轴维度\n    {\n      key: 'xAxis',\n      label: 'X Axis',\n      type: 'dimension',\n      required: true\n    },\n    // Y轴维度\n    {\n      key: 'yAxis',\n      label: 'Y Axis',\n      type: 'dimension',\n      required: true\n    },\n    // 值\n    {\n      key: 'value',\n      label: 'Value',\n      type: 'measure',\n      required: true\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 关系图\n  Graph: {\n    mapping: [\n    // 节点ID\n    {\n      key: 'nodeID',\n      label: 'Node ID',\n      type: 'dimension',\n      required: true\n    },\n    // 节点名称\n    {\n      key: 'nodeName',\n      label: 'Node Name',\n      type: 'tag',\n      required: false\n    },\n    // 节点数值\n    {\n      key: 'nodeValue',\n      label: 'Node Value',\n      type: 'measure',\n      required: false\n    },\n    // 节点分组\n    {\n      key: 'nodeCategory',\n      label: 'Node Category',\n      type: 'dimension',\n      required: false\n    },\n    // 边起点\n    {\n      key: 'edgeSource',\n      label: 'Edge Source',\n      type: 'dimension',\n      required: true\n    },\n    // 边终点\n    {\n      key: 'edgeTarget',\n      label: 'Edge Target',\n      type: 'dimension',\n      required: true\n    },\n    // 边权重\n    {\n      key: 'edgeWeight',\n      label: 'Edge Weight',\n      type: 'measure',\n      required: false\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 树图\n  Tree: {\n    mapping: [\n    // 平铺模式\n    // 节点ID\n    {\n      key: 'nodeID',\n      label: 'Node ID',\n      type: 'dimension',\n      required: false\n    },\n    // 节点名称\n    {\n      key: 'nodeName',\n      label: 'Node Name',\n      type: 'tag',\n      required: false\n    },\n    // 父节点ID\n    {\n      key: 'parentID',\n      label: 'Parent ID',\n      type: 'dimension',\n      required: false\n    },\n    // 父节点名称\n    {\n      key: 'parentName',\n      label: 'Parent Name',\n      type: 'tag',\n      required: false\n    },\n    // 节点数值\n    {\n      key: 'nodeValue',\n      label: 'Node Value',\n      type: 'measure',\n      required: false\n    },\n    // 路径模式\n    {\n      key: 'path',\n      label: 'Path',\n      type: 'dimension',\n      required: false,\n      multiple: true,\n      description: 'If your data format is path based, you can use this mapping item to render the chart\\n(What is path based? -> Data with relationship hierarchy in one row, eg.\"A/B/C\")'\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 矩形树图\n  Treemap: {\n    mapping: [\n    // 平铺模式\n    // 节点ID\n    {\n      key: 'nodeID',\n      label: 'Node ID',\n      type: 'dimension',\n      required: false\n    },\n    // 节点名称\n    {\n      key: 'nodeName',\n      label: 'Node Name',\n      type: 'tag',\n      required: false\n    },\n    // 父节点ID\n    {\n      key: 'parentID',\n      label: 'Parent ID',\n      type: 'dimension',\n      required: false\n    },\n    // 父节点名称\n    {\n      key: 'parentName',\n      label: 'Parent Name',\n      type: 'tag',\n      required: false\n    },\n    // 节点数值\n    {\n      key: 'nodeValue',\n      label: 'Node Value',\n      type: 'measure',\n      required: false\n    },\n    // 路径模式\n    {\n      key: 'path',\n      label: 'Path',\n      type: 'dimension',\n      required: false,\n      multiple: true,\n      description: 'If your data format is path based, you can use this mapping item to render the chart\\n(What is path based? -> Data with relationship hierarchy in one row, eg.\"A/B/C\")'\n    },\n    // 路径节点值\n    {\n      key: 'pathValue',\n      label: 'Node Value(path)',\n      type: 'measure',\n      required: false,\n      multiple: true,\n      description: 'Note that the value column must strictly correspond to the path node above'\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 旭日图\n  Sunburst: {\n    mapping: [\n    // 平铺模式\n    // 节点ID\n    {\n      key: 'nodeID',\n      label: 'Node ID',\n      type: 'dimension',\n      required: false\n    },\n    // 节点名称\n    {\n      key: 'nodeName',\n      label: 'Node Name',\n      type: 'tag',\n      required: false\n    },\n    // 父节点ID\n    {\n      key: 'parentID',\n      label: 'Parent ID',\n      type: 'dimension',\n      required: false\n    },\n    // 父节点名称\n    {\n      key: 'parentName',\n      label: 'Parent Name',\n      type: 'tag',\n      required: false\n    },\n    // 节点数值\n    {\n      key: 'nodeValue',\n      label: 'Node Value',\n      type: 'measure',\n      required: false\n    },\n    // 路径模式\n    {\n      key: 'path',\n      label: 'Path',\n      type: 'dimension',\n      required: false,\n      multiple: true,\n      description: 'If your data format is path based, you can use this mapping item to render the chart\\n(What is path based? -> Data with relationship hierarchy in one row, eg.\"A/B/C\")'\n    },\n    // 路径节点值\n    {\n      key: 'pathValue',\n      label: 'Node Value(path)',\n      type: 'measure',\n      required: false,\n      multiple: true,\n      description: 'Note that the value column must strictly correspond to the path node above'\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 平行坐标系图\n  Parallel: {\n    mapping: [\n    // 维度\n    {\n      key: 'dimensions',\n      label: 'Dimensions (multiple)',\n      type: 'dimension & measure',\n      required: true,\n      multiple: true\n    },\n    // 系列名称\n    {\n      key: 'nameField',\n      label: 'Series',\n      type: 'tag',\n      required: false\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 桑基图\n  Sankey: {\n    mapping: [\n    // 源节点\n    {\n      key: 'source',\n      label: 'Source',\n      type: 'dimension',\n      required: true\n    },\n    // 目标节点\n    {\n      key: 'target',\n      label: 'Target',\n      type: 'dimension',\n      required: true\n    },\n    // 流量/权重\n    {\n      key: 'value',\n      label: 'Value',\n      type: 'measure',\n      required: true\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 漏斗图\n  Funnel: {\n    mapping: [\n    // 阶段名称\n    {\n      key: 'stage',\n      label: 'Stage',\n      type: 'dimension',\n      required: true\n    },\n    // 阶段值\n    {\n      key: 'value',\n      label: 'Value',\n      type: 'measure',\n      required: true\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 仪表盘\n  Gauge: {\n    mapping: [\n    // 指标名称\n    {\n      key: 'name',\n      label: 'Name',\n      type: 'dimension',\n      required: false\n    },\n    // 指标值\n    {\n      key: 'value',\n      label: 'Value',\n      type: 'measure',\n      required: true\n    }],\n    basic: [],\n    advanced: []\n  },\n  // 象形柱图\n  PictorialBar: {\n    mapping: [\n      // 类别轴字段\n    ],\n    basic: [],\n    advanced: []\n  },\n  // 主题河流图\n  ThemeRiver: {\n    mapping: [],\n    basic: [],\n    advanced: []\n  },\n  // 日历图\n  Calendar: {\n    mapping: [],\n    basic: [],\n    advanced: []\n  }\n  // ... 其他图表类型可继续扩展\n};","map":{"version":3,"names":["chartTypeConfig","Line","mapping","key","label","type","required","multiple","basic","advanced","Bar","Pie","Scatter","Geo_Map","options","value","default","placeholder","Candlestick","Radar","Boxplot","Heatmap","Graph","Tree","description","Treemap","Sunburst","Parallel","Sankey","Funnel","Gauge","PictorialBar","ThemeRiver","Calendar"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/Config/ChartTypeConfig.js"],"sourcesContent":["// ChartTypeConfig.js\n// 图表类型的动态配置项描述，便于模块化和可扩展\n// 包含数据映射配置项和高级配置项\n\n/* eslint-disable */\nexport const chartTypeConfig = {\n    // 折线图\n    Line: {\n        mapping: [\n            { key: 'xAxis', label: 'X Axis', type: 'dimension', required: true },\n            { key: 'yAxis', label: 'Y Axis', type: 'measure', required: true, multiple: true },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 柱状图\n    Bar: {\n        mapping: [\n            { key: 'xAxis', label: 'X Axis', type: 'dimension', required: true },\n            { key: 'yAxis', label: 'Y Axis', type: 'measure', required: true, multiple: true },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 饼图\n    Pie: {\n        mapping: [\n            { key: 'category', label: 'Category', type: 'dimension', required: true },\n            { key: 'value', label: 'Value', type: 'measure', required: true },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 散点图\n    Scatter: {\n        mapping: [\n            { key: 'xAxis', label: 'X Axis', type: 'dimension', required: true },\n            { key: 'yAxis', label: 'Y Axis', type: 'measure', required: true, multiple: true },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 地图\n    Geo_Map: {\n        mapping: [\n            // 地域名称\n            { key: 'nameField', label: 'Field Name', type: 'dimension', required: false },\n            // 经纬度字段\n            { key: 'lngField', label: 'Longitude', type: 'dimension', required: false },\n            { key: 'latField', label: 'Latitude', type: 'dimension', required: false },\n            // 值\n            { key: 'value', label: 'Value', type: 'measure', required: true },\n        ],\n        basic: [\n            // 地图类型选择\n            { key: 'mapName', label: 'Map Name', type: 'select', required: true, options: [{ label: 'World', value: 'world' }, { label: 'China', value: 'china' }], default: 'World' },\n            // 地图数据源URL\n            { key: 'mapUrl', label: 'GeoJSON URL', type: 'text', placeholder: \"https://xxx/china.json\", required: false },\n            // 地图投影类型\n            { key: 'seriesType', label: 'Series Type', type: 'select', required: true, options: [{ label: 'Map', value: 'map' }, { label: 'Scatter', value: 'scatter' }, { label: 'Heatmap', value: 'heatmap' }, { label: 'Lines', value: 'lines' }, { label: 'Bar', value: 'bar' }, { label: 'Pie', value: 'pie' }] },\n        ],\n        advanced: [\n        ]\n    },\n    // K线图\n    Candlestick: {\n        mapping: [\n            // 时间序列\n            { key: 'time', label: 'Time', type: 'dimension', required: true },\n            // 开盘价、收盘价、最高价、最低价\n            { key: 'open', label: 'Open', type: 'measure', required: true },\n            { key: 'close', label: 'Close', type: 'measure', required: true },\n            { key: 'high', label: 'High', type: 'measure', required: true },\n            { key: 'low', label: 'Low', type: 'measure', required: true },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 雷达图\n    Radar: {\n        mapping: [\n            // 维度名称\n            { key: 'indicator', label: 'Indicator', type: 'dimension', required: true, multiple: true },\n            // 系列名称\n            { key: 'name', label: 'Name', type: 'tag', required: false },\n            // 数据值\n            { key: 'value', label: 'Value', type: 'measure', required: true, multiple: true },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 箱线图\n    Boxplot: {\n        mapping: [\n            // 类目\n            { key: 'category', label: 'Category', type: 'dimension', required: true },\n            // 最小值、Q1、Q2（中位数）、Q3、最大值\n            { key: 'min', label: 'Min', type: 'measure', required: true },\n            { key: 'q1', label: 'Q1', type: 'measure', required: true },\n            { key: 'median', label: 'Median', type: 'measure', required: true },\n            { key: 'q3', label: 'Q3', type: 'measure', required: true },\n            { key: 'max', label: 'Max', type: 'measure', required: true },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 热力图\n    Heatmap: {\n        mapping: [\n            // X轴维度\n            { key: 'xAxis', label: 'X Axis', type: 'dimension', required: true },\n            // Y轴维度\n            { key: 'yAxis', label: 'Y Axis', type: 'dimension', required: true },\n            // 值\n            { key: 'value', label: 'Value', type: 'measure', required: true },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 关系图\n    Graph: {\n        mapping: [\n            // 节点ID\n            { key: 'nodeID', label: 'Node ID', type: 'dimension', required: true },\n            // 节点名称\n            { key: 'nodeName', label: 'Node Name', type: 'tag', required: false },\n            // 节点数值\n            { key: 'nodeValue', label: 'Node Value', type: 'measure', required: false },\n            // 节点分组\n            { key: 'nodeCategory', label: 'Node Category', type: 'dimension', required: false },\n            // 边起点\n            { key: 'edgeSource', label: 'Edge Source', type: 'dimension', required: true },\n            // 边终点\n            { key: 'edgeTarget', label: 'Edge Target', type: 'dimension', required: true },\n            // 边权重\n            { key: 'edgeWeight', label: 'Edge Weight', type: 'measure', required: false },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 树图\n    Tree: {\n        mapping: [\n            // 平铺模式\n            // 节点ID\n            { key: 'nodeID', label: 'Node ID', type: 'dimension', required: false },\n            // 节点名称\n            { key: 'nodeName', label: 'Node Name', type: 'tag', required: false },\n            // 父节点ID\n            { key: 'parentID', label: 'Parent ID', type: 'dimension', required: false },\n            // 父节点名称\n            { key: 'parentName', label: 'Parent Name', type: 'tag', required: false },\n            // 节点数值\n            { key: 'nodeValue', label: 'Node Value', type: 'measure', required: false },\n\n            // 路径模式\n            { key: 'path', label: 'Path', type: 'dimension', required: false, multiple: true, description: 'If your data format is path based, you can use this mapping item to render the chart\\n(What is path based? -> Data with relationship hierarchy in one row, eg.\"A/B/C\")' },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 矩形树图\n    Treemap: {\n        mapping: [\n            // 平铺模式\n            // 节点ID\n            { key: 'nodeID', label: 'Node ID', type: 'dimension', required: false },\n            // 节点名称\n            { key: 'nodeName', label: 'Node Name', type: 'tag', required: false },\n            // 父节点ID\n            { key: 'parentID', label: 'Parent ID', type: 'dimension', required: false },\n            // 父节点名称\n            { key: 'parentName', label: 'Parent Name', type: 'tag', required: false },\n            // 节点数值\n            { key: 'nodeValue', label: 'Node Value', type: 'measure', required: false },\n\n            // 路径模式\n            { key: 'path', label: 'Path', type: 'dimension', required: false, multiple: true, description: 'If your data format is path based, you can use this mapping item to render the chart\\n(What is path based? -> Data with relationship hierarchy in one row, eg.\"A/B/C\")' },\n            // 路径节点值\n            { key: 'pathValue', label: 'Node Value(path)', type: 'measure', required: false, multiple: true, description: 'Note that the value column must strictly correspond to the path node above' },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 旭日图\n    Sunburst: {\n        mapping: [\n            // 平铺模式\n            // 节点ID\n            { key: 'nodeID', label: 'Node ID', type: 'dimension', required: false },\n            // 节点名称\n            { key: 'nodeName', label: 'Node Name', type: 'tag', required: false },\n            // 父节点ID\n            { key: 'parentID', label: 'Parent ID', type: 'dimension', required: false },\n            // 父节点名称\n            { key: 'parentName', label: 'Parent Name', type: 'tag', required: false },\n            // 节点数值\n            { key: 'nodeValue', label: 'Node Value', type: 'measure', required: false },\n\n            // 路径模式\n            { key: 'path', label: 'Path', type: 'dimension', required: false, multiple: true, description: 'If your data format is path based, you can use this mapping item to render the chart\\n(What is path based? -> Data with relationship hierarchy in one row, eg.\"A/B/C\")' },\n            // 路径节点值\n            { key: 'pathValue', label: 'Node Value(path)', type: 'measure', required: false, multiple: true, description: 'Note that the value column must strictly correspond to the path node above' },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 平行坐标系图\n    Parallel: {\n        mapping: [\n            // 维度\n            { key: 'dimensions', label: 'Dimensions (multiple)', type: 'dimension & measure', required: true, multiple: true },\n            // 系列名称\n            { key: 'nameField', label: 'Series', type: 'tag', required: false },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 桑基图\n    Sankey: {\n        mapping: [\n            // 源节点\n            { key: 'source', label: 'Source', type: 'dimension', required: true },\n            // 目标节点\n            { key: 'target', label: 'Target', type: 'dimension', required: true },\n            // 流量/权重\n            { key: 'value', label: 'Value', type: 'measure', required: true },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 漏斗图\n    Funnel: {\n        mapping: [\n            // 阶段名称\n            { key: 'stage', label: 'Stage', type: 'dimension', required: true },\n            // 阶段值\n            { key: 'value', label: 'Value', type: 'measure', required: true },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 仪表盘\n    Gauge: {\n        mapping: [\n            // 指标名称\n            { key: 'name', label: 'Name', type: 'dimension', required: false },\n            // 指标值\n            { key: 'value', label: 'Value', type: 'measure', required: true },\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 象形柱图\n    PictorialBar: {\n        mapping: [\n            // 类别轴字段\n            \n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 主题河流图\n    ThemeRiver: {\n        mapping: [\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // 日历图\n    Calendar: {\n        mapping: [\n        ],\n        basic: [\n        ],\n        advanced: [\n        ]\n    },\n    // ... 其他图表类型可继续扩展\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}