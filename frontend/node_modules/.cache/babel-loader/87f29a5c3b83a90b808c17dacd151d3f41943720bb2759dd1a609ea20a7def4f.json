{"ast":null,"code":"/* eslint-disable */\n\n// 模块化导入各类图表 option 生成器\nimport barOption from '../../JS/chartOptions/bar';\nimport scatterOption from '../../JS/chartOptions/scatter';\nimport lineOption from '../../JS/chartOptions/line';\nimport pieOption from '../../JS/chartOptions/pie';\n// ...可继续导入更多类型\n\n// 注册新类型生成器接口\nexport function registerChartOptionGenerator(type, generatorFn) {\n  chartOptionGenerators[type.toLowerCase()] = generatorFn;\n}\n// 图表类型注册表\nconst chartOptionGenerators = {};\n\n// 注册模块化生成器\nregisterChartOptionGenerator('bar', barOption);\nregisterChartOptionGenerator('scatter', scatterOption);\nregisterChartOptionGenerator('line', lineOption);\nregisterChartOptionGenerator('pie', pieOption);\n\n// 主入口：根据类型分发\nexport function generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  const type = selectedChartType.value.toLowerCase();\n  const generator = chartOptionGenerators[type];\n  if (!generator) {\n    throw new Error(`No chart option generator registered for type: ${type}`);\n  }\n  const option = generator(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption);\n  // 调试输出\n  console.log('[generateEChartOption]', type, option);\n  return option;\n}","map":{"version":3,"names":["barOption","scatterOption","lineOption","pieOption","registerChartOptionGenerator","type","generatorFn","chartOptionGenerators","toLowerCase","generateEChartOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","value","generator","Error","option","console","log"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/utils/echartOptionUtils.js"],"sourcesContent":["/* eslint-disable */\n\n// 模块化导入各类图表 option 生成器\nimport barOption from '../../JS/chartOptions/bar'\nimport scatterOption from '../../JS/chartOptions/scatter'\nimport lineOption from '../../JS/chartOptions/line'\nimport pieOption from '../../JS/chartOptions/pie'\n// ...可继续导入更多类型\n\n// 注册新类型生成器接口\nexport function registerChartOptionGenerator(type, generatorFn) {\n    chartOptionGenerators[type.toLowerCase()] = generatorFn;\n}\n// 图表类型注册表\nconst chartOptionGenerators = {};\n\n// 注册模块化生成器\nregisterChartOptionGenerator('bar', barOption)\nregisterChartOptionGenerator('scatter', scatterOption)\nregisterChartOptionGenerator('line', lineOption)\nregisterChartOptionGenerator('pie', pieOption)\n\n\n// 主入口：根据类型分发\nexport function generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    const type = selectedChartType.value.toLowerCase();\n    const generator = chartOptionGenerators[type];\n    if (!generator) {\n        throw new Error(`No chart option generator registered for type: ${type}`);\n    }\n    const option = generator(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption);\n    // 调试输出\n    console.log('[generateEChartOption]', type, option);\n    return option;\n}\n"],"mappings":"AAAA;;AAEA;AACA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,SAAS,MAAM,2BAA2B;AACjD;;AAEA;AACA,OAAO,SAASC,4BAA4BA,CAACC,IAAI,EAAEC,WAAW,EAAE;EAC5DC,qBAAqB,CAACF,IAAI,CAACG,WAAW,CAAC,CAAC,CAAC,GAAGF,WAAW;AAC3D;AACA;AACA,MAAMC,qBAAqB,GAAG,CAAC,CAAC;;AAEhC;AACAH,4BAA4B,CAAC,KAAK,EAAEJ,SAAS,CAAC;AAC9CI,4BAA4B,CAAC,SAAS,EAAEH,aAAa,CAAC;AACtDG,4BAA4B,CAAC,MAAM,EAAEF,UAAU,CAAC;AAChDE,4BAA4B,CAAC,KAAK,EAAED,SAAS,CAAC;;AAG9C;AACA,OAAO,SAASM,oBAAoBA,CAACC,MAAM,EAAEC,WAAW,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,YAAY,GAAG,CAAC,CAAC,EAAE;EACzH,MAAMX,IAAI,GAAGS,iBAAiB,CAACG,KAAK,CAACT,WAAW,CAAC,CAAC;EAClD,MAAMU,SAAS,GAAGX,qBAAqB,CAACF,IAAI,CAAC;EAC7C,IAAI,CAACa,SAAS,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkDd,IAAI,EAAE,CAAC;EAC7E;EACA,MAAMe,MAAM,GAAGF,SAAS,CAACR,MAAM,EAAEC,WAAW,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,YAAY,CAAC;EAC3G;EACAK,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEjB,IAAI,EAAEe,MAAM,CAAC;EACnD,OAAOA,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}