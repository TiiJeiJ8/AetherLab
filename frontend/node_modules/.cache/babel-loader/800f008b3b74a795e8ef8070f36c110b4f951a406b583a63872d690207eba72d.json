{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n/* eslint-disable */\n\n/**\n * 高级配置项：\n * 节点大小设置\n * 边宽度设置 links\n * 图表布局设置(none, force, circular)\n * 连接曲率 curveness\n * 布局样式 layout\n */\n\n// 关系图生成器\nexport default function graphOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  const {\n    nodes,\n    edges\n  } = seriesData;\n  // 兼容无category字段\n  let categories = Array.from(new Set(nodes.map(node => node.category))).filter(Boolean);\n  if (categories.length === 0) {\n    categories = ['Default'];\n    // 给所有节点补上默认分组\n    nodes.forEach(n => {\n      n.category = 'Default';\n    });\n  }\n\n  // 最大 / 最小节点大小\n  const minNodeSize = config.minNodeSize || 3; // 默认最小 3\n  const maxNodeSize = config.maxNodeSize || 43; // 默认最大 43\n  const diff = maxNodeSize - minNodeSize;\n\n  // 自动映射节点大小\n  const values = nodes.map(n => typeof n.value === 'number' ? n.value : 0);\n  const minValue = Math.min(...values);\n  const maxValue = Math.max(...values);\n  // 映射到像素区间, 错误则返回15\n  const getSymbolSize = v => {\n    if (maxValue === minValue || maxValue < minValue) return 15;\n    return minNodeSize + diff * ((v - minValue) / (maxValue - minValue));\n  };\n  const sizedNodes = nodes.map(n => ({\n    ...n,\n    symbolSize: getSymbolSize(n.value)\n  }));\n\n  // 最粗 / 最细边宽度\n  const minEdgeWidth = config.minEdgeWidth || 1.5; // 默认最细 1.5\n  const maxEdgeWidth = config.maxEdgeWidth || 5; // 默认最粗 5\n  const edgeDiff = maxEdgeWidth - minEdgeWidth;\n\n  // 自动映射边的宽度\n  const weights = edges.map(e => typeof e.weight === 'number' ? e.weight : 1);\n  const minW = Math.min(...weights);\n  const maxW = Math.max(...weights);\n  const getEdgeWidth = w => {\n    if (maxW === minW || maxW < minW) return 1.5;\n    return minEdgeWidth + edgeDiff * ((w - minW) / (maxW - minW));\n  };\n  const sizedEdges = edges.map(e => ({\n    ...e,\n    lineStyle: {\n      width: getEdgeWidth(e.weight)\n    }\n  }));\n  let Edges = [];\n  if (config.isSizedEdges) {\n    Edges = sizedEdges;\n  } else {\n    // 若不自动映射，则使用输入的边数据\n    Edges = edges;\n  }\n  return {\n    title: {\n      text: config.title || 'Chart of Graph',\n      subtext: config.subtext || '',\n      left: 'center',\n      top: 'top',\n      textStyle: {\n        fontSize: 16,\n        fontWeight: 'bold'\n      },\n      subtextStyle: {\n        fontSize: 12\n      }\n    },\n    toolbox: {\n      show: true,\n      feature: {\n        dataZoom: {\n          show: true\n        },\n        saveAsImage: {\n          show: true\n        },\n        restore: {\n          show: true\n        },\n        dataView: {\n          show: true,\n          readOnly: false\n        }\n      }\n    },\n    legend: {\n      type: 'scroll',\n      data: categories.map(name => ({\n        name\n      })),\n      show: config.legendVisible !== false,\n      top: config.legendPosition || 'bottom'\n    },\n    series: [{\n      type: 'graph',\n      layout: config.layout || 'force',\n      // none, circular, force\n      roam: true,\n      data: sizedNodes,\n      links: Edges,\n      categories: categories.map(cat => ({\n        name: cat\n      })),\n      label: {\n        show: true,\n        position: 'right',\n        formatter: '{b}'\n      },\n      force: {\n        // 力引导布局配置\n        // 节点间斥力\n        repulsion: config.forceRepulsion || 100,\n        // 默认 100\n        // 节点受到中心引力因子\n        gravity: config.forceGravity || 0.1,\n        // 默认 0.1\n        edgeLength: config.forceEdgeLength || 100,\n        // 默认 100\n        layoutAnimation: config.forceLayoutAnimation !== false,\n        // 默认 true\n        preventOverlap: config.forcePreventOverlap !== false // 默认 true\n      },\n      lineStyle: {\n        color: 'source',\n        curveness: config.curveness || 0.3\n      },\n      edgeLabel: {\n        show: false\n      },\n      emphasis: {\n        focus: 'adjacency'\n      }\n    }],\n    ...customOption\n  };\n}","map":{"version":3,"names":["graphOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","nodes","edges","categories","Array","from","Set","map","node","category","filter","Boolean","length","forEach","n","minNodeSize","maxNodeSize","diff","values","value","minValue","Math","min","maxValue","max","getSymbolSize","v","sizedNodes","symbolSize","minEdgeWidth","maxEdgeWidth","edgeDiff","weights","e","weight","minW","maxW","getEdgeWidth","w","sizedEdges","lineStyle","width","Edges","isSizedEdges","title","text","subtext","left","top","textStyle","fontSize","fontWeight","subtextStyle","toolbox","show","feature","dataZoom","saveAsImage","restore","dataView","readOnly","legend","type","data","name","legendVisible","legendPosition","series","layout","roam","links","cat","label","position","formatter","force","repulsion","forceRepulsion","gravity","forceGravity","edgeLength","forceEdgeLength","layoutAnimation","forceLayoutAnimation","preventOverlap","forcePreventOverlap","color","curveness","edgeLabel","emphasis","focus"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/chartOptions/graph.js"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 高级配置项：\n * 节点大小设置\n * 边宽度设置 links\n * 图表布局设置(none, force, circular)\n * 连接曲率 curveness\n * 布局样式 layout\n */\n\n// 关系图生成器\nexport default function graphOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    const { nodes, edges } = seriesData;\n    // 兼容无category字段\n    let categories = Array.from(new Set(nodes.map(node => node.category))).filter(Boolean);\n    if (categories.length === 0) {\n        categories = ['Default'];\n        // 给所有节点补上默认分组\n        nodes.forEach(n => { n.category = 'Default'; });\n    }\n\n    // 最大 / 最小节点大小\n    const minNodeSize = config.minNodeSize || 3; // 默认最小 3\n    const maxNodeSize = config.maxNodeSize || 43; // 默认最大 43\n    const diff = maxNodeSize - minNodeSize;\n\n    // 自动映射节点大小\n    const values = nodes.map(n => typeof n.value === 'number' ? n.value : 0);\n    const minValue = Math.min(...values);\n    const maxValue = Math.max(...values);\n    // 映射到像素区间, 错误则返回15\n    const getSymbolSize = v => {\n        if (maxValue === minValue || maxValue < minValue) return 15;\n        return minNodeSize + diff * ((v - minValue) / (maxValue - minValue));\n    };\n    const sizedNodes = nodes.map(n => ({ ...n, symbolSize: getSymbolSize(n.value) }));\n\n    // 最粗 / 最细边宽度\n    const minEdgeWidth = config.minEdgeWidth || 1.5; // 默认最细 1.5\n    const maxEdgeWidth = config.maxEdgeWidth || 5; // 默认最粗 5\n    const edgeDiff = maxEdgeWidth - minEdgeWidth;\n\n    // 自动映射边的宽度\n    const weights = edges.map(e => typeof e.weight === 'number' ? e.weight : 1);\n    const minW = Math.min(...weights);\n    const maxW = Math.max(...weights);\n    const getEdgeWidth = w => {\n        if (maxW === minW || maxW < minW) return 1.5;\n        return minEdgeWidth + edgeDiff * ((w - minW) / (maxW - minW));\n    };\n    const sizedEdges = edges.map(e => ({ ...e, lineStyle: { width: getEdgeWidth(e.weight) } }));\n\n    let Edges = [];\n    if (config.isSizedEdges) {\n        Edges = sizedEdges\n    }\n    else {\n        // 若不自动映射，则使用输入的边数据\n        Edges = edges\n    }\n\n    return {\n        title: {\n            text: config.title || 'Chart of Graph',\n            subtext: config.subtext || '',\n            left: 'center',\n            top: 'top',\n            textStyle: {\n                fontSize: 16,\n                fontWeight: 'bold',\n            },\n            subtextStyle: {\n                fontSize: 12,\n            },\n        },\n        toolbox: {\n            show: true,\n            feature: {\n                dataZoom: { show: true },\n                saveAsImage: { show: true },\n                restore: { show: true },\n                dataView: { show: true, readOnly: false },\n            }\n        },\n        legend: {\n            type: 'scroll',\n            data: categories.map(name => ({ name })),\n            show: config.legendVisible !== false,\n            top: config.legendPosition || 'bottom',\n        },\n        series: [\n            {\n                type: 'graph',\n                layout: config.layout || 'force', // none, circular, force\n                roam: true,\n                data: sizedNodes,\n                links: Edges,\n                categories: categories.map(cat => ({ name: cat })),\n                label: {\n                    show: true,\n                    position: 'right',\n                    formatter: '{b}'\n                },\n                force: {\n                    // 力引导布局配置\n                    // 节点间斥力\n                    repulsion: config.forceRepulsion || 100, // 默认 100\n                    // 节点受到中心引力因子\n                    gravity: config.forceGravity || 0.1, // 默认 0.1\n                    edgeLength: config.forceEdgeLength || 100, // 默认 100\n                    layoutAnimation: config.forceLayoutAnimation !== false, // 默认 true\n                    preventOverlap: config.forcePreventOverlap !== false, // 默认 true\n                },\n                lineStyle: {\n                    color: 'source',\n                    curveness: config.curveness || 0.3,\n                },\n                edgeLabel: {\n                    show: false,\n                },\n                emphasis: {\n                    focus: 'adjacency'\n                },\n            }\n        ],\n        ...customOption,\n    };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}