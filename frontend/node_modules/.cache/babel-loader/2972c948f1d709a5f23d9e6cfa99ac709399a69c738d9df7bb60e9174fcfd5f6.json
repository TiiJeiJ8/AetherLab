{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, computed, watch, reactive, nextTick } from 'vue';\nimport { chartIcons } from '../../assets/JS/SVG/chartIcons.js';\nimport { chartsTooltipConfig } from '../../assets/JS/Config/ChartsTooltipConfig.js';\nimport { chartTypeConfig } from '../../assets/JS/Config/ChartTypeConfig.js';\nimport AutoRenderToggle from '../Common/AutoRenderToggle.vue';\nimport ChartBasicConfig from './ChartBasicConfig.vue';\nimport ChartMappingConfig from './ChartMappingConfig.vue';\nimport ChartFilterConfig from './ChartFilterConfig.vue';\nimport ChartAdvancedConfig from './ChartAdvancedConfig.vue';\n\n// 当前类型的配置\nimport { fileDataMap } from '@/assets/JS/utils/dataStructureOptimize.js';\nexport default {\n  __name: 'ChartConfigPanel',\n  props: {\n    selectedChartType: {\n      type: String,\n      default: 'line'\n    },\n    currentFile: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['config-change', 'generate-chart', 'save-history'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const currentTypeConfig = computed(() => {\n      // 兼容首字母大写/小写\n      return chartTypeConfig[props.selectedChartType] || chartTypeConfig[props.selectedChartType.charAt(0).toUpperCase() + props.selectedChartType.slice(1)] || {};\n    });\n\n    // Props\n    const props = __props;\n\n    // Emits\n    const emit = __emit;\n    // 保存到历史区\n    function saveToHistory() {\n      // 触发保存事件，传递当前配置\n      emit('save-history', {\n        config: {\n          ...chartConfig.value\n        },\n        colorTheme: chartConfig.value.colorScheme || 'default'\n      });\n    }\n\n    // 图表配置（必须在所有 watch 之前声明）\n    const chartConfig = ref({\n      xAxis: {\n        field: '',\n        type: ''\n      },\n      yAxis: {\n        field: '',\n        type: ''\n      },\n      series: [],\n      title: '',\n      colorScheme: 'default',\n      animation: true,\n      dataRange: 'all',\n      nullHandling: 'ignoreNull'\n    });\n\n    // 响应式数据\n    const showDataFilter = ref(false);\n    const showAdvancedConfig = ref(false);\n    const errorMessage = ref('');\n    const tooltipRef = ref(null);\n\n    // 自动初始化/同步 lineSeriesStyles\n    watch([() => props.selectedChartType, () => chartConfig.value.yAxis, () => chartConfig.value.series, () => mainRawData.value], ([type, yAxis, series, rawData]) => {\n      if ((type === 'line' || type === 'Line') && yAxis && (Array.isArray(yAxis) ? yAxis.length > 0 : yAxis.field)) {\n        // 获取系列名数组\n        let yArr = [];\n        if (Array.isArray(yAxis)) {\n          yArr = yAxis.map(y => y.field).filter(Boolean);\n        } else if (yAxis.field) {\n          yArr = [yAxis.field];\n        }\n        // 获取数据点数\n        let dataLen = 0;\n        if (rawData && rawData.length > 0 && chartConfig.value.xAxis && chartConfig.value.xAxis.field) {\n          dataLen = rawData.length;\n        }\n        // 生成默认样式\n        const defaultLineTypes = ['solid', 'dashed', 'dotted'];\n        const defaultSymbols = ['circle', 'rect', 'roundRect', 'triangle', 'diamond', 'pin', 'arrow'];\n        if (!chartConfig.value.lineSeriesStyles || !Array.isArray(chartConfig.value.lineSeriesStyles)) {\n          chartConfig.value.lineSeriesStyles = [];\n        }\n        // 补全/同步每个系列\n        yArr.forEach((field, idx) => {\n          if (!chartConfig.value.lineSeriesStyles[idx]) {\n            chartConfig.value.lineSeriesStyles[idx] = {};\n          }\n          const style = chartConfig.value.lineSeriesStyles[idx];\n          style.seriesName = field;\n          if (!style.lineType) style.lineType = defaultLineTypes[idx % defaultLineTypes.length];\n          if (!style.lineColor) style.lineColor = '';\n          if (!style.lineWidth) style.lineWidth = 2;\n          if (typeof style.pointUnified !== 'boolean') style.pointUnified = true;\n          if (!style.pointSymbol) style.pointSymbol = defaultSymbols[idx % defaultSymbols.length];\n          if (!style.pointColor) style.pointColor = '';\n          // points: 每个点的样式\n          if (!Array.isArray(style.points)) {\n            style.points = [];\n          }\n          for (let i = 0; i < dataLen; i++) {\n            if (!style.points[i]) {\n              style.points[i] = {\n                symbol: style.pointSymbol,\n                color: style.pointColor,\n                size: 8\n              };\n            }\n          }\n          // 若数据点减少，裁剪多余\n          if (style.points.length > dataLen) {\n            style.points.length = dataLen;\n          }\n        });\n        // 若系列减少，裁剪多余\n        if (chartConfig.value.lineSeriesStyles.length > yArr.length) {\n          chartConfig.value.lineSeriesStyles.length = yArr.length;\n        }\n      }\n    }, {\n      immediate: true,\n      deep: true\n    });\n\n    // 自动渲染开关，默认手动渲染\n    const autoRender = ref(false);\n\n    // 提示框状态\n    const tooltip = reactive({\n      visible: false,\n      type: '',\n      description: '',\n      dataRequirements: [],\n      useCases: [],\n      style: {}\n    });\n    let tooltipTimeout = null;\n\n    // 拖拽状态\n    const isDragOver = ref({\n      xAxis: false,\n      yAxis: false,\n      series: false\n    });\n    const dragError = ref({\n      xAxis: false,\n      yAxis: false,\n      series: false\n    });\n\n    // 合并mapping字段，保留其它字段\n    function onMappingModelUpdate(mapping) {\n      // 只合并mappingConfig中定义的key，其它字段保留\n      const mappingKeys = (currentTypeConfig.value.mapping || []).map(item => item.key);\n      const newConfig = {\n        ...chartConfig.value\n      };\n      mappingKeys.forEach(key => {\n        newConfig[key] = mapping[key];\n      });\n      chartConfig.value = newConfig;\n      emit('config-change', chartConfig.value);\n    }\n\n    // 需要显示 Null Handling 的图表类型\n    const showNullHandlingTypes = ['Unknown', 'Line', 'Bar', 'Scatter', 'Candlestick', 'Radar', 'Boxplot', 'Heatmap', 'Parallel', 'Gauge', 'ThemeRiver', 'PictorialBar'];\n    // 判断当前类型是否需要显示 Null Handling\n    const showNullHandling = computed(() => {\n      const type = props.selectedChartType;\n      if (!type) return false;\n      // 兼容首字母大写/小写\n      const normalized = type.charAt(0).toUpperCase() + type.slice(1).toLowerCase();\n      return showNullHandlingTypes.includes(normalized);\n    });\n\n    // chartData自动获取当前用于绘图的数据来判断是否具有缺失值\n    const chartData = computed(() => props.chartData || []);\n\n    // 计算属性\n    const isConfigValid = computed(() => {\n      const type = (props.selectedChartType || '').toLowerCase();\n      const cfg = chartConfig.value;\n      console.log('Current chart type:', type, 'with config:', JSON.parse(JSON.stringify(cfg)));\n      if (['line', 'bar', 'scatter'].includes(type)) {\n        const xValid = cfg.xAxis && cfg.xAxis.field;\n        const y = cfg.yAxis;\n        const yValid = Array.isArray(y) ? y.length > 0 : y && y.field;\n        return xValid && yValid;\n      }\n      if (['pie'].includes(type)) {\n        // category/value 结构\n        const cat = cfg.category;\n        const val = cfg.value;\n        return cat && cat.field && val && val.field;\n      }\n      if (['candlestick'].includes(type)) {\n        return cfg.time && cfg.time.field && cfg.open && cfg.open.field && cfg.close && cfg.close.field && cfg.high && cfg.high.field && cfg.low && cfg.low.field;\n      }\n      if (['heatmap'].includes(type)) {\n        return cfg.xAxis && cfg.xAxis.field && cfg.yAxis && cfg.yAxis.field && cfg.value && cfg.value.field;\n      }\n      if (['radar'].includes(type)) {\n        return Array.isArray(cfg.indicator) && cfg.indicator.length > 0 && Array.isArray(cfg.value) && cfg.value.length > 0;\n      }\n      if (['boxplot'].includes(type)) {\n        return cfg.category && cfg.category.field;\n      }\n      if (['graph'].includes(type)) {\n        return cfg.nodeID && cfg.nodeID.field && cfg.edgeSource && cfg.edgeSource.field && cfg.edgeTarget && cfg.edgeTarget.field;\n      }\n      if (['tree'].includes(type)) {\n        return cfg.nodeID && cfg.nodeID.field && cfg.parentID && cfg.parentID.field;\n      }\n      if (['treemap', 'sunburst'].includes(type)) {\n        return cfg.nodeID && cfg.nodeID.field && cfg.parentID && cfg.parentID.field;\n      }\n      if (['parallel'].includes(type)) {\n        return Array.isArray(cfg.dimensions) && cfg.dimensions.length > 0 && cfg.dimensions.every(dim => dim.field);\n      }\n      if (['sankey'].includes(type)) {\n        return cfg.source && cfg.source.field && cfg.target && cfg.target.field && cfg.value && cfg.value.field;\n      }\n      if (['funnel'].includes(type)) {\n        return cfg.stage && cfg.stage.field && cfg.value && cfg.value.field;\n      }\n      if (['gauge'].includes(type)) {\n        return cfg.value && cfg.value.field;\n      }\n      if (['pictorialbar'].includes(type)) {\n        return cfg.category && cfg.category.field && cfg.value && cfg.value.field;\n      }\n      if (['themeriver'].includes(type)) {\n        return cfg.date && cfg.date.field && cfg.value && cfg.value.field;\n      }\n      if (['calendar'].includes(type)) {\n        return cfg.date && cfg.date.field;\n      }\n    });\n\n    // 监听 chartConfig 变化，自动渲染\n    watch(chartConfig, val => {\n      if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value);\n      }\n      console.log('Current chartConfig:', JSON.parse(JSON.stringify(val)));\n    }, {\n      deep: true\n    });\n\n    // 监听自动渲染开关变化，切换为实时时立即渲染\n    watch(autoRender, val => {\n      if (val && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value);\n      }\n    });\n    function getChartIcon(type) {\n      // 直接使用传入的类型，chartIcons.js 中的键是首字母大写格式\n      return chartIcons[type] || '';\n    }\n    function toggleDataFilter() {\n      showDataFilter.value = !showDataFilter.value;\n    }\n    function toggleAdvancedConfig() {\n      showAdvancedConfig.value = !showAdvancedConfig.value;\n    }\n\n    // 显示提示框\n    function showTooltip(event, type) {\n      // 清除之前的定时器\n      if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout);\n      }\n\n      // 设置1.2秒延迟\n      tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type];\n        if (config) {\n          tooltip.type = type;\n          tooltip.description = config.description;\n          tooltip.dataRequirements = config.dataRequirements;\n          tooltip.useCases = config.useCases;\n          tooltip.visible = true;\n\n          // 在下一个tick中计算位置，确保DOM已更新\n          nextTick(() => {\n            positionTooltip(event);\n          });\n        }\n      }, 1200); // 1.2秒延迟\n    }\n\n    // 隐藏提示框\n    function hideTooltip() {\n      if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout);\n        tooltipTimeout = null;\n      }\n      tooltip.visible = false;\n    }\n\n    // 计算提示框位置，确保不超出屏幕\n    function positionTooltip(event) {\n      if (!tooltipRef.value) return;\n      const tooltipEl = tooltipRef.value;\n      const rect = tooltipEl.getBoundingClientRect();\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight;\n      let left = event.pageX + 10;\n      let top = event.pageY + 10;\n\n      // 防止右边超出屏幕\n      if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10;\n      }\n\n      // 防止底部超出屏幕\n      if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10;\n      }\n\n      // 防止左边超出屏幕\n      if (left < 0) {\n        left = 10;\n      }\n\n      // 防止顶部超出屏幕\n      if (top < 0) {\n        top = 10;\n      }\n      tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n      };\n    }\n\n    // 拖拽处理\n    function handleDragEnter(target) {\n      isDragOver.value[target] = true;\n      dragError.value[target] = false;\n    }\n    function handleDragLeave(target) {\n      isDragOver.value[target] = false;\n    }\n    function handleDragOver(event, target) {\n      event.preventDefault();\n      isDragOver.value[target] = true;\n    }\n    function handleDrop(event, target) {\n      event.preventDefault();\n      isDragOver.value[target] = false;\n      try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'));\n        if (dragData.type === 'column') {\n          const column = dragData.column;\n\n          // 验证数据类型是否适合目标区域\n          if (validateColumnForTarget(column, target)) {\n            mapColumnToTarget(column, target);\n            errorMessage.value = '';\n          } else {\n            dragError.value[target] = true;\n            errorMessage.value = `Column \"${column.name}\" data type is not suitable for ${getTargetName(target)}`;\n            setTimeout(() => {\n              dragError.value[target] = false;\n              errorMessage.value = '';\n            }, 3000);\n          }\n        }\n      } catch (error) {\n        console.error('Drop failed:', error);\n        errorMessage.value = 'Drag and drop failed, please try again';\n      }\n    }\n    function validateColumnForTarget(column, target) {\n      const columnType = column.type;\n      switch (target) {\n        case 'xAxis':\n          // X轴通常接受类别型数据\n          return ['string', 'category', 'date'].includes(columnType);\n        case 'yAxis':\n          // Y轴通常接受数值型数据\n          return ['number', 'integer'].includes(columnType);\n        case 'series':\n          // 系列数据通常接受数值型数据\n          return ['number', 'integer'].includes(columnType);\n        default:\n          return true;\n      }\n    }\n    function mapColumnToTarget(column, target) {\n      switch (target) {\n        case 'xAxis':\n          chartConfig.value.xAxis = {\n            field: column.name,\n            type: column.type\n          };\n          break;\n        case 'yAxis':\n          chartConfig.value.yAxis = {\n            field: column.name,\n            type: column.type\n          };\n          break;\n        case 'series':\n          // 系列可以有多个，但这里简化为单个\n          chartConfig.value.series = [{\n            field: column.name,\n            type: column.type\n          }];\n          break;\n      }\n      emit('config-change', chartConfig.value);\n    }\n    function removeMapping(target) {\n      switch (target) {\n        case 'xAxis':\n          chartConfig.value.xAxis = {\n            field: '',\n            type: ''\n          };\n          break;\n        case 'yAxis':\n          chartConfig.value.yAxis = {\n            field: '',\n            type: ''\n          };\n          break;\n        case 'series':\n          chartConfig.value.series = [];\n          break;\n      }\n      emit('config-change', chartConfig.value);\n    }\n    function removeSeriesMapping(index) {\n      chartConfig.value.series.splice(index, 1);\n      emit('config-change', chartConfig.value);\n    }\n    function getTargetName(target) {\n      const names = {\n        xAxis: 'X Axis',\n        yAxis: 'Y Axis',\n        series: 'Data Series'\n      };\n      return names[target] || target;\n    }\n    function generateChart() {\n      if (!isConfigValid.value) {\n        errorMessage.value = 'Please complete the required data mapping configuration';\n        return;\n      }\n      emit('generate-chart', chartConfig.value);\n    }\n    function resetConfig() {\n      chartConfig.value = {\n        xAxis: {\n          field: '',\n          type: ''\n        },\n        yAxis: {\n          field: '',\n          type: ''\n        },\n        series: [],\n        title: '',\n        colorScheme: 'default',\n        animation: chartConfig.value.animation,\n        dataRange: 'all',\n        nullHandling: 'ignoreNull'\n      };\n      errorMessage.value = '';\n      emit('config-change', chartConfig.value);\n    }\n    const mainRawData = computed(() => {\n      // 以当前结构文件为主\n      if (props.currentFile && props.currentFile.name && fileDataMap.value[props.currentFile.name]) {\n        return fileDataMap.value[props.currentFile.name];\n      }\n      return [];\n    });\n\n    // 监听图表类型变化\n    watch(() => props.selectedChartType, newType => {\n      // 根据图表类型调整配置\n      if (newType === 'Pie' || newType === 'pie') {\n        // 饼图不需要Y轴\n        chartConfig.value.yAxis = {\n          field: '',\n          type: ''\n        };\n      }\n      // 自动渲染开启时，切换类型后立即触发渲染\n      if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value);\n      }\n    });\n    const __returned__ = {\n      currentTypeConfig,\n      props,\n      emit,\n      saveToHistory,\n      chartConfig,\n      showDataFilter,\n      showAdvancedConfig,\n      errorMessage,\n      tooltipRef,\n      autoRender,\n      tooltip,\n      get tooltipTimeout() {\n        return tooltipTimeout;\n      },\n      set tooltipTimeout(v) {\n        tooltipTimeout = v;\n      },\n      isDragOver,\n      dragError,\n      onMappingModelUpdate,\n      showNullHandlingTypes,\n      showNullHandling,\n      chartData,\n      isConfigValid,\n      getChartIcon,\n      toggleDataFilter,\n      toggleAdvancedConfig,\n      showTooltip,\n      hideTooltip,\n      positionTooltip,\n      handleDragEnter,\n      handleDragLeave,\n      handleDragOver,\n      handleDrop,\n      validateColumnForTarget,\n      mapColumnToTarget,\n      removeMapping,\n      removeSeriesMapping,\n      getTargetName,\n      generateChart,\n      resetConfig,\n      mainRawData,\n      ref,\n      computed,\n      watch,\n      reactive,\n      nextTick,\n      get chartIcons() {\n        return chartIcons;\n      },\n      get chartsTooltipConfig() {\n        return chartsTooltipConfig;\n      },\n      get chartTypeConfig() {\n        return chartTypeConfig;\n      },\n      AutoRenderToggle,\n      ChartBasicConfig,\n      ChartMappingConfig,\n      ChartFilterConfig,\n      ChartAdvancedConfig,\n      get fileDataMap() {\n        return fileDataMap;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","reactive","nextTick","chartIcons","chartsTooltipConfig","chartTypeConfig","AutoRenderToggle","ChartBasicConfig","ChartMappingConfig","ChartFilterConfig","ChartAdvancedConfig","fileDataMap","currentTypeConfig","props","selectedChartType","charAt","toUpperCase","slice","__props","emit","__emit","saveToHistory","config","chartConfig","value","colorTheme","colorScheme","xAxis","field","type","yAxis","series","title","animation","dataRange","nullHandling","showDataFilter","showAdvancedConfig","errorMessage","tooltipRef","mainRawData","rawData","Array","isArray","length","yArr","map","y","filter","Boolean","dataLen","defaultLineTypes","defaultSymbols","lineSeriesStyles","forEach","idx","style","seriesName","lineType","lineColor","lineWidth","pointUnified","pointSymbol","pointColor","points","i","symbol","color","size","immediate","deep","autoRender","tooltip","visible","description","dataRequirements","useCases","tooltipTimeout","isDragOver","dragError","onMappingModelUpdate","mapping","mappingKeys","item","key","newConfig","showNullHandlingTypes","showNullHandling","normalized","toLowerCase","includes","chartData","isConfigValid","cfg","console","log","JSON","parse","stringify","xValid","yValid","cat","category","val","time","open","close","high","low","indicator","nodeID","edgeSource","edgeTarget","parentID","dimensions","every","dim","source","target","stage","date","getChartIcon","toggleDataFilter","toggleAdvancedConfig","showTooltip","event","clearTimeout","setTimeout","positionTooltip","hideTooltip","tooltipEl","rect","getBoundingClientRect","viewportWidth","window","innerWidth","viewportHeight","innerHeight","left","pageX","top","pageY","width","height","position","zIndex","handleDragEnter","handleDragLeave","handleDragOver","preventDefault","handleDrop","dragData","dataTransfer","getData","column","validateColumnForTarget","mapColumnToTarget","name","getTargetName","error","columnType","removeMapping","removeSeriesMapping","index","splice","names","generateChart","resetConfig","currentFile","newType"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/Chart/ChartConfigPanel.vue"],"sourcesContent":["<template>\n<div class=\"chart-config-panel\">\n    <!-- 右侧边栏总标题 -->\n    <div class=\"panel-header-CCP\" style=\"position: relative; display: flex; align-items: center; justify-content: space-between;\">\n        <h3 style=\"margin: 0;\">\n            Chart Configuration\n        </h3>\n        <!-- 图表类型及相关提示 -->\n        <div\n            class=\"chart-type-tag\"\n            @mouseenter=\"showTooltip($event, props.selectedChartType)\"\n            @mouseleave=\"hideTooltip\"\n            style=\"position: relative; max-width: 50%; white-space: normal; word-break: break-all; text-align: right; right: 0; margin-right: 3%;\"\n        >\n            <span class=\"chart-type-icon\" v-html=\"getChartIcon(selectedChartType)\"></span>\n            <span class=\"chart-type-name\">{{ selectedChartType }}</span>\n        </div>\n    </div>\n\n    <!-- 动态数据映射配置区域 -->\n    <div class=\"mapping-section-toggle-wrapper\">\n        <ChartMappingConfig\n            v-if=\"currentTypeConfig.mapping\"\n            :mappingConfig=\"currentTypeConfig.mapping\"\n            :modelValue=\"chartConfig\"\n            @update:modelValue=\"onMappingModelUpdate\"\n        >\n            <template #title-append>\n            <!-- 自动渲染开关 -->\n            <AutoRenderToggle v-model=\"autoRender\" />\n            </template>\n        </ChartMappingConfig>\n    </div>\n\n    <!-- 基础配置区域：所有图表通用配置 -->\n    <ChartBasicConfig\n        v-model=\"chartConfig\"\n        :show-null-handling=\"showNullHandling\"\n        :chart-data=\"chartData\"\n        :chart-type=\"selectedChartType\"\n    />\n\n    <!-- 动态数据过滤配置区域 -->\n    <ChartFilterConfig\n        v-model=\"chartConfig\"\n        :rawData=\"mainRawData\"\n    />\n\n    <!-- 动态高级配置区域 -->\n    <ChartAdvancedConfig\n        v-if=\"currentTypeConfig.advanced && currentTypeConfig.advanced.length\"\n        :advancedConfig=\"currentTypeConfig.advanced\"\n        v-model=\"chartConfig\"\n    />\n\n    <!-- 操作按钮 -->\n    <div class=\"action-section\">\n        <!-- 应用配置按钮 -->\n        <button\n            class=\"apply-btn\"\n            :disabled=\"autoRender || !isConfigValid\"\n            @click=\"generateChart\"\n        >\n        Apply Configuration\n        </button>\n        <!-- 重置配置按钮 -->\n        <button class=\"reset-btn\" @click=\"resetConfig\">\n        Reset Configuration\n        </button>\n    </div>\n\n    <!-- 保存至图表历史区按钮 -->\n    <button\n        class=\"save-history-btn\"\n        @click=\"saveToHistory\"\n    >\n        Save to History\n    </button>\n\n    <!-- 错误提示 -->\n    <div v-if=\"errorMessage\" class=\"error-message\">\n        <div class=\"error-text\">{{ errorMessage }}</div>\n    </div>\n\n    <!-- 提示框 -->\n    <div\n        v-if=\"tooltip.visible\"\n        class=\"chart-tooltip\"\n        :style=\"tooltip.style\"\n        ref=\"tooltipRef\"\n    >\n        <div class=\"tooltip-header\">\n            <span class=\"tooltip-title\">{{ tooltip.type }}</span>\n            <span class=\"tooltip-description\">{{ tooltip.description }}</span>\n        </div>\n        <div class=\"tooltip-section\">\n            <h4>Data Requirements</h4>\n            <div class=\"tooltip-tags\">\n                <span\n                    v-for=\"requirement in tooltip.dataRequirements\"\n                    :key=\"requirement\"\n                    class=\"tooltip-tag data-tag\"\n                >\n                    {{ requirement }}\n                </span>\n            </div>\n        </div>\n        <div class=\"tooltip-section\">\n            <h4>Use Cases</h4>\n            <div class=\"tooltip-tags\">\n                <span\n                    v-for=\"useCase in tooltip.useCases\"\n                    :key=\"useCase\"\n                    class=\"tooltip-tag use-case-tag\"\n                >\n                    {{ useCase }}\n                </span>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, computed, watch, reactive, nextTick } from 'vue'\nimport { chartIcons } from '../../assets/JS/SVG/chartIcons.js'\nimport { chartsTooltipConfig } from '../../assets/JS/Config/ChartsTooltipConfig.js'\nimport { chartTypeConfig } from '../../assets/JS/Config/ChartTypeConfig.js'\nimport AutoRenderToggle from '../Common/AutoRenderToggle.vue'\nimport ChartBasicConfig from './ChartBasicConfig.vue'\nimport ChartMappingConfig from './ChartMappingConfig.vue'\nimport ChartFilterConfig from './ChartFilterConfig.vue'\nimport ChartAdvancedConfig from './ChartAdvancedConfig.vue'\n\n// 当前类型的配置\nconst currentTypeConfig = computed(() => {\n    // 兼容首字母大写/小写\n    return chartTypeConfig[props.selectedChartType] || chartTypeConfig[props.selectedChartType.charAt(0).toUpperCase() + props.selectedChartType.slice(1)] || {}\n})\n\n// Props\nconst props = defineProps({\n    selectedChartType: {\n        type: String,\n        default: 'line'\n    },\n    currentFile: {\n        type: Object,\n        default: null\n    },\n})\n\n// Emits\nconst emit = defineEmits(['config-change', 'generate-chart', 'save-history'])\n// 保存到历史区\nfunction saveToHistory() {\n    // 触发保存事件，传递当前配置\n    emit('save-history', {\n        config: { ...chartConfig.value },\n        colorTheme: chartConfig.value.colorScheme || 'default',\n    })\n}\n\n// 图表配置（必须在所有 watch 之前声明）\nconst chartConfig = ref({\n    xAxis: {\n        field: '',\n        type: ''\n    },\n    yAxis: {\n        field: '',\n        type: ''\n    },\n    series: [],\n    title: '',\n    colorScheme: 'default',\n    animation: true,\n    dataRange: 'all',\n    nullHandling: 'ignoreNull'\n})\n\n// 响应式数据\nconst showDataFilter = ref(false)\nconst showAdvancedConfig = ref(false)\nconst errorMessage = ref('')\nconst tooltipRef = ref(null)\n\n// 自动初始化/同步 lineSeriesStyles\nwatch([\n  () => props.selectedChartType,\n  () => chartConfig.value.yAxis,\n  () => chartConfig.value.series,\n  () => mainRawData.value\n], ([type, yAxis, series, rawData]) => {\n  if ((type === 'line' || type === 'Line') && yAxis && (Array.isArray(yAxis) ? yAxis.length > 0 : yAxis.field)) {\n    // 获取系列名数组\n    let yArr = [];\n    if (Array.isArray(yAxis)) {\n      yArr = yAxis.map(y => y.field).filter(Boolean);\n    } else if (yAxis.field) {\n      yArr = [yAxis.field];\n    }\n    // 获取数据点数\n    let dataLen = 0;\n    if (rawData && rawData.length > 0 && chartConfig.value.xAxis && chartConfig.value.xAxis.field) {\n      dataLen = rawData.length;\n    }\n    // 生成默认样式\n    const defaultLineTypes = ['solid', 'dashed', 'dotted'];\n    const defaultSymbols = ['circle', 'rect', 'roundRect', 'triangle', 'diamond', 'pin', 'arrow'];\n    if (!chartConfig.value.lineSeriesStyles || !Array.isArray(chartConfig.value.lineSeriesStyles)) {\n      chartConfig.value.lineSeriesStyles = [];\n    }\n    // 补全/同步每个系列\n    yArr.forEach((field, idx) => {\n      if (!chartConfig.value.lineSeriesStyles[idx]) {\n        chartConfig.value.lineSeriesStyles[idx] = {};\n      }\n      const style = chartConfig.value.lineSeriesStyles[idx];\n      style.seriesName = field;\n      if (!style.lineType) style.lineType = defaultLineTypes[idx % defaultLineTypes.length];\n      if (!style.lineColor) style.lineColor = '';\n      if (!style.lineWidth) style.lineWidth = 2;\n      if (typeof style.pointUnified !== 'boolean') style.pointUnified = true;\n      if (!style.pointSymbol) style.pointSymbol = defaultSymbols[idx % defaultSymbols.length];\n      if (!style.pointColor) style.pointColor = '';\n      // points: 每个点的样式\n      if (!Array.isArray(style.points)) {\n        style.points = [];\n      }\n      for (let i = 0; i < dataLen; i++) {\n        if (!style.points[i]) {\n          style.points[i] = {\n            symbol: style.pointSymbol,\n            color: style.pointColor,\n            size: 8\n          };\n        }\n      }\n      // 若数据点减少，裁剪多余\n      if (style.points.length > dataLen) {\n        style.points.length = dataLen;\n      }\n    });\n    // 若系列减少，裁剪多余\n    if (chartConfig.value.lineSeriesStyles.length > yArr.length) {\n      chartConfig.value.lineSeriesStyles.length = yArr.length;\n    }\n  }\n}, { immediate: true, deep: true });\n\n// 自动渲染开关，默认手动渲染\nconst autoRender = ref(false)\n\n// 提示框状态\nconst tooltip = reactive({\n    visible: false,\n    type: '',\n    description: '',\n    dataRequirements: [],\n    useCases: [],\n    style: {}\n})\n\nlet tooltipTimeout = null\n\n// 拖拽状态\nconst isDragOver = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\nconst dragError = ref({\n    xAxis: false,\n    yAxis: false,\n    series: false\n})\n\n// 合并mapping字段，保留其它字段\nfunction onMappingModelUpdate(mapping) {\n    // 只合并mappingConfig中定义的key，其它字段保留\n    const mappingKeys = (currentTypeConfig.value.mapping || []).map(item => item.key)\n    const newConfig = { ...chartConfig.value }\n    mappingKeys.forEach(key => {\n        newConfig[key] = mapping[key]\n    })\n    chartConfig.value = newConfig\n    emit('config-change', chartConfig.value)\n}\n\n// 需要显示 Null Handling 的图表类型\nconst showNullHandlingTypes = [\n    'Unknown', 'Line', 'Bar', 'Scatter', 'Candlestick', 'Radar',\n    'Boxplot', 'Heatmap', 'Parallel', 'Gauge', 'ThemeRiver', 'PictorialBar'\n]\n// 判断当前类型是否需要显示 Null Handling\nconst showNullHandling = computed(() => {\n    const type = props.selectedChartType\n    if (!type) return false\n    // 兼容首字母大写/小写\n    const normalized = type.charAt(0).toUpperCase() + type.slice(1).toLowerCase()\n    return showNullHandlingTypes.includes(normalized)\n})\n\n// chartData自动获取当前用于绘图的数据来判断是否具有缺失值\nconst chartData = computed(() => props.chartData || [])\n\n// 计算属性\nconst isConfigValid = computed(() => {\n    const type = (props.selectedChartType || '').toLowerCase();\n    const cfg = chartConfig.value;\n    console.log('Current chart type:', type, 'with config:', JSON.parse(JSON.stringify(cfg)));\n    if (['line', 'bar', 'scatter'].includes(type)) {\n        const xValid = cfg.xAxis && cfg.xAxis.field;\n        const y = cfg.yAxis;\n        const yValid = Array.isArray(y) ? y.length > 0 : (y && y.field);\n        return xValid && yValid;\n    }\n    if (['pie'].includes(type)) {\n        // category/value 结构\n        const cat = cfg.category;\n        const val = cfg.value;\n        return cat && cat.field && val && val.field;\n    }\n    if (['candlestick'].includes(type)) {\n        return  cfg.time && cfg.time.field &&\n            cfg.open && cfg.open.field &&\n            cfg.close && cfg.close.field &&\n            cfg.high && cfg.high.field &&\n            cfg.low && cfg.low.field;\n    }\n    if (['heatmap'].includes(type)) {\n        return cfg.xAxis && cfg.xAxis.field &&\n            cfg.yAxis && cfg.yAxis.field &&\n            cfg.value && cfg.value.field;\n    }\n    if (['radar'].includes(type)) {\n        return Array.isArray(cfg.indicator) && cfg.indicator.length > 0 &&\n        Array.isArray(cfg.value) && cfg.value.length > 0;\n    }\n    if (['boxplot'].includes(type)) {\n        return cfg.category && cfg.category.field\n    }\n    if (['graph'].includes(type)) {\n        return cfg.nodeID && cfg.nodeID.field &&\n            cfg.edgeSource && cfg.edgeSource.field &&\n            cfg.edgeTarget && cfg.edgeTarget.field;\n    }\n    if (['tree'].includes(type)) {\n        return ( cfg.nodeID && cfg.nodeID.field && cfg.parentID && cfg.parentID.field )\n    }\n    if (['treemap', 'sunburst'].includes(type)) {\n        return ( cfg.nodeID && cfg.nodeID.field &&\n            cfg.parentID && cfg.parentID.field )\n    }\n    if (['parallel'].includes(type)) {\n        return Array.isArray(cfg.dimensions) && cfg.dimensions.length > 0 &&\n            cfg.dimensions.every(dim => dim.field);\n    }\n    if (['sankey'].includes(type)) {\n        return cfg.source && cfg.source.field &&\n            cfg.target && cfg.target.field &&\n            cfg.value && cfg.value.field;\n    }\n    if (['funnel'].includes(type)) {\n        return cfg.stage && cfg.stage.field &&\n            cfg.value && cfg.value.field;\n    }\n    if (['gauge'].includes(type)) {\n        return cfg.value && cfg.value.field;\n    }\n    if (['pictorialbar'].includes(type)) {\n        return cfg.category && cfg.category.field &&\n            cfg.value && cfg.value.field;\n    }\n    if (['themeriver'].includes(type)) {\n        return cfg.date && cfg.date.field &&\n            cfg.value && cfg.value.field;\n    }\n    if (['calendar'].includes(type)) {\n        return cfg.date && cfg.date.field;\n    }\n});\n\n// 监听 chartConfig 变化，自动渲染\nwatch(chartConfig, (val) => {\n    if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n    console.log('Current chartConfig:', JSON.parse(JSON.stringify(val)))\n}, { deep: true })\n\n// 监听自动渲染开关变化，切换为实时时立即渲染\nwatch(autoRender, (val) => {\n    if (val && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n})\n\nfunction getChartIcon (type) {\n    // 直接使用传入的类型，chartIcons.js 中的键是首字母大写格式\n    return chartIcons[type] || ''\n}\n\nfunction toggleDataFilter() {\n    showDataFilter.value = !showDataFilter.value\n}\n\nfunction toggleAdvancedConfig() {\n    showAdvancedConfig.value = !showAdvancedConfig.value\n}\n\n// 显示提示框\nfunction showTooltip(event, type) {\n    // 清除之前的定时器\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n    }\n    \n    // 设置1.2秒延迟\n    tooltipTimeout = setTimeout(() => {\n        const config = chartsTooltipConfig[type]\n        if (config) {\n            tooltip.type = type\n            tooltip.description = config.description\n            tooltip.dataRequirements = config.dataRequirements\n            tooltip.useCases = config.useCases\n            tooltip.visible = true\n            \n            // 在下一个tick中计算位置，确保DOM已更新\n            nextTick(() => {\n                positionTooltip(event)\n            })\n        }\n    }, 1200) // 1.2秒延迟\n}\n\n// 隐藏提示框\nfunction hideTooltip() {\n    if (tooltipTimeout) {\n        clearTimeout(tooltipTimeout)\n        tooltipTimeout = null\n    }\n    tooltip.visible = false\n}\n\n// 计算提示框位置，确保不超出屏幕\nfunction positionTooltip(event) {\n    if (!tooltipRef.value) return\n    \n    const tooltipEl = tooltipRef.value\n    const rect = tooltipEl.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    \n    let left = event.pageX + 10\n    let top = event.pageY + 10\n    \n    // 防止右边超出屏幕\n    if (left + rect.width > viewportWidth) {\n        left = event.pageX - rect.width - 10\n    }\n    \n    // 防止底部超出屏幕\n    if (top + rect.height > viewportHeight) {\n        top = event.pageY - rect.height - 10\n    }\n    \n    // 防止左边超出屏幕\n    if (left < 0) {\n        left = 10\n    }\n    \n    // 防止顶部超出屏幕\n    if (top < 0) {\n        top = 10\n    }\n    \n    tooltip.style = {\n        left: `${left}px`,\n        top: `${top}px`,\n        position: 'fixed',\n        zIndex: 1000\n    }\n}\n\n// 拖拽处理\nfunction handleDragEnter (target) {\n    isDragOver.value[target] = true\n    dragError.value[target] = false\n    }\n\nfunction handleDragLeave (target) {\n    isDragOver.value[target] = false\n}\n\nfunction handleDragOver (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = true\n}\n\nfunction handleDrop (event, target) {\n    event.preventDefault()\n    isDragOver.value[target] = false\n\n    try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'))\n\n        if (dragData.type === 'column') {\n        const column = dragData.column\n\n        // 验证数据类型是否适合目标区域\n        if (validateColumnForTarget(column, target)) {\n            mapColumnToTarget(column, target)\n            errorMessage.value = ''\n        } else {\n            dragError.value[target] = true\n            errorMessage.value = `Column \"${column.name}\" data type is not suitable for ${getTargetName(target)}`\n            setTimeout(() => {\n            dragError.value[target] = false\n            errorMessage.value = ''\n            }, 3000)\n        }\n        }\n    } catch (error) {\n        console.error('Drop failed:', error)\n        errorMessage.value = 'Drag and drop failed, please try again'\n    }\n}\n\nfunction validateColumnForTarget (column, target) {\n    const columnType = column.type\n\n    switch (target) {\n        case 'xAxis':\n        // X轴通常接受类别型数据\n        return ['string', 'category', 'date'].includes(columnType)\n        case 'yAxis':\n        // Y轴通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        case 'series':\n        // 系列数据通常接受数值型数据\n        return ['number', 'integer'].includes(columnType)\n        default:\n        return true\n    }\n}\n\nfunction mapColumnToTarget (column, target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = {\n            field: column.name,\n            type: column.type\n        }\n        break\n        case 'series':\n        // 系列可以有多个，但这里简化为单个\n        chartConfig.value.series = [{\n            field: column.name,\n            type: column.type\n        }]\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeMapping (target) {\n    switch (target) {\n        case 'xAxis':\n        chartConfig.value.xAxis = { field: '', type: '' }\n        break\n        case 'yAxis':\n        chartConfig.value.yAxis = { field: '', type: '' }\n        break\n        case 'series':\n        chartConfig.value.series = []\n        break\n    }\n\n    emit('config-change', chartConfig.value)\n}\n\nfunction removeSeriesMapping (index) {\n    chartConfig.value.series.splice(index, 1)\n    emit('config-change', chartConfig.value)\n}\n\nfunction getTargetName (target) {\n    const names = {\n        xAxis: 'X Axis',\n        yAxis: 'Y Axis',\n        series: 'Data Series'\n    }\n    return names[target] || target\n}\n\nfunction generateChart () {\n    if (!isConfigValid.value) {\n        errorMessage.value = 'Please complete the required data mapping configuration'\n        return\n    }\n    emit('generate-chart', chartConfig.value)\n}\n\nfunction resetConfig () {\n    chartConfig.value = {\n        xAxis: { field: '', type: '' },\n        yAxis: { field: '', type: '' },\n        series: [],\n        title: '',\n        colorScheme: 'default',\n        animation: chartConfig.value.animation,\n        dataRange: 'all',\n        nullHandling: 'ignoreNull'\n    }\n\n    errorMessage.value = ''\n    emit('config-change', chartConfig.value)\n}\n\nimport { fileDataMap } from '@/assets/JS/utils/dataStructureOptimize.js'\n\nconst mainRawData = computed(() => {\n    // 以当前结构文件为主\n    if (props.currentFile && props.currentFile.name && fileDataMap.value[props.currentFile.name]) {\n        return fileDataMap.value[props.currentFile.name]\n    }\n    return []\n})\n\n// 监听图表类型变化\nwatch(() => props.selectedChartType, (newType) => {\n    // 根据图表类型调整配置\n    if (newType === 'Pie' || newType === 'pie') {\n        // 饼图不需要Y轴\n        chartConfig.value.yAxis = { field: '', type: '' }\n    }\n    // 自动渲染开启时，切换类型后立即触发渲染\n    if (autoRender.value && isConfigValid.value) {\n        emit('generate-chart', chartConfig.value)\n    }\n})\n</script>\n\n<style scoped>\n\n@import '../../assets/CSS/ChartConfigPanel.css';\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}