{"ast":null,"code":"// echartOptionUtils.js\n// 利用Option分发器, 根据图表类型生成不同的ECharts Option\n\n/* eslint-disable */\n\n// 模块化导入各类图表 option 生成器\nimport lineOption from '../../JS/chartOptions/line';\nimport barOption from '../../JS/chartOptions/bar';\nimport pieOption from '../../JS/chartOptions/pie';\nimport scatterOption from '../../JS/chartOptions/scatter';\nimport mapOption from '../../JS/chartOptions/map';\nimport candlestickOption from '../chartOptions/candlestick';\nimport heatmapOption from '../chartOptions/heatmap';\nimport radarOption from '../chartOptions/radar';\nimport boxplotOption from '../chartOptions/boxplot';\nimport graphOption from '../chartOptions/graph';\nimport treeOption from '../chartOptions/tree';\nimport treemapOption from '../chartOptions/treemap';\nimport sunburstOption from '../chartOptions/sunburst';\nimport parallelOption from '../chartOptions/parallel';\nimport sankeyOption from '../chartOptions/sankey';\nimport funnelOption from '../chartOptions/funnel';\nimport gaugeOption from '../chartOptions/gauge';\nimport pictorialBarOption from '../chartOptions/pictorialBar';\nimport themeRiverOption from '../chartOptions/themeRiver';\nimport calendarOption from '../chartOptions/calendar';\n// ...可继续导入更多类型\n\n// 图表类型注册表\nconst chartOptionGenerators = {};\n\n// 注册新类型生成器接口\nexport function registerChartOptionGenerator(type, generatorFn) {\n  chartOptionGenerators[type.toLowerCase()] = generatorFn;\n}\n\n// 注册模块化生成器\nregisterChartOptionGenerator('Line', lineOption);\nregisterChartOptionGenerator('Bar', barOption);\nregisterChartOptionGenerator('Pie', pieOption);\nregisterChartOptionGenerator('Scatter', scatterOption);\nregisterChartOptionGenerator('Map', map);\nregisterChartOptionGenerator('Candlestick', candlestickOption);\nregisterChartOptionGenerator('heatmap', heatmapOption);\nregisterChartOptionGenerator('Radar', radarOption);\nregisterChartOptionGenerator('Boxplot', boxplotOption);\nregisterChartOptionGenerator('Graph', graphOption);\nregisterChartOptionGenerator('Tree', treeOption);\nregisterChartOptionGenerator('Treemap', treemapOption);\nregisterChartOptionGenerator('Sunburst', sunburstOption);\nregisterChartOptionGenerator('Parallel', parallelOption);\nregisterChartOptionGenerator('Sankey', sankeyOption);\nregisterChartOptionGenerator('Funnel', funnelOption);\nregisterChartOptionGenerator('Gauge', gaugeOption);\nregisterChartOptionGenerator('PictorialBar', pictorialBarOption);\nregisterChartOptionGenerator('ThemeRiver', themeRiverOption);\nregisterChartOptionGenerator('Calendar', calendarOption);\n// ...可继续注册更多类型\n\n// 主入口：根据类型分发\nexport function generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  //! 控制台显示传入的所有字段\n  console.log('[generateEChartOption] config:', config);\n  console.log('[generateEChartOption] fileDataMap:', fileDataMap);\n  console.log('[generateEChartOption] xData:', xData);\n  console.log('[generateEChartOption] yDataArr:', yDataArr);\n  console.log('[generateEChartOption] selectedChartType:', selectedChartType);\n  console.log('[generateEChartOption] seriesData:', seriesData);\n  console.log('[generateEChartOption] customOption:', customOption);\n  const type = selectedChartType.value.toLowerCase();\n  const generator = chartOptionGenerators[type];\n  console.log('[generator]', type, generator);\n  if (!generator) {\n    throw new Error(`No chart option generator registered for type: ${type}`);\n  }\n  const option = generator(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption);\n\n  //! 调试输出\n  console.log('[generateEChartOption] Type:', type);\n  console.log('[generateEChartOption] Generated option:', option);\n  return option;\n}","map":{"version":3,"names":["lineOption","barOption","pieOption","scatterOption","mapOption","candlestickOption","heatmapOption","radarOption","boxplotOption","graphOption","treeOption","treemapOption","sunburstOption","parallelOption","sankeyOption","funnelOption","gaugeOption","pictorialBarOption","themeRiverOption","calendarOption","chartOptionGenerators","registerChartOptionGenerator","type","generatorFn","toLowerCase","map","generateEChartOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","console","log","value","generator","Error","option"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/utils/echartOptionUtils.js"],"sourcesContent":["// echartOptionUtils.js\n// 利用Option分发器, 根据图表类型生成不同的ECharts Option\n\n/* eslint-disable */\n\n// 模块化导入各类图表 option 生成器\nimport lineOption from '../../JS/chartOptions/line'\nimport barOption from '../../JS/chartOptions/bar'\nimport pieOption from '../../JS/chartOptions/pie'\nimport scatterOption from '../../JS/chartOptions/scatter'\nimport mapOption from '../../JS/chartOptions/map'\nimport candlestickOption from '../chartOptions/candlestick'\nimport heatmapOption from '../chartOptions/heatmap'\nimport radarOption from '../chartOptions/radar'\nimport boxplotOption from '../chartOptions/boxplot'\nimport graphOption from '../chartOptions/graph'\nimport treeOption from '../chartOptions/tree'\nimport treemapOption from '../chartOptions/treemap'\nimport sunburstOption from '../chartOptions/sunburst'\nimport parallelOption from '../chartOptions/parallel'\nimport sankeyOption from '../chartOptions/sankey'\nimport funnelOption from '../chartOptions/funnel'\nimport gaugeOption from '../chartOptions/gauge'\nimport pictorialBarOption from '../chartOptions/pictorialBar'\nimport themeRiverOption from '../chartOptions/themeRiver'\nimport calendarOption from '../chartOptions/calendar'\n// ...可继续导入更多类型\n\n// 图表类型注册表\nconst chartOptionGenerators = {};\n\n// 注册新类型生成器接口\nexport function registerChartOptionGenerator(type, generatorFn) {\n    chartOptionGenerators[type.toLowerCase()] = generatorFn;\n}\n\n// 注册模块化生成器\nregisterChartOptionGenerator('Line', lineOption)\nregisterChartOptionGenerator('Bar', barOption)\nregisterChartOptionGenerator('Pie', pieOption)\nregisterChartOptionGenerator('Scatter', scatterOption)\nregisterChartOptionGenerator('Map', map)\nregisterChartOptionGenerator('Candlestick', candlestickOption)\nregisterChartOptionGenerator('heatmap', heatmapOption)\nregisterChartOptionGenerator('Radar', radarOption)\nregisterChartOptionGenerator('Boxplot', boxplotOption)\nregisterChartOptionGenerator('Graph', graphOption)\nregisterChartOptionGenerator('Tree', treeOption)\nregisterChartOptionGenerator('Treemap', treemapOption)\nregisterChartOptionGenerator('Sunburst', sunburstOption)\nregisterChartOptionGenerator('Parallel', parallelOption)\nregisterChartOptionGenerator('Sankey', sankeyOption)\nregisterChartOptionGenerator('Funnel', funnelOption)\nregisterChartOptionGenerator('Gauge', gaugeOption)\nregisterChartOptionGenerator('PictorialBar', pictorialBarOption)\nregisterChartOptionGenerator('ThemeRiver', themeRiverOption)\nregisterChartOptionGenerator('Calendar', calendarOption)\n// ...可继续注册更多类型\n\n// 主入口：根据类型分发\nexport function generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    //! 控制台显示传入的所有字段\n    console.log('[generateEChartOption] config:', config);\n    console.log('[generateEChartOption] fileDataMap:', fileDataMap);\n    console.log('[generateEChartOption] xData:', xData);\n    console.log('[generateEChartOption] yDataArr:', yDataArr);\n    console.log('[generateEChartOption] selectedChartType:', selectedChartType);\n    console.log('[generateEChartOption] seriesData:', seriesData);\n    console.log('[generateEChartOption] customOption:', customOption);\n\n    const type = selectedChartType.value.toLowerCase();\n    const generator = chartOptionGenerators[type];\n    console.log('[generator]', type, generator);\n    if (!generator) {\n        throw new Error(`No chart option generator registered for type: ${type}`);\n    }\n    const option = generator(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption);\n\n    //! 调试输出\n    console.log('[generateEChartOption] Type:', type);\n    console.log('[generateEChartOption] Generated option:', option);\n    return option;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}