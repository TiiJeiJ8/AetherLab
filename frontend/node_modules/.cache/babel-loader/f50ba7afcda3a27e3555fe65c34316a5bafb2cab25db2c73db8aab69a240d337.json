{"ast":null,"code":"import { ref, watch, onMounted, onBeforeUnmount } from 'vue';\nimport * as echarts from 'echarts';\nexport default {\n  __name: 'ChartThumbnail',\n  props: {\n    option: {\n      type: Object,\n      required: true\n    },\n    colorTheme: {\n      type: String,\n      default: 'default'\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n    const thumbRef = ref(null);\n    let chart = null;\n    const themeCache = {};\n    async function loadAndRegisterTheme(themeName) {\n      if (themeCache[themeName]) return;\n      try {\n        const res = await fetch(`/themes/${themeName}.json`);\n        if (!res.ok) throw new Error('Theme file loads failed');\n        const obj = await res.json();\n        echarts.registerTheme(themeName, obj);\n        themeCache[themeName] = {\n          themeObj: obj\n        };\n      } catch (e) {\n        // 静默失败\n      }\n    }\n    function getOptionWithoutTitle(option) {\n      const opt = JSON.parse(JSON.stringify(option));\n      delete opt.title;\n      return opt;\n    }\n    async function render() {\n      if (!thumbRef.value) return;\n      await loadAndRegisterTheme(props.colorTheme);\n      if (!chart) {\n        chart = echarts.init(thumbRef.value, props.colorTheme);\n      }\n      if (chart && props.option) {\n        chart.setOption(getOptionWithoutTitle(props.option), true);\n      }\n    }\n    watch(() => [props.option, props.colorTheme], render, {\n      deep: true\n    });\n    onMounted(render);\n    onBeforeUnmount(() => {\n      if (chart) chart.dispose();\n    });\n    const __returned__ = {\n      props,\n      thumbRef,\n      get chart() {\n        return chart;\n      },\n      set chart(v) {\n        chart = v;\n      },\n      themeCache,\n      loadAndRegisterTheme,\n      getOptionWithoutTitle,\n      render,\n      ref,\n      watch,\n      onMounted,\n      onBeforeUnmount,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","onBeforeUnmount","echarts","props","__props","thumbRef","chart","themeCache","loadAndRegisterTheme","themeName","res","fetch","ok","Error","obj","json","registerTheme","themeObj","e","getOptionWithoutTitle","option","opt","JSON","parse","stringify","title","render","value","colorTheme","init","setOption","deep","dispose"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/Chart/ChartThumbnail.vue"],"sourcesContent":["<template>\n    <div ref=\"thumbRef\" class=\"chart-thumb\"></div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { ref, watch, onMounted, onBeforeUnmount } from 'vue'\nimport * as echarts from 'echarts'\n\nconst props = defineProps({\n    option: { type: Object, required: true },\n    colorTheme: { type: String, default: 'default' }\n})\n\nconst thumbRef = ref(null)\nlet chart = null\nconst themeCache = {}\n\nasync function loadAndRegisterTheme(themeName) {\n    if (themeCache[themeName]) return\n    try {\n        const res = await fetch(`/themes/${themeName}.json`)\n        if (!res.ok) throw new Error('Theme file loads failed')\n        const obj = await res.json()\n        echarts.registerTheme(themeName, obj)\n        themeCache[themeName] = { themeObj: obj }\n    } catch (e) {\n        // 静默失败\n    }\n}\n\nfunction getOptionWithoutTitle(option) {\n    const opt = JSON.parse(JSON.stringify(option))\n    delete opt.title\n    return opt\n}\n\nasync function render() {\n    if (!thumbRef.value) return\n    await loadAndRegisterTheme(props.colorTheme)\n    if (!chart) {\n        chart = echarts.init(thumbRef.value, props.colorTheme)\n    }\n    if (chart && props.option) {\n        chart.setOption(getOptionWithoutTitle(props.option), true)\n    }\n}\n\nwatch(() => [props.option, props.colorTheme], render, { deep: true })\nonMounted(render)\nonBeforeUnmount(() => {\n    if (chart) chart.dispose()\n})\n</script>\n\n<style scoped>\n    .chart-thumb {\n        width: 100px;\n        height: 70px;\n        min-width: 100px;\n        min-height: 70px;\n        border-radius: 6px;\n        background: var(--bg-color);\n        box-shadow: 0 0px 1px var(--text-color);\n        margin-bottom: 4px;\n    }\n</style>"],"mappings":"AAMA,SAASA,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAEC,eAAe,QAAQ,KAAI;AAC3D,OAAO,KAAKC,OAAO,MAAM,SAAQ;;;;;;;;;;;;;;;;;;IAFjC;IAIA,MAAMC,KAAK,GAAGC,OAAA;IAKd,MAAMC,QAAQ,GAAGP,GAAG,CAAC,IAAI;IACzB,IAAIQ,KAAK,GAAG,IAAG;IACf,MAAMC,UAAU,GAAG,CAAC;IAEpB,eAAeC,oBAAoBA,CAACC,SAAS,EAAE;MAC3C,IAAIF,UAAU,CAACE,SAAS,CAAC,EAAE;MAC3B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAWF,SAAS,OAAO;QACnD,IAAI,CAACC,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB;QACtD,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC;QAC3Bb,OAAO,CAACc,aAAa,CAACP,SAAS,EAAEK,GAAG;QACpCP,UAAU,CAACE,SAAS,CAAC,GAAG;UAAEQ,QAAQ,EAAEH;QAAI;MAC5C,CAAC,CAAC,OAAOI,CAAC,EAAE;QACR;MAAA;IAER;IAEA,SAASC,qBAAqBA,CAACC,MAAM,EAAE;MACnC,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACJ,MAAM,CAAC;MAC7C,OAAOC,GAAG,CAACI,KAAI;MACf,OAAOJ,GAAE;IACb;IAEA,eAAeK,MAAMA,CAAA,EAAG;MACpB,IAAI,CAACrB,QAAQ,CAACsB,KAAK,EAAE;MACrB,MAAMnB,oBAAoB,CAACL,KAAK,CAACyB,UAAU;MAC3C,IAAI,CAACtB,KAAK,EAAE;QACRA,KAAK,GAAGJ,OAAO,CAAC2B,IAAI,CAACxB,QAAQ,CAACsB,KAAK,EAAExB,KAAK,CAACyB,UAAU;MACzD;MACA,IAAItB,KAAK,IAAIH,KAAK,CAACiB,MAAM,EAAE;QACvBd,KAAK,CAACwB,SAAS,CAACX,qBAAqB,CAAChB,KAAK,CAACiB,MAAM,CAAC,EAAE,IAAI;MAC7D;IACJ;IAEArB,KAAK,CAAC,MAAM,CAACI,KAAK,CAACiB,MAAM,EAAEjB,KAAK,CAACyB,UAAU,CAAC,EAAEF,MAAM,EAAE;MAAEK,IAAI,EAAE;IAAK,CAAC;IACpE/B,SAAS,CAAC0B,MAAM;IAChBzB,eAAe,CAAC,MAAM;MAClB,IAAIK,KAAK,EAAEA,KAAK,CAAC0B,OAAO,CAAC;IAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}