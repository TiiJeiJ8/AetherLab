{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\n/* eslint-disable */\n\n/**\n * 散点图高级配置项：\n * 聚合\n * 基础拟合回归线（指数回归、线性回归、多项式回归）\n * 单轴散点图\n * 均值线\n * 系列最高值、最小值\n * 散点图标签顶部/右侧对齐\n * 散点样式（根据系列分配）\n * 视觉映射\n * 大小映射\n * 涟漪图\n * 极坐标系\n * 视觉映射\n * 气泡图\n * 极坐标系\n */\n\n// 散点图 option 生成器\nexport default function scatterOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  // 网格线显示控制\n  let xGrid = false,\n    yGrid = false;\n  switch (config.gridVisible) {\n    case 'x':\n      xGrid = true;\n      yGrid = false;\n      break;\n    case 'y':\n      xGrid = false;\n      yGrid = true;\n      break;\n    case 'both':\n      xGrid = true;\n      yGrid = true;\n      break;\n    case 'none':\n    default:\n      xGrid = false;\n      yGrid = false;\n  }\n  const {\n    yAxis,\n    title,\n    animation\n  } = config;\n  const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n  // 处理极坐标\n  let usePolar = config.polarStyle && config.polarStyle !== 'none';\n  let polar = usePolar ? {\n    radius: '70%',\n    center: ['50%', '50%'],\n    startAngle: config.startAngle || 0,\n    endAngle: config.endAngle || 360\n  } : undefined;\n\n  // 视觉映射\n  let visualMap = undefined;\n  if (config.visualMap) {\n    visualMap = {\n      show: true,\n      dimension: 2,\n      // 默认映射第三列（可根据实际调整）\n      min: 0,\n      max: 100,\n      calculable: true,\n      inRange: {\n        color: ['#50a3ba', '#eac736', '#d94e5d']\n      }\n    };\n  }\n\n  // series 构建\n  const seriesArr = yArr.map((y, idx) => {\n    let coordinateSystem = usePolar ? 'polar' : 'cartesian2d';\n    if (config.singleAxisMode === 'x' || config.singleAxisMode === 'y') {\n      coordinateSystem = 'singleAxis';\n    }\n    // labelAlign\n    let label = undefined,\n      labelLayout = undefined,\n      labelLine = undefined;\n    if (config.labelAlign === 'right') {\n      label = {\n        show: true,\n        position: 'right',\n        minMargin: 2,\n        formatter: function (param) {\n          return param.data && (param.data[3] || param.name || '');\n        }\n      };\n      labelLayout = {\n        align: 'left',\n        verticalAlign: 'middle',\n        moveOverlap: 'shiftY'\n      };\n      labelLine = {\n        show: true,\n        length2: 5,\n        lineStyle: {\n          color: '#bbb'\n        }\n      };\n    } else if (config.labelAlign === 'inside') {\n      label = {\n        show: true,\n        position: config.labelAlign\n      };\n    }\n    let base = {\n      name: y.field,\n      type: config.rippleEffect ? 'effectScatter' : 'scatter',\n      data: yDataArr[idx],\n      animationDuration: animation ? 1500 : 0,\n      label,\n      labelLayout,\n      labelLine,\n      rippleEffect: config.rippleEffect ? {\n        brushType: 'stroke'\n      } : undefined,\n      coordinateSystem\n    };\n    // 最大/最小值\n    if (config.showMaxMin) {\n      base.markPoint = {\n        data: [{\n          type: 'max',\n          name: 'Max'\n        }, {\n          type: 'min',\n          name: 'Min'\n        }]\n      };\n    }\n    // 均值线\n    if (config.showMeanLine) {\n      base.markLine = {\n        data: [{\n          type: 'average',\n          name: 'Mean'\n        }]\n      };\n    }\n    // 回归线（需引入echarts-regression或自定义实现）\n    if (config.trendLine && config.trendLine !== '') {\n      // 这里只做简单线性回归示例，复杂回归建议用echarts-regression\n      if (config.trendLine === 'linear' && yDataArr[idx] && yDataArr[idx].length > 1) {\n        // 简单线性回归\n        let x = yDataArr[idx].map((d, i) => i);\n        let yv = yDataArr[idx].map(d => d[1]);\n        let n = x.length;\n        let sumX = x.reduce((a, b) => a + b, 0);\n        let sumY = yv.reduce((a, b) => a + b, 0);\n        let sumXY = x.reduce((a, b, i) => a + b * yv[i], 0);\n        let sumXX = x.reduce((a, b) => a + b * b, 0);\n        let slope = (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX);\n        let intercept = (sumY - slope * sumX) / n;\n        let regData = x.map(xi => [xi, slope * xi + intercept]);\n        base.markLine = base.markLine || {\n          data: []\n        };\n        base.markLine.data.push({\n          name: 'Trend',\n          lineStyle: {\n            type: 'dashed',\n            color: '#888'\n          },\n          symbol: 'none',\n          data: regData\n        });\n      }\n      // 其他回归类型建议用插件\n    }\n    return base;\n  });\n\n  // 单轴模式\n  let singleAxis = undefined;\n  let xAxis = undefined,\n    yAxisOpt = undefined;\n  if (config.singleAxisMode === 'x') {\n    singleAxis = {\n      type: 'category',\n      data: xData,\n      left: 60,\n      top: 60,\n      right: 60,\n      bottom: 60\n    };\n  } else if (config.singleAxisMode === 'y') {\n    singleAxis = {\n      type: 'value',\n      left: 60,\n      top: 60,\n      right: 60,\n      bottom: 60\n    };\n  } else {\n    xAxis = {\n      type: 'category',\n      data: xData,\n      axisLabel: {\n        interval: 0,\n        rotate: xData.length > 10 ? 45 : 0\n      },\n      splitLine: {\n        show: xGrid\n      },\n      name: config.xAxisName || 'X Axis'\n    };\n    yAxisOpt = {\n      type: 'value',\n      name: yArr.map(y => y.field).join(','),\n      splitLine: {\n        show: yGrid\n      },\n      name: config.yAxisName || 'Y Axis'\n    };\n  }\n\n  // 构造option\n  let option = {\n    title: {\n      text: config.title || 'Chart of Scatter',\n      subtext: config.subtext,\n      left: config.titlePosition === 'left' ? 'left' : config.titlePosition === 'center' ? 'center' : config.titlePosition === 'right' ? 'right' : 'center',\n      top: config.titlePosition === 'bottom' ? 'bottom' : 'top',\n      textStyle: {\n        fontSize: 16,\n        fontWeight: 'bold'\n      },\n      subtextStyle: {\n        fontSize: 12\n      }\n    },\n    tooltip: {\n      trigger: 'axis'\n    },\n    legend: {\n      type: 'scroll',\n      show: config.legendVisible !== false,\n      data: yArr.map(y => y.field),\n      top: config.legendPosition || 'bottom'\n    },\n    toolbox: {\n      show: true,\n      feature: {\n        dataView: {\n          show: true,\n          readOnly: false\n        },\n        magicType: {\n          show: true,\n          type: ['line', 'bar', 'scatter']\n        },\n        restore: {\n          show: true\n        },\n        saveAsImage: {\n          show: true\n        }\n      }\n    },\n    polar,\n    visualMap,\n    series: seriesArr,\n    animation: animation,\n    animationDuration: animation ? 1500 : 0,\n    ...customOption\n  };\n  if (config.singleAxisMode === 'x' || config.singleAxisMode === 'y') {\n    option.singleAxis = singleAxis;\n  } else {\n    option.xAxis = xAxis;\n    option.yAxis = yAxisOpt;\n  }\n  return option;\n}","map":{"version":3,"names":["scatterOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","xGrid","yGrid","gridVisible","yAxis","title","animation","yArr","Array","isArray","usePolar","polarStyle","polar","radius","center","startAngle","endAngle","undefined","visualMap","show","dimension","min","max","calculable","inRange","color","seriesArr","map","y","idx","coordinateSystem","singleAxisMode","label","labelLayout","labelLine","labelAlign","position","minMargin","formatter","param","data","name","align","verticalAlign","moveOverlap","length2","lineStyle","base","field","type","rippleEffect","animationDuration","brushType","showMaxMin","markPoint","showMeanLine","markLine","trendLine","length","x","d","i","yv","n","sumX","reduce","a","b","sumY","sumXY","sumXX","slope","intercept","regData","xi","push","symbol","singleAxis","xAxis","yAxisOpt","left","top","right","bottom","axisLabel","interval","rotate","splitLine","xAxisName","join","yAxisName","option","text","subtext","titlePosition","textStyle","fontSize","fontWeight","subtextStyle","tooltip","trigger","legend","legendVisible","legendPosition","toolbox","feature","dataView","readOnly","magicType","restore","saveAsImage","series"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/chartOptions/scatter.js"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 散点图高级配置项：\n * 聚合\n * 基础拟合回归线（指数回归、线性回归、多项式回归）\n * 单轴散点图\n * 均值线\n * 系列最高值、最小值\n * 散点图标签顶部/右侧对齐\n * 散点样式（根据系列分配）\n * 视觉映射\n * 大小映射\n * 涟漪图\n * 极坐标系\n * 视觉映射\n * 气泡图\n * 极坐标系\n */\n\n// 散点图 option 生成器\nexport default function scatterOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    // 网格线显示控制\n    let xGrid = false, yGrid = false;\n    switch (config.gridVisible) {\n        case 'x':\n            xGrid = true; yGrid = false; break;\n        case 'y':\n            xGrid = false; yGrid = true; break;\n        case 'both':\n            xGrid = true; yGrid = true; break;\n        case 'none':\n        default:\n            xGrid = false; yGrid = false;\n    }\n\n    const { yAxis, title, animation } = config;\n    const yArr = Array.isArray(yAxis) ? yAxis : [yAxis];\n    // 处理极坐标\n    let usePolar = config.polarStyle && config.polarStyle !== 'none';\n    let polar = usePolar ? {\n        radius: '70%',\n        center: ['50%', '50%'],\n        startAngle: config.startAngle || 0,\n        endAngle: config.endAngle || 360\n    } : undefined;\n\n    // 视觉映射\n    let visualMap = undefined;\n    if (config.visualMap) {\n        visualMap = {\n            show: true,\n            dimension: 2, // 默认映射第三列（可根据实际调整）\n            min: 0,\n            max: 100,\n            calculable: true,\n            inRange: {\n                color: ['#50a3ba', '#eac736', '#d94e5d']\n            }\n        };\n    }\n\n    // series 构建\n    const seriesArr = yArr.map((y, idx) => {\n        let coordinateSystem = usePolar ? 'polar' : 'cartesian2d';\n        if (config.singleAxisMode === 'x' || config.singleAxisMode === 'y') {\n            coordinateSystem = 'singleAxis';\n        }\n        // labelAlign\n        let label = undefined, labelLayout = undefined, labelLine = undefined;\n        if (config.labelAlign === 'right') {\n            label = {\n                show: true,\n                position: 'right',\n                minMargin: 2,\n                formatter: function (param) {\n                    return param.data && (param.data[3] || param.name || '');\n                }\n            };\n            labelLayout = {\n                align: 'left',\n                verticalAlign: 'middle',\n                moveOverlap: 'shiftY'\n            };\n            labelLine = {\n                show: true,\n                length2: 5,\n                lineStyle: { color: '#bbb' }\n            };\n        } else if (config.labelAlign === 'inside') {\n            label = {\n                show: true,\n                position: config.labelAlign\n            };\n        }\n        let base = {\n            name: y.field,\n            type: config.rippleEffect ? 'effectScatter' : 'scatter',\n            data: yDataArr[idx],\n            animationDuration: animation ? 1500 : 0,\n            label,\n            labelLayout,\n            labelLine,\n            rippleEffect: config.rippleEffect ? { brushType: 'stroke' } : undefined,\n            coordinateSystem,\n        };\n        // 最大/最小值\n        if (config.showMaxMin) {\n            base.markPoint = {\n                data: [\n                    { type: 'max', name: 'Max' },\n                    { type: 'min', name: 'Min' }\n                ]\n            };\n        }\n        // 均值线\n        if (config.showMeanLine) {\n            base.markLine = {\n                data: [\n                    { type: 'average', name: 'Mean' }\n                ]\n            };\n        }\n        // 回归线（需引入echarts-regression或自定义实现）\n        if (config.trendLine && config.trendLine !== '') {\n            // 这里只做简单线性回归示例，复杂回归建议用echarts-regression\n            if (config.trendLine === 'linear' && yDataArr[idx] && yDataArr[idx].length > 1) {\n                // 简单线性回归\n                let x = yDataArr[idx].map((d, i) => i);\n                let yv = yDataArr[idx].map(d => d[1]);\n                let n = x.length;\n                let sumX = x.reduce((a, b) => a + b, 0);\n                let sumY = yv.reduce((a, b) => a + b, 0);\n                let sumXY = x.reduce((a, b, i) => a + b * yv[i], 0);\n                let sumXX = x.reduce((a, b) => a + b * b, 0);\n                let slope = (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX);\n                let intercept = (sumY - slope * sumX) / n;\n                let regData = x.map(xi => [xi, slope * xi + intercept]);\n                base.markLine = base.markLine || { data: [] };\n                base.markLine.data.push({\n                    name: 'Trend',\n                    lineStyle: { type: 'dashed', color: '#888' },\n                    symbol: 'none',\n                    data: regData\n                });\n            }\n            // 其他回归类型建议用插件\n        }\n        return base;\n    });\n\n    // 单轴模式\n    let singleAxis = undefined;\n    let xAxis = undefined, yAxisOpt = undefined;\n    if (config.singleAxisMode === 'x') {\n        singleAxis = {\n            type: 'category',\n            data: xData,\n            left: 60,\n            top: 60,\n            right: 60,\n            bottom: 60\n        };\n    } else if (config.singleAxisMode === 'y') {\n        singleAxis = {\n            type: 'value',\n            left: 60,\n            top: 60,\n            right: 60,\n            bottom: 60\n        };\n    } else {\n        xAxis = {\n            type: 'category',\n            data: xData,\n            axisLabel: { interval: 0, rotate: xData.length > 10 ? 45 : 0 },\n            splitLine: { show: xGrid },\n            name: config.xAxisName || 'X Axis',\n        };\n        yAxisOpt = {\n            type: 'value',\n            name: yArr.map(y => y.field).join(','),\n            splitLine: { show: yGrid },\n            name: config.yAxisName || 'Y Axis',\n        };\n    }\n\n    // 构造option\n    let option = {\n        title: {\n            text: config.title || 'Chart of Scatter',\n            subtext: config.subtext,\n            left: config.titlePosition === 'left' ? 'left'\n                : config.titlePosition === 'center' ? 'center'\n                    : config.titlePosition === 'right' ? 'right'\n                        : 'center',\n            top: config.titlePosition === 'bottom' ? 'bottom' : 'top',\n            textStyle: { fontSize: 16, fontWeight: 'bold' },\n            subtextStyle: { fontSize: 12 }\n        },\n        tooltip: { trigger: 'axis' },\n        legend: {\n            type: 'scroll',\n            show: config.legendVisible !== false,\n            data: yArr.map(y => y.field),\n            top: config.legendPosition || 'bottom',\n        },\n        toolbox: {\n            show: true,\n            feature: {\n                dataView: { show: true, readOnly: false },\n                magicType: { show: true, type: ['line', 'bar', 'scatter'] },\n                restore: { show: true },\n                saveAsImage: { show: true }\n            }\n        },\n        polar,\n        visualMap,\n        series: seriesArr,\n        animation: animation,\n        animationDuration: animation ? 1500 : 0,\n        ...customOption\n    };\n    if (config.singleAxisMode === 'x' || config.singleAxisMode === 'y') {\n        option.singleAxis = singleAxis;\n    } else {\n        option.xAxis = xAxis;\n        option.yAxis = yAxisOpt;\n    }\n    return option;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}