{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { ref, computed } from 'vue';\nimport { chartIcons } from '../assets/JS/chartIcons.js';\nimport MappingItem from './MappingItem.vue';\nexport default {\n  __name: 'DataMappingSection',\n  props: {\n    chartType: {\n      type: String,\n      required: true\n    },\n    fieldMappings: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: ['update:fieldMappings', 'mapping-error', 'column-mapped'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 拖拽状态\n    const isDragOver = ref({\n      xAxis: false,\n      yAxis: false,\n      series: false\n    });\n    const dragError = ref({\n      xAxis: false,\n      yAxis: false,\n      series: false\n    });\n\n    // 计算图表图标\n    const chartIcon = computed(() => {\n      return chartIcons[props.chartType] || chartIcons['Bar'] || '';\n    });\n\n    // 根据图表类型定义映射字段\n    const mappingFields = computed(() => {\n      const baseFields = [{\n        name: 'xAxis',\n        label: 'X Axis',\n        type: 'category',\n        required: true,\n        allowMultiple: false,\n        allowedTypes: ['string', 'category', 'date']\n      }, {\n        name: 'yAxis',\n        label: 'Y Axis',\n        type: 'value',\n        required: true,\n        allowMultiple: false,\n        allowedTypes: ['number', 'integer']\n      }, {\n        name: 'series',\n        label: 'Data Series',\n        type: 'value',\n        required: false,\n        allowMultiple: true,\n        allowedTypes: ['number', 'integer']\n      }];\n\n      // 根据图表类型调整字段\n      if (props.chartType === 'Pie' || props.chartType === 'pie') {\n        // 饼图不需要Y轴\n        return baseFields.filter(field => field.name !== 'yAxis');\n      }\n      return baseFields;\n    });\n\n    // 拖拽处理\n    function handleDragEnter(fieldName) {\n      isDragOver.value[fieldName] = true;\n      dragError.value[fieldName] = false;\n    }\n    function handleDragLeave(fieldName) {\n      isDragOver.value[fieldName] = false;\n    }\n    function handleDragOver(event, fieldName) {\n      event.preventDefault();\n      isDragOver.value[fieldName] = true;\n    }\n    function handleDrop(event, fieldName) {\n      event.preventDefault();\n      isDragOver.value[fieldName] = false;\n      try {\n        const dragData = JSON.parse(event.dataTransfer.getData('text/plain'));\n        if (dragData.type === 'column') {\n          const column = dragData.column;\n          const field = mappingFields.value.find(f => f.name === fieldName);\n\n          // 验证数据类型是否适合目标区域\n          if (validateColumnForField(column, field)) {\n            mapColumnToField(column, field);\n            emit('column-mapped', {\n              field: fieldName,\n              column\n            });\n          } else {\n            dragError.value[fieldName] = true;\n            emit('mapping-error', `Column \"${column.name}\" data type is not suitable for ${field.label}`);\n            setTimeout(() => {\n              dragError.value[fieldName] = false;\n            }, 3000);\n          }\n        }\n      } catch (error) {\n        console.error('Drop failed:', error);\n        emit('mapping-error', 'Drag and drop failed, please try again');\n      }\n    }\n    function validateColumnForField(column, field) {\n      const columnType = column.type;\n      return field.allowedTypes.includes(columnType);\n    }\n    function mapColumnToField(column, field) {\n      const newMappings = {\n        ...props.fieldMappings\n      };\n      if (field.allowMultiple) {\n        // 如果字段允许多个值（如系列）\n        const currentSeries = newMappings[field.name] || [];\n        newMappings[field.name] = [...currentSeries, {\n          field: column.name,\n          type: column.type\n        }];\n      } else {\n        // 单个字段映射\n        newMappings[field.name] = {\n          field: column.name,\n          type: column.type\n        };\n      }\n      emit('update:fieldMappings', newMappings);\n    }\n    function removeMapping(fieldName) {\n      const newMappings = {\n        ...props.fieldMappings\n      };\n      const field = mappingFields.value.find(f => f.name === fieldName);\n      if (field.allowMultiple) {\n        newMappings[fieldName] = [];\n      } else {\n        newMappings[fieldName] = {\n          field: '',\n          type: ''\n        };\n      }\n      emit('update:fieldMappings', newMappings);\n    }\n    function removeSeries(fieldName, index) {\n      const newMappings = {\n        ...props.fieldMappings\n      };\n      const currentSeries = newMappings[fieldName] || [];\n      currentSeries.splice(index, 1);\n      newMappings[fieldName] = currentSeries;\n      emit('update:fieldMappings', newMappings);\n    }\n    const __returned__ = {\n      props,\n      emit,\n      isDragOver,\n      dragError,\n      chartIcon,\n      mappingFields,\n      handleDragEnter,\n      handleDragLeave,\n      handleDragOver,\n      handleDrop,\n      validateColumnForField,\n      mapColumnToField,\n      removeMapping,\n      removeSeries,\n      ref,\n      computed,\n      get chartIcons() {\n        return chartIcons;\n      },\n      MappingItem\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","chartIcons","MappingItem","props","__props","emit","__emit","isDragOver","xAxis","yAxis","series","dragError","chartIcon","chartType","mappingFields","baseFields","name","label","type","required","allowMultiple","allowedTypes","filter","field","handleDragEnter","fieldName","value","handleDragLeave","handleDragOver","event","preventDefault","handleDrop","dragData","JSON","parse","dataTransfer","getData","column","find","f","validateColumnForField","mapColumnToField","setTimeout","error","console","columnType","includes","newMappings","fieldMappings","currentSeries","removeMapping","removeSeries","index","splice"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/components/DataMappingSection.vue"],"sourcesContent":["<template>\n  <div class=\"mapping-section\">\n    <div class=\"mapping-section-header\">\n      <h4>Data Mapping</h4>\n      <div class=\"chart-type-tag\">\n        <span class=\"chart-type-icon\" v-html=\"chartIcon\"></span>\n        <span class=\"chart-type-name\">{{ chartType }}</span>\n      </div>\n    </div>\n\n    <MappingItem\n      v-for=\"field in mappingFields\"\n      :key=\"field.name\"\n      :field=\"field\"\n      :mapping=\"fieldMappings[field.name]\"\n      :is-drag-over=\"isDragOver[field.name]\"\n      :has-error=\"dragError[field.name]\"\n      @drop=\"handleDrop\"\n      @drag-enter=\"handleDragEnter\"\n      @drag-leave=\"handleDragLeave\"\n      @drag-over=\"handleDragOver\"\n      @remove-mapping=\"removeMapping\"\n      @remove-series=\"removeSeries\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { chartIcons } from '../assets/JS/chartIcons.js'\nimport MappingItem from './MappingItem.vue'\n\nconst props = defineProps({\n  chartType: {\n    type: String,\n    required: true\n  },\n  fieldMappings: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\nconst emit = defineEmits([\n  'update:fieldMappings', \n  'mapping-error',\n  'column-mapped'\n])\n\n// 拖拽状态\nconst isDragOver = ref({\n  xAxis: false,\n  yAxis: false,\n  series: false\n})\n\nconst dragError = ref({\n  xAxis: false,\n  yAxis: false,\n  series: false\n})\n\n// 计算图表图标\nconst chartIcon = computed(() => {\n  return chartIcons[props.chartType] || chartIcons['Bar'] || ''\n})\n\n// 根据图表类型定义映射字段\nconst mappingFields = computed(() => {\n  const baseFields = [\n    {\n      name: 'xAxis',\n      label: 'X Axis',\n      type: 'category',\n      required: true,\n      allowMultiple: false,\n      allowedTypes: ['string', 'category', 'date']\n    },\n    {\n      name: 'yAxis',\n      label: 'Y Axis',\n      type: 'value',\n      required: true,\n      allowMultiple: false,\n      allowedTypes: ['number', 'integer']\n    },\n    {\n      name: 'series',\n      label: 'Data Series',\n      type: 'value',\n      required: false,\n      allowMultiple: true,\n      allowedTypes: ['number', 'integer']\n    }\n  ]\n\n  // 根据图表类型调整字段\n  if (props.chartType === 'Pie' || props.chartType === 'pie') {\n    // 饼图不需要Y轴\n    return baseFields.filter(field => field.name !== 'yAxis')\n  }\n\n  return baseFields\n})\n\n// 拖拽处理\nfunction handleDragEnter(fieldName) {\n  isDragOver.value[fieldName] = true\n  dragError.value[fieldName] = false\n}\n\nfunction handleDragLeave(fieldName) {\n  isDragOver.value[fieldName] = false\n}\n\nfunction handleDragOver(event, fieldName) {\n  event.preventDefault()\n  isDragOver.value[fieldName] = true\n}\n\nfunction handleDrop(event, fieldName) {\n  event.preventDefault()\n  isDragOver.value[fieldName] = false\n\n  try {\n    const dragData = JSON.parse(event.dataTransfer.getData('text/plain'))\n\n    if (dragData.type === 'column') {\n      const column = dragData.column\n      const field = mappingFields.value.find(f => f.name === fieldName)\n\n      // 验证数据类型是否适合目标区域\n      if (validateColumnForField(column, field)) {\n        mapColumnToField(column, field)\n        emit('column-mapped', { field: fieldName, column })\n      } else {\n        dragError.value[fieldName] = true\n        emit('mapping-error', `Column \"${column.name}\" data type is not suitable for ${field.label}`)\n        setTimeout(() => {\n          dragError.value[fieldName] = false\n        }, 3000)\n      }\n    }\n  } catch (error) {\n    console.error('Drop failed:', error)\n    emit('mapping-error', 'Drag and drop failed, please try again')\n  }\n}\n\nfunction validateColumnForField(column, field) {\n  const columnType = column.type\n  return field.allowedTypes.includes(columnType)\n}\n\nfunction mapColumnToField(column, field) {\n  const newMappings = { ...props.fieldMappings }\n\n  if (field.allowMultiple) {\n    // 如果字段允许多个值（如系列）\n    const currentSeries = newMappings[field.name] || []\n    newMappings[field.name] = [...currentSeries, {\n      field: column.name,\n      type: column.type\n    }]\n  } else {\n    // 单个字段映射\n    newMappings[field.name] = {\n      field: column.name,\n      type: column.type\n    }\n  }\n\n  emit('update:fieldMappings', newMappings)\n}\n\nfunction removeMapping(fieldName) {\n  const newMappings = { ...props.fieldMappings }\n  const field = mappingFields.value.find(f => f.name === fieldName)\n  \n  if (field.allowMultiple) {\n    newMappings[fieldName] = []\n  } else {\n    newMappings[fieldName] = { field: '', type: '' }\n  }\n  \n  emit('update:fieldMappings', newMappings)\n}\n\nfunction removeSeries(fieldName, index) {\n  const newMappings = { ...props.fieldMappings }\n  const currentSeries = newMappings[fieldName] || []\n  currentSeries.splice(index, 1)\n  newMappings[fieldName] = currentSeries\n  emit('update:fieldMappings', newMappings)\n}\n</script>\n\n<style scoped>\n.mapping-section {\n  margin-bottom: 30px;\n  animation: fadeInUp 0.5s ease;\n  animation-delay: 0.2s;\n  animation-fill-mode: both;\n}\n\n.mapping-section-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  animation: slideInLeft 0.5s ease;\n  animation-delay: 0.3s;\n  animation-fill-mode: both;\n}\n\n.mapping-section-header h4 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: var(--text-color, #333333);\n}\n\n.chart-type-tag {\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  padding: 4px 10px;\n  background: var(--primary-color, #5470c6);\n  color: white;\n  border-radius: 12px;\n  font-size: 11px;\n  font-weight: 500;\n  box-shadow: 0 2px 8px var(--shadow-color, rgba(84, 112, 198, 0.3));\n  position: relative;\n  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);\n  animation: slideInRight 0.4s ease;\n}\n\n.chart-type-tag::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(135deg, var(--primary-color), var(--accent-color));\n  border-radius: 12px;\n  opacity: 0;\n  filter: blur(8px);\n  transition: opacity 0.4s ease;\n  z-index: -1;\n}\n\n.chart-type-tag:hover::after {\n  opacity: 0.7;\n}\n\n.chart-type-tag:hover {\n  transform: translateY(-3px) scale(1.05);\n  text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);\n  box-shadow: 0 5px 20px var(--shadow-color, rgba(84, 112, 198, 0.5));\n}\n\n.chart-type-icon {\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: transform 0.3s cubic-bezier(0.23, 1, 0.32, 1);\n}\n\n.chart-type-tag:hover .chart-type-icon {\n  transform: scale(1.1);\n  animation: bounce 0.6s ease;\n}\n\n.chart-type-name {\n  font-size: 11px;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n@keyframes slideInLeft {\n  from {\n    opacity: 0;\n    transform: translateX(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes slideInRight {\n  from {\n    opacity: 0;\n    transform: translateX(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes bounce {\n  0%, 20%, 50%, 80%, 100% {\n    transform: translateY(0);\n  }\n  40% {\n    transform: translateY(-10px);\n  }\n  60% {\n    transform: translateY(-5px);\n  }\n}\n\n/* 暗黑主题适配 */\n[data-theme=\"dark\"] .chart-type-tag,\n:root.dark .chart-type-tag {\n  background: var(--primary-color, #6b9eff);\n  box-shadow: 0 2px 8px rgba(107, 158, 255, 0.3);\n}\n\n[data-theme=\"dark\"] .chart-type-tag::after,\n:root.dark .chart-type-tag::after {\n  background: linear-gradient(135deg, var(--primary-color, #6b9eff), var(--accent-color, #a8d068));\n}\n\n[data-theme=\"dark\"] .chart-type-tag:hover,\n:root.dark .chart-type-tag:hover {\n  text-shadow: 0 0 10px rgba(107, 158, 255, 0.6);\n  box-shadow: 0 5px 20px rgba(107, 158, 255, 0.4);\n}\n\n[data-theme=\"dark\"] .mapping-section-header h4,\n:root.dark .mapping-section-header h4 {\n  color: var(--text-color, #e0e0e0);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}