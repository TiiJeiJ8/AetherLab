{"ast":null,"code":"import { chartTypes, chartIcons } from '../assets/JS/chartIcons.js';\nimport { chartTooltips } from '../assets/JS/chartTooltips.js';\nimport { watch, ref, reactive } from 'vue';\nexport default {\n  __name: 'ChartIcon',\n  props: {\n    types: {\n      type: Array,\n      default: () => chartTypes\n    },\n    modelValue: {\n      type: String,\n      default: ''\n    }\n  },\n  emits: ['select', 'update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n\n    /* eslint-disable */\n    const props = __props;\n    const emit = __emit;\n    const selectedType = ref(props.modelValue);\n    const tooltipVisible = ref(false);\n    const tooltipData = reactive({\n      title: '',\n      description: '',\n      dataRequirements: [],\n      useCases: []\n    });\n    const tooltipStyle = ref({});\n    let tooltipTimer = null;\n    function renderButton(type) {\n      const icon = chartIcons[type] || '';\n      return `${icon}<span class=\"label\">${type}</span>`;\n    }\n    function handleClick(type) {\n      selectedType.value = type;\n      emit('select', type);\n      emit('update:modelValue', type);\n    }\n    function showTooltip(type, event) {\n      // 清除之前的定时器\n      if (tooltipTimer) {\n        clearTimeout(tooltipTimer);\n      }\n\n      // 提前获取元素位置信息，避免在setTimeout中元素已经不存在\n      const rect = event.currentTarget.getBoundingClientRect();\n      const viewportWidth = window.innerWidth;\n      const viewportHeight = window.innerHeight;\n\n      // 设置延迟显示定时器（1秒后显示）\n      tooltipTimer = setTimeout(() => {\n        const tooltip = chartTooltips[type];\n        if (tooltip) {\n          tooltipData.title = type;\n          tooltipData.description = tooltip.description;\n          tooltipData.dataRequirements = tooltip.dataRequirements;\n          tooltipData.useCases = tooltip.useCases;\n\n          // 计算提示框位置\n          const tooltipWidth = 320;\n          const maxTooltipHeight = Math.min(280, viewportHeight * 0.8); // 动态计算最大高度\n\n          let left = rect.right + 10;\n          let top = rect.top;\n\n          // 水平位置计算\n          if (left + tooltipWidth > viewportWidth) {\n            // 尝试显示在左侧\n            left = rect.left - tooltipWidth - 10;\n            if (left < 0) {\n              // 如果左侧也不够，则水平居中\n              left = Math.max(10, (viewportWidth - tooltipWidth) / 2);\n            }\n          }\n\n          // 垂直位置计算 - 更智能的策略\n          const spaceBelow = viewportHeight - rect.bottom - 20; // 留20px边距\n          const spaceAbove = rect.top - 20; // 留20px边距\n\n          if (spaceBelow >= maxTooltipHeight) {\n            // 有足够空间显示在按钮下方\n            top = rect.bottom + 5;\n          } else if (spaceAbove >= maxTooltipHeight) {\n            // 显示在按钮上方\n            top = rect.top - maxTooltipHeight - 5;\n          } else {\n            // 两边都不够，智能选择位置\n            if (spaceBelow >= spaceAbove) {\n              // 下方空间更大或相等，尽量往下显示\n              top = Math.max(10, viewportHeight - maxTooltipHeight - 10);\n            } else {\n              // 上方空间更大，尽量往上显示\n              top = 10;\n            }\n          }\n\n          // 最终边界检查，确保提示框完全在视口内\n          top = Math.max(10, Math.min(top, viewportHeight - maxTooltipHeight - 10));\n          left = Math.max(10, Math.min(left, viewportWidth - tooltipWidth - 10));\n          tooltipStyle.value = {\n            left: `${left}px`,\n            top: `${top}px`,\n            position: 'fixed',\n            zIndex: 1000\n          };\n          tooltipVisible.value = true;\n        }\n      }, 1200); // 1.2秒延迟\n    }\n    function hideTooltip() {\n      // 清除定时器\n      if (tooltipTimer) {\n        clearTimeout(tooltipTimer);\n        tooltipTimer = null;\n      }\n      tooltipVisible.value = false;\n    }\n    watch(() => props.modelValue, newValue => {\n      selectedType.value = newValue;\n    });\n    const __returned__ = {\n      props,\n      emit,\n      selectedType,\n      tooltipVisible,\n      tooltipData,\n      tooltipStyle,\n      get tooltipTimer() {\n        return tooltipTimer;\n      },\n      set tooltipTimer(v) {\n        tooltipTimer = v;\n      },\n      renderButton,\n      handleClick,\n      showTooltip,\n      hideTooltip,\n      get chartTypes() {\n        return chartTypes;\n      },\n      get chartIcons() {\n        return chartIcons;\n      },\n      get chartTooltips() {\n        return chartTooltips;\n      },\n      watch,\n      ref,\n      reactive\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["chartTypes","chartIcons","chartTooltips","watch","ref","reactive","props","__props","emit","__emit","selectedType","modelValue","tooltipVisible","tooltipData","title","description","dataRequirements","useCases","tooltipStyle","tooltipTimer","renderButton","type","icon","handleClick","value","showTooltip","event","clearTimeout","rect","currentTarget","getBoundingClientRect","viewportWidth","window","innerWidth","viewportHeight","innerHeight","setTimeout","tooltip","tooltipWidth","maxTooltipHeight","Math","min","left","right","top","max","spaceBelow","bottom","spaceAbove","position","zIndex","hideTooltip","newValue"],"sources":["D:/Learning Material/Git/Fuck-Charts/newArchitecture/frontend_vue_design/src/components/ChartIcon.vue"],"sourcesContent":["<template>\n    <div class=\"chart-type-panel\">\n        <div\n            v-for=\"type in types\"\n            :key=\"type\"\n            class=\"chart-button-container\"\n            @mouseenter=\"showTooltip(type, $event)\"\n            @mouseleave=\"hideTooltip\"\n        >\n            <button\n                class=\"sideBar-btn\"\n                :class=\"{ 'selected': selectedType === type }\"\n                v-html=\"renderButton(type)\"\n                @click=\"handleClick(type)\"\n            ></button>\n        </div>\n        <!-- 悬停提示框 -->\n        <div\n            v-if=\"tooltipVisible\"\n            class=\"chart-tooltip\"\n            :style=\"tooltipStyle\"\n        >\n            <div class=\"tooltip-header\">\n                <span class=\"tooltip-title\">{{ tooltipData.title }}</span>\n                <span class=\"tooltip-description\">{{ tooltipData.description }}</span>\n            </div>\n            <div class=\"tooltip-section\">\n                <h4>Data Requirements</h4>\n                <div class=\"tag-container\">\n                    <span\n                        v-for=\"req in tooltipData.dataRequirements\"\n                        :key=\"req\"\n                        class=\"tag requirement-tag\"\n                    >\n                        {{ req }}\n                    </span>\n                </div>\n            </div>\n            <div class=\"tooltip-section\">\n                <h4>Use Cases</h4>\n                <div class=\"tag-container\">\n                    <span\n                        v-for=\"useCase in tooltipData.useCases\"\n                        :key=\"useCase\"\n                        class=\"tag usecase-tag\"\n                    >\n                        {{ useCase }}\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script setup>\n/* eslint-disable */\nimport { chartTypes, chartIcons } from '../assets/JS/chartIcons.js'\nimport { chartTooltips } from '../assets/JS/chartTooltips.js'\nimport { watch, ref, reactive } from 'vue'\n\nconst props = defineProps({\n    types: {\n        type: Array,\n        default: () => chartTypes\n    },\n\n    modelValue: {\n        type: String,\n        default: ''\n    }\n})\n\nconst emit = defineEmits(['select', 'update:modelValue'])\n\nconst selectedType = ref(props.modelValue)\nconst tooltipVisible = ref(false)\nconst tooltipData = reactive({\n    title: '',\n    description: '',\n    dataRequirements: [],\n    useCases: []\n})\nconst tooltipStyle = ref({})\nlet tooltipTimer = null\n\nfunction renderButton(type) {\n    const icon = chartIcons[type] || ''\n    return `${icon}<span class=\"label\">${type}</span>`\n}\n\nfunction handleClick(type) {\n    selectedType.value = type\n    emit('select', type)\n    emit('update:modelValue', type)\n}\n\nfunction showTooltip(type, event) {\n    // 清除之前的定时器\n    if (tooltipTimer) {\n        clearTimeout(tooltipTimer)\n    }\n    \n    // 提前获取元素位置信息，避免在setTimeout中元素已经不存在\n    const rect = event.currentTarget.getBoundingClientRect()\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    \n    // 设置延迟显示定时器（1秒后显示）\n    tooltipTimer = setTimeout(() => {\n        const tooltip = chartTooltips[type]\n        if (tooltip) {\n            tooltipData.title = type\n            tooltipData.description = tooltip.description\n            tooltipData.dataRequirements = tooltip.dataRequirements\n            tooltipData.useCases = tooltip.useCases\n            \n            // 计算提示框位置\n            const tooltipWidth = 320\n            const maxTooltipHeight = Math.min(280, viewportHeight * 0.8) // 动态计算最大高度\n            \n            let left = rect.right + 10\n            let top = rect.top\n            \n            // 水平位置计算\n            if (left + tooltipWidth > viewportWidth) {\n                // 尝试显示在左侧\n                left = rect.left - tooltipWidth - 10\n                if (left < 0) {\n                    // 如果左侧也不够，则水平居中\n                    left = Math.max(10, (viewportWidth - tooltipWidth) / 2)\n                }\n            }\n            \n            // 垂直位置计算 - 更智能的策略\n            const spaceBelow = viewportHeight - rect.bottom - 20 // 留20px边距\n            const spaceAbove = rect.top - 20 // 留20px边距\n            \n            if (spaceBelow >= maxTooltipHeight) {\n                // 有足够空间显示在按钮下方\n                top = rect.bottom + 5\n            } else if (spaceAbove >= maxTooltipHeight) {\n                // 显示在按钮上方\n                top = rect.top - maxTooltipHeight - 5\n            } else {\n                // 两边都不够，智能选择位置\n                if (spaceBelow >= spaceAbove) {\n                    // 下方空间更大或相等，尽量往下显示\n                    top = Math.max(10, viewportHeight - maxTooltipHeight - 10)\n                } else {\n                    // 上方空间更大，尽量往上显示\n                    top = 10\n                }\n            }\n            \n            // 最终边界检查，确保提示框完全在视口内\n            top = Math.max(10, Math.min(top, viewportHeight - maxTooltipHeight - 10))\n            left = Math.max(10, Math.min(left, viewportWidth - tooltipWidth - 10))\n            \n            tooltipStyle.value = {\n                left: `${left}px`,\n                top: `${top}px`,\n                position: 'fixed',\n                zIndex: 1000\n            }\n            \n            tooltipVisible.value = true\n        }\n    }, 1200) // 1.2秒延迟\n}\n\nfunction hideTooltip() {\n    // 清除定时器\n    if (tooltipTimer) {\n        clearTimeout(tooltipTimer)\n        tooltipTimer = null\n    }\n    tooltipVisible.value = false\n}\n\nwatch(() => props.modelValue, (newValue) => {\n    selectedType.value = newValue\n})\n</script>\n\n<style scoped>\n.chart-type-panel {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n\n.chart-button-container {\n    position: relative;\n}\n\n.sideBar-btn {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    background: transparent;\n    border: none;\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    color: var(--text-color);\n    padding: 6px 14px;\n    border-radius: 8px;\n    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s;\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n}\n\n.sideBar-btn::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition: left 0.6s;\n}\n\n.sideBar-btn:hover {\n    background-color: var(--hover-bg-color, rgba(136, 133, 133, 0.1));\n    transform: translateY(-2px) scale(1.02);\n    box-shadow: 0 4px 8px var(--shadow-color, rgba(0, 0, 0, 0.1));\n}\n\n/* 选中状态的样式 */\n.sideBar-btn.selected {\n    background: var(--selected-bg, linear-gradient(135deg, #3b82f6, #6366f1));\n    color: var(--selected-text-color, white);\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px var(--selected-shadow, rgba(59, 130, 246, 0.3));\n    border: 1px solid var(--selected-border, rgba(255, 255, 255, 0.2));\n}\n\n.sideBar-btn.selected::before {\n    background: linear-gradient(90deg, transparent, var(--selected-shine, rgba(255, 255, 255, 0.3)), transparent);\n}\n\n.sideBar-btn.selected:hover {\n    background: var(--selected-hover-bg, linear-gradient(135deg, #2563eb, #5b21b6));\n    transform: translateY(-3px) scale(1.05);\n    box-shadow: 0 6px 16px var(--selected-hover-shadow, rgba(59, 130, 246, 0.4));\n}\n\n.sideBar-btn.selected:hover::before {\n    left: 100%;\n}\n\n/* 点击动画 */\n.sideBar-btn:active {\n    transform: translateY(0) scale(0.98);\n    transition: all 0.1s ease;\n}\n\n.sideBar-btn.selected:active {\n    transform: translateY(-1px) scale(0.98);\n}\n\n.sideBar-btn svg {\n    fill: currentColor;\n    transition: all 0.3s ease;\n}\n\n.sideBar-btn.selected svg {\n    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));\n}\n\n.label {\n    white-space: nowrap;\n    transition: all 0.3s ease;\n}\n\n.sideBar-btn.selected .label {\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n/* 选中状态的动画效果 */\n@keyframes selectedShine {\n    0% {\n        background-position: -100% 0;\n    }\n    100% {\n        background-position: 100% 0;\n    }\n}\n\n.sideBar-btn.selected:hover .chart-icon-svg {\n    transform: scale(1.1);\n    filter: drop-shadow(0 2px 6px rgba(0, 0, 0, 0.3));\n}\n\n.sideBar-btn.selected:hover .label {\n    transform: translateX(2px);\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n}\n\n/* 提示框样式 */\n.chart-tooltip {\n    background: var(--tooltip-bg, white);\n    border-radius: 12px;\n    box-shadow: 0 8px 32px var(--tooltip-shadow, rgba(0, 0, 0, 0.15));\n    padding: 16px;\n    width: 320px;\n    max-width: 320px;\n    max-height: 80vh; /* 限制最大高度为视口高度的80% */\n    overflow-y: auto; /* 内容超出时显示滚动条 */\n    border: 1px solid var(--tooltip-border, rgba(0, 0, 0, 0.1));\n    font-size: 14px;\n    line-height: 1.4;\n    backdrop-filter: blur(10px);\n    animation: tooltipFadeIn 0.2s ease-out;\n    color: var(--tooltip-text, #1f2937);\n}\n\n/* 自定义滚动条样式 */\n.chart-tooltip::-webkit-scrollbar {\n    width: 6px;\n}\n\n.chart-tooltip::-webkit-scrollbar-track {\n    background: var(--scrollbar-track, rgba(0, 0, 0, 0.05));\n    border-radius: 6px;\n}\n\n.chart-tooltip::-webkit-scrollbar-thumb {\n    background: var(--scrollbar-thumb, rgba(0, 0, 0, 0.2));\n    border-radius: 6px;\n}\n\n.chart-tooltip::-webkit-scrollbar-thumb:hover {\n    background: var(--scrollbar-thumb-hover, rgba(0, 0, 0, 0.3));\n}\n\n@keyframes tooltipFadeIn {\n    from {\n        opacity: 0;\n        transform: translateY(-10px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n.tooltip-header {\n    margin-bottom: 12px;\n    border-bottom: 1px solid var(--tooltip-border, rgba(0, 0, 0, 0.1));\n    padding-bottom: 8px;\n}\n\n.tooltip-title {\n    font-size: 16px;\n    font-weight: 700;\n    color: var(--tooltip-title-color, #1f2937);\n    display: block;\n    margin-bottom: 4px;\n}\n\n.tooltip-description {\n    font-size: 13px;\n    color: var(--tooltip-description-color, #6b7280);\n    display: block;\n    line-height: 1.5;\n}\n\n.tooltip-section {\n    margin-bottom: 12px;\n}\n\n.tooltip-section:last-child {\n    margin-bottom: 0;\n}\n\n.tooltip-section h4 {\n    font-size: 14px;\n    font-weight: 600;\n    color: var(--tooltip-section-title-color, #374151);\n    margin: 0 0 8px 0;\n}\n\n.tag-container {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 6px;\n}\n\n.tag {\n    padding: 4px 8px;\n    border-radius: 6px;\n    font-size: 12px;\n    font-weight: 500;\n    white-space: nowrap;\n}\n\n.requirement-tag {\n    background: linear-gradient(135deg, #dbeafe, #bfdbfe);\n    color: #1e40af;\n    border: 1px solid #93c5fd;\n}\n\n.usecase-tag {\n    background: linear-gradient(135deg, #d1fae5, #a7f3d0);\n    color: #065f46;\n    border: 1px solid #6ee7b7;\n}\n\n/* 深色模式适配 */\n@media (prefers-color-scheme: dark) {\n    .chart-tooltip {\n        background: #1f2937;\n        border-color: #374151;\n        color: #f9fafb;\n    }\n    \n    .tooltip-title {\n        color: #f9fafb;\n    }\n    \n    .tooltip-description {\n        color: #9ca3af;\n    }\n    \n    .tooltip-section h4 {\n        color: #e5e7eb;\n    }\n    \n    .requirement-tag {\n        background: linear-gradient(135deg, #1e3a8a, #1e40af);\n        color: #dbeafe;\n        border-color: #3b82f6;\n    }\n    \n    .usecase-tag {\n        background: linear-gradient(135deg, #064e3b, #065f46);\n        color: #d1fae5;\n        border-color: #10b981;\n    }\n}\n</style>\n\n<style>\n.chart-icon-svg {\n    width: 1.6em;\n    height: 1.6em;\n    min-width: 24px;\n    min-height: 24px;\n    max-width: 32px;\n    max-height: 32px;\n    color: var(--text-color);\n    fill: currentColor;\n    vertical-align: middle;\n    display: inline-block;\n    transition: all 0.3s ease;\n}\n\n.sideBar-btn.selected .chart-icon-svg {\n    color: white;\n}\n</style>\n"],"mappings":"AAuDA,SAASA,UAAU,EAAEC,UAAU,QAAQ,4BAA2B;AAClE,SAASC,aAAa,QAAQ,+BAA8B;AAC5D,SAASC,KAAK,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,KAAI;;;;;;;;;;;;;;;;;;;;IAHzC;IAKA,MAAMC,KAAK,GAAGC,OAAA;IAYd,MAAMC,IAAI,GAAGC,MAAA;IAEb,MAAMC,YAAY,GAAGN,GAAG,CAACE,KAAK,CAACK,UAAU;IACzC,MAAMC,cAAc,GAAGR,GAAG,CAAC,KAAK;IAChC,MAAMS,WAAW,GAAGR,QAAQ,CAAC;MACzBS,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,gBAAgB,EAAE,EAAE;MACpBC,QAAQ,EAAE;IACd,CAAC;IACD,MAAMC,YAAY,GAAGd,GAAG,CAAC,CAAC,CAAC;IAC3B,IAAIe,YAAY,GAAG,IAAG;IAEtB,SAASC,YAAYA,CAACC,IAAI,EAAE;MACxB,MAAMC,IAAI,GAAGrB,UAAU,CAACoB,IAAI,CAAC,IAAI,EAAC;MAClC,OAAO,GAAGC,IAAI,uBAAuBD,IAAI,SAAQ;IACrD;IAEA,SAASE,WAAWA,CAACF,IAAI,EAAE;MACvBX,YAAY,CAACc,KAAK,GAAGH,IAAG;MACxBb,IAAI,CAAC,QAAQ,EAAEa,IAAI;MACnBb,IAAI,CAAC,mBAAmB,EAAEa,IAAI;IAClC;IAEA,SAASI,WAAWA,CAACJ,IAAI,EAAEK,KAAK,EAAE;MAC9B;MACA,IAAIP,YAAY,EAAE;QACdQ,YAAY,CAACR,YAAY;MAC7B;;MAEA;MACA,MAAMS,IAAI,GAAGF,KAAK,CAACG,aAAa,CAACC,qBAAqB,CAAC;MACvD,MAAMC,aAAa,GAAGC,MAAM,CAACC,UAAS;MACtC,MAAMC,cAAc,GAAGF,MAAM,CAACG,WAAU;;MAExC;MACAhB,YAAY,GAAGiB,UAAU,CAAC,MAAM;QAC5B,MAAMC,OAAO,GAAGnC,aAAa,CAACmB,IAAI;QAClC,IAAIgB,OAAO,EAAE;UACTxB,WAAW,CAACC,KAAK,GAAGO,IAAG;UACvBR,WAAW,CAACE,WAAW,GAAGsB,OAAO,CAACtB,WAAU;UAC5CF,WAAW,CAACG,gBAAgB,GAAGqB,OAAO,CAACrB,gBAAe;UACtDH,WAAW,CAACI,QAAQ,GAAGoB,OAAO,CAACpB,QAAO;;UAEtC;UACA,MAAMqB,YAAY,GAAG,GAAE;UACvB,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG,EAAEP,cAAc,GAAG,GAAG,CAAC,EAAC;;UAE7D,IAAIQ,IAAI,GAAGd,IAAI,CAACe,KAAK,GAAG,EAAC;UACzB,IAAIC,GAAG,GAAGhB,IAAI,CAACgB,GAAE;;UAEjB;UACA,IAAIF,IAAI,GAAGJ,YAAY,GAAGP,aAAa,EAAE;YACrC;YACAW,IAAI,GAAGd,IAAI,CAACc,IAAI,GAAGJ,YAAY,GAAG,EAAC;YACnC,IAAII,IAAI,GAAG,CAAC,EAAE;cACV;cACAA,IAAI,GAAGF,IAAI,CAACK,GAAG,CAAC,EAAE,EAAE,CAACd,aAAa,GAAGO,YAAY,IAAI,CAAC;YAC1D;UACJ;;UAEA;UACA,MAAMQ,UAAU,GAAGZ,cAAc,GAAGN,IAAI,CAACmB,MAAM,GAAG,EAAE,EAAC;UACrD,MAAMC,UAAU,GAAGpB,IAAI,CAACgB,GAAG,GAAG,EAAE,EAAC;;UAEjC,IAAIE,UAAU,IAAIP,gBAAgB,EAAE;YAChC;YACAK,GAAG,GAAGhB,IAAI,CAACmB,MAAM,GAAG;UACxB,CAAC,MAAM,IAAIC,UAAU,IAAIT,gBAAgB,EAAE;YACvC;YACAK,GAAG,GAAGhB,IAAI,CAACgB,GAAG,GAAGL,gBAAgB,GAAG;UACxC,CAAC,MAAM;YACH;YACA,IAAIO,UAAU,IAAIE,UAAU,EAAE;cAC1B;cACAJ,GAAG,GAAGJ,IAAI,CAACK,GAAG,CAAC,EAAE,EAAEX,cAAc,GAAGK,gBAAgB,GAAG,EAAE;YAC7D,CAAC,MAAM;cACH;cACAK,GAAG,GAAG,EAAC;YACX;UACJ;;UAEA;UACAA,GAAG,GAAGJ,IAAI,CAACK,GAAG,CAAC,EAAE,EAAEL,IAAI,CAACC,GAAG,CAACG,GAAG,EAAEV,cAAc,GAAGK,gBAAgB,GAAG,EAAE,CAAC;UACxEG,IAAI,GAAGF,IAAI,CAACK,GAAG,CAAC,EAAE,EAAEL,IAAI,CAACC,GAAG,CAACC,IAAI,EAAEX,aAAa,GAAGO,YAAY,GAAG,EAAE,CAAC;UAErEpB,YAAY,CAACM,KAAK,GAAG;YACjBkB,IAAI,EAAE,GAAGA,IAAI,IAAI;YACjBE,GAAG,EAAE,GAAGA,GAAG,IAAI;YACfK,QAAQ,EAAE,OAAO;YACjBC,MAAM,EAAE;UACZ;UAEAtC,cAAc,CAACY,KAAK,GAAG,IAAG;QAC9B;MACJ,CAAC,EAAE,IAAI,CAAC,EAAC;IACb;IAEA,SAAS2B,WAAWA,CAAA,EAAG;MACnB;MACA,IAAIhC,YAAY,EAAE;QACdQ,YAAY,CAACR,YAAY;QACzBA,YAAY,GAAG,IAAG;MACtB;MACAP,cAAc,CAACY,KAAK,GAAG,KAAI;IAC/B;IAEArB,KAAK,CAAC,MAAMG,KAAK,CAACK,UAAU,EAAGyC,QAAQ,IAAK;MACxC1C,YAAY,CAACc,KAAK,GAAG4B,QAAO;IAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}