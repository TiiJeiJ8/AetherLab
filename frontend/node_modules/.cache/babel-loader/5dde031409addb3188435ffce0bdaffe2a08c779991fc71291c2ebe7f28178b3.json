{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/* eslint-disable */\n\n// 平行坐标系图配置生成器\nimport { getVisualMapInRangeColor } from \"../utils/themeDispatcher\";\n// 平行坐标系图配置生成器\nexport default function parallelOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n  // 解包数据\n  const {\n    dimensions,\n    name\n  } = seriesData;\n  if (!dimensions || !name || !Array.isArray(dimensions) || !Array.isArray(name)) {\n    return {};\n  }\n\n  // 获取所有维度名（不包含 Category）\n  // 假设 name[0] 里所有 key，去掉 'Category' 或其它分组字段\n  const allKeys = Object.keys(name[0]);\n  const groupKey = 'Category'; // 可根据实际情况调整\n  const dimensionNames = allKeys.filter(k => k !== groupKey);\n\n  // 先将所有数据合并为一个数组（提前声明，供 parallelAxis 使用）\n  const allData = Array.isArray(name) ? name : [];\n\n  // 构造 parallelAxis（只用 dimensions 字段），并自动计算 min/max\n  const parallelAxis = dimensionNames.map((dim, idx) => {\n    // 判断类型\n    const isNumber = typeof name[0][dim] === 'number';\n    let axis = {\n      dim: idx,\n      name: dim,\n      type: isNumber ? 'value' : 'category',\n      boundaryGap: false\n    };\n    if (isNumber) {\n      // 计算该维度所有数值的 min/max\n      const values = allData.map(item => item[dim]).filter(v => typeof v === 'number' && !isNaN(v));\n      if (values.length) {\n        axis.min = Math.ceil(Math.min(...values) * 0.75);\n        axis.max = Math.ceil(Math.max(...values) * 1.25);\n      }\n    }\n    return axis;\n  });\n\n  // 按 Category 分组，生成 series\n  // 分组\n  const groupMap = {};\n  allData.forEach(item => {\n    const key = item[groupKey] || '未分类';\n    if (!groupMap[key]) groupMap[key] = [];\n    groupMap[key].push(item);\n  });\n  const series = Object.entries(groupMap).map(([cat, arr]) => ({\n    name: cat,\n    type: 'parallel',\n    lineStyle: {\n      width: 2\n    },\n    data: arr.map(item => dimensionNames.map(dim => item[dim]))\n  }));\n\n  // 4. 组装 visualMap\n  // 取第一个维度的数值范围作为 visualMap 映射（可根据实际需求调整）\n  const firstDim = dimensionNames[0];\n  const allValues = allData.map(item => item[firstDim]).filter(v => typeof v === 'number');\n  const min = allValues.length ? Math.min(...allValues) : 0;\n  const max = allValues.length ? Math.max(...allValues) : 100;\n  const visualColors = getVisualMapInRangeColor(config.colorScheme);\n  const visualMap = {\n    show: true,\n    type: 'continuous',\n    inRange: {\n      color: visualColors\n    },\n    min,\n    max,\n    dimension: 0,\n    // 默认映射第一个维度\n    orient: 'vertical',\n    left: 'left',\n    top: config.legendPosition || 'bottom'\n  };\n  const option = {\n    parallelAxis,\n    parallel: {\n      left: '5%',\n      right: '13%',\n      bottom: '10%',\n      parallelAxisDefault: {\n        type: 'value',\n        nameLocation: 'end',\n        nameGap: 20\n      }\n    },\n    series,\n    visualMap: config.legendVisible === false ? undefined : visualMap,\n    ...customOption\n  };\n  return option;\n}","map":{"version":3,"names":["getVisualMapInRangeColor","parallelOption","config","fileDataMap","xData","yDataArr","selectedChartType","seriesData","customOption","dimensions","name","Array","isArray","allKeys","Object","keys","groupKey","dimensionNames","filter","k","allData","parallelAxis","map","dim","idx","isNumber","axis","type","boundaryGap","values","item","v","isNaN","length","min","Math","ceil","max","groupMap","forEach","key","push","series","entries","cat","arr","lineStyle","width","data","firstDim","allValues","visualColors","colorScheme","visualMap","show","inRange","color","dimension","orient","left","top","legendPosition","option","parallel","right","bottom","parallelAxisDefault","nameLocation","nameGap","legendVisible","undefined"],"sources":["D:/Learning Material/Git/Fuck-Charts/frontend/src/assets/JS/chartOptions/parallel.js"],"sourcesContent":["/* eslint-disable */\n\n// 平行坐标系图配置生成器\nimport { getVisualMapInRangeColor } from \"../utils/themeDispatcher\";\n// 平行坐标系图配置生成器\nexport default function parallelOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption = {}) {\n    // 解包数据\n    const { dimensions, name } = seriesData;\n\n    if (!dimensions || !name || !Array.isArray(dimensions) || !Array.isArray(name)) {\n        return {};\n    }\n\n\n    // 获取所有维度名（不包含 Category）\n    // 假设 name[0] 里所有 key，去掉 'Category' 或其它分组字段\n    const allKeys = Object.keys(name[0]);\n    const groupKey = 'Category'; // 可根据实际情况调整\n    const dimensionNames = allKeys.filter(k => k !== groupKey);\n\n\n    // 先将所有数据合并为一个数组（提前声明，供 parallelAxis 使用）\n    const allData = Array.isArray(name) ? name : [];\n\n    // 构造 parallelAxis（只用 dimensions 字段），并自动计算 min/max\n    const parallelAxis = dimensionNames.map((dim, idx) => {\n        // 判断类型\n        const isNumber = typeof name[0][dim] === 'number';\n        let axis = {\n            dim: idx,\n            name: dim,\n            type: isNumber ? 'value' : 'category',\n            boundaryGap: false\n        };\n        if (isNumber) {\n            // 计算该维度所有数值的 min/max\n            const values = allData.map(item => item[dim]).filter(v => typeof v === 'number' && !isNaN(v));\n            if (values.length) {\n                axis.min = Math.ceil(Math.min(...values) * 0.75);\n                axis.max = Math.ceil(Math.max(...values) * 1.25);\n            }\n        }\n        return axis;\n    });\n\n    // 按 Category 分组，生成 series\n    // 分组\n    const groupMap = {};\n    allData.forEach(item => {\n        const key = item[groupKey] || '未分类';\n        if (!groupMap[key]) groupMap[key] = [];\n        groupMap[key].push(item);\n    });\n\n    const series = Object.entries(groupMap).map(([cat, arr]) => ({\n        name: cat,\n        type: 'parallel',\n        lineStyle: {\n            width: 2\n        },\n        data: arr.map(item => dimensionNames.map(dim => item[dim]))\n    }));\n\n    // 4. 组装 visualMap\n    // 取第一个维度的数值范围作为 visualMap 映射（可根据实际需求调整）\n    const firstDim = dimensionNames[0];\n    const allValues = allData.map(item => item[firstDim]).filter(v => typeof v === 'number');\n    const min = allValues.length ? Math.min(...allValues) : 0;\n    const max = allValues.length ? Math.max(...allValues) : 100;\n    const visualColors = getVisualMapInRangeColor(config.colorScheme);\n\n    const visualMap = {\n        show: true,\n        type: 'continuous',\n        inRange: {\n            color: visualColors\n        },\n        min,\n        max,\n        dimension: 0, // 默认映射第一个维度\n        orient: 'vertical',\n        left: 'left',\n        top: config.legendPosition || 'bottom',\n    };\n\n    const option = {\n        parallelAxis,\n        parallel: {\n            left: '5%',\n            right: '13%',\n            bottom: '10%',\n            parallelAxisDefault: {\n                type: 'value',\n                nameLocation: 'end',\n                nameGap: 20\n            }\n        },\n        series,\n        visualMap: config.legendVisible === false ? undefined : visualMap,\n        ...customOption\n    };\n\n    return option;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}