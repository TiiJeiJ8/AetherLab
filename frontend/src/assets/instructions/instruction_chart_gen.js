/* eslint-disable */
import { name } from 'echarts-extension-amap'
import { generateEChartOption } from '../JS/utils/echartOptionUtils'

// 生成架构关系图 option
export async function generateArchitectureGraphOption() {
    const config = {
        title: 'AetherLab Architecture',
        subtext: 'Graph is generated by generateEChartOption',
        legendVisible: false,
        forcePreventOverlap: true,
        forceRepulsion: 200,
        minNodeSize: 10,
        maxNodeSize: 60,
    }
    const fileDataMap = {}
    const xData = []
    const yDataArr = []
    const selectedChartType = { value: 'Graph' }
    const seriesData = {
        nodes: [
            { name: 'User Interface Layer', category: 'Frontend', value: 10 },
            { name: 'Vue 3 Frontend', category: 'Frontend', value: 20 },
            { name: 'Component System', category: 'Frontend', value: 15 },
            { name: 'State Management Vuex', category: 'Frontend', value: 12 },
            { name: 'Routing Vue Router', category: 'Frontend', value: 10 },
            { name: 'Chart Components', category: 'Components', value: 18 },
            { name: 'Data Processing Components', category: 'Components', value: 16 },
            { name: 'UI Component Library', category: 'Components', value: 14 },
            { name: 'ECharts Visualization', category: 'Visualization', value: 25 },
            { name: '15+ Chart Types', category: 'Visualization', value: 22 },
            { name: 'HTTP Client', category: 'Communication', value: 12 },
            { name: 'Flask Backend API', category: 'Backend', value: 30 },
            { name: 'Data Processing Service', category: 'Backend', value: 20 },
            { name: 'Mathematical Modeling Service', category: 'Backend', value: 18 },
            { name: 'File Management System', category: 'Backend', value: 16 }
        ],
        edges: [
            { source: 'User Interface Layer', target: 'Vue 3 Frontend', weight: 5 },
            { source: 'Vue 3 Frontend', target: 'Component System', weight: 4 },
            { source: 'Vue 3 Frontend', target: 'State Management Vuex', weight: 3 },
            { source: 'Vue 3 Frontend', target: 'Routing Vue Router', weight: 3 },
            { source: 'Component System', target: 'Chart Components', weight: 4 },
            { source: 'Component System', target: 'Data Processing Components', weight: 4 },
            { source: 'Component System', target: 'UI Component Library', weight: 3 },
            { source: 'Chart Components', target: 'ECharts Visualization', weight: 5 },
            { source: 'ECharts Visualization', target: '15+ Chart Types', weight: 4 },
            { source: 'Vue 3 Frontend', target: 'HTTP Client', weight: 3 },
            { source: 'HTTP Client', target: 'Flask Backend API', weight: 5 },
            { source: 'Flask Backend API', target: 'Data Processing Service', weight: 4 },
            { source: 'Flask Backend API', target: 'Mathematical Modeling Service', weight: 4 },
            { source: 'Flask Backend API', target: 'File Management System', weight: 3 }
        ]
    }
    const customOption = {
        force: {
            repulsion: 350,
            edgeLength: 120
        },
        roam: true,
        symbolSize: 60,
        label: {
            show: true,
            fontWeight: 'bold',
            fontSize: 11
        },
        toolbox: {
            show: true,
            feature: {
                restore: { show: true, title: 'Restore' },
                dataView: { show: true, title: 'Data View' },
                saveAsImage: { show: true, title: 'Save as Image' },
            }
        }
    }
    return await generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption)
}

// 生成图表Gallery option
export async function generateChartGalleryOption() {
    const config = {
        title: 'Chart Gallery',
        subtext: 'Graph is generated by generateEChartOption',
        legendVisible: false,
        forcePreventOverlap: true,
        isSizedEdges: true,
        forceRepulsion: 300,
        minNodeSize: 10,
        maxNodeSize: 90,
        curveness: 0.3,
        forceEdgeLength: 80,
    }
    const fileDataMap = {}
    const xData = []
    const yDataArr = []
    const selectedChartType = { value: 'Graph' }
    const seriesData = {
        nodes: [
            // 顶级入口
            { name: 'Chart Gallery', category: 'Gallery', value: 100 },

            // 分类入口（比具体图表高，但低于总入口）
            { name: 'Basic Charts', category: 'Basic Charts', value: 80 },
            { name: 'Geospatial Charts', category: 'Geospatial Charts', value: 70 },
            { name: 'Financial Charts', category: 'Financial Charts', value: 60 },
            { name: 'Statistical Charts', category: 'Statistical Charts', value: 55 },
            { name: 'Advanced Charts', category: 'Advanced Charts', value: 65 },
            { name: 'Network Charts', category: 'Network Charts', value: 50 },
            { name: 'Hierarchical Charts', category: 'Hierarchical Charts', value: 50 },
            { name: 'Flow Charts', category: 'Flow Charts', value: 50 },
            { name: 'Indicator Charts', category: 'Indicator Charts', value: 50 },
            { name: 'Polar Coordinate System', category: 'Coordinate System', value: 45 },

            // 基础图表
            { name: 'Line', category: 'Basic Charts', value: 50 },
            { name: 'Area', category: 'Basic Charts', value: 35 },

            { name: 'Bar', category: 'Basic Charts', value: 50 },
            { name: 'Pie', category: 'Basic Charts', value: 50 },
            { name: 'Scatter', category: 'Basic Charts', value: 50 },
            { name: 'Radar', category: 'Basic Charts', value: 30 },

            // 地理空间类
            { name: 'Geo of Map', category: 'Geospatial Charts', value: 37 },
            { name: 'Geo of Heatmap', category: 'Geospatial Charts', value: 33 },
            { name: 'Geo of Scatter', category: 'Geospatial Charts', value: 34 },
            { name: 'Geo of Pie', category: 'Geospatial Charts', value: 32 },

            // 金融类
            { name: 'Candlestick', category: 'Financial Charts', value: 39 },

            // 统计分析类
            { name: 'Box Plot', category: 'Statistical Charts', value: 35 },
            { name: 'Heatmap', category: 'Statistical Charts', value: 36 },

            // 进阶/高级图表
            { name: 'Nightingale Rose', category: 'Advanced Charts', value: 30 },
            { name: 'Doughnut', category: 'Advanced Charts', value: 28 },
            { name: 'Parallel', category: 'Advanced Charts', value: 26 },
            { name: 'Ripple', category: 'Advanced Charts', value: 28 },

            { name: 'Graph', category: 'Network Charts', value: 34 },

            { name: 'Tree', category: 'Hierarchical Charts', value: 31 },
            { name: 'TreeMap', category: 'Hierarchical Charts', value: 29 },
            { name: 'Sunburst', category: 'Hierarchical Charts', value: 27 },

            { name: 'Sankey Diagram', category: 'Flow Charts', value: 25 },
            { name: 'Funnel', category: 'Flow Charts', value: 24 },
            { name: 'ThemeRiver', category: 'Flow Charts', value: 22 },

            { name: 'Gauge', category: 'Indicator Charts', value: 23 },
        ],
        edges: [
            // Chart Gallery 到各分类
            { source: 'Chart Gallery', target: 'Basic Charts' },
            { source: 'Chart Gallery', target: 'Geospatial Charts' },
            { source: 'Chart Gallery', target: 'Financial Charts' },
            { source: 'Chart Gallery', target: 'Statistical Charts' },
            { source: 'Chart Gallery', target: 'Advanced Charts' },
            { source: 'Chart Gallery', target: 'Network Charts' },
            { source: 'Chart Gallery', target: 'Hierarchical Charts' },
            { source: 'Chart Gallery', target: 'Flow Charts' },
            { source: 'Chart Gallery', target: 'Indicator Charts' },
            // { source: 'Chart Gallery', target: 'Polar Coordinate Charts' },

            // 分类到具体图表
            // Basic Charts
            { source: 'Basic Charts', target: 'Line' },
            { source: 'Basic Charts', target: 'Area' },
            { source: 'Basic Charts', target: 'Bar' },
            { source: 'Basic Charts', target: 'Pie' },
            { source: 'Basic Charts', target: 'Scatter' },
            { source: 'Basic Charts', target: 'Radar' },

            // Geospatial Charts
            { source: 'Geospatial Charts', target: 'Geo of Map' },
            { source: 'Geospatial Charts', target: 'Geo of Heatmap' },
            { source: 'Geospatial Charts', target: 'Geo of Scatter' },
            { source: 'Geospatial Charts', target: 'Geo of Pie' },

            // Financial Charts
            { source: 'Financial Charts', target: 'Candlestick' },

            // Statistical Charts
            { source: 'Statistical Charts', target: 'Box Plot' },
            { source: 'Statistical Charts', target: 'Heatmap' },

            // Advanced Charts
            { source: 'Advanced Charts', target: 'Parallel' },
            { source: 'Advanced Charts', target: 'Nightingale Rose' },
            { source: 'Advanced Charts', target: 'Doughnut' },
            { source: 'Advanced Charts', target: 'Ripple' },

            // Network Charts
            { source: 'Network Charts', target: 'Graph' },

            // Hierarchical Charts
            { source: 'Hierarchical Charts', target: 'Tree' },
            { source: 'Hierarchical Charts', target: 'TreeMap' },
            { source: 'Hierarchical Charts', target: 'Sunburst' },

            // Flow Charts
            { source: 'Flow Charts', target: 'Sankey Diagram' },
            { source: 'Flow Charts', target: 'Funnel' },
            { source: 'Flow Charts', target: 'ThemeRiver' },

            // Indicator Charts
            { source: 'Indicator Charts', target: 'Gauge' },

            // Polar Coordinate Charts
            { source: 'Line', target: 'Polar Coordinate System' },
            { source: 'Area', target: 'Polar Coordinate System' },
            { source: 'Bar', target: 'Polar Coordinate System' },
            { source: 'Scatter', target: 'Polar Coordinate System' },

            // Other links
            { source: 'Pie', target: 'Nightingale Rose' },
            { source: 'Pie', target: 'Doughnut' },
            { source: 'Ripple', target: 'Geo of Scatter' },
            { source: 'Ripple', target: 'Scatter'},
            { source: 'Scatter', target: 'Geo of Scatter'},
        ]
    }
    const customOption = {
        force: {
            repulsion: 350,
            edgeLength: 120
        },
        roam: true,
        symbolSize: 60,
        label: {
            show: true,
            fontWeight: 'bold',
            fontSize: 11
        },
        toolbox: {
            show: true,
            feature: {
                restore: { show: true, title: 'Restore' },
                saveAsImage: { show: true, title: 'Save as Image' },
            }
        }
    }
    return await generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption)
}