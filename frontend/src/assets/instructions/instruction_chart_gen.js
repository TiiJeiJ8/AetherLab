/* eslint-disable */
import { generateEChartOption } from '../JS/utils/echartOptionUtils'

// 生成架构关系图 option
export async function generateArchitectureGraphOption() {
    const config = {
        title: 'AetherLab Architecture',
        subtext: 'Graph is generated by generateEChartOption',
        legendVisible: false,
        forcePreventOverlap: true,
        forceRepulsion: 200,
        minNodeSize: 10,
        maxNodeSize: 60,
    }
    const fileDataMap = {}
    const xData = []
    const yDataArr = []
    const selectedChartType = { value: 'Graph' }
    const seriesData = {
        nodes: [
            { name: 'User Interface Layer', category: 'Frontend', value: 10 },
            { name: 'Vue 3 Frontend', category: 'Frontend', value: 20 },
            { name: 'Component System', category: 'Frontend', value: 15 },
            { name: 'State Management Vuex', category: 'Frontend', value: 12 },
            { name: 'Routing Vue Router', category: 'Frontend', value: 10 },
            { name: 'Chart Components', category: 'Components', value: 18 },
            { name: 'Data Processing Components', category: 'Components', value: 16 },
            { name: 'UI Component Library', category: 'Components', value: 14 },
            { name: 'ECharts Visualization', category: 'Visualization', value: 25 },
            { name: '15+ Chart Types', category: 'Visualization', value: 22 },
            { name: 'HTTP Client', category: 'Communication', value: 12 },
            { name: 'Flask Backend API', category: 'Backend', value: 30 },
            { name: 'Data Processing Service', category: 'Backend', value: 20 },
            { name: 'Mathematical Modeling Service', category: 'Backend', value: 18 },
            { name: 'File Management System', category: 'Backend', value: 16 }
        ],
        edges: [
            { source: 'User Interface Layer', target: 'Vue 3 Frontend', weight: 5 },
            { source: 'Vue 3 Frontend', target: 'Component System', weight: 4 },
            { source: 'Vue 3 Frontend', target: 'State Management Vuex', weight: 3 },
            { source: 'Vue 3 Frontend', target: 'Routing Vue Router', weight: 3 },
            { source: 'Component System', target: 'Chart Components', weight: 4 },
            { source: 'Component System', target: 'Data Processing Components', weight: 4 },
            { source: 'Component System', target: 'UI Component Library', weight: 3 },
            { source: 'Chart Components', target: 'ECharts Visualization', weight: 5 },
            { source: 'ECharts Visualization', target: '15+ Chart Types', weight: 4 },
            { source: 'Vue 3 Frontend', target: 'HTTP Client', weight: 3 },
            { source: 'HTTP Client', target: 'Flask Backend API', weight: 5 },
            { source: 'Flask Backend API', target: 'Data Processing Service', weight: 4 },
            { source: 'Flask Backend API', target: 'Mathematical Modeling Service', weight: 4 },
            { source: 'Flask Backend API', target: 'File Management System', weight: 3 }
        ]
    }
    const customOption = {
        force: {
            repulsion: 350,
            edgeLength: 120
        },
        roam: true,
        symbolSize: 60,
        label: {
            show: true,
            fontWeight: 'bold',
            fontSize: 11
        },
        toolbox: {
            show: true,
            feature: {
                restore: { show: true, title: 'Restore' },
                dataView: { show: true, title: 'Data View' },
                saveAsImage: { show: true, title: 'Save as Image' },
            }
        }
    }
    return await generateEChartOption(config, fileDataMap, xData, yDataArr, selectedChartType, seriesData, customOption)
}

